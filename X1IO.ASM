
;	LSX-Dodgers IO
;	X1/turbo/Z

_SYS04	EQU	_ERROR		;(BDOS)外部出力
_SYS05	EQU	_ERROR		;(BDOS)プリンタ出力
_SYS1C	EQU	_ERROR		;(BDOS)ディスクの書き込み禁止化
_SYS1E	EQU	_ERROR		;(BDOS)ファイル属性の設定
_SYS20	EQU	_ERROR		;(BDOS)利用者番号の設定と読み出し
_SYS2E	EQU	_ERROR		;(BDOS)ベリファイ・フラグの設定

BIOS:
	PUSH	HL
	LD	HL,08010H
	ADD	HL,SP
	POP	HL
	JR	NC,BIOS2
BIOS1:
	CALL	BIOS3
	LD	B,01EH
	OUT	(C),A
	RET
BIOS3:
	PUSH	BC
	LD	B,01DH
	OUT	(C),A
	RET
BIOS2:
	LD	(BIOS_SP),SP	;スタックがBIOS-ROMと被っている場合
	LD	SP,EXTSP
	CALL	BIOS1
	LD	SP,0
BIOS_SP	EQU	$-2
	RET

INT:
	PUSH	AF
	PUSH	HL
	PUSH	BC

	CALL	IN49SB
	LD	H,A
	CALL	IN49SB
	LD	L,A
SCEXE:
	LD	(_KEYD),HL
	CALL	KEYSET1

	POP	BC
INTPE:
	POP	HL
INTPE2:
	POP	AF
INTCTCE:
	EI
	RETI

KEYSET1:
	PUSH	AF
	XOR	A
	LD	(FLGET_SWC),A
	POP	AF
	OR	A
	RET	Z

	BIT	5,H
	JR	Z,KEYSET
	LD	A,(_KEYSP+1)
	LD	(KEYREPEAT_SWC),A
KEYSET:
	LD	A,L
	BIT	6,H
	RET	NZ
KEYBS:
	OR	A
	RET	Z
KEYBS1:
	CALL	KEYBC_IFBREAK
	PUSH	HL
	PUSH	AF
	LD	HL,(_KEYPS)
	INC	L
	RES	5,L
	LD	A,L
	CP	H
	JR	Z,POP_AF_HL_SCF_RET
	LD	(_KEYPS),A
	LD	H,KEYBF/256
	POP	AF
	LD	(HL),A
	POP	HL
	RET
KEYBC_IFBREAK:
	CP	3
	RET	NZ
KEYBC:
	PUSH	HL
	LD	HL,0
	LD	(_KEYPS),HL
	POP	HL
	RET

POP_AF_HL_SCF_RET:
	POP	AF
	POP	HL
	SCF
	RET

_SYS01:		;(BDOS)コンソール入力
	CALL	_SYS07
MSG_A:
	PUSH	AF
	PUSH	DE
	LD	E,A
	CALL	_SYS02
	POP	DE
	POP	AF
	RET

_SYS02:		;(BDOS)コンソール出力
	CALL	BREAK
	JR	PRINTX

_SYS06:		;(BDOS)コンソール直接入出力
	LD	A,E
	INC	A
	JP	Z,_INKEY
PRINTX:
	JP	_PRINT

_SYS08:		;(BDOS)エコーなしコンソール入力
	CALL	_SYS07
	JR	BREAK1
BREAK:
	EI
	LD	A,(_KEYD)
BREAK1:
	CP	3		;CTRL+C
	CALL	Z,_BREAK
	CP	013H		;CTRL+S
	RET	NZ

PAUSE:
	CALL	KEYBC

FLGET:
	CALL	_FFLUSH
	PUSH	BC
	PUSH	HL
	LD	BC,(_TXADR)
	SET	5,B
	IN	H,(C)
FLGET1:
	LD	A,(_KEYD+1)
	RRCA
	RRCA
	AND	010H
	OR	8
	IN	L,(C)
	OR	L
	OUT	(C),A
FLGETR:
	CALL	_INKEY
	JR	NZ,FLGETE
	BIT	3,L
	JR	Z,FLGET1
	LD	A,(_KEYD)
	OR	A
	JR	Z,FLGET1

	LD	A,01AH
	LD	(FLGET_SWC),A
FLGET2:
	LD	A,1AH
FLGET_SWC	EQU	$-1
	OR	A
	JR	Z,FLGETR
	IN	A,(01H)
	ADD	A,A
	JR	NC,FLGET2
FLGET3:
	LD	A,(FLGET_SWC)
	OR	A
	JR	Z,FLGETR
	IN	A,(01H)
	ADD	A,A
	JR	C,FLGET3

	LD	A,0
KEYREPEAT_SWC	EQU $-1
	OR	A
	JR	Z,FLGET4
	DEC	A
	LD	(KEYREPEAT_SWC),A
	JR	FLGET2
FLGET4:
	LD	A,(_KEYD)
FLGETE:
	OUT	(C),H
	POP	HL
	POP	BC
	RET

_SYS0A:		;(BDOS)文字列入力
	PUSH	BC
	PUSH	HL
	PUSH	DE
	CALL	GETL
	LD	DE,KBUF
	POP	HL
	PUSH	HL
	LD	C,0
	JR	NC,SAX0
	INC	HL
	INC	HL
	JR	SAX4
SAX0:
	LD	B,(HL)
	INC	HL
SAX1:
	INC	HL
	LD	A,(DE)
	INC	DE
	OR	A
	JR	NZ,SAX2
SAX4:
	LD	(HL),00DH
	JR	SAX3
SAX2:
	LD	(HL),A
	INC	C
	DJNZ	SAX1
SAX3:
	POP	DE
	LD	A,C
	INC	DE
	LD	(DE),A
	DEC	DE
	POP	HL
	POP	BC
	AND	A
	RET

_SYS0B:		;(BDOS)コンソール状態のチェック
	CALL	BREAK
	LD	A,(_KEYD)
	OR	A
	RET	Z
CONSTX:
	CALL	_FFLUSH
	PUSH	HL
	LD	HL,(_KEYPS)
	LD	A,H
	XOR	L
	POP	HL
	ADD	A,0FFH
	SBC	A,A
	RET

_SYS2A:		;(BDOS)日付の獲得
	PUSH	BC
	LD	A,0EDH		;Read calendar
	CALL	COMOUT
	CALL	IN49SB_BCD	;YY
	LD	L,A
	LD	H,0
;	LD	DE,1900		;0076CH
;	CP	90		;90以上は1900年代 1990-1999
;	JR	NC,RDDATE1	;90未満は2000年代 2000-2089
;	LD	E,0D0H		;2000 & 0FFH D=007H
	LD	DE,2000		;すべて2000年代で処理 2000-2099
RDDATE1:
	ADD	HL,DE
	CALL	IN49SB		;MW
	LD	D,A
	CALL	IN49SB_BCD	;DD
	LD	E,A
	LD	A,D
	LD	B,4
RDDATE2:
	SRL	D
	DJNZ	RDDATE2
	POP	BC
	AND	7
	RET

_SYS2C:		;(BDOS)時刻の獲得
	PUSH	BC
	LD	A,0EFH		;Read time
	CALL	COMOUT
	CALL	IN49SB_BCD	;TT
	LD	H,A
	CALL	IN49SB_BCD	;MM
	LD	L,A
	CALL	IN49SB_BCD	;SS
	LD	D,A
	POP	BC
	XOR	A
	RET

IN49SB_BCD:
	CALL	IN49SB
;------------------------
;BCDの10進数化
;in
;	A  : BCD
;out
;	A  : 10進数
;------------------------
	LD	C,A
	AND	0F0H	;10の位
	RRCA
	LD	B,A
	RRCA
	RRCA
	ADD	A,B
	LD	B,A
	LD	A,C
	AND	00FH	;1の位
	ADD	A,B
	RET

ESC1:
	LD	A,E
	CP	'A'
	JP	Z,CTRL1E
	CP	'B'
	JP	Z,CTRL1F
	CP	'C'
	JP	Z,CTRL1C
	CP	'D'
	JP	Z,CTRL1D
	CP	'E'
	JR	Z,CT0CX
	CP	'j'
CT0CX:
	JP	Z,CTRL0C
	CP	'H'
	JP	Z,CTRL0B
	CP	'J'
	JP	Z,CTRL06
	CP	'K'
	JR	Z,CT05X
	CP	'L'
	JP	Z,CTRL0E
	CP	'T'
CT05X:
	JP	Z,CTRL05
	CP	'x'
	JR	Z,ESC1X
	CP	'y'
	JR	NZ,ESC1Y
ESC1X:
	LD	(HL),1
ESC1Y:
	CP	'='
	JR	Z,ESC1W
	CP	'Y'
	JR	NZ,ESC1Z
ESC1W:
	LD	(HL),2
ESC1Z:
	CP	020H
	JR	C,ESC1C
	ADD	A,A
	RET	NC
ESC1C:
	POP	HL
ANK:
	LD	BC,(_TXADR)
	LD	A,B
	OR	038H
	LD	B,A
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令	kanji
	RES	3,B
	OUT	(C),E		;Text
KANJIE:
	CALL	PRINTE7
PRINTE5:
	POP	HL
	POP	BC
	XOR	A
	RET

ESC:
	LD	HL,PRINTE5
	PUSH	HL
	LD	HL,ESCFLG+1
	LD	(HL),0
	DEC	A
	JR	Z,ESC1
	DEC	A
	JR	NZ,ESC2
	LD	(HL),3
	LD	A,E
	SUB	020H
	LD	(ESCYP+1),A
	RET
ESC2:
	DEC	A
	RET	NZ
ESCYP:	LD	H,0
	LD	A,E
	SUB	020H
	LD	L,A
	JP	_LOC

PRINT:
	PUSH	BC
	PUSH	HL
ESCFLG:	LD	A,000H
	OR	A
	JR	NZ,ESC

	LD	A,01FH
	CP	E
	JR	NC,CTRL
INSFLG:	LD	BC,INSERT

	LD	A,(00018H)
	INC	A
	JR	Z,ANK
KANFLG:	LD	A,000H
	OR	A
	JR	NZ,KANJI2
	LD	A,E
	CP	080H
	JR	C,ANK
	CP	0A0H
	JR	C,KANJI1
	CP	0E0H
	JR	C,ANK
KANJI1:
	LD	(KANFLG+1),A
	JR	PRINTE5

CTRL:
	CALL	KANCLR
	LD	A,E
	ADD	A,A
	OR	080H
	LD	L,A
	LD	H,CTRLTB/256
	LD	A,(HL)
	INC	L
	LD	H,(HL)
	LD	L,A
	CALL	JPHL
	JR	PRINTE5

KANJI2:
	PUSH	DE
	LD	D,A
	LD	BC,02F81H	;SFTJIS
	RST	018H
	LD	BC,02FC3H	;Instead or JISVRM
	RST	018H

	LD	BC,(_TXADR)
	LD	A,B
	OR	038H
	LD	B,A
	OUT	(C),D		;kanji
	RES	3,B
	OUT	(C),E		;Text
	CALL	PRINTE7
	LD	BC,(_TXADR)
	LD	A,B
	OR	038H
	LD	B,A
	SET	6,D
	OUT	(C),D		;Kanji
	RES	3,B
	OUT	(C),E		;Text
	POP	DE
	XOR	A
	LD	(KANFLG+1),A
	JP	KANJIE

KANCLR:
	LD	A,(KANFLG+1)
	OR	A
	RET	Z
	LD	BC,(_TXADR)
	LD	A,B
	OR	038H
	LD	B,A
	XOR	A
	LD	(KANFLG+1),A
	OUT	(C),A		;Kanji
	RES	3,B
	LD	A,020H
	OUT	(C),A		;Text
PRINTE7:
	RES	4,B
PRINTE6:
	LD	A,(_COLORF)
PRINTE4:
	OUT	(C),A		;Color
	LD	A,B
	AND	7
	LD	B,A
PRINTE2:
	INC	BC
PRINTE3:
	LD	HL,(_PAGE_MINUS)
	AND	A
	ADC	HL,BC
PRINTE8:
	JR	Z,PRINT2
	LD	(_TXADR),BC
CTRL00:
	RET

PRINT2:
	CALL	SCR
	LD	HL,(_WIDTH_MINUS)
	ADD	HL,BC
SET_TXADR_HL:
	LD	(_TXADR),HL
	RET

CTRL08:
	LD	A,(INSFLG)
	CP	0CDH		;CALL ????
	JR	Z,CTRL02
CTRL1D:
	LD	HL,(_TXADR)
	LD	A,H
	OR	L
	RET	Z
	DEC	HL
	JR	SET_TXADR_HL

CTRL1E:
	LD	BC,(_TXADR)
	LD	HL,(_WIDTH_MINUS)
	ADD	HL,BC
	RET	NC
	JR	SET_TXADR_HL

CTRL1C:
	LD	BC,(_TXADR)
	JR	PRINTE2

CTRL09:
	LD	BC,(_TXADR)
	LD	A,C
	AND	0F8H
	ADD	A,8
	LD	C,A
	ADC	A,B
	SUB	C
	LD	B,A
	JR	PRINTE3

CTRL02:
	CALL	CTRL1D
	RET	Z
	PUSH	DE
	CALL	_POS
	LD	A,(_WIDTH)
	SUB	L
	LD	C,A
	DEC	C
	LD	B,038H
	LD	HL,(_TXADR)
	ADD	HL,BC
	LD	B,H
	LD	C,L
	LD	DE,02000H	;D:Text E:kanji
	LD	HL,(_COLORF)	;L:Color
C8X1:
	CALL	C12S
	DEC	BC
	JR	NZ,C8X1
	POP	DE
	RET

CTRL05:
	CALL	_POS
	LD	A,(_WIDTH)
	SUB	L
	LD	L,A
C08X1:
	LD	BC,(_TXADR)
LINECL:
	LD	H,020H
	LD	A,(_COLORF)
	SET	5,B
LINECL1:
	SET	3,B
	SET	4,B
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令	kanji
	RES	3,B
	OUT	(C),H		;Text
	RES	4,B
	OUT	(C),A		;Color
	INC	BC
	DEC	L
	JR	NZ,LINECL1
	RET

CTRL0D:
	CALL	_POS
	LD	L,0
LOC:
	PUSH	BC
	PUSH	HL
	CALL	KANCLR
	CALL	LOC1
	LD	(_TXADR),HL
	POP	HL
	POP	BC
	RET

CTRL12:
	LD	HL,INSFLG
	LD	A,(HL)
	XOR	0CCH		;CD:CALL ???? 1:LD BC,????
	LD	(HL),A
	RET

CTRL0B:
	LD	HL,0
	LD	(_TXADR),HL
	RET

CTRL1B:
	LD	A,1
	LD	(ESCFLG+1),A
	RET

LOC1:
	PUSH	DE
	LD	C,L
	LD	B,8
	LD	E,H
	LD	D,0
	LD	HL,(CRTCD)
	LD	L,D
LOC2:
	ADD	HL,HL
	JR	NC,LOC3
	ADD	HL,DE
LOC3:
	DJNZ	LOC2
	ADD	HL,BC
	POP	DE
	RET

CONOUT1:
	CALL	CURSOR
	LD	E,C
	CALL	_PRINT
	LD	A,E
	CP	00AH
	JR	NZ,CURSOR
	CALL	CTRL0D
	CALL	CTRL05
CURSOR:
	PUSH	BC
	LD	BC,(_TXADR)
	SET	5,B
	IN	A,(C)
	XOR	018H
	OUT	(C),A
	POP	BC
	RET

CTRL07:
	LD	HL,BEEPD
BEEP1:
	LD	A,(HL)
	INC	HL
	CP	0FFH
	RET	Z
	LD	B,01CH
	OUT	(C),A
	OUTI
	JR	BEEP1

OT49SB:
	PUSH	BC
	CALL	CANW
	LD	BC,01900H
	OUT	(C),A
	POP	BC
	RET

IN49SB:
	PUSH	BC
	LD	BC,01A01H
CANR:
	IN	A,(C)
	AND	020H
	JR	NZ,CANR
	LD	BC,01900H
	IN	A,(C)
	POP	BC
	RET

CANW:
	LD	BC,01A01H
	IN	C,(C)
	BIT	6,C
	JR	NZ,CANW
	RET

COMOUT:
	EI
	CALL	OT49SB
	CALL	CANW
	DI
	RET

INSERT:
	PUSH	DE
	CALL	_POS
	LD	A,(_WIDTH)
	SUB	L
	LD	BC,(_TXADR)
	LD	DE,02000H	;D:Text E:Kanji
	LD	HL,(_COLORF)	;L:Color
	SET	5,B
C12X1:
	CALL	C12S
	INC	BC
	JR	NZ,C12X1
	POP	DE
	RET

C12S:
	SET	4,B
	SET	3,B
	IN	H,(C)
X1PAT:	OUT	(C),E
	LD	E,H
	RES	3,B
	IN	H,(C)
	OUT	(C),D
	LD	D,H
	RES	4,B
	IN	H,(C)
	OUT	(C),L
	LD	L,H
	DEC	A
	RET

CTRL0C:
	CALL	CTRL0B
CTRL06:
	LD	BC,(_TXADR)
C1AX1:
	LD	A,B
	OR	038H
	LD	B,A
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令	kanji
	RES	3,B
	LD	A,020H
	OUT	(C),A		;Text
	RES	4,B
	LD	A,(_COLORF)
	OUT	(C),A		;Color
	INC	BC
	RES	5,B
	LD	HL,(_PAGE_MINUS)
	ADD	HL,BC
	JR	NC,C1AX1
	RET

CTRL04:
	CALL	_POS
	LD	A,L
	OR	A
	RET	Z
CTRL03:
	CALL	CTRL0D
CTRL0A:
CTRL1F:
	LD	BC,(_TXADR)
	LD	HL,(_WIDTH)
	LD	H,0
	ADD	HL,BC
	LD	B,H
	LD	C,L
	LD	HL,(_PAGE_MINUS)
	ADD	HL,BC
	CCF
	SBC	A,A
	JP	PRINTE8

CTRL0E:
	CALL	_POS
	LD	A,H
	JR	SCR1
SCR:
	LD	A,(_LINE)
	DEC	A
SCR1:
	PUSH	BC
	PUSH	DE
	PUSH	AF
	LD	A,7
	LD	HL,SCRDMAD
	CALL	SETDMA
	POP	AF
	LD	HL,03800H

SCRUP1:
	OR	A
	JR	Z,SCRCL
	PUSH	AF
	CALL	UPSUB		;kanji
	LD	A,(_WIDTH_MINUS)
	LD	E,A
	LD	D,0F7H
	ADD	HL,DE
	PUSH	DE
	CALL	UPSUB		;Text
	POP	DE
	ADD	HL,DE
	CALL	UPSUB		;Color
	SET	4,H
	POP	AF
	DEC	A
	JR	SCRUP1

SETDMA:
	LD	BC,01F87H
SDMA:
	INC	B
	OUTI
	DEC	A
	JR	NZ,SDMA
	RET

SCRDMAD:
	DB	0C3H		;WR6 リセット
	DB	09AH		;WR5 ストップ WAIT READY:HIGH
	DB	065H		;WR0 ブロック長(LH)
	DW	79
	DB	01CH		;WR1 ポートAインクリメント I/O
	DB	018H		;WR0 ポートAアドレス(LH)

UPSUB:
	LD	A,(_WIDTH)
	LD	E,A
	LD	D,0
	LD	A,0ADH		;WR4 連続 ポートB開始アドレス(LH)
	OUT	(C),A
	OUT	(C),L		;SOURCE
	OUT	(C),H
	ADD	HL,DE
	LD	A,01DH		;WR0 ポートA開始アドレス(LH) ポートA→ポートB 転送
	OUT	(C),A
	OUT	(C),L		;DEST
	OUT	(C),H
GO_DMA:
	LD	A,0CFH
	OUT	(C),A		;WR6 ロード
	LD	A,0B3H
	OUT	(C),A		;WR6 強制RDY
	OUT	(C),C		;WR6 イネーブル
	RET

SCRCL:
	LD	B,H
	LD	C,L
	LD	HL,(_WIDTH)
	CALL	LINECL
	POP	DE
	POP	BC
	RET

SCRN:
	PUSH	DE
	IN	E,(C)		;Text
	LD	A,(00018H)
	INC	A
	JR	Z,SCRN2
	SET	3,B
	IN	D,(C)		;Kanji
	JR	Z,SCRN1
	XOR	A
	PUSH	BC
	LD	BC,03037H	;VRMJIS
	RST	018H
	LD	BC,02F52H	;JISSFT
	RST	018H
	POP	BC
	IN	A,(C)
	RES	3,B
	AND	040H
	JR	NZ,SCRN2
	LD	A,D
	POP	DE
	RET
SCRN1:
	RES	3,B
SCRN2:
	LD	A,E
	POP	DE
	RET
SCRNE:
POS:
	LD	HL,(_TXADR)
	PUSH	BC
	LD	BC,(_WIDTH_MINUS)
	XOR	A
POS1:
	ADD	HL,BC
	INC	A
	JR	C,POS1
	SBC	HL,BC
	DEC	A
	LD	H,A
	POP	BC
	AND	A
	RET

GETL:
	CALL	_POS
	PUSH	HL
	LD	A,0CDH		;CALL ????
	LD	(INSFLG),A
GETL1:
	CALL	_SYS08
	CP	9
	JR	NZ,GETL1V
	LD	HL,KBUF
	CALL	MSX
	JR	GETL1
GETL1V:
	LD	E,A
	CALL	_PRINT

	LD	A,E
	CP	00DH
	JR	NZ,GETL1
	LD	A,1		;LD BC,????
	LD	(INSFLG),A
	LD	DE,KBUF
	LD	A,(_WIDTH)
	LD	B,A
	CALL	ZERO_MEMORY_DE

	POP	DE
	CALL	_POS
	LD	L,E
	LD	A,(_WIDTH)
	SUB	L
	LD	D,A
	CALL	LOC1
	LD	C,L
	LD	A,H
	OR	030H
	LD	B,A
	LD	E,D
	LD	HL,KBUF
GETL2:
	CALL	_SCRN
	INC	BC
	LD	(HL),A
	INC	HL
	DEC	E
	JR	NZ,GETL2
GETL3:
	DEC	HL
	LD	A,(HL)
	CP	021H
	RET	NC
	LD	(HL),0
	DEC	D
	JR	NZ,GETL3
	RET

INKEY:
	EI
	PUSH	HL
	LD	HL,(_KEYPS)
	LD	A,H
	XOR	L
	JR	Z,INKEY1
	LD	A,H
	INC	A
	AND	01FH
	LD	(_KEYPS+1),A
	LD	L,A
	LD	H,KEYBF/256
	LD	A,(HL)
INKEY1:
	POP	HL
	OR	A
	RET

AT_RS	EQU	SCR1-AT_SCR1
