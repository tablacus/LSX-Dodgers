
;	LSX-Dodgers IO
;	PC-8801mkIISR
;	割り込み処理は0F000Hより前にする

_SYS04	EQU	_ERROR		;(BDOS)外部出力
_SYS05	EQU	_ERROR		;(BDOS)プリンタ出力
_SYS1C	EQU	_ERROR		;(BDOS)ディスクの書き込み禁止化
_SYS1E	EQU	_ERROR		;(BDOS)ファイル属性の設定
_SYS20	EQU	_ERROR		;(BDOS)利用者番号の設定と読み出し
_SYS2E	EQU	_ERROR		;(BDOS)ベリファイ・フラグの設定

INT	EQU	0
INTCTCE	EQU	0
INTCTC2	EQU	0

BDOS_RF:
	IN	A,(032H)
	OR	010H		;高速RAMアクセスモード/メインRAM
	OUT	(032H),A
	JP	BDOS0

_SYS0A:		;(BDOS)文字列入力
	PUSH	BC
	PUSH	HL
	PUSH	DE
	CALL	GETL
	LD	DE,KBUF
	POP	HL
	PUSH	HL
	LD	C,0
	JR	NC,SAX0
	INC	HL
	INC	HL
	JR	SAX4
SAX0:
	LD	B,(HL)
	INC	HL
SAX1:
	INC	HL
	LD	A,(DE)
	INC	DE
	OR	A
	JR	NZ,SAX2
SAX4:
	LD	(HL),00DH
	JR	SAX3
SAX2:
	LD	(HL),A
	INC	C
	DJNZ	SAX1
SAX3:
	POP	DE
	LD	A,C
	INC	DE
	LD	(DE),A
	DEC	DE
	POP	HL
	POP	BC
	AND	A
	RET

_SYS2A:		;(BDOS)日付の獲得
	PUSH	BC
	CALL	RTCREAD
	LD	A,(RTC_YY)
	CALL	BCD
	LD	L,A
	LD	H,0
;	LD	DE,1900		;0076CH
;	CP	90		;90以上は1900年代 1990-1999
;	JR	NC,RDDATE1	;90未満は2000年代 2000-2089
;	LD	E,0D0H		;2000 & 0FFH D=007H
	LD	DE,2000		;すべて2000年代で処理 2000-2099
RDDATE1:
	ADD	HL,DE
	LD	A,(RTC_MW)
	LD	D,A
	LD	A,(RTC_DD)
	CALL	BCD
	LD	E,A
	LD	A,D
	LD	B,4
RDDATE2:
	SRL	D
	DJNZ	RDDATE2
	POP	BC
	AND	7
	RET

_SYS2C:		;(BDOS)時刻の獲得
	PUSH	BC
	CALL	RTCREAD
	LD	A,(RTC_TT)
	CALL	BCD
	LD	H,A
	LD	A,(RTC_MM)
	CALL	BCD
	LD	L,A
	LD	A,(RTC_SS)
	CALL	BCD
	LD	D,A
	POP	BC
	XOR	A
	LD	E,A
	RET

RTCREAD:
	LD	C,0F9H
	LD	A,(WK40)
	LD	E,A
	LD	A,3		;コマンド３：タイムリードにセット
	CALL	RTCCMD
	LD	A,1		;コマンド１：レジスタシフトにセット
	CALL	RTCCMD
	LD	B,6
	LD	HL,RTC_SS
RTCREAD1:
	PUSH	BC
	LD	B,8
RTCREAD2:
	IN	A,(40H)		;システムモードセンス BIT4:CDI
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	RR	(HL)
	CALL	RTCCLK
	DJNZ	RTCREAD2
	POP	BC
	DEC	HL
	DJNZ	RTCREAD1
	XOR	A
	CALL	RTCCMD
	LD	A,E
	LD	(WK40),A
	RET

RTCCMD:
	LD	B,4
	RLCA
	RLCA
	RLCA
RTCCMD1:
	PUSH	AF
	OR	7
	OUT	(10H),A		;プリンタデータ出力 兼 カレンダクロック(μPD1990AC)出力
	CALL	RTCCLK
	POP	AF
	RRCA
	DJNZ	RTCCMD1
	LD	A,7
	OUT	(10H),A		;プリンタデータ出力 兼 カレンダクロック(μPD1990AC)出力
	LD	A,E
	AND	C
	OR	2
	OUT	(40H),A		;ストローブポート
	AND	C
	NOP
	OUT	(40H),A		;ストローブポート
	LD	E,A
	LD	B,13
RTCCMD3:
	DJNZ	RTCCMD3
	RET

RTCCLK:
	LD	A,E
	AND	C
	OR	04H
	OUT	(40H),A
	AND	C
	NOP
	OUT	(40H),A
	LD	E,A
	RET

PRINT:
	IN	A,(032H)
	PUSH	AF
	AND	0EFH		;高速RAMアクセスモード/高速RAM
	OUT	(032H),A
	PUSH	BC
	PUSH	HL
	LD	A,000H		;自己書き換え
ESCFLG	EQU	$-1
	OR	A
	JP	NZ,ESC

	LD	A,01FH
	CP	E
	JP	NC,CTRL
INSFLG	EQU	$
	LD	BC,INSERT	;自己書き換え
ANK:
	CALL	LOC0
	LD	(HL),E
	CALL	CTRL1C
PRINTE5:
	POP	HL
	POP	BC
	POP	AF
	OUT	(032H),A
	XOR	A
	RET

LOC0:
	LD	HL,(_TXADR)	;L=x H=y
LOC1:
	PUSH	DE
	LD	A,H
	RL	L
	SRL	H	;*128
	RR	L

	ADD	A,A	;*2
	ADD	A,A	;*4
	ADD	A,A	;*8
	LD	E,A
	LD	A,L
	SUB	E
	LD	E,A

	SBC	A,A
	ADD	A,H
	LD	D,A

	LD	HL,(TVRAMTOP)
	ADD	HL,DE
	POP	DE
	RET

CONOUT1:
	LD	E,C
	CALL	_PRINT
	LD	A,E
	CP	00AH
	JR	NZ,CURSOR_ON
	CALL	CTRL0D
	CALL	CTRL05
CURSOR_ON:
	PUSH	AF
	LD	A,081H
CURSOR0:
	OUT	(051H),A
	LD	A,(_TXADR)
	OUT	(050H),A
	LD	A,(_TXADR+1)
	OUT	(050H),A
	POP	AF
	RET
CURSOR_OFF:
	PUSH	AF
	LD	A,080H
	JR	CURSOR0

POS:
	LD	HL,(_TXADR)
	RET

GETL:
	CALL	_POS
	PUSH	HL
	LD	A,0CDH		;CALL ????
	LD	(INSFLG),A
GETL1:
	CALL	_SYS08
	CP	9
	JR	NZ,GETL1V
	LD	HL,KBUF
	CALL	MSX
	JR	GETL1
GETL1V:
	LD	E,A
	CALL	_PRINT

	LD	A,E
	CP	00DH
	JR	NZ,GETL1
	LD	A,1		;LD BC,????
	LD	(INSFLG),A
	LD	DE,KBUF
	LD	A,(_WIDTH)
	LD	B,A
	CALL	ZERO_MEMORY_DE

	POP	DE
	CALL	_POS
	LD	L,E
	LD	A,(_WIDTH)
	SUB	L
	LD	D,A
	CALL	LOC1
	LD	C,L
	LD	A,H
	OR	030H
	LD	B,A
	LD	E,D
	LD	HL,KBUF
GETL2:
	CALL	_SCRN
	INC	BC
	LD	(HL),A
	INC	HL
	DEC	E
	JR	NZ,GETL2
GETL3:
	DEC	HL
	LD	A,(HL)
	CP	021H
	RET	NC
	LD	(HL),0
	DEC	D
	JR	NZ,GETL3
	RET

INKEY:
	EI
	PUSH	HL
	LD	HL,(_KEYPS)
	LD	A,H
	XOR	L
	JR	Z,INKEY1
	LD	A,H
	INC	A
	AND	01FH
	LD	(_KEYPS+1),A
	ADD	A,LOW KEYBF
	LD	L,A
	LD	H,HIGH KEYBF
	LD	A,(HL)
	OR	A
INKEY1:
	POP	HL
	RET

CHKEY:
	PUSH	BC
	IN	A,(032H)
	PUSH	AF
	AND	0EFH		;高速RAMアクセスモード/高速RAM
	OUT	(032H),A
	IN	A,(8)		;6:SHIFT,7:CTRL
	LD	C,A
	LD	A,(00EH)
	BIT	3,A
	JR	NZ,CHKEYRSHIFT
	RES	6,C
CHKEYRSHIFT:
	LD	A,C
	LD	A,(_KEYST)
	CP	C
	LD	(_KEYST),A
	JR	Z,KEYST1
	LD	A,(_KEYD)
	OR	A
	JR	Z,KEYST0
	LD	A,020H		;JR NZ,?
	LD	(SETKEY1_SWC),A
KEYST0:
	LD	A,C
KEYST1:
	PUSH	HL
	LD	C,0
	LD	HL,KEY_TABLE
	BIT	6,A
	JR	NZ,CHKEY0
	LD	HL,SHIFT_TABLE
CHKEY0:
	BIT	7,A
	JR	NZ,CHKEY1
	LD	HL,CTRL_TABLE
CHKEY1:
	IN	A,(C)
	LD	B,8
CHKEY2:
	RRCA
	JR	NC,CHKEY4
CHKEY3:
	INC	HL
	DJNZ	CHKEY2
	INC	C
	LD	A,C
	SUB	00DH
	JR	NZ,CHKEY1
	JR	CHKEY5
CHKEY4:
	LD	A,(HL)
	OR	A
	JR	Z,CHKEY3
CHKEY5:
	POP	HL
	POP	BC
	LD	C,A
	LD	A,B
	OUT	(032H),A
	LD	A,C
	POP	BC
	OR	A
	LD	(_KEYD),A
	RET

SCRN:
	PUSH	HL
	IN	A,(032H)
	LD	H,A
	AND	0EFH		;高速RAMアクセスモード/高速RAM
	OUT	(032H),A
	LD	A,(BC)
	LD	L,A
	LD	A,H
	OUT	(032H),A
	LD	A,L
	POP	HL
	RET

VBLANK:
	PUSH	AF
VBLANK0:
	IN	A,(040H)
	AND	020H
	JR	NZ,VBLANK0
VBLANK1:
	IN	A,(040H)
	AND	020H
	JR	Z,VBLANK1
	POP	AF
	RET

INTVRTC:
	DI
	PUSH	AF
	CALL	CHKEY
	CP	0
KEYDT	EQU	$-1
	JR	NZ,SETKEY1
	LD	A,03EH		;LD A,?
	LD	(SETKEY1_SWC),A
	PUSH	HL
	LD	HL,(_KEYPS)
	LD	A,H
	XOR	L
	POP	HL
	JR	NZ,ENDKEY
	LD	A,0
KEYAR	EQU	$-1
	OR	A
	JR	NZ,ARWKEY
SETKEY:
	LD	(KEYAR),A
	LD	A,(_KEYD)
	LD	(KEYDT),A
	CALL	KEYSET
ENDKEY:
	LD	A,(WKE4)
	OUT	(0E4H),A
	POP	AF
	EI
	RET
ARWKEY:
	DEC	A
	LD	(KEYAR),A
	JR	ENDKEY
SETKEY1:
	OR	A
SETKEY1_SWC:
	JR	NZ,ENDKEY
	LD	A,(_KEYSP_H)
	JR	SETKEY

INTE88:
	PUSH	AF
	LD	A,(WKE4)
	OUT	(0E4H),A
	POP	AF
	RET
KEYSET:
KEYBS:
	OR	A
	RET	Z
KEYBS1:
	CALL	KEYBC_IFBREAK
	PUSH	HL
	PUSH	AF
	LD	HL,(_KEYPS)
	INC	L
	RES	5,L
	LD	A,L
	CP	H
	JR	Z,POP_AF_HL_SCF_RET
	LD	(_KEYPS),A
	ADD	A,LOW KEYBF
	LD	L,A
	LD	H,HIGH KEYBF
	POP	AF
	LD	(HL),A
	POP	HL
	RET
KEYBC_IFBREAK:
	CP	3
	RET	NZ
KEYBC:
	PUSH	HL
	LD	HL,0
	LD	(_KEYPS),HL
	POP	HL
	RET

POP_AF_HL_SCF_RET:
	POP	AF
	POP	HL
	SCF
	RET

_SYS01:		;(BDOS)コンソール入力
	CALL	_SYS07
MSG_A:
	PUSH	AF
	PUSH	DE
	LD	E,A
	CALL	_SYS02
	POP	DE
	POP	AF
	RET

_SYS02:		;(BDOS)コンソール出力
	CALL	BREAK
	JR	PRINTX

_SYS06:		;(BDOS)コンソール直接入出力
	LD	A,E
	INC	A
	JP	Z,_INKEY
PRINTX:
	JP	_PRINT

_SYS08:		;(BDOS)エコーなしコンソール入力
	CALL	_SYS07
	JR	BREAK1
BREAK:
	EI
	LD	A,(_KEYD)
BREAK1:
	CP	3		;CTRL+C
	CALL	Z,_BREAK
	CP	013H		;CTRL+S
	RET	NZ

PAUSE:
	CALL	KEYBC

FLGET:
	CALL	_FFLUSH
	PUSH	HL
	LD	HL,(_TXADR)
	CALL	CURSOR_ON
FLGET1:
	CALL	_INKEY
	JR	Z,FLGET1
	CALL	CURSOR_OFF
	POP	HL
	RET

_SYS0B:		;(BDOS)コンソール状態のチェック
	CALL	BREAK
	LD	A,(_KEYD)
	OR	A
	RET	Z
CONSTX:
	CALL	_FFLUSH
	PUSH	HL
	LD	HL,(_KEYPS)
	LD	A,H
	XOR	L
	POP	HL
	ADD	A,0FFH
	SBC	A,A
	RET

;------------------------
;BCDの10進数化
;in
;	A  : BCD
;out
;	A  : 10進数
;------------------------
BCD:
	LD	C,A
	AND	0F0H	;10の位
	RRCA
	LD	B,A
	RRCA
	RRCA
	ADD	A,B
	LD	B,A
	LD	A,C
	AND	00FH	;1の位
	ADD	A,B
	RET
