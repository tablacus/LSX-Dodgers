
;	LSX-Dodgers INIT
;	PC-8801mkIISR

	JP	START
	DW	MACW
	DW	VER

START:
	DI
	IM	2
	LD	SP,START
	CALL	INIT		;NZならAUTOEXECを実行
	LD	HL,0
	PUSH	HL
	RET	Z
	LD	DE,AUTOD
	JP	_COMANL

INIT:
	IN	A,(032H)
	AND	0EFH		;高速RAMアクセスモード/高速RAM
	OUT	(032H),A

	LD	HL,0F3C8H	;テキストをクリア
	LD	DE,080E8H
	LD	C,' '
	LD	A,25
TVCL1:
	LD	B,80
TVCL2:
	LD	(HL),C
	INC	HL
	DJNZ	TVCL2
	LD	B,20
TVCL3:
	LD	(HL),D
	INC	L
	LD	(HL),E
	INC	HL
	DJNZ	TVCL3
	DEC	A
	JR	NZ,TVCL1

	LD	HL,AT_VRAM
	LD	DE,0F000H
	LD	BC,AT_VRAME-AT_VRAM
	LDIR

	IN	A,(032H)
	OR	010H		;高速RAMアクセスモード/メインRAM
	OUT	(032H),A
INIT_CRTC:
	LD	A,3		;80桁
	OUT	(030H),A
	LD	(WK30),A

	LD	A,022H		;25行 64K RAM
	OUT	(031H),A
	LD	(WK31),A

	LD	A,0FFH
	OUT	(0E4H),A	;割り込みレベル設定
	LD	(WKE4),A
	LD	A,0
	OUT	(0E6H),A	;割り込みマスク

	LD	A,019H
	OUT	(040H),A	;CRT I/F 同期ビットオン
	LD	(WK40),A
	CALL	VBLANK

	XOR	A
	OUT	(051H),A	;Reset CRTC
	LD	A,0A0H
	OUT	(068H),A	;DMAC: Mode Set(Reset)
	LD	HL,0F3C8H
	LD	(TVRAMTOP),HL
	LD	C,064H
	OUT	(C),L		;TVRAM LOW
	OUT	(C),H		;TVRAM HIGH
	LD	HL,08000H+120*25-1
	INC	C		;65H
	OUT	(C),L
	OUT	(C),H
	LD	A,080H+80-2
	OUT	(050H),A
	LD	A,080H+25-1
	OUT	(050H),A
	IN	A,(040H)
	BIT	1,A
	LD	HL,067DEH
	JR	NZ,RESO1
	LD	HL,06F58H
RESO1:
	LD	C,050H
	OUT	(C),H
	OUT	(C),L

	LD	A,053H
	OUT	(050H),A

	LD	A,043H
	OUT	(051H),A

	LD	A,0E4H
	OUT	(068H),A

	LD	A,020H
	OUT	(051H),A

	CALL	VBLANK
IVBL1:
	IN	A,(040H)
	BIT	5,A
	JR	NZ,IVBL1

	LD	A,011H
	OUT	(040H),A	;CRT I/F 同期ビットオフ
	LD	(WK40),A
BANK:
	LD	BC,000E3H	;拡張RAM バンク選択
	LD	HL,07F00H
	LD	D,(HL)
	DI
	LD	A,1		;リード可
	OUT	(0E2H),A	;拡張RAM リード/ライト制御
	OUT	(C),B		;拡張RAM バンク選択
	LD	A,(0)
	CP	0EBH
	JR	NZ,BANK1
	LD	A,02BH
	LD	(BANKDV),A
BANK1:
	LD	A,1		;リード可
	OUT	(0E2H),A	;拡張RAM リード/ライト制御
	OUT	(C),B		;拡張RAM バンク選択
	LD	E,(HL)
	LD	A,E
	ADD	A,0A5H
	LD	(HL),A		;メインメモリに書き込む
	CP	(HL)
	JR	Z,BANK2		;メインメモリが反映されているか？
	LD	A,011H		;ライト/リード可
	OUT	(0E2H),A	;拡張RAM リード/ライト制御
	LD	A,E
	ADD	A,0A5H
	LD	(HL),A
	CP	(HL)
	LD	(HL),E		;拡張RAM に元の値を戻す
	JR	NZ,BANK2	;拡張RAM に反映しているか？
	INC	B
	BIT	4,B
	JR	Z,BANK1
BANK2:
	XOR	A		;ライト/リード不可
	OUT	(0E2H),A	;拡張RAM リード/ライト制御
	LD	(HL),D		;メインメモリ に元の値を戻す
	LD	A,B
	OR	A
	JR	Z,NOBANK
	LD	L,B
	LD	H,0
	ADD	HL,HL	;*2
	ADD	HL,HL	;*4
	ADD	HL,HL	;*8
	ADD	HL,HL	;*16
	ADD	HL,HL	;*32
	DEC	HL	;-1
	DEC	HL	;-2
	DEC	HL	;-3
	LD	(BANKCL),HL
	CALL	CALC_FATLN
	LD	(BANKFL),A
NOBANK:
				;初期化
	XOR	A		;イニシャライズ
	CALL	PUTCOM
	LD	A,16H		;高速レシーブメモリ
	CALL	PUTCOM
	LD	A,DSS/256	;開始アドレスH
	CALL	PUTDAT
	XOR	A		;開始アドレスL
	CALL	PUTDAT
	LD	BC,AT_DSSE-AT_DSS
	BIT	0,C
	JR	Z,SUBPG1
	INC	BC		;偶数にする
SUBPG1:
	LD	A,B		;バイト数H
	CALL	PUTDAT
	LD	A,C
	CALL	PUTDAT
	LD	HL,AT_DSS
	CALL	FPUTDAT

	LD	HL,0
	LD	B,05CH
	DB	03EH	;LD A,??
	RST	38H
	CALL	FILL_MEMORY
	LD	B,0A4H
	XOR	A
	LD	(_DVSW),A
	CALL	FILL_MEMORY

	LD	A,0C3H		;JP
	LD	HL,CPM_WBOOT
	LD	(00000H),A
	LD	(00001H),HL	;IPL

	LD	HL,BDOS
	LD	(00005H),A
	LD	(00006H),HL	;BDOS

	LD	HL,TRAP38	;TRAP38
	LD	(00038H),A
	LD	(00039H),HL	;RST 038H

	LD	A,CPM_BOOT/256
	LD	(0000BH),A

	DB	03EH	;LD A,??
	JP	(HL)
	LD	(0000FH),A

	LD	HL,INIMES
	CALL	MSX
INIT1:
	DI
	LD	DE,0FF00H
	LD	B,SUBSYS%256
	CALL	ZERO_MEMORY_DE

	LD	HL,AT_SUBSYS
	LD	DE,SUBSYS
	LD	BC,AT_TRAPE-AT_SUBSYS
	LDIR

	CALL	CHKEY
	CP	3
	RET

CALC_FATLN:	;FAT12のクラスタ数から必要なFATサイズを求める(セクタサイズ512)
	LD	E,L
	LD	D,H
	ADD	HL,HL	;*2
	ADD	HL,DE	;*3
	SRL	H	;/2
	RR	L	;1クラスタ辺り1.5バイト必要
	LD	DE,511	;切り上げる
	ADD	HL,DE
	LD	A,H
	SRL	A
	RET

AUTOD:	DB	"AUTOEXEC "
AUTODV:	DB	"A:",0

INIMES:	DB	00CH,"LSX-Dodgers for PC-8801mkIISR v"
	DB	030H + VER_1, '.'
	DB	030H + VER_2 ,030H + VER_3
	DB	'c'
	DB	" Gaku",0DH,0AH
	DB	0

AT_SUBSYS:
	ORG	SUBSYS,AT_SUBSYS-OFFSET
	JP	PUTCOM
	JP	PUTDAT
	JP	GETDAT
	JP	FPUTDAT
	JP	FGETDAT
;EXTBIO
	RET
	DS	14,0FFH
;TRAP38:
	LD	HL,0
	EX	(SP),HL
	LD	A,'$'
	CALL	MSG_A
	DEC	HL
	LD	A,H
	CALL	PRHX
	LD	A,L
PRHX:
	PUSH	AF
	RLCA
	RLCA
	RLCA
	RLCA
	CALL	PRHX2
	POP	AF
PRHX2:
	AND	00FH
	CP	10
	CCF
	ADC	A,'0'
	DAA
	JP	MSG_A
	DS	4
	ORG	$$+OFFSET,$$	;$DEPHASE
AT_TRAPE:
