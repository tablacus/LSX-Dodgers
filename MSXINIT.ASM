
;	LSX-Dodgers INIT
;	MSX

INIT_ROM:
	LD	HL,H_STKE
	DB	03EH	;LD A,??
	RST	30H
	DI
	LD	(HL),A
	CALL	GTSL1_
	INC	HL
	LD	(HL),A
	LD	DE,START
	INC	HL
	LD	(HL),E
	INC	HL
	LD	(HL),D
	EI
	RET

GTSL1_:
	PUSH	HL		;Save registers
	PUSH	DE
;
	CALL	RSLREG		;read primary slot #
	RRCA
	RRCA
	AND	11B		;[A]=000000PP
	LD	E,A
	LD	D,0		;[DE]=000000PP
	LD	HL,EXPTBL
	ADD	HL,DE		;[HL]=EXPTBL+000000PP
	LD	E,A		;[E]=000000PP
	LD	A,(HL)		;[A]=(EXPTBL+000000PP)
	AND	80H		;Use only MSB
	JR	Z,GTSL1NOEXP
	OR	E		;[A]=F00000PP
	LD	E,A		;save primary slot number
	INC	HL		;point to SLTTBL entry
	INC	HL
	INC	HL
	INC	HL
	LD	A,(HL)		;get currently expansion slot register
	RRCA
	RRCA
	AND	11B		;[A] = 000000SS
	RLCA
	RLCA			;[A] = 0000SS00
	OR	E		;[A] = F000SSPP
;
GTSL1END:
	POP	DE
	POP	HL
	RET
GTSL1NOEXP:
	LD	A,E		;[A] = 000000PP
	JR	GTSL1END

START:
	DI
	IM	1
	LD	HL,AT_START2
	LD	DE,START2
	LD	BC,MSX_E-START2
	LDIR
	JP	START2

AT_START2:
	ORG	START2,AT_START2-RUN

	LD	SP,START2
	CALL	INIT		;NZならAUTOEXECを実行
	LD	HL,0
	PUSH	HL
	RET	Z
	LD	DE,AUTOD
	JP	_COMANL

INIT:
	LD	IX,0D90H
	LD	B,0
CHECK_CBIOS1:
	LD	A,(IX+0)
	CP	'C'
	JR	NZ,CHECK_CBIOS2
	LD	A,(IX+1)
	CP	'-'
	JR	NZ,CHECK_CBIOS2
	LD	A,(IX+2)
	CP	'B'
	JR	NZ,CHECK_CBIOS2
	LD	A,(IX+3)
	CP	'I'
	JR	NZ,CHECK_CBIOS2
	LD	A,(IX+4)
	CP	'O'
	JR	NZ,CHECK_CBIOS2
	LD	A,(IX+5)
	XOR	'S'
	JR	NZ,CHECK_CBIOS2

	LD	(CBIOS_SWC1),A
	LD	(CBIOS_SWC2),A

	JR	CHECK_CBIOS3
CHECK_CBIOS2:
	INC	IX
	DJNZ	CHECK_CBIOS1
CHECK_CBIOS3:
	LD	A,(H_STKE+1)
	LD	(ROM_SLT),A
	LD	H,080H
	CALL	ENASLT

	LD	DE,0F341H
	LD	HL,00000H
	CALL	INIT_RAM

	INC	DE
	LD	HL,04000H
	CALL	INIT_RAM

	INC	DE
	LD	HL,08000H
	CALL	INIT_RAM

	LD	HL,0
	LD	B,05CH
	DB	03EH	;LD A,??
	RST	28H
	CALL	FILL_MEMORY
	LD	B,0A4H
	XOR	A
	CALL	FILL_MEMORY

	LD	A,0C3H		;JP
	LD	HL,CPM_WBOOT
	LD	(00000H),A
	LD	(00001H),HL	;IPL

	LD	HL,MACW		;3 bit7  DPB Compatible LA(1)
	LD	(00003H),HL	;  bit6-0 Machine
;				;4 LSX-Dodgers(01DH)
	LD	HL,BDOS
	LD	(00005H),A
	LD	(00006H),HL	;BDOS

	LD	HL,0
	LD	(00028H),A
	LD	(00029H),HL	;BDOS
				;インタースロットコール
	LD	HL,RDSLTR
	LD	(_RDSLT),A
	LD	(_RDSLT+1),HL

	LD	HL,WRSLTR
	LD	(_WRSLT),A
	LD	(_WRSLT+1),HL

	LD	HL,CALSLTR
	LD	(_CALSLT),A
	LD	(_CALSLT+1),HL

	LD	HL,ENASLT
	LD	(_ENASLT),A
	LD	(_ENASLT+1),HL

	LD	HL,CALLF
	LD	(_CALLF),A
	LD	(_CALLF+1),HL

	LD	HL,INT38H
	LD	(00038H),A
	LD	(00038H+1),HL
				;LSX-Dodgers
	LD	A,CPM_BOOT/256
	LD	(0000BH),A

	DB	03EH	;LD A,??
	JP	(HL)
	LD	(0000FH),A
				;MSXワークエリア
	LD	A,3
	LD	(INTFLG),A

				;ROMタイプ判別(ASCII-8K/ASCII-16K)
	LD	E,0
	LD	A,(ROM_SLT)
	LD	HL,BANK1_SEL
	CALL	WRSLT

	LD	HL,06000H
	LD	A,(ROM_SLT)
	CALL	RDSLT
	CP	'A'
	JR	Z,ROM8K
				;ASCII-8K/Konami-8Kではない(ASCII-16K)
	DB	03EH	;LD A,??
	NOP
	LD	(ASCII16K1),A
	LD	(ASCII16K2),A
	LD	A,03FH
	LD	(ASCII16K3),A
	JR	ROMCHECKED
ROM8K:				;Konami-8Kチェック
	LD	E,1
	LD	A,(ROM_SLT)
	LD	HL,BANK2_SEL
	CALL	WRSLT

	LD	E,0
	LD	A,(ROM_SLT)
	LD	HL,KONAMI_BANK2_SEL
	CALL	WRSLT

	LD	HL,08000H
	LD	A,(ROM_SLT)
	CALL	RDSLT
	CP	'A'
	JR	NZ,ROMCHECKED
				;Konami-8K
	LD	HL,KONAMI_BANK2_SEL
	LD	(ROM8000H),HL
ROMCHECKED:
				;MSX2判別
	LD	A,(EXBRSA)
	OR	A
	LD	A,40
	JR	Z,ISMSX1
	LD	A,80		;MSX2以降は80桁で起動
ISMSX1:
	LD	(LINL40),A
	LD	(_WIDTH),A
	LD	IX,INITXT
	CALL	CALSLT_R
	LD	IX,SETTXT
	CALL	CALSLT_R

	LD	HL,INIMES
	CALL	MSX
INIT1:
	XOR	A
	CP	3
	RET

INIT_RAM:
	LD	A,(DE)
	PUSH	HL
	CALL	INIT_RAMX
	POP	HL
	RET	Z
	LD	A,3		;SLOT3
	LD	(DE),A
	PUSH	HL
	CALL	INIT_RAMX
	POP	HL
	RET	Z
	LD	A,083H		;SLOT3-0
	LD	(DE),A
	PUSH	HL
	CALL	INIT_RAMX
	POP	HL
	RET	Z
	LD	A,087H		;SLOT3-1
	LD	(DE),A
	PUSH	HL
	CALL	INIT_RAMX
	POP	HL
	RET	Z
	LD	A,08BH		;SLOT3-2
	LD	(DE),A
	PUSH	HL
	CALL	INIT_RAMX
	POP	HL
	RET	Z
	LD	A,08FH		;SLOT3-3
INIT_RAMX:			;スロットがRAMかチェック ZF=1ならばRAM
	PUSH	DE
	CALL	ENASLT
	POP	DE
	LD	BC,04000H
INIT_RAM1:
	LD	A,(HL)
	CPL
	LD	(HL),A
	CP	(HL)
	CPL
	LD	(HL),A
	RET	NZ
	CPI			;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
	RET	PO
	RET	NZ
	JR	INIT_RAM1

AUTOD:	DB	"AUTOEXEC "
AUTODV:	DB	"A:",0

INIMES:	DB	00CH,"LSX-Dodgers for MSX v"
	DB	030H + VER_1, '.'
	DB	030H + VER_2 ,030H + VER_3
;	DB	""
	DB	' Gaku',0DH,0AH
	DB	0

M2DD:	DW	3
	DB	0F9H,2
	DW	715
	DB	0FFH,7,80,9,1,082H
	DW	7,0A7H,10
M2DDE:
