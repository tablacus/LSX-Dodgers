;	UNZIPFIX

SYSTEM	EQU	00005H		;システムコール
FCB1	EQU	0005CH		;1番目の引数のFCB
FCB2	EQU	0006CH		;2番目の引数のFCB
DTA1	EQU	00080H

	ORG	00100H

	JP	START		;0C3HはZ80ではJPだが、i8086ではRETなので
START:				;間違えてMS-DOS環境で実行しても即終了できる
	LD	HL,TITLE
	CALL	MSX

	LD	A,(0000BH)
	CP	1
	LD	A,3
	JR	Z,CDOS2		;CDOS2+CP/Mエミュレータ+MSXEmu

	LD	C,06FH	 	;(BDOS) MSX-DOS のバージョン番号の獲得(_DOSVER) *1 MSX-DOS
	CALL	SYSTEM
	JP	C,SHOW_ERROR_OS	;CP/M等はエラー
	LD	A,C
	SUB	01DH
	JR	Z,LSX0
	LD	A,B
	AND	0FEH		;MSX-DOSの場合は 0 or 2 になる
	DEC	A
LSX0:
	INC	A		;LSX-Dodgersの場合は 1 にする
CDOS2:
	LD	(OS_TYPE),A

	LD	A,(FCB2)
	CP	1
	JR	NC,SET_OUT_DRIVE
	LD	C,019H		;(BDOS) カレントドライブ番号の獲得(_CURDRV) CP/M MSX-DOS
	CALL	SYSTEM
	INC	A
SET_OUT_DRIVE:
	LD	(OUT_DRIVE),A

	LD	DE,FCB1		;引数が1つだけの場合はFCB1がそのまま使える
	LD	C,00FH		;(BDOS) ファイルのオープン(_FOPEN) CP/M MSX-DOS
	CALL	SYSTEM
	OR	A
	JP	NZ,SHOW_USAGE

	LD	HL,1
	LD	(FCB1+14),HL	;レコードサイズを1にする

	LD	HL,0		;FCB1を使う場合はランダムレコードを初期化する
	LD	(FCB1+33),HL	;ランダムレコードを0にする
	LD	(FCB1+35),HL

LOOP1:
	LD	DE,HEADER	;データの読み出し先
	LD	C,01AH		;(BDOS) DTAの設定(_SETDTA) CP/M MSX-DOS
	CALL	SYSTEM
	LD	DE,FCB1
	LD	HL,4		;ZIPのヘッダー
	LD	C,027H		;(BDOS) ランダムブロック読み出し(_RDBLK) MSX-DOS
	CALL	SYSTEM
	CP	0FFH
	JP	Z,EXIT1		;失敗したら終了
				;ZIPのヘッダーPK 0x3 0x4かチェック
	LD	A,H		;HLに読み込んだサイズ
	OR	L
	JP	Z,EXIT1
	LD	DE,HEADER_PK12
	CALL	CPHEADER
	JP	Z,PK12
	LD	DE,HEADER_PK34
	CALL	CPHEADER
	JP	Z,SKIP34
	JP	EXIT1
PK12:
	LD	DE,FCB1
	LD	HL,42		;ZIPのヘッダー
	LD	C,027H		;(BDOS) ランダムブロック読み出し(_RDBLK) MSX-DOS
	CALL	SYSTEM
	CP	0FFH
	JP	Z,EXIT1		;失敗したら終了

	LD	DE,BUFAD

	CALL	PRTTMS		;タイムスタンプの表示

	LD	A,020H
	CALL	MSG_A

	LD	HL,(HEADER+20)	;(ZIP12) 非圧縮サイズ
	LD	DE,(HEADER+22)
	CALL	PRDEC_DEHL

	LD	A,020H
	CALL	MSG_A

	LD	DE,PATH		;データの読み出し先
	LD	C,01AH		;(BDOS) DTAの設定(_SETDTA) CP/M MSX-DOS
	CALL	SYSTEM
	LD	DE,FCB1
	LD	HL,(HEADER+24)	;(ZIP12) ファイル名の長さ
	LD	C,027H		;(BDOS) ランダムブロック読み出し(_RDBLK) MSX-DOS
	CALL	SYSTEM
	INC	A
	JP	Z,EXIT1		;失敗したら終了

	LD	HL,(HEADER+24)	;(ZIP12) ファイル名の長さ
	LD	DE,PATH
	ADD	HL,DE
	LD	(HL),0

	LD	HL,PATH		;ファイル名を表示する
	CALL	MSX

	LD	DE,PATH-1	;パス区切りが「/」の場合は「\」に置き換える
	LD	(PATH_A),DE
FIXPATH1:
	INC	DE
	LD	A,(DE)
	OR	A
	JR	Z,FIXPATH3
	CALL	IS_SPLITTER
	JR	NZ,FIXPATH1
	LD	A,05CH		;\
	LD	(DE),A
	LD	(PATH_A),DE
	JR	FIXPATH1
FIXPATH3:
	LD	HL,PATH		;フルパスを作成
	LD	DE,FULLPATH+2
	LD	BC,(HEADER+24)	;(ZIP12) ファイル名の長さ
	INC	BC
	LDIR
				;(LSX-Dodgers/MSX-DOS) タイムスタンプとファイルサイズを設定する
	LD	HL,FDRV
	LD	B,37
	XOR	A
	CALL	FILL_MEMORY

	LD	DE,(PATH_A)
	LD	A,':'
	LD	(DE),A
	LD	(FULLPATH+1),A
	DEC	DE
	LD	A,(OUT_DRIVE)
	ADD	A,040H
	LD	(DE),A
	LD	(FULLPATH),A
	INC	DE
	INC	DE
	CALL	FILE
FOPEN:
	LD	DE,FDRV
	LD	A,(OUT_DRIVE)
	LD	(DE),A		;出力先のドライブに切り替える

	LD	C,00FH		;(BDOS) ファイルのオープン(_FOPEN) CP/M MSX-DOS
	CALL	SYSTEM
	INC	A
	JP	Z,MSXDOS2SUBDIR
SET_SIZE:
	LD	HL,1
	LD	(FDRV+14),HL	;(FCB) レコードサイズを1にする

	LD	HL,0
	LD	(FDRV+33),HL	;(FCB) ランダムレコードを0にする
	LD	(FDRV+35),HL

	LD	DE,BUFAD	;データの読み出し先
	LD	C,01AH		;(BDOS) DTAの設定(_SETDTA) CP/M MSX-DOS
	CALL	SYSTEM
	LD	DE,FDRV

	LD	A,(OS_TYPE)
	CP	1
	LD	HL,0		;LSX-Dodgersの場合は0バイト書き込む
	JR	Z,LSX2

	CP	3		;CDOS2
	JR	Z,CDOS2_SETFCB

	LD	HL,1		;(MSX-DOS1/2) 1バイト読み込んで書き戻す
	LD	C,027H		;(BDOS) ランダムブロック読み出し(_RDBLK) MSX-DOS
	CALL	SYSTEM
	XOR	A
	LD	(FDRV+33),A	;(FCB) ランダムレコードを0に戻す
LSX2:
	LD	DE,FDRV
	LD	C,026H		;(BDOS) ランダムブロック書き込み(_WRBLK)
	CALL	SYSTEM
	INC	A
	JP	Z,SKIP12
				;(MSX-DOS/MSX-DOS2/LSX-Dodgers) ファイルサイズの補正を行う
	LD	HL,(HEADER+20)	;(ZIP12) 非圧縮サイズ
	LD	(FDRV+16),HL	;(FCB) ファイルのサイズ(バイト単位)
	LD	HL,(HEADER+22)	;(ZIP12) 非圧縮サイズ
	LD	(FDRV+18),HL	;(FCB) ファイルのサイズ(バイト単位)

	LD	A,(OS_TYPE)
	CP	2		;MSX-DOS2
	JP	Z,FCLOSE
				;(MSX-DOS/LSX-Dodgers) タイムスタンプを設定する
	LD	HL,(HEADER+10)	;(ZIP12) ファイルの最終変更日付
	LD	(FDRV+20),HL	;(FCB) 更新年月日
	LD	HL,(HEADER+8)	;(ZIP12) ファイルの最終変更時間
	LD	(FDRV+22),HL	;(FCB) 更新時刻

;	LD	A,(OS_TYPE)	;すでにAにはOS_TYPEが入っている
	DEC	A
	JR	NZ,FCLOSE
				;(LSX-Dodgers) 属性を設定する
	CALL	GET_ATTR
	JR	C,FCLOSE
	LD	(FDRV+13),A	;(FCB) 属性(アトリビュート)
	JR	FCLOSE

CDOS2_SETFCB:			;(CDOS2)
	LD	BC,0
	LD	HL,(HEADER+20)	;(ZIP12) 非圧縮サイズ
	SCF
	SBC	HL,BC
	LD	(DECBF),HL
	LD	HL,(HEADER+22)	;(ZIP12) 非圧縮サイズ
	SBC	HL,BC
	LD	(DECBF+2),HL
	JR	C,CDOS2_1

	LD	HL,(DECBF)
	ADD	HL,HL
	EX	DE,HL
	LD	HL,(DECBF+2)
	ADC	HL,HL
	LD	A,D
	LD	(FDRV+33),A	;(FCB) ランダムレコード
	LD	(FDRV+34),HL	;(FCB) ランダムレコード
CDOS2_1:
	LD	DE,FDRV
	LD	C,021H		;(BDOS) ランダムな読み出し(_RDRND) CP/M MSX-DOS
	CALL	SYSTEM
	OR	A
	JR	NZ,FCLOSE

	LD	DE,FDRV
	LD	C,022H		;(BDOS) ランダムな書き込み(_WRRND) CP/M MSX-DOS
	CALL	SYSTEM
	OR	A
	JR	NZ,FCLOSE

	LD	HL,(HEADER+20)	;(ZIP12) 非圧縮サイズ
	LD	A,H
	AND	3
	LD	H,A
	LD	(FDRV+20),HL	;(FCB) 最終クラスタの使用バイト数
	LD	(FDRV+24),HL	;(FCB) 最終クラスタの使用バイト数
	OR	L
	LD	HL,(DECBF+1)
	SRL	H
	RR	L
	SRL	H
	RR	L
	LD	BC,0
	ADD	A,0FFH
	ADC	HL,BC
	LD	(FDRV+22),HL	;(FCB) 使用クラスタ数

	LD	HL,(HEADER+10)	;(ZIP12) ファイルの最終変更日付
	LD	(FDRV+29),HL	;(FCB) 更新年月日
	LD	HL,(HEADER+8)	;(ZIP12) ファイルの最終変更時間
	LD	(FDRV+27),HL	;(FCB) 更新時刻
FCLOSE:
	LD	DE,FDRV
	LD	C,010H		;(BDOS) ファイルのクローズ(_FCLOSE) CP/M MSX-DOS
	CALL	SYSTEM
	INC	A
	JR	Z,SKIP12

	LD	A,(OS_TYPE)
	CP	2
	JR	NZ,SKIP12
				;(MSX-DOS2) タイムスタンプを設定する
	LD	DE,(PATH_A)
	DEC	DE
	LD	HL,(HEADER+10)	;(ZIP12) ファイルの最終変更日付
	LD	IX,(HEADER+8)	;(ZIP12) ファイルの最終変更時間
	LD	C,051H		;(BDOS) ファイルの日付および時刻の獲得・セット(_FTIME) MSX-DOS2
	LD	A,1
	CALL	SYSTEM
	OR	A
	JR	NZ,MSXDOS2SUBDIR
				;(MSX-DOS2) 属性を設定する
	CALL	GET_ATTR
	JR	C,SKIP12
	LD	L,A
	LD	DE,(PATH_A)
	DEC	DE
	LD	C,050H		;(BDOS) ファイル属性の獲得・セット(_ATTR) MSX-DOS2
	LD	A,1
	CALL	SYSTEM
	JR	SKIP12
MSXDOS2SUBDIR:
	LD	A,(OS_TYPE)
	CP	2
	JR	NZ,SKIP12

	LD	DE,FULLPATH
	LD	HL,(HEADER+10)	;(ZIP12) ファイルの最終変更日付
	LD	IX,(HEADER+8)	;(ZIP12) ファイルの最終変更時間
	LD	C,051H		;(BDOS) ファイルの日付および時刻の獲得・セット(_FTIME) MSX-DOS2
	LD	A,1
	CALL	SYSTEM
	OR	A
	JR	NZ,SKIP12
				;(MSX-DOS2) 属性を設定する
	CALL	GET_ATTR
	JR	C,SKIP12
	LD	L,A
	LD	DE,FULLPATH
	LD	C,050H		;(BDOS) ファイル属性の獲得・セット(_ATTR) MSX-DOS2
	LD	A,1
	CALL	SYSTEM
				;次のヘッダーまでランダムレコードを移動する
SKIP12:
	XOR	A
	LD	HL,(FCB1+33)	;(FCB) ランダムレコード
	LD	DE,(HEADER+26)	;(ZIP34) 拡張フィールドの長さ
	ADD	HL,DE
	ADC	A,A
	LD	DE,(HEADER+28)	;(ZIP34) コメントの長さ
	ADD	HL,DE
	LD	(FCB1+33),HL	;(FCB) ランダムレコード

	LD	HL,(FCB1+35)	;(FCB) ランダムレコード
	LD	E,A
	LD	D,0
	ADC	HL,DE
	LD	(FCB1+35),HL	;(FCB) ランダムレコード

	LD	A,00DH
	CALL	MSG_A
	LD	A,00AH
	CALL	MSG_A
	JP	LOOP1

SKIP34:
	LD	DE,HEADER	;データの読み出し先
	LD	C,01AH		;(BDOS) DTAの設定(_SETDTA) CP/M MSX-DOS
	CALL	SYSTEM
	LD	DE,FCB1
	LD	HL,26		;ZIPのヘッダー
	LD	C,027H		;(BDOS) ランダムブロック読み出し(_RDBLK) MSX-DOS
	CALL	SYSTEM
	CP	0FFH
	JP	Z,EXIT1		;失敗したら終了

	XOR	A
	LD	HL,(FCB1+33)	;(FCB) ランダムレコード
	LD	DE,(HEADER+22)	;(ZIP34) ファイル名の長さ
	ADD	HL,DE
	ADC	A,A
	LD	DE,(HEADER+24)	;(ZIP34) 拡張フィールドの長さ
	ADD	HL,DE
	LD	(FCB1+33),HL	;(FCB) ランダムレコード

	LD	HL,(FCB1+35)	;(FCB) ランダムレコード
	LD	E,A
	LD	D,0
	ADC	HL,DE
	LD	(FCB1+35),HL	;(FCB) ランダムレコード

	LD	DE,(HEADER+14)	;(ZIP34) 圧縮サイズ
	LD	HL,(FCB1+33)	;(FCB) ランダムレコード
	ADD	HL,DE
	LD	(FCB1+33),HL	;(FCB) ランダムレコード

	LD	DE,(HEADER+16)	;(ZIP34) 圧縮サイズ
	LD	HL,(FCB1+35)	;(FCB) ランダムレコード
	ADC	HL,DE
	LD	(FCB1+35),HL	;(FCB) ランダムレコード

	JP	LOOP1
EXIT1:
	LD	DE,FCB1
	LD	C,010H		;(BDOS) ファイルのクローズ(_FCLOSE) CP/M MSX-DOS
	CALL	SYSTEM
	JP	0		;プログラム終了

PRDEC_DEHL:
	LD	A,2
	LD	(DEC6+1),A
	XOR	A
	PUSH	HL
	LD	HL,DECBF
	LD	B,5
	CALL	FILL_MEMORY
	POP	HL

	LD	C,32
DEC1:
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	PUSH	HL
	LD	HL,DECBF+4
	LD	B,5
DEC2:
	LD	A,(HL)
	ADC	A,A
	DAA
	LD	(HL),A
	DEC	HL
	DJNZ	DEC2
	POP	HL
	DEC	C
	JR	NZ,DEC1

	LD	HL,DECBF
	LD	A,020H
	LD	B,4
DEC3:
	CALL	DEC4
	CALL	DEC4
	INC	HL
	DJNZ	DEC3
DECX:
	CALL	DEC4
	XOR	A
DEC4:
	RLD
	CP	020H
	JR	Z,DEC6
	OR	030H
DEC5:
	JR	MSG_A
DEC7:
	LD	A,020H
	JR	MSG_A
DEC6:
	LD	A,2
	OR	A
	JR	Z,DEC7
	DEC	A
	LD	(DEC6+1),A
	LD	A,020H
	RET

MSG_A:
	PUSH	AF
	PUSH	BC
	PUSH	DE
	PUSH	HL
	PUSH	IX
	LD	E,A
	LD	C,2
	CALL	SYSTEM
	POP	IX
	POP	HL
	POP	DE
	POP	BC
	POP	AF
	RET

FILE:
	CALL	FILEI

	LD	B,8
FILE2:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	Z,FILE4
	LD	(HL),A
	INC	HL
	DJNZ	FILE2

FILE3:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE3

FILE4:
	LD	HL,FNAME+8
	LD	B,3

FILE4L:
	CALL	CCHKF
	RET	Z
	LD	(HL),A
	INC	HL
	DJNZ	FILE4L
	RET

FILE10:
	LD	A,'?'

FILL_MEMORY:				;HLからBバイトAで埋める
	LD	(HL),A
	INC	HL
	DJNZ	FILL_MEMORY
	RET

FILEI:				;名前＋拡張子をスペースで初期化
	LD	A,020H
	LD	BC,11*256
	LD	HL,FNAME
	PUSH	HL
	CALL	FILL_MEMORY
	POP	HL
	RET

CCHKF:
	LD	A,(DE)
	CALL	CCHK2
	RET	Z
	JP	FKAN

CCHK2:
	INC	C
	DEC	C
	RET	NZ
CCHK3:				;ZF=1 で使えない文字
	CP	'+'
	RET	Z
	CP	','
	RET	Z
	CP	'/'
	RET	Z
	CP	':'
	RET	Z
	CP	';'
	RET	Z
	CP	'='
	RET	Z
	CP	05CH	;\
	RET	Z
	CP	020H
	RET	NC
	CP	A		;Z=1
	RET

TOZERO:
	PUSH	DE
TZ1:
	LD	A,(DE)
	CP	20H
	JR	C,TZ2
	INC	DE
	JR	TZ1
TZ2:
	XOR	A
	LD	(DE),A
	POP	DE
	RET

CAP:
	CP	'a'
	RET	C
	CP	'z'+1
	RET	NC
	SUB	020H
	RET

FKAN:			;漢字チェック
	BIT	0,C
	CALL	Z,CAP

	INC	DE
FKANX:
	BIT	0,C
	RES	0,C
	RET	NZ
	CP	080H
	RET	C
	CP	0A0H
	JR	C,FKAN1
	CP	0E0H
	RET	C
FKAN1:
	INC	C
	AND	A
	RET

PRTTMS:
	LD	HL,(HEADER+10)	;(ZIP12) ファイルの最終変更日付
	LD	A,L
	SRL	H
	RLA
	RLA
	RLA
	RLA
	AND	00FH
	LD	D,A
	LD	A,H
	ADD	A,80
	CALL	PRDEC_A
	LD	A,'-'
	CALL	MSG_A
	LD	A,D
	CALL	PRDEC_A
	LD	A,'-'
	CALL	MSG_A
	LD	A,L
	AND	01FH
	CALL	PRDEC_A

	LD	HL,(HEADER+8)	;(ZIP12) ファイルの最終変更時間
	LD	A,020H
	CALL	MSG_A
	LD	A,H
	LD	H,L
	LD	B,3
PRTTMS1:
	RRA
	RR	L
	DJNZ	PRTTMS1
	AND	01FH
	CALL	PRDEC_A
	LD	A,':'
	CALL	MSG_A
	LD	A,L
	RRCA
	RRCA
	AND	03FH
	CALL	PRDEC_A
	LD	A,':'
	CALL	MSG_A
	LD	A,H
	AND	01FH
	ADD	A,A

;	PRINT10

PRDEC_A:
	PUSH	HL
	LD	B,8
	LD	C,A
	XOR	A
PRTA1:
	RLC	C
	ADC	A,A
	DAA
	DJNZ	PRTA1
	LD	HL,DECBF
	LD	(HL),A
	XOR	A
	CALL	DECX
	POP	HL
	RET

MSX1:
	CALL	MSG_A
MSX:
	LD	A,(HL)
	INC	HL
	OR	A
	JR	NZ,MSX1
	RET

SHOW_ERROR_OS:
	LD	HL,ERROR_OS
	CALL	MSX
	JP	0
SHOW_USAGE:
	LD	HL,USAGE
	CALL	MSX
	JP	0

CPHEADER:
	LD	HL,HEADER
	LD	B,4
CPSTRN:
	LD	A,(DE)
	INC	DE
	CP	(HL)
	RET	NZ
	INC	HL
	DJNZ	CPSTRN
	RET

IS_SPLITTER:
	CP	'/'
	RET	Z
	CP	':'
	RET	Z
	CP	05CH	;\
	RET

GET_ATTR:
	LD	A,(HEADER+2)	;(ZIP12)ZIPファイル製作を行ったOS
	CP	14		;VFAT
	JR	Z,ATTR
	CP	10		;Windows NTFS
	JR	Z,ATTR
	OR	A		;MS-DOS
	SCF
	RET	NZ
ATTR:
	LD	A,(HEADER+34)	;(ZIP12) ファイルの属性
	AND	027H		;A--SHR
	RET

TITLE:
	DB	"UNZIPFIX v1.21", 00DH, 00AH, 0
ERROR_OS:
	DB	"LSX-Dodgers or MSX-DOS required.", 00DH, 00AH, 0
USAGE:
	DB	"usage: UNZIPFIX filename [drive:]", 00DH, 00AH, 0
HEADER_PK12:
	DB	"PK",1,2
HEADER_PK34:
	DB	"PK",3,4

OS_TYPE:		;0:MSX-DOS1  1:LSX-Dodgers  2:MSX-DOS2  3:CDOS2
	DS	1
OUT_DRIVE:
	DS	1
PATH_A:
	DS	2
HEADER:
	DS	4
HEADER1:
	DS	42

DRV_PATH:
	DS	2
PATH:
	DS	512
FULLPATH:
	DS	514
DECBF:
	DS	5
FDRV:
	DS	37
FNAME	EQU	FDRV+1

BUFAD:
