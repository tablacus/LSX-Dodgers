;	SYS	by Gaku

SYSTEM	EQU	0005H
FCB1	EQU	005CH

DPB_FATLN	EQU	00H
DPB_DRD		EQU	02H
DPB_DWT		EQU	04H
DPB_FATID	EQU	06H
DPB_SECPCL	EQU	07H
DPB_MAXCL	EQU	08H
DPB_FDMODE	EQU	0AH
DPB_DIRSCNT	EQU	0BH
DPB_MAXCYL	EQU	0CH
DPB_MAXSEC	EQU	0DH
DPB_FATPS	EQU	0EH
DPB_BPS		EQU	0FH
DPB_DIRPS	EQU	10H
DPB_DEVICE	EQU	12H
DPB_UNITNO	EQU	13H
DPB_ADDCL	EQU	14H
DPB_NAME	EQU	1CH

IPL_MAXCYL	EQU	20H
IPL_SECPCL	EQU	21H
IPL_DIRPS_H	EQU	23H
IPL_MAXSEC	EQU	28H
IPL_FATPS	EQU	29H
IPL_FATLN	EQU	2AH
IPL_DIRPS	EQU	2BH
IPL_DIRSCNT	EQU	2CH
IPL_DIRITEMS	EQU	2DH
IPL_ADDCL	EQU	2EH
IPL_ADDCL_H	EQU	2FH

CR	EQU	0DH
LF	EQU	0AH

DTBUF	EQU	0000H
FATBF	EQU	0D000H
IPL	EQU	0FE00H

	ORG	0100H
	JP	START
TITLE:
	DB	"X1 systemcopy v1.05"
	DB	CR,LF,"$"
USAGE:
	DB	"usage:"
	DB	" SYS drive:",CR,LF,"$"
OK:
	DB	" OK",CR,LF,"$"
ERROR:
	DB	" Error",CR,LF,"$"
SKIP:
	DB	" Skip",CR,LF,"$"
LSX:
	DB	"LD      .BIN$"
WIPL:
	DB	"Write IPL $"
M2D:
	DB	"2D$"
M2HD:
	DB	"2HD$"
M2HC:
	DB	"2HC$"
MEMM:
	DB	"EMM$"

START:
	LD	DE,TITLE
	LD	C,9
	CALL	SYSTEM

	LD	DE,DATA
	LD	C,1AH
	CALL	SYSTEM

	LD	A,(FCB1)
	OR	A
	JR	NZ,INIT

	LD	DE,USAGE
	LD	C,9
	CALL	SYSTEM
	JP	0
INIT:
	LD	(FCB3),A

	LD	DE,LSX
	LD	C,9
	CALL	SYSTEM

	LD	DE,FCB2
	LD	C,0FH
	CALL	SYSTEM
	OR	A
	JR	NZ,CCHECK

	LD	HL,(FCB2+14)
	LD	(SDIR),HL
	LD	HL,1
	LD	(FCB2+14),HL
	LD	(FCB3+14),HL

	LD	HL,(SYSTEM+1)
	DEC	H
	DEC	H
	LD	DE,DATA
	SBC	HL,DE
	LD	DE,FCB2
	LD	C,27H
	CALL	SYSTEM
	DEC	A
	JR	NZ,CCHECK
	LD	(SIZE),HL

	LD	DE,FCB2
	LD	C,10H
	CALL	SYSTEM
	OR	A
	JR	NZ,CCHECK

	LD	A,(FCB2)
	LD	HL,FCB3
	CP	(HL)
	JR	NZ,CREATE

	LD	DE,SKIP
	LD	C,9
	CALL	SYSTEM
	JR	WTIPL

CREATE:
	LD	DE,FCB3
	LD	C,16H
	CALL	SYSTEM
	OR	A
	JR	NZ,CCHECK

	LD	HL,1
	LD	(FCB3+14),HL

	LD	DE,FCB3
	LD	HL,(SIZE)
	LD	C,26H
	CALL	SYSTEM
	OR	A
	JR	NZ,CCHECK

	LD	HL,FCB2+20
	LD	DE,FCB3+20
	LD	BC,4
	LDIR

	LD	DE,FCB3
	LD	C,10H
	CALL	SYSTEM

CCHECK:
	CALL	CHECK
WTIPL:
	LD	A,(FCB3)
	LD	E,A
	LD	C,1BH
	CALL	SYSTEM
	INC	A
	JP	Z,0

	LD	HL,354
	AND	A
	SBC	HL,DE
	JR	Z,W2D

	LD	HL,1221
	AND	A
	SBC	HL,DE
	JP	Z,W2HD

WTIPL1:
	LD	HL,2371
	AND	A
	SBC	HL,DE
	JP	Z,W2HC

	CALL	IS_X1
	JP	NZ,0

	LD	A,(FCB3)
	DEC	A
	LD	E,A
	JP	C,01FH		;ディスク装置のパラメータの読み出し
	CALL	SYSTEM
	RET	C

	LD	A,(IX+DPB_DEVICE)
	CP	6
	JP	Z,WEMM
	CP	26H
	LD	A,(IX+DPB_MAXSEC)
	OR	A
	JP	NZ,WEMM
	LD	A,(IX+DPB_MAXCYL)
	OR	A
	JP	NZ,WEMM

	JP	0

W2D:
	LD	DE,WIPL
	LD	C,9
	CALL	SYSTEM
	LD	DE,M2D
	LD	C,9
	CALL	SYSTEM

	LD	HL,DATA
	LD	DE,DATA+1
	LD	BC,1023
	LD	(HL),0
	LDIR

	LD	HL,LIPL
	LD	DE,DATA
	LD	BC,30H
	LDIR

	LD	HL,MAIN
	LD	BC,RDDLE-MAIN
	LDIR

WJUMP:
	LD	HL,JUMP
	LD	DE,DATA+01E0H
	LD	BC,32
	LDIR

	CALL	EAREA

	LD	DE,0
	LD	HL,(FCB3)
	DEC	L
	LD	H,1
	LD	C,30H
	CALL	SYSTEM

	CALL	CHECK
	JP	0
CHECK:
	OR	A
	LD	DE,OK
	JR	Z,CHECK2
DISERR:
	LD	DE,ERROR
CHECK2:
	LD	C,9
	CALL	SYSTEM
	RET

W2HD:
	LD	DE,WIPL
	LD	C,9
	CALL	SYSTEM
	LD	DE,M2HD
	LD	C,9
	CALL	SYSTEM

	LD	HL,DATA
	LD	DE,DATA+1
	LD	BC,1023
	LD	(HL),0
	LDIR

	LD	HL,HIPL
	LD	DE,DATA
	LD	BC,30H
	LDIR
WMAIN:
	LD	HL,MAIN
	LD	BC,MAINE-MAIN
	LDIR

	LD	HL,RDDH
	LD	BC,RDDHE-RDDH
	LDIR

	JR	WJUMP

W2HC:
	LD	DE,WIPL
	LD	C,9
	CALL	SYSTEM
	LD	DE,M2HC
	LD	C,9
	CALL	SYSTEM

	LD	HL,DATA
	LD	DE,DATA+1
	LD	BC,1023
	LD	(HL),0
	LDIR

	LD	HL,CIPL
	LD	DE,DATA
	LD	BC,30H
	LDIR
	JR	WMAIN

WEMM:
	LD	DE,WIPL
	LD	C,9
	CALL	SYSTEM
	LD	DE,MEMM
	LD	C,9
	CALL	SYSTEM

	LD	HL,DATA
	LD	DE,DATA+1
	LD	BC,1023
	LD	(HL),0
	LDIR

	LD	HL,EIPL
	LD	DE,DATA
	LD	BC,30H
	LDIR

	LD	HL,MAIN
	LD	BC,MAINE-MAIN
	LDIR

	LD	HL,RDDE
	LD	BC,RDDEE-RDDE
	LDIR

	CALL	EAREA

	BIT	5,(IX+DPB_BPS)
	JR	Z,FAT12
				;FAT16
	LD	HL,GNCL16
	LD	DE,GNCL-IPL+DATA
	LD	BC,GNCL16E-GNCL16
	LDIR
	LD	HL,DRDSB16
	LD	(READ_FAT-IPL+DATA),HL
	LD	A,0FFH
	LD	(END_OF_FILE-IPL+DATA),A
FAT12:
	XOR	A
	LD	BC,0D00H
	OUT	(C),A
	INC	C
	OUT	(C),A
	INC	C
	OUT	(C),A
	INC	C

	LD	HL,DATA
EMML:
	INC	B
	OUTI
	INC	B
	OUTI
	DEC	A
	JR	NZ,EMML

	LD	DE,OK
	LD	C,9
	CALL	SYSTEM
	JP	0

EAREA:
	CALL	IS_X1
	RET	NZ

	LD	A,(FCB3)
	DEC	A
	LD	E,A
	JP	C,01FH		;ディスク装置のパラメータの読み出し
	CALL	SYSTEM
	RET	C

	LD	A,(IX+DPB_DEVICE)
	AND	0FH
	CP	6
	RET	NZ

	LD	A,(IX+DPB_MAXCYL)
	LD	(DATA+IPL_MAXCYL),A

	LD	A,(IX+DPB_SECPCL)
	LD	(DATA+IPL_SECPCL),A

	LD	A,(IX+DPB_DIRPS+1)
	LD	(DATA+IPL_DIRPS_H),A

	LD	A,(IX+DPB_MAXSEC)
	LD	(DATA+IPL_MAXSEC),A

	LD	A,(IX+DPB_FATPS)
	LD	(DATA+IPL_FATPS),A

	LD	A,(IX+DPB_FATLN)
	LD	(DATA+IPL_FATLN),A

	LD	A,(IX+DPB_DIRPS)
	LD	(DATA+IPL_DIRPS),A

	LD	A,(IX+DPB_DIRSCNT)
	LD	(DATA+IPL_DIRSCNT),A

	ADD	A,A	;*2
	ADD	A,A	;*4
	ADD	A,A	;*8
	ADD	A,A	;*16
	ADD	A,A	;*32
	LD	(DATA+IPL_DIRITEMS),A

	LD	A,(IX+DPB_ADDCL)
	LD	(DATA+IPL_ADDCL),A
	LD	A,(IX+DPB_ADDCL+1)
	LD	(DATA+IPL_ADDCL_H),A

	XOR	A
	RET

IS_X1:
	LD	C,06FH		;MSX-DOS のバージョン番号の獲得(_DOSVER)
	CALL	SYSTEM
	LD	A,C
	CP	01DH		;LSX-Dodgersの場合、01DH
	RET	NZ
	LD	A,L		;機種ID
	CP	0		;X1
	RET

MAIN:
	ORG	IPL+30H,MAIN-100H
FNAME:
	DB	"LD",20H,20H,20H,20H,20H,20H
	DB	"BIN"

SA:
	DI
	LD	SP,0
	LD	IX,IPL
	LD	A,1EH
	OUT	(0),A
	LD	BC,3000H+36
	IN	A,(C)
	AND	3
	LD	(DRIVE+1),A
	CALL	FILE
	JR	C,IPLERR
	LD	HL,(DTBUF+3)
	LD	DE,(DTBUF+1)
	SBC	HL,DE
	LD	B,H
	LD	C,L
	INC	BC
	LD	HL,DTBUF+7
	LDIR
	LD	A,(DRIVE+1)
	LD	(0FF87H),A
	LD	A,(IX+27H)
	LD	(0FF8CH),A

	LD	BC,1A03H
	LD	A,82H
	OUT	(C),A
	IM	2
	LD	HL,(0005H)
	JP	(HL)
IPLERR:
	LD	A,(DRIVE+1)
	LD	BC,0FFCH	;モーター停止
	OUT	(C),A
	LD	A,1DH		;ROMに切り替え
	OUT	(0),A
	LD	A,7
	LD	(0FF86H),A
	JP	0066H		;NMIリセット
FILE:
	LD	D,0
	LD	E,(IX+IPL_FATPS)
	LD	HL,FATBF
	LD	B,(IX+IPL_FATLN)
	CALL	DRDSB
READ_FAT	EQU	$-2
	RET	C

	LD	HL,DTBUF
	LD	E,(IX+IPL_DIRPS)
	LD	D,(IX+IPL_DIRPS_H)
	PUSH	HL
	LD	B,(IX+IPL_DIRSCNT)
	CALL	DRDSB
	POP	HL
	RET	C

	LD	C,(IX+IPL_DIRITEMS)	;ディレクトリの全項目数
FILE1:
	LD	B,11
	LD	DE,FNAME
	PUSH	HL
COMP:
	LD	A,(DE)
	CP	(HL)
	JR	NZ,COMP1
	INC	DE
	INC	HL
	DJNZ	COMP
COMP1:
	POP	HL
	JR	Z,FILE2
	LD	DE,20H
	ADD	HL,DE
	DEC	C
	JR	NZ,FILE1
	SCF
	RET

FILE2:
	LD	DE,1AH
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)

	LD	HL,DTBUF
RDD1:
	PUSH	DE
	CALL	DRDC
	POP	DE
	RET	C
	PUSH	HL
	CALL	GNCL
	POP	HL
	LD	A,D
	CP	0FH
END_OF_FILE	EQU	$-1
	JR	C,RDD1
	RET

GNCL:
	LD	L,E		;GET NEXT CLUSTER
	LD	H,D
	SRL	H
	RR	L
	LD	BC,FATBF
	JR	C,GNC1
	ADD	HL,DE
	ADD	HL,BC
	LD	E,(HL)
	INC	HL
	LD	A,(HL)
	AND	0FH
	LD	D,A
	RET
GNC1:
	ADD	HL,DE
	ADD	HL,BC
	LD	A,(HL)
	INC	HL
	LD	D,(HL)
	LD	B,4
GNC1L:
	SRL	D	;DA=DA/2
	RRA		;
	DJNZ	GNC1L

	LD	E,A
	AND	A
	RET

SEEK:
	LD	B,16
	LD	C,(IX+IPL_MAXSEC)
	XOR	A
	EX	DE,HL
DIV1:
	ADD	HL,HL
	ADC	A,A
	CP	C
	JR	C,DIV2
	SUB	C
	INC	L
DIV2:
	DJNZ	DIV1

	INC	A		;最小のセクタは１固定
	LD	E,A		;余り

	LD	D,L		;商
	SRL	D
	SBC	A,A
	AND	10H		;SIDE
DRIVE:	OR	00H
	LD	BC,0FFCH
	OR	80H		;モーターオン
	OUT	(C),A
	CALL	BUSY
	RET	C

	LD	C,0FBH
	OUT	(C),D
	LD	A,D
	ADD	A,0FFH
	SBC	A,A
	AND	18H		;シーク/リストア
	LD	C,0F8H
	OUT	(C),A

BUSY:
	LD	A,18
BUSY1:
	DEC	A
	JR	NZ,BUSY1
	LD	C,0F8H
	LD	H,C
BUSY2:
	IN	A,(C)
	AND	81H
	RET	Z
	EX	(SP),HL
	EX	(SP),HL
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,BUSY2
	SCF
	RET

DRDSB:
	PUSH	BC
	PUSH	DE
	CALL	DRD
	POP	DE
	POP	BC
	RET	C
	INC	DE
	DJNZ	DRDSB
	RET

DRD:
DRDC	EQU	DRD+2
	ORG	$$+0100H	;$DEPHASE
MAINE:
;
;	2Dフロッピー
;
RDDL:
	ORG	DRD,RDDL-100H
__RDDL:
	JR	DRDL
DRDCL:
	EX	DE,HL
	LD	A,(IX+IPL_ADDCL)
	ADD	HL,HL		;DE=DE*2 (512)
	EX	DE,HL
	ADD	A,E
	LD	E,A
	ADC	A,D
	SUB	E
	LD	D,A

	LD	B,2
	JR	DRDSB
DRDL:
	PUSH	HL
	CALL	SEEK		;ディスクリード
	POP	HL
	RET	C
	LD	A,80H
	LD	BC,0FFAH
	OUT	(C),E
	LD	C,0F8H
	JR	SKIPBUFL

	ORG	0FF87H,$$
	DB	0		;0FF87H	ドライブ(IPL READ)
	DW	SA		;0FF88H スタックオーバーライド(IPL READ)

SKIPBUFL:
	OUT	(C),A
	LD	A,18
DELAY:
	DEC	A
	JR	NZ,DELAY

	LD	C,0FBH
DRD1:
	LD	A,B
	IN	A,(0F8H)
	RRCA
	JR	NC,DRD3
	RRCA
	JR	NC,DRD1
	INI
	INC	B
	JR	DRD1

DRD3:
	ADD	A,0FFH
	RET
	ORG	$$+0100H	;$DEPHASE
RDDLE:
;
;	2HD/2HCフロッピー
;
RDDH:
	ORG	DRD,RDDH-100H
__DRDCH:
	JR	DRDH
DRDCH:
	LD	A,(IX+IPL_ADDCL)
	ADD	A,E
	LD	E,A
	ADC	A,D
	SUB	E
	LD	D,A
DRDH:
	LD	(DMAD+11),HL
	CALL	SEEK
	RET	C

	LD	A,15
	LD	HL,DMAD

	LD	BC,1F87H
SDMA:
	INC	B
	OUTI
	DEC	A
	JR	NZ,SDMA

	JP	SKIPBUFH

	ORG	0FF87H,$$
	DB	0		;0FF87H	ドライブ(IPL READ)
	DW	SA		;0FF88H スタックオーバーライド(IPL READ)

SKIPBUFH:
	LD	A,80H
	PUSH	BC
	LD	BC,0FFAH
	OUT	(C),E
	LD	C,0F8H
	OUT	(C),A

	CALL	BUSY
	IN	A,(C)

	LD	HL,(DMAD+11)
	INC	HL
	LD	DE,0BB06H	;READ DMA

	POP	BC
	OUT	(C),D
	OUT	(C),E
	IN	E,(C)
	IN	D,(C)
	ADD	HL,DE
	ADD	A,0FFH
	RET

DMAD:
	DB	0C3H,7DH,0FBH,0FH,0FFH,0FFH,2CH,10H	;X1turbo
	DB	80H,92H,8DH,00H,00H,0CFH,87H		;DISK DMA
	ORG	$$+0100H	;$DEPHASE
RDDHE:
;
;	EMM
;
RDDE:
	ORG	DRD,RDDE-100H
	JR	DRDE
DRDCE:
	LD	A,4
	LD	(DRIVE+1),A
	EX	DE,HL

	LD	C,(IX+IPL_SECPCL)
	LD	B,C
L_CLDBL:
	RR	C		;->CF
	JR	C,E_CLDBL
	ADD	HL,HL		;*2
	JR	L_CLDBL
E_CLDBL:
	EX	DE,HL

	LD	A,E
	ADD	A,(IX+IPL_ADDCL)
	LD	E,A
	LD	A,D
	ADC	A,(IX+IPL_ADDCL_H)
	LD	D,A

	JR	DRDSB
DRDE:
	EX	DE,HL
	ADD	HL,HL
	LD	B,(IX+IPL_MAXCYL)	;EMMのオフセット
	LD	C,(IX+IPL_MAXSEC)	;ブートレコードを避ける為
	ADD	HL,BC
	LD	BC,0D00H
	OUT	(C),C
	INC	C
	OUT	(C),L
	INC	C
	OUT	(C),H
	INC	C
	EX	DE,HL
	XOR	A
EDRDC1:
	INI
	INC	B
	INI
	INC	B
	DEC	A
	JR	NZ,EDRDC1
	XOR	A
	RET
ESA:
	LD	HL,0FC00H
	LD	DE,IPL
	LD	BC,ESA-IPL
	LDIR
	LD	BC,0FFCH	;念のためにFDDのモーターを停止
	OUT	(C),0		;Z80未定義命令
	JP	SA
EED:
	ORG	$$+0100H	;$DEPHASE
RDDEE:
;
;	EMM専用FAT16
;
GNCL16:
	ORG	GNCL,GNCL16-100H

	EX	DE,HL
	ADD	HL,HL
	LD	C,0			;EMMのオフセット
	LD	B,(IX+IPL_MAXSEC)	;ブートレコードを避ける為のオフセット
	XOR	A
	ADD	HL,BC
	ADC	A,(IX+IPL_MAXCYL)
	LD	B,(IX+IPL_FATPS)	;FATの位置
	SLA	B		;*2	;1セクタ=512バイト
	ADC	A,0
	LD	C,0
	ADD	HL,BC
	ADC	A,0

	LD	BC,0D00H
	OUT	(C),L
	INC	C
	OUT	(C),H
	INC	C
	OUT	(C),A
	INC	C

	IN	E,(C)
	IN	D,(C)
	RET

DRDSB16:
	AND	A	;EMMでFAT16の場合はダイレクトに読み込むのでバッファは使わない。
	RET

	ORG	$$+0100H	;$DEPHASE
GNCL16E:
;
;	BPB
;
LIPL:
	DB	0EBH,0FEH,90H,"LD",20H,20H,20H
	DB	20H,20H,20H,00H,02H,02H,01H,00H
	DB	02H,70H,00H,0D0H,02H,0FDH,02H,00H
	DB	09H,00H,02H,00H,00H,00H,18H,0FEH
	DB	0,0,0,0,0,0,0,0
	DB	9,1,2,5,7,112,8,1

HIPL:
	DB	0EBH,0FEH,90H,"LD",20H,20H,20H
	DB	20H,20H,20H,00H,04H,01H,01H,00H
	DB	02H,0C0H,00H,0D0H,04H,0FEH,02H,00H
	DB	08H,00H,02H,00H,00H,00H,18H,0FEH
	DB	0,0,0,0,0,0,0,0
	DB	8,1,2,5,6,192
	DW	9

CIPL:
	DB	0EBH,0FEH,90H,"LD",20H,20H,20H
	DB	20H,20H,20H,00H,02H,01H,01H,00H
	DB	02H,0E0H,00H,060H,09H,0F9H,07H,00H
	DB	0FH,00H,02H,00H,00H,00H,18H,0FEH
	DB	0,0,0,0,0,0,0,0
	DB	15,1,7,15,14,224
	DW	27

EIPL:
	DB	01H,"LSX-Dodgers  Sy"
	DB	"s",20H,EED,01H
	DW	0FC00H,ESA-0200H
	DB	0,0,0,0,0,0,0,0
	DB	0,0,0,0,0,0,0,0
	DB	8,1,2,5,6,192
	DW	9

JUMP:
	DW	SA,SA,SA,SA,SA,SA,SA,SA
	DW	SA,SA,SA,SA,SA,SA,SA,SA

FCB2:
	DB	0,"LD      BIN"
	DS	25,0

FCB3:
	DB	0,"LD      BIN"
	DS	25,0

SDIR:
	DW	0
SIZE:
	DW	0
DATA:
