;	SYS	by Gaku

SYSTEM	EQU	00005H
FCB1	EQU	0005CH
MSX_BDOS	EQU	0F37DH

DPB_FATLN	EQU	00H
DPB_DRD		EQU	02H
DPB_DWT		EQU	04H
DPB_FATID	EQU	06H
DPB_SECPCL	EQU	07H
DPB_MAXCL	EQU	08H
DPB_FDMODE	EQU	0AH
DPB_DIRSCNT	EQU	0BH
DPB_MAXCYL	EQU	0CH
DPB_MAXSEC	EQU	0DH
DPB_FATPS	EQU	0EH
DPB_BPS		EQU	0FH
DPB_DIRPS	EQU	10H
DPB_DEVICE	EQU	12H
DPB_UNITNO	EQU	13H
DPB_ADDCL	EQU	14H
DPB_NAME	EQU	1CH

IPL_BOOT_MSX	EQU	1EH
IPL_FATPS	EQU	2DH
IPL_MAXSEC	EQU	2EH
IPL_MAXCYL	EQU	2FH
IPL_HEAD_SZ	EQU	30H

CR	EQU	0DH
LF	EQU	0AH

DTBUF	EQU	08000H
FATBF	EQU	0D000H
IPL	EQU	0FE00H
MSX_IPL	EQU	0C000H

	ORG	0100H
	JP	START
TITLE:
	DB	"systemcopy v1.07"
	DB	CR,LF,"$"
USAGE:
	DB	"usage:"
	DB	" SYS drive:",CR,LF,"$"
OK:
	DB	" OK",CR,LF,"$"
ERROR:
	DB	" Error!",CR,LF,"$"
SKIP:
	DB	" Skip",CR,LF,"$"
WIPL:
	DB	"Write IPL $"
MFDD:
	DB	"FD$"
MEMM:
	DB	"EMM$"

START:
	LD	DE,TITLE
	LD	C,9
	CALL	SYSTEM

	LD	C,06FH		;(BDOS)MSX-DOS のバージョン番号の獲得(_DOSVER)
	CALL	SYSTEM
	LD	A,C
	CP	01DH		;LSX-Dodgersの場合、01DH
	JP	NZ,0

	LD	DE,DATA
	LD	C,1AH		;(BDOS)DTAの設定(_SETDTA)
	CALL	SYSTEM

	LD	A,(FCB1)
	OR	A
	JR	NZ,INIT

	LD	DE,USAGE
	LD	C,9
	CALL	SYSTEM
	JP	0
INIT:
	LD	(FCB3),A

	LD	C,06FH		;(BDOS)MSX-DOS のバージョン番号の獲得(_DOSVER)
	CALL	SYSTEM
	LD	A,L		;機種ID
	CP	0		;X1
	JR	Z,COPY_X1
	CP	3		;MSX
	JR	NZ,WTIPL

	LD	HL,MSX_FNAME
	LD	DE,FCB2NAME
	LD	BC,MSX_FNAME_E-MSX_FNAME
	LDIR
COPY_X1:
	CALL	COPY_FILE
CCHECK:
	CALL	CHECK
WTIPL:
	LD	A,(FCB3)
	LD	E,A
	LD	C,1BH			;ディスク情報の獲得(_ALLOC) MSX-DOS
	CALL	SYSTEM
	INC	A
	JP	Z,0

	LD	A,(IX+DPB_DEVICE)	;(DPB)デバイス情報
	AND	00FH
	CP	6			;EMM
	JP	Z,WEMM

	CP	7			;フロッピー
	JR	Z,WTIPL1
	CP	00DH			;DISK
	JP	NZ,0

WTIPL1:
	LD	A,(IX+DPB_BPS)		;(DPB)FAT情報と論理セクタのサイズ
	BIT	5,A			;FAT16
	JP	NZ,0

	LD	DE,WIPL
	LD	C,9
	CALL	SYSTEM
	LD	DE,MFDD
	LD	C,9
	CALL	SYSTEM

	LD	HL,DATA
	LD	DE,DATA+1
	LD	BC,1023
	LD	(HL),0
	LDIR

	LD	DE,0
	LD	HL,(FCB3)
	DEC	L
	LD	H,1
	LD	C,2FH			;論理セクタを用いた読み出し(_RDABS)
	CALL	SYSTEM
	OR	A
	JP	NZ,DISERR
	LD	A,(DATA)
	CP	1
	JP	Z,DISERR

	LD	HL,BPB_FDD+BOOT_MSX_FD_ENTRY-BPB_FDD_IPL
	LD	DE,DATA+BOOT_MSX_FD_ENTRY-BPB_FDD_IPL
	LD	BC,BPB_FDD_IPL_E-BOOT_MSX_FD_ENTRY
	LDIR

	LD	A,(DATA+12)		;BPB_BytsPerSec
	CP	4
	JR	Z,BPB_OK		;1セクタ1024バイト
	DEC	A
	JR	Z,BPB_OK		;1セクタ256バイト
	DEC	L
	JR	Z,BPB_OK		;1セクタ512バイト

	LD	HL,BPB_FDD
	LD	DE,DATA
	LD	BC,IPL_BOOT_MSX
	LDIR
					;DPBからBPBを作成する
	LD	A,(IX+DPB_BPS)		;(DPB)FAT情報と論理セクタのサイズ
	AND	7
	LD	(DATA+12),A		;BPB_BytsPerSec

	LD	A,(IX+DPB_SECPCL)	;(DPB)1クラスタの論理セクタ数
	LD	(DATA+13),A		;BPB_SecPerClus

	LD	A,(IX+DPB_FATPS)	;FAT領域の先頭論理セクタ番号
	LD	(DATA+14),A		;BPB_RsvdSecCnt

	LD	A,(IX+DPB_BPS)		;(DPB)FAT情報と論理セクタのサイズ
	ADD	A,A
	LD	A,1
	ADC	A,0
	LD	(DATA+16),A		;BPB_NumFATs

	LD	A,(IX+DPB_DIRSCNT)	;ルートディレクトリ領域の論理セクタ数

	LD	L,A
	LD	H,0

	ADD	HL,HL			;*2
	ADD	HL,HL			;*4
	ADD	HL,HL			;*8

	LD	A,(IX+DPB_BPS)		;(DPB)FAT情報と論理セクタのサイズ
	CALL	DBL_HL_A

	LD	(DATA+17),HL		;BPB_RootEntCnt

	LD	L,(IX+DPB_MAXCL)	;(DPB)総クラスタ数
	LD	H,(IX+DPB_MAXCL+1)	;
	LD	A,(IX+DPB_SECPCL)	;(DPB)1クラスタの論理セクタ数
	CALL	DBL_HL_A		;総クラスタ数×1クラスタの論理セクタ数

	LD	C,(IX+DPB_ADDCL)	;(DPB)データ格納領域の先頭論理セクタ番号
	LD	B,(IX+DPB_ADDCL+1)	;
	ADD	HL,BC
	LD	(DATA+19),HL		;BPB_TotSec16

	LD	A,(IX+DPB_FATID)	;(DPB)メディアバイト
	LD	(DATA+21),A		;BPB_Media

	LD	L,(IX+DPB_FATLN)	;(DPB)FAT領域のセクタ単位でのサイズ
	LD	H,(IX+DPB_FATLN+1)
	LD	(DATA+22),HL

	LD	A,(IX+DPB_MAXSEC)	;(DPB)1トラックのセクタ数
	LD	(DATA+24),A		;BPB_SecPerTrk
BPB_OK:
	LD	HL,(BPB_FDD+IPL_BOOT_MSX)
	LD	(DATA+IPL_BOOT_MSX),HL

	LD	DE,DATA+IPL_HEAD_SZ
	BIT	0,(IX+DPB_FDMODE)
	JR	Z,M2HD1
	LD	HL,MSX_FD
	LD	BC,MSX_FD_E-MSX_FD
	LDIR

	LD	HL,MAIN
	LD	BC,MAINE-MAIN
	LDIR

	LD	A,(IX+DPB_MAXCYL)
	CP	50
	JR	NC,M2DD
;2D
	LD	HL,DRD_2D
	LD	BC,DRD_2D_E-DRD_2D
	LDIR
	LD	A,0FFH		;0FFFH 500K(2D)/1M(2DD) タイプ指定 (turbo/Z/CZ-8BF1のみ)
	LD	(DATA+FD_MODE-IPL),A
	XOR	A
	JR	WJUMP0
M2DD:
	LD	HL,DRD_2DD
	LD	BC,DRD_2DD_E-DRD_2DD
	LDIR
	LD	A,0FFH		;0FFFH 500K(2D)/1M(2DD) タイプ指定 (turbo/Z/CZ-8BF1のみ)
	LD	(DATA+FD_MODE-IPL),A
	LD	A,0FEH		;0FFEH 1.6M(2HD) タイプ指定 (turbo/Z/CZ-8BF1のみ)
	LD	(DATA+SEEK_2DD-IPL),A
	XOR	A
	JR	WJUMP0
M2HD1:
	LD	HL,BOOT_DMA
	LD	BC,BOOT_DMA_E-BOOT_DMA
	LDIR

	LD	HL,MAIN
	LD	BC,MAINE-MAIN
	LDIR

	LD	HL,DRD_2HD
	LD	BC,DRD_2HD_E-DRD_2HD
	LDIR

	LD	A,0FEH		;0FFEH 1.6M(2HD) タイプ指定 (turbo/Z/CZ-8BF1のみ)
	LD	(DATA+FD_MODE-IPL),A
	LD	A,2			;2HD
WJUMP0:
	LD	(DATA+0018CH),A

WJ1:
	LD	HL,DATA+01E0H
	XOR	A
	SBC	HL,DE
	JR	C,WJE
	LD	(DE),A
	INC	DE
	JR	WJ1
WJE:
	CALL	EAREA
WJUMP:
	LD	HL,JUMP
	LD	DE,DATA+01E0H
	LD	BC,32
	LDIR

	LD	DE,0
	LD	HL,(FCB3)
	DEC	L
	LD	H,1
	LD	C,30H			;論理セクタを用いた書き込み(_WRABS)
	CALL	SYSTEM
DISERR:
	CALL	CHECK
	JP	0
CHECK:
	OR	A
	LD	DE,ERROR
	JR	NZ,CHECK2
	LD	DE,OK
CHECK2:
	LD	C,9
	CALL	SYSTEM
	RET

DBL_HL_A:			;HLをA倍する Aは1,2,4,8
	RRA			;->CF
	RET	C
	ADD	HL,HL		;*2
	JR	DBL_HL_A

WEMM:
	LD	C,06FH		;(BDOS)MSX-DOS のバージョン番号の獲得(_DOSVER)
	CALL	SYSTEM
	LD	A,L		;機種ID
	CP	0		;X1
	JP	NZ,0

	LD	DE,WIPL
	LD	C,9
	CALL	SYSTEM
	LD	DE,MEMM
	LD	C,9
	CALL	SYSTEM

	LD	HL,DATA
	LD	DE,DATA+1
	LD	BC,1023
	LD	(HL),0
	LDIR

	LD	HL,IPL_EMM
	LD	DE,DATA
	LD	BC,IPL_EMM_E-IPL_EMM
	LDIR

	LD	HL,BOOT_EMM
	LD	BC,BOOT_EMM_E-BOOT_EMM
	LDIR

	LD	HL,MAIN
	LD	BC,SEEK-FNAME
	LDIR

	LD	HL,DRD_EMM
	LD	(DATA+DRD_SWC-IPL),HL

	DB	021H		;LD HL,?
	LD	A,4
	LD	(DATA+INIT_DRV-IPL),HL

	CALL	EAREA

	BIT	5,(IX+DPB_BPS)
	JR	Z,FAT12
				;FAT16
	LD	HL,GNCL16
	LD	DE,GNCL-IPL+DATA
	LD	BC,GNCL16E-GNCL16
	LDIR
	DB	03EH		;LD A,?
	XOR	A		;EMMでFAT16の場合はダイレクトに読み込むのでバッファは使わない。
	LD	L,A
	LD	L,H
	LD	(READ_FAT-IPL+DATA),A
	LD	(READ_FAT-IPL+DATA+1),HL
	LD	A,0FFH
	LD	(END_OF_FILE-IPL+DATA),A
FAT12:
	XOR	A
	LD	BC,0D00H
	OUT	(C),A
	INC	C
	OUT	(C),A
	INC	C
	OUT	(C),A
	INC	C

	LD	HL,DATA
EMML:
	INC	B
	OUTI
	INC	B
	OUTI
	DEC	A
	JR	NZ,EMML

	LD	DE,OK
	LD	C,9
	CALL	SYSTEM
	JP	0

EAREA:
	LD	A,(IX+DPB_MAXCYL)
	LD	(DATA+IPL_MAXCYL),A

	LD	A,(IX+DPB_SECPCL)	;(DPB)1クラスタの論理セクタ数
	LD	(DATA+IPL_SECPCL-IPL),A

	LD	A,(IX+DPB_MAXSEC)	;(DPB)1トラックのセクタ数
	LD	(DATA+IPL_MAXSEC),A

	LD	A,(IX+DPB_FATPS)	;(DPB)FAT領域の先頭論理セクタ番号
	LD	(DATA+IPL_FATPS),A

	LD	A,(IX+DPB_FATLN)	;(DPB)FAT領域のセクタ単位でのサイズ
	LD	(DATA+IPL_FATLN-IPL),A

	LD	A,(IX+DPB_DIRPS)	;(DPB)ルートディレクトリ領域の先頭論理セクタ番号

	LD	L,(IX+DPB_DIRPS)	;(DPB)ルートディレクトリ領域の先頭論理セクタ番号
	LD	H,(IX+DPB_DIRPS+1)
	LD	(DATA+IPL_DIRPS-IPL),HL

	LD	A,(IX+DPB_DIRSCNT)	;ルートディレクトリ領域の論理セクタ数
	LD	(DATA+IPL_DIRSCNT-IPL),A

	LD	L,A
	LD	H,0

	ADD	HL,HL			;*2
	ADD	HL,HL			;*4
	ADD	HL,HL			;*8
	LD	A,(IX+DPB_BPS)		;(DPB)FAT情報と論理セクタのサイズ
	CALL	DBL_HL_A
	LD	A,H
	SUB	1
	SBC	A,A
	AND	L
	LD	(DATA+IPL_DIRITEMS-IPL),A

	LD	L,(IX+DPB_ADDCL)	;(DPB)データ格納領域の先頭論理セクタ番号
	LD	H,(IX+DPB_ADDCL+1)
	LD	(DATA+IPL_ADDCL-IPL),HL

	XOR	A
	RET

COPY_FILE:
	LD	HL,FCB2NAME
	LD	DE,FCB3+1
	LD	BC,36
	LDIR

	LD	HL,FCB2NAME
	LD	B,11
CF1:
	LD	E,(HL)
	INC	HL
	PUSH	BC
	PUSH	HL
	LD	C,002H		;(BDOS)コンソール出力(_CONOUT)
	CALL	SYSTEM
	POP	HL
	POP	BC
	DJNZ	CF1

	LD	DE,FCB2
	LD	C,0FH
	CALL	SYSTEM
	OR	A
	RET	NZ

	LD	HL,(FCB2+14)
	LD	(SDIR),HL
	LD	HL,1
	LD	(FCB2+14),HL
	LD	(FCB3+14),HL

	LD	HL,(SYSTEM+1)
	DEC	H
	DEC	H
	LD	DE,DATA
	SBC	HL,DE
	LD	DE,FCB2
	LD	C,27H
	CALL	SYSTEM
	DEC	A
	RET	NZ
	LD	(SIZE),HL

	LD	DE,FCB2
	LD	C,10H
	CALL	SYSTEM
	OR	A
	RET	NZ

	LD	A,(FCB2)
	OR	A
	JR	NZ,CF2
	LD	C,019H		;カレントドライブ番号の獲得(_CURDRV)
	CALL	SYSTEM
	INC	A
CF2:
	LD	HL,FCB3
	CP	(HL)
	JR	NZ,CREATE

	LD	DE,SKIP
	LD	C,9
	CALL	SYSTEM
	JP	WTIPL

CREATE:
	LD	DE,FCB3
	LD	C,16H
	CALL	SYSTEM
	OR	A
	RET	NZ

	LD	HL,1
	LD	(FCB3+14),HL

	LD	DE,FCB3
	LD	HL,(SIZE)
	LD	C,26H
	CALL	SYSTEM
	OR	A
	RET	NZ

	LD	HL,FCB2+20
	LD	DE,FCB3+20
	LD	BC,4
	LDIR

	LD	DE,FCB3
	LD	C,10H
	JP	SYSTEM

;
;	BPB
;
BPB_FDD:				;2D
	ORG	MSX_IPL,BPB_FDD-100H	;$PHASE
BPB_FDD_IPL:
	DB	0EBH,0FEH,090H	;BS_JmpBoot
	DB	"LD      "	;BS_OEMName
	DW	512		;BPB_BytsPerSec
	DB	2		;BPB_SecPerClus
	DW	1		;BPB_RsvdSecCnt
	DB	2		;BPB_NumFATs
	DW	112		;BPB_RootEntCnt
	DW	720		;BPB_TotSec16
	DB	0FDH		;BPB_Media
	DW	2		;BPB_FATSz16
	DW	9		;BPB_SecPerTrk
	DW	2		;BPB_NumHeads
	DW	0		;BPB_HiddSec(2バイト)
BOOT_MSX_FD_ENTRY:
	JR	BOOT_MSX_FD
	DB	"LD    "	;MSX-DOS2判別用(VOL_IDじゃなければDOS1)
	DB	0		;ダーティディスクフラグ
	DB	"FDD "		;ボリュームID(適当な4バイト)
	DS	2
	DB	1		;IPL_FATPS
	DB	9		;IPL_MAXSEC
	DB	0		;IPL_MAXCYL
BPB_FDD_IPL_E:
	ORG	$$+0100H,$$	;$DEPHASE
BPB_FDD_E:

IPL_EMM:
	ORG	MSX_IPL,IPL_EMM-100H	;$PHASE

	DB	01H,"LSX-Dodgers  Sy"
	DB	"s",20H
	DW	SEEK-IPL
	DW	IPL-0200H,BOOT_EMM_START-200H
	DS	13
	DB	0		;ダーティディスクフラグ
	DB	"EMM "		;ボリュームID(適当な4バイト)
	DS	2
	DB	1		;IPL_FATPS
	DB	8		;IPL_MAXSEC
	DB	0		;IPL_MAXCYL
	ORG	$$+0100H,$$	;$DEPHASE
IPL_EMM_E:

;	MSX_FD / BOOT_DMA / BOOT_EMM のサイズは揃える

MSX_FD:
	ORG	MSX_IPL+IPL_HEAD_SZ,MSX_FD-100H	;$PHASE
BOOT_MSX_FD:
	RET	NC
	EX	DE,HL
	CALL	JP_HL-IPL+MSX_IPL
	LD	DE,FCB_MSX
	LD	C,00FH		;(BDOS)ファイルのオープン(_FOPEN)
	CALL	MSX_BDOS

	LD	DE,08000H
	LD	C,01AH		;(BDOS)DTAの設定
	CALL	MSX_BDOS

	LD	HL,1
	LD	(FCB_MSX+14),HL
	DEC	L
	LD	(FCB_MSX+33),HL
	LD	(FCB_MSX+35),HL

	LD	DE,FCB_MSX
	LD	H,040H		;HL=04000H
	LD	C,027H		;(BDOS)ランダム・ブロック・リード
	CALL	MSX_BDOS

	JP	08010H

FCB_MSX:
	DB	0, "LDMSX   BIN",0,0,0,0
BOOT_MSX_FD_E:
	ORG	$$+0100H,$$	;$DEPHASE
MSX_FD_E:

BOOT_DMA:
	ORG	IPL+IPL_HEAD_SZ,BOOT_DMA-100H	;$PHASE
	RET
SDMA:
	INC	B		;BC=1F87H
	OUTI
	DEC	A
	JR	NZ,SDMA
	LD	A,80H
	PUSH	BC
	LD	BC,0FFAH	;MB8877A セレクタレジスタ
	OUT	(C),E
	LD	C,0F8H		;MB8877A セレクタレジスタ
	OUT	(C),A

	CALL	BUSY
	IN	A,(C)

	LD	HL,(DMAHL)
	INC	HL
	LD	DE,0BB06H	;READ DMA

	POP	BC		;BC=1F87H Z80DMA
	OUT	(C),D
	OUT	(C),E
	IN	E,(C)
	IN	D,(C)
	ADD	HL,DE
	ADD	A,0FFH
	RET
			;X1turbo DISK DMA
DMAD:
	DB	0C3H	;WR6 リセット
	DB	07DH	;WR0 ポートA→ポートB 転送
	DW	00FFBH	;ポートA開始アドレス FDC データレジスタ
	DW	0FFFFH	;ブロック長(転送サイズ-1)
	DB	02CH	;WR1 ポートAアドレス固定 I/O
	DB	010H	;WR2 ポートBインクリメント
	DB	080H	;WR3
	DB	092H	;WR5 WAIT RDY:LOW
	DB	08DH	;WR4 バイト ポートB開始アドレス(LH)
DMAHL:	DW	0	;ポートB開始アドレス
	DB	0CFH	;WR6 ロード
	DB	087H	;WR6 イネーブル
DMAD_E:
	DS	4
DMAD_E2:
	ORG	$$+0100H,$$	;$DEPHASE
BOOT_DMA_E:

BOOT_EMM:
	ORG	IPL+IPL_HEAD_SZ,BOOT_EMM-100H	;$PHASE
BOOT_EMM_START:
	LD	BC,0FFCH	;念のためにFDDのモーターを停止
	LD	A,(0FF87H)	;ドライブ(IPL READ)
	OUT	(C),A
	LD	HL,IPL-200H
	LD	DE,IPL
	LD	BC,SEEK-IPL
	LDIR
	JP	SA
DRD_EMM:
	EX	DE,HL
	ADD	HL,HL
	LD	B,(IX+IPL_MAXCYL)	;EMMのオフセット
	LD	C,(IX+IPL_MAXSEC)	;ブートレコードを避ける為
	ADD	HL,BC
	LD	BC,00D00H		;EMM0 アドレス下位指定
	OUT	(C),C
	INC	C			;EMM0 アドレス中位指定
	OUT	(C),L
	INC	C			;EMM0 アドレス上位指定
	OUT	(C),H
	INC	C			;EMM0 データのリード／ライト、アクセス後にアドレス＋１加算
	EX	DE,HL
	XOR	A
EDRDC1:
	INI
	INC	B
	INI
	INC	B
	DEC	A
	JR	NZ,EDRDC1
	XOR	A
	RET
	DS	7
ESA_E:
	ORG	$$+0100H,$$	;$DEPHASE
BOOT_EMM_E:

MAIN:
	ORG	IPL+IPL_HEAD_SZ+MSX_FD_E-MSX_FD,MAIN-0100H
FNAME:
	DB	"LD      BIN",0

SA:
	DI
	LD	SP,0
	LD	IX,IPL
	OUT	(C),A
	LD	A,82H
	OUT	(0),A
	LD	BC,3000H+36
	IN	A,(C)
INIT_DRV:
	AND	3
	LD	(DRIVE_SWC),A
	LD	(0FF87H),A
	CALL	FILE
	LD	A,(0FF87H)
	LD	BC,0FFCH	;モーター停止
	OUT	(C),A
	JP	C,0052H		;IPLに戻る
	LD	A,01EH		;IPL ROM OFF
	OUT	(0),A
	LD	HL,(DTBUF+3)
	LD	DE,(DTBUF+1)
	SBC	HL,DE
	LD	B,H
	LD	C,L
	INC	BC
	LD	HL,DTBUF+7
	LDIR
	LD	HL,(DTBUF+5)
JP_HL:
	JP	(HL)
FILE:
	LD	D,0
	LD	E,(IX+IPL_FATPS)
	LD	HL,FATBF
	LD	B,0
IPL_FATLN	EQU	$-1
READ_FAT:
	CALL	DRDSB
	RET	C

	LD	HL,DTBUF
	LD	DE,0
IPL_DIRPS	EQU	$-2
	LD	B,0
IPL_DIRSCNT	EQU	$-1
	PUSH	HL
	CALL	DRDSB
	POP	HL
	RET	C

	LD	B,0		;ディレクトリの全項目数
IPL_DIRITEMS	EQU	$-1
FILE1:
	LD	DE,FNAME
	PUSH	HL
COMP:
	LD	A,(DE)
	OR	A
	JR	Z,FILE2
	CP	(HL)
	INC	DE
	INC	HL
	JR	Z,COMP
COMP1:
	POP	HL
	LD	DE,00020H
	ADD	HL,DE
	DJNZ	FILE1
	SCF
	RET
FILE2:
	POP	HL
	LD	DE,0001AH
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	LD	HL,DTBUF
RDD1:
	PUSH	DE
	CALL	DRDC
	POP	DE
	RET	C
	PUSH	HL
	CALL	GNCL
	POP	HL
	LD	A,D
	CP	0FH
END_OF_FILE	EQU	$-1
	JR	C,RDD1
	RET

GNCL:
	LD	L,E		;GET NEXT CLUSTER
	LD	H,D
	SRL	H
	RR	L
	LD	BC,FATBF
	JR	C,GNC1
	ADD	HL,DE
	ADD	HL,BC
	LD	E,(HL)
	INC	HL
	LD	A,(HL)
	AND	0FH
	LD	D,A
	RET
GNC1:
	ADD	HL,DE
	ADD	HL,BC
	LD	A,(HL)
	INC	HL
	LD	D,(HL)
	LD	B,4
GNC1L:
	SRL	D	;DA=DA/2
	RRA		;
	DJNZ	GNC1L

	LD	E,A
	RET

DRDC:
	PUSH	HL
	EX	DE,HL
	LD	A,0
IPL_SECPCL	EQU	$-1
	LD	B,A
L_CLDBL:
	RRA			;->CF
	JR	C,E_CLDBL
	ADD	HL,HL		;*2
	JR	L_CLDBL
E_CLDBL:
	LD	DE,0
IPL_ADDCL	EQU	$-2
	ADD	HL,DE
	EX	DE,HL
	POP	HL
DRDSB:
	PUSH	BC
	PUSH	DE
	CALL	DRD
DRD_SWC	EQU	$-2
	POP	DE
	POP	BC
	RET	C
	INC	DE
	DJNZ	DRDSB
	RET

SEEK:
	LD	B,16
	LD	C,(IX+24)	;BPB_SecPerTrk
	XOR	A
	EX	DE,HL
DIV1:
	ADD	HL,HL
	ADC	A,A
	CP	C
	JR	C,DIV2
	SUB	C
	INC	L
DIV2:
	DJNZ	DIV1

	INC	A		;最小のセクタは１固定
	LD	E,A		;余り

	LD	D,L		;商
	SRL	D
	SBC	A,A
	AND	10H		;SIDE
	OR	00H
DRIVE_SWC	EQU	$-1
	LD	BC,0FFCH	;モーター制御、サイド選択、 ドライブ選択
	OR	80H		;モーターオン
	OUT	(C),A
	LD	A,B
	IN	A,(0FFH)
FD_MODE	EQU	$-1
	CALL	BUSY
	RET	C
	LD	HL,CYLINDER
	LD	A,D
	XOR	(HL)
	LD	(HL),D
	CPL
	RET	Z		;シークの必要なし
	LD	A,D
	ADD	A,0FFH
	SBC	A,A
	AND	18H		;シーク(0)/リストア($18)
	JR	Z,SET_CYL
	JR	SKIPBUF
	DB	7		;0FF86H IPLカラー
	DB	0		;0FF87H	ドライブ(IPL READ)
	DW	SA		;0FF88H スタックオーバーライド(IPL READ)
CYLINDER:
	DB	0FFH		;0FF8AH
	DB	0		;0FF8BH
	DB	0		;0FF8CH デバイス: 0:2D 2:2HD
;	DB	0		;ダミー(JR SKIPBUFが7になるように)
SKIPBUF:
	LD	C,0FDH
SEEK_2DD	EQU	$-1
	IN	C,(C)
SET_CYL:
	LD	C,0FBH		;MB8877A データレジスタ
	OUT	(C),D
	LD	C,0F8H		;MB8877A ステータス／コマンドレジスタ
	OUT	(C),A
BUSY:
	LD	A,26
BUSY1:
	DEC	A
	JR	NZ,BUSY1

	LD	C,0F8H		;MB8877A ステータス／コマンドレジスタ
READY:
	LD	H,C
READY2:
	IN	A,(C)
	AND	081H
	RET	Z
	LD	A,1AH
	IN	A,(01H)		;8255 ポートB
	RLCA
	XOR	H
	RRCA
	JR	NC,READY2
	DEC	H
	JR	NZ,READY2
	RET

DRD:
	ORG	$$+0100H,$$	;$DEPHASE
MAINE:
;
;	2Dフロッピー
;
DRD_2D:
	ORG	DRD,DRD_2D-100H
	PUSH	HL
	CALL	SEEK		;ディスクリード
	POP	HL
	RET	C
	LD	A,80H
	LD	C,0FAH		;MB8877A セレクタレジスタ
	OUT	(C),E
	LD	C,0F8H		;MB8877A ステータス／コマンドレジスタ
	OUT	(C),A
	LD	A,26
DELAY:
	DEC	A
	JR	NZ,DELAY

	LD	C,0FBH
DRD1:
	LD	A,B
	IN	A,(0F8H)	;MB8877A ステータス／コマンドレジスタ
	RRCA
	RET	NC
	RRCA
	JR	NC,DRD1
	INI
	INC	B
	JR	DRD1

	ORG	$$+0100H,$$	;$DEPHASE
DRD_2D_E:

;
;	2DDフロッピー
;
DRD_2DD:
	ORG	DRD,DRD_2DD-100H
	PUSH	HL
	CALL	SEEK		;ディスクリード
	INC	A
	JR	Z,NOCHG
	LD	A,B
	IN	A,(0FFH)	;500K(2D)/1M(2DD) タイプ指定 (turbo/Z/CZ-8BF1のみ)
	CALL	BUSY
NOCHG:
	POP	HL
	RET	C
	LD	A,80H
	LD	C,0FAH		;MB8877A セレクタレジスタ
	OUT	(C),E
	LD	C,0F8H		;MB8877A ステータス／コマンドレジスタ
	OUT	(C),A
	LD	A,26
DELAYD:
	DEC	A
	JR	NZ,DELAYD

	LD	C,0FBH
DRD1D:
	LD	A,B
	IN	A,(0F8H)	;MB8877A ステータス／コマンドレジスタ
	RRCA
	RET	NC
	RRCA
	JR	NC,DRD1D
	INI
	INC	B
	JR	DRD1D

	ORG	$$+0100H,$$	;$DEPHASE
DRD_2DD_E:
;
;	2HD/2HCフロッピー
;
DRD_2HD:
	ORG	DRD,DRD_2HD-100H
	LD	(DMAHL),HL
	CALL	SEEK
	RET	C

	LD	A,DMAD_E-DMAD
	LD	HL,DMAD

	LD	BC,01F87H	;(1F8*H)Z80DMA
	JP	SDMA
	ORG	$$+0100H,$$	;$DEPHASE
DRD_2HD_E:
;
;	EMM専用FAT16
;
GNCL16:
	ORG	GNCL,GNCL16-100H

	EX	DE,HL
	ADD	HL,HL
	LD	C,0			;EMMのオフセット
	LD	B,(IX+IPL_MAXSEC)	;ブートレコードを避ける為のオフセット
	XOR	A
	ADD	HL,BC
	ADC	A,(IX+IPL_MAXCYL)
	LD	B,(IX+IPL_FATPS)	;FATの位置
	SLA	B		;*2	;1セクタ=512バイト
	ADC	A,0
	LD	C,0
	ADD	HL,BC
	ADC	A,0

	LD	BC,00D00H	;EMM0 アドレス下位指定
	OUT	(C),L
	INC	C		;EMM0 アドレス中位指定
	OUT	(C),H
	INC	C		;EMM0 アドレス上位指定
	OUT	(C),A
	INC	C		;EMM0 データのリード／ライト、アクセス後にアドレス＋１加算

	IN	E,(C)
	IN	D,(C)
	RET

	ORG	$$+0100H,$$	;$DEPHASE
GNCL16E:

		;スタックオーバーライド
JUMP:
	DW	SA,SA,SA,SA,SA,SA,SA,SA
	DW	SA,SA,SA,SA,SA,SA,SA,SA

FCB2:
	DB	0
FCB2NAME:
	DB	"LD      BIN"
	DS	25,0
MSX_FNAME:
	DB	"LDMSX"
MSX_FNAME_E:

FCB3:
	DS	37

SDIR:
	DW	0
SIZE:
	DW	0
DATA:
