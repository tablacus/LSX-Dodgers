
;	LSX-Dodgers FILE

FILEC:
	CALL	FILE
FILEC2:
	LD	A,(FDRV+1)
	CP	020H
	RET	Z
	JR	SETDIR1

FILE:
	XOR	A
	LD	(FDRV),A
	LD	H,A
	LD	L,A
	LD	(FDRV+14),HL
	CALL	SPCUT
	CALL	CCHK3
	JR	Z,DEVI1
	INC	DE
	LD	A,(DE)
	DEC	DE
	CP	':'
	JR	NZ,DEVI1
	LD	A,(DE)		;DRIVE
	CALL	CAP
	SUB	'@'
	INC	DE
	INC	DE
	LD	(FDRV),A
DEVI1:
	LD	A,(DE)
	SUB	05CH
	JR	NZ,NOROOT
	LD	HL,0
	LD	(FDRV+26),HL
	INC	L
	LD	(FDRV+14),HL
	INC	DE
NOROOT:

SETDIR:
	CALL	FILED
	LD	A,(DE)
	CP	05CH
	RET	NZ
	INC	DE
SETDIR1:
	LD	A,010H		;Directory
	LD	(FDRV+13),A
	PUSH	DE
	LD	DE,FDRV
	LD	HL,(STABLE+2*00FH)
	CALL	K_HL
	POP	DE
	OR	A
	RET	NZ

	LD	A,(FDRV+13)
	BIT	4,A
	RET	Z

	CALL	FILEI
	LD	HL,(FDRV+26)
	INC	HL
	LD	(FDRV+14),HL
	JR	SETDIR

FILED:
	CALL	FILEI

	LD	B,8
FILE2:
	CALL	CCHKF
	RET	Z
	CP	'*'
	JR	Z,FILE9
	CP	'.'
	JR	Z,FILE4
	LD	(HL),A
	INC	HL
	DJNZ	FILE2

FILE3:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE3

FILE4:
	LD	HL,FNAME+8
	LD	B,3

FILE4L:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE12
	LD	(FNAME),A	;Parent directory(..)
	LD	(FNAME+1),A
	LD	A,020H
FILE12:
	CP	'*'
	JR	Z,FILE10
	LD	(HL),A
	INC	HL
	DJNZ	FILE4L
	RET

FILE9:
	CALL	FILE10
	JR	FILE3

FILE10:
	LD	A,'?'

FILE7:
	LD	(HL),A
	INC	HL
	DJNZ	FILE7
	RET

FILEI:
	LD	A,020H
	LD	BC,11*256
	LD	HL,FNAME
	PUSH	HL
	CALL	FILE7
	POP	HL
	RET

CCHKF:
	LD	A,(DE)
	CALL	CCHK2
	RET	Z
	JP	FKAN

CCHK2:
	INC	C
	DEC	C
	RET	NZ
CCHK3:
	CP	'+'
	RET	Z
	CP	','
	RET	Z
	CP	'/'
	RET	Z
	CP	':'
	RET	Z
	CP	';'
	RET	Z
	CP	'='
	RET	Z
	CP	05CH
	RET	Z
	CP	020H
	RET	NC
	CP	A		;Z=1
	RET

SS1:
	INC	DE
SPCUT:
	LD	A,(DE)
	CP	020H
	JR	Z,SS1
	RET

SETDRVF:
	LD	DE,FDRV
SETDRV0:
	CALL	SETDRV
	POP	IY
	POP	BC
	POP	DE
	POP	HL
	RET

SETDRV:
	EX	(SP),HL		;HL=RETRN ADDRESS
	PUSH	DE		;PUSH HL/DE/BC/IY
	PUSH	BC
	LD	A,(DE)
;	EX	DE,IY
	PUSH	DE
	EX	(SP),IY
	POP	DE
;
	PUSH	DE
	CALL	GETDRV
	INC	A
	LD	(IY+0),A
	DEC	A
	CALL	_CHGDRV

	JP	(HL)

GETDRV:
	AND	07FH
	SUB	001H
	JR	NC,GETDRV1
	LD	A,(_DVSW)	;Current Drive
GETDRV1:
	LD	(_DRV),A
	RET

SOPENX:
	CALL	CHKDDX
	JR	C,SOPENX1
	POP	BC
	JP	(HL)
SOPENX1:
	LD	DE,SFILE
	LD	A,(DE)
	CP	(IY+0)
	JR	NZ,SOPEN
	INC	DE
	PUSH	IY
	POP	HL
	INC	HL
	CALL	CPFILE
	JR	NZ,SOPEN

	LD	HL,(SCDIR)
	LD	(IY+14),L
	LD	(IY+15),H

	LD	HL,(SFNDF)	;Direcroty location and Flags
	LD	(_FILEN),HL

	LD	DE,(SFBPS)
	LD	HL,SFILE
	LD	(HL),0FFH
	INC	HL
	RET
SOPEN:
	LD	HL,FILESE
SOPENC:
	LD	(OPENPAT+1),HL

	CALL	_RDFATX		;Detect Media
	JR	C,RDDERR

	XOR	A
	LD	(_FILEN),A
SOPEN0:
	CALL	LDDIRX
	JR	Z,SDIRX1

	CALL	DC		;Sub Directory
	JR	C,SDIRX0
	LD	HL,(_DTBUF)
	LD	A,(HL)
	CP	'.'
	JR	Z,SOPEN1
SDIRX0:
	XOR	A
	LD	(_DIRF),A
	LD	(IY+14),1
	LD	(IY+15),0
SDIRX1:
	LD	DE,(_DIRPS)	;Root Directory

SOPEN1:
IBM1:	LD	C,32		;é©å»èëÇ´ä∑Ç¶ 1024=32 / 512=16
SOPEN1X:
	CALL	DC		;FILE SEARCH
	JR	C,RDDERR
	LD	HL,(_DTBUF)
SOPEN2:
	PUSH	DE
OPENPAT:CALL	FILESE		;(Self-rewriting)
	POP	DE
	JR	C,SOPENE
	JR	Z,NOTSE
SOPEN3:
	LD	A,(_DIRF)
	OR	A
	JR	NZ,SOPEN5

	CALL	ENDRDI
	JR	Z,SOPEN6
	INC	A
	JR	NZ,SOPEN6
	LD	C,16
	JR	SOPEN1X
SOPEN5:
	CALL	_GNCL	;END DIR
	RET	C
	CALL	ENDCL
SOPEN6:
	JR	C,SOPEN1

_SYS2B:
_SYS2D:
NOTSE:
	SCF			;CF=1
	SBC	A,A		;A=0FFH
	RET

RDDERR:
	CP	A		;READ ERR CF=1 ZF=1
	SCF
	RET

NOPEN:
	LD	HL,FILESE
	LD	(OPENPAT+1),HL
	LD	IY,(_FCB)
	CALL	CHKWILDX
	JR	NC,NOTSE
	LD	A,(IY+0)
	DEC	A
	LD	(_DRV),A
	CALL	_CHGDRV
	RET	C

	CALL	LDDIRX
	LD	DE,(_FBPS)
	CALL	DC
	JR	C,RDDERR
	LD	A,(_FBCNT)
	DEC	A
	JR	Z,SOPEN3
NOPEN2:
	LD	HL,(_FBAD)
	LD	BC,020H
	ADD	HL,BC
	LD	C,A
	JR	SOPEN2

ENDRDI:
	LD	A,(DBLPAT)	;A=029H or 0
	AND	1
	LD	C,A
	INC	A
	ADD	A,E
	LD	E,A
RTEPAT:	SUB	12		;(Self-rewriting)
	BIT	0,C
	RET

SOPENE2:
	LD	(_FBAD),HL
	LD	A,C
	LD	(_FBCNT),A
	LD	(_FBPS),DE
	LD	(_FCB),IY
SOPENE:
	XOR	A
	RET

COPEN:
	LD	(IY+13),020H		;Attribute

	LD	HL,NEXTSE
	CALL	SOPENC
	RET	NC
	RET	Z
	LD	A,(_DIRF)
	SUB	001H
	RET	C
	LD	B,1
	CALL	WRDF
	RET	C
	LD	DE,(_CLPS)
	PUSH	DE
	CALL	DCPAT
	CALL	DRDNX
	LD	HL,(_DTBUF)
	LD	E,L
	LD	D,H
	INC	DE		;DE,DTBUF+1
	LD	BC,1023
	XOR	A
	LD	(HL),A
	PUSH	HL
	LDIR
	POP	HL
	POP	DE
	RET

DC:
	LD	(_CLPS),DE
	PUSH	BC
	PUSH	DE
	CALL	DCPAT
	CALL	DRDX
	POP	DE
	POP	BC
	RET

FILESE:
	LD	A,(HL)
	OR	A
	RET	Z		;END:ZF=1 CF=0
	CP	0E5H
	JR	Z,FILESE1
	PUSH	IY
	POP	DE
	INC	DE
	PUSH	HL
	CALL	CPFILE
	CALL	Z,CPFILE2
	POP	HL
	SCF
	RET	Z		;!!!:(ZF=1) CF=1
FILESE1:
	CALL	FNEXT
	JR	NZ,FILESE
ZFCF0:
	OR	0FFH		;ZF=0 CF=0
	RET

NEXTSE:
	LD	A,(HL)
	OR	A
	SCF
	RET	Z		;!!!:ZF=1 CF=1
	CP	0E5H
	SCF
	RET	Z		;!!!:(ZF=1) CF=1
	CALL	FNEXT
	JR	NZ,NEXTSE
	JR	ZFCF0

FNEXT:
	PUSH	HL
	LD	HL,_FILEN
	INC	(HL)
	POP	HL
	LD	DE,020H
	ADD	HL,DE
	DEC	C
	RET

CHKDDX:
	CALL	CHKWILDX
	RET	C
	PUSH	IY
	POP	DE
	INC	DE
	LD	HL,DDTB
	LD	B,DDS
CPNAME:
	PUSH	BC
	PUSH	DE
	LD	DE,CPBUF
	LD	BC,4
	LDIR
	POP	DE
	PUSH	DE
	PUSH	HL
	LD	HL,CPBUF
	CALL	CPFILE
	POP	HL
	POP	DE
	POP	BC
	JR	NZ,CPNAME1
	LD	A,(HL)
	INC	HL
	LD	H,(HL)
	LD	L,A
	RET
CPNAME1:
	INC	HL
	INC	HL
	DJNZ	CPNAME
	SCF
	RET

CPFILE:
	PUSH	BC
	LD	BC,00B00H
CPSTR1:
	LD	A,(DE)
	CP	'?'		;Wild card
	JR	Z,CPSTR2
	LD	A,(HL)
	CALL	FKANC
	PUSH	HL
	LD	H,A
	LD	A,(DE)
	RLC	C
	CALL	FKANC
	RRC	C
	CP	H		;CP (HL),(DE)
	POP	HL
	JR	NZ,CPSTR3
CPSTR2:
	INC	DE
	INC	HL
	DJNZ	CPSTR1
CPSTR3:
	POP	BC
	RET

CPFILE2:
	LD	A,(IY+13)
	OR	0E1H
	CPL
	AND	(HL)
	RET

DCPAT:
	LD	HL,(_DTBUF)
	LD	A,(_DIRF)
	OR	A
	RET	Z

CLUST:
	EX	DE,HL
CLSPAT:	LD	A,8	;DE=DE+8 (2D)  !ADDCL (Self-rewriting)
DBLPAT:	ADD	HL,HL	;DE=DE*2 (512) !DBLCL (Self-rewriting)
	EX	DE,HL
	ADD	A,E
	LD	E,A
	ADC	A,D
	SUB	E
	LD	D,A
	RET

ENDCL:
	LD	A,D	;END CLUSTER
CLPAT1:	CP	1	;164=356	(Self-rewriting)
	RET	NZ
	LD	A,E
CLPAT2:	CP	064H	;		(Self-rewriting)
	RET

CAP:
	CP	'a'
	RET	C
	CP	'z'+1
	RET	NC
	SUB	020H
	RET
CAP2:
	CALL	CAP
CAP3:
	CALL	CAP4
	CP	021H
	RET	NC
	LD	A,0A0H
	RET
CAP4:
	CP	5
	RET	NZ
	LD	A,0E5H
	RET

CHDIR:
	CALL	GETDPBD
	JR	C,CHDIR2
	LD	(IX+01AH),L		;_SDIR_
	LD	(IX+01BH),H		;_SDIR_+1
CHDIR2:
	POP	IX
	RET

LDDIR:
	CALL	GETDPBD
	LD	E,(IX+01AH)		;_SDIR_
	LD	D,(IX+01BH)		;_SDIR_+1
	INC	DE
	LD	(IY+14),E
	LD	(IY+15),D
	DEC	DE
	JR	CHDIR2

LDDIRX:
	LD	E,(IY+14)
	LD	D,(IY+15)
	DEC	DE
	CALL	ENDCL
	CALL	NC,LDDIR
LDDIRS:
	LD	A,D
	OR	E
	LD	(_DIRF),A
	RET

KILL:
	CALL	CHKWILDX
	JR	C,KILLW
	CALL	CHKDDX
	CCF
	CALL	NC,SOPENX1
KILLS:
	CALL	NC,CHKATT
	RET	C
KILLSX:
	LD	(HL),0E5H	;DIR
	CALL	WTDB
	LD	DE,01AH
	ADD	HL,DE
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	JR	KILLS2
KILLS1:
	LD	DE,(_CLPS)	;FAT
KILLS2:
	CALL	ENDCL
	RET	NC		;CF=0
	LD	HL,0-2
	ADD	HL,DE
	RET	NC		;DE= 0 or 1
	PUSH	DE
	CALL	_GNCL
	LD	(_CLPS),DE
	POP	DE
	LD	HL,0
	CALL	NC,_SNCL
	JR	NC,KILLS1
	RET

KILLW:
	CALL	SOPEN
KILLW1:
	JR	C,KILLW2
	CALL	SOPENE2
	CALL	KILLS
	CALL	NOPEN
	JR	KILLW1
KILLW2:
	RET	Z
	CCF
	RET

CHKATT:
	PUSH	HL
	LD	DE,00BH
	ADD	HL,DE
	LD	A,(HL)
	POP	HL
	AND	01FH
	RET	Z
	SCF
	RET

NAME:
	CALL	CHKWILDX
	RET	C
	LD	DE,4
	ADD	HL,DE
	LD	(NAMEP+2),HL
	INC	HL
	CALL	CHKWILD
	RET	C

	CALL	SOPENX1
	CALL	NC,CHKATT
	RET	C

	LD	A,(IY+0)
	PUSH	IY
NAMEP:	LD	IY,0
	LD	(IY+0),A
	CALL	SOPENX1
	EX	(SP),IY
	CCF
	CALL	NC,SOPEN
	EX	DE,HL
	POP	HL
	RET	C

SETNAME:
	LD	BC,11*256
	INC	HL
	LD	A,(HL)
	CP	0E5H
	JR	NZ,SNAME1
	LD	A,5
	JR	SNAME3
SNAME1:
	LD	A,(HL)
	INC	C
	DEC	C
	JR	NZ,SNAME3
	CALL	CAP
	CP	0A0H
	JR	NZ,SNAME3
	LD	A,020H
SNAME3:
	LD	(DE),A
	LD	A,(HL)
	INC	HL
	CALL	FKAN
	DJNZ	SNAME1
WTDB:
	LD	A,0FFH
	LD	(SFILE),A
SWTDBF:
	LD	A,1
	LD	(_WTDBF),A
	XOR	A
	RET

FKANC:
	BIT	0,C
	CALL	Z,CAP2
	JR	FKANX
FKAN:
	INC	DE
FKANX:
	BIT	0,C
	RES	0,C
	RET	NZ
	CP	080H
	RET	C
	CP	0A0H
	JR	C,FKAN1
	CP	0E0H
	RET	C
FKAN1:
	INC	C
	AND	A
	RET

CHKWILDX:
	PUSH	IY
	POP	HL
	INC	HL
CHKWILD:
	LD	B,11
	LD	A,'?'
CHKWIL1:
	CP	(HL)
	INC	HL
	SCF
	RET	Z
	DJNZ	CHKWIL1
	XOR	A
	RET

SDIRENT:		;IY=FCB HL=DIR
	PUSH	DE
	PUSH	HL
	PUSH	IY
	POP	DE
	EX	DE,HL
	CALL	SETNAME
;				Attribute
	LD	A,(IY+13)
	LD	(DE),A
	INC	DE
;				Reserved
	XOR	A
	LD	B,10
SDE1:
	LD	(DE),A
	INC	DE
	DJNZ	SDE1
;				TIME
	LD	A,(IY+22)
	LD	(DE),A
	INC	DE
	LD	A,(IY+23)
	LD	(DE),A
	INC	DE
;				DATE
	LD	A,(IY+20)
	LD	(DE),A
	INC	DE
	LD	A,(IY+21)
	LD	(DE),A
	INC	DE
;				First cluster
	LD	A,(IY+26)
	LD	(DE),A
	INC	DE
	LD	A,(IY+27)
	LD	(DE),A
	INC	DE
;				SIZE
	LD	A,(IY+16)
	LD	(DE),A
	INC	DE
	LD	A,(IY+17)
	LD	(DE),A
	INC	DE
	LD	A,(IY+18)
	LD	(DE),A
	INC	DE
	LD	A,(IY+19)
	LD	(DE),A

	XOR	A
	POP	HL
	POP	DE
	RET

WOPEN:
	LD	A,(IY+13)
	AND	01FH
	SCF
	RET	NZ
	LD	(IY+28),0FEH	;Open
TOPEN2:
	XOR	A
TOPEN:
	LD	(IY+23),0FFH	;Initializes the time stamp
	RET

WRDFX:
	LD	B,C
	INC	B
	LD	A,037H
	LD	(DRDN1),A

WRDF:
	LD	DE,2
WRDF1:
	PUSH	BC
	PUSH	DE
	CALL	_GNCL
	JR	C,WRDF3
	LD	A,D
	OR	E
	JR	NZ,WRDF4
	POP	HL
	PUSH	HL
	LD	DE,(_CLPS)
	LD	(_CLPS),HL
	LD	A,D
	OR	E
	JR	NZ,WRDF2
	LD	(IY+26),L	;Start cluster
	LD	(IY+27),H
	JR	WRDF3
WRDF2:
	CALL	_SNCL
WRDF3:
	POP	DE
	POP	BC
	RET	C
	DJNZ	WRDF5
	LD	DE,(_CLPS)
	LD	HL,0FFFFH
	JP	_SNCL

WRDF4:
	POP	DE
	POP	BC
WRDF5:
	INC	DE
	CALL	ENDCL
	JR	C,WRDF1
	SCF
	RET

RWXR:
	SRL	B
	RR	C
IBM4:	SRL	B	;é©å»èëÇ´ä∑Ç¶ 1024=SRL B / 512=JR +2(íºå„ÇÃRR CÇîÚÇŒÇ∑)
	RR	C

	LD	E,(IY+26)	;Cluster
	LD	D,(IY+27)
RWX1:
	LD	(_CLPS),DE
	LD	A,D
	OR	E
	SCF
	RET	Z

	LD	A,B
	OR	C
	RET	Z

	CALL	_GNCL
	RET	C
	DEC	BC
	CALL	ENDCL
	JR	C,RWX1
	SCF
	RET

DSKF:
MAXCLP:	LD	DE,0
	LD	HL,0
DSKF1:
	PUSH	DE
	CALL	_GNCL
	JR	C,POPSCF
	LD	A,D
	OR	E
	JR	NZ,DSKF2
	INC	HL
DSKF2:
	POP	DE
	DEC	DE
	LD	A,D
	OR	E
	JR	NZ,DSKF1
	RET

POPSCF:
	POP	AF
	SCF
	RET

SETTMS:
	LD	A,(IY+23)
	INC	A
	RET	NZ
SETTMSX:
	CALL	_SYS2C

	SLA	L
	SLA	L
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,D
	RRCA
	AND	01FH
	OR	L
	LD	L,A
	LD	(IY+22),L
	LD	(IY+23),H

	CALL	_SYS2A

	LD	BC,0-1980
	ADD	HL,BC
	LD	H,L

	LD	A,D
	ADD	A,A
	ADD	A,A
	ADD	A,A
	ADD	A,A
	LD	L,A
	ADD	HL,HL
	LD	A,L
	OR	E
	LD	L,A
	LD	(IY+20),L
	LD	(IY+21),H
	RET

PUSHRR:
	CALL	SUBRR
POPRR1:
	LDIR
	RET

SUBRR:
	PUSH	IY
	POP	HL
	LD	DE,33
	ADD	HL,DE
	LD	DE,HLBUF
	LD	BC,3
	RET

SETSEQ:
	PUSH	AF
	LD	A,(IY+33)
	LD	L,(IY+34)
	LD	H,(IY+35)

	CALL	SSQ1

	ADD	HL,HL
	SRL	L
	LD	(IY+32),L
	LD	(IY+12),H
	POP	AF

POPRR:
	CALL	SUBRR
	EX	DE,HL
	JR	POPRR1

GETSIZE:
	LD	A,(IY+16)
	LD	L,(IY+17)
	LD	H,(IY+18)
SSQ1:
	ADD	A,A
	ADC	HL,HL
	OR	A
	RET	Z
	INC	HL
	RET

GETSEQ:
	LD	L,(IY+32)
	LD	H,(IY+12)

	SLA	L

	SRL	H
	RR	L
	RET

SETRBR:
	XOR	A	;HLA = HL*128
	SRL	H
	RR	L
	RRA
	LD	(IY+33),A
	LD	(IY+34),L
	LD	(IY+35),H
	LD	HL,128
	RET

K_DE26:
	LD	DE,(STABLE+2*026H)
	JR	K_DE1
K_DE27:
	LD	DE,(STABLE+2*027H)
K_DE1:
	CALL	K_DE
;	EX	DE,IY
	PUSH	DE
	EX	(SP),IY
	POP	DE
;
	RET
K_DE:
;	EX	DE,IY
	PUSH	DE
	EX	(SP),IY
	POP	DE
	JP	(IY)

SCDIR:	DS	2		;+14 +15
SFBPS:	DS	2		;FBPS
SFNDF:	DS	2		;FILEN DIRF
SFILE:	DS	33		;DRV FILENAME
HLBUF:	DS	3		;Random record buffer

_FATPS:	DW	0
_DIRPS:	DW	0
_CLPS:	DW	0
