                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.0.0, LST:Full:4
                                ;   LSX-Dodgers for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "MSXDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       0003                     MAC EQU 3   ;MSX
       0001                     DEV EQU 1
                                
       001D                     VER_6F  EQU 0001DH
                                
       4000                     RUN EQU 04000H
                                
       C700                     START2  EQU 0C700H
       C906                     BDOS    EQU 0C906H
       E400                     WORKAD  EQU 0E400H
       E700                     FATBF   EQU 0E700H
       EF00                     DTBUF   EQU 0EF00H
       0028                     WIDTH   EQU 40
       0019                     LINE    EQU 25
       0000                     COLORF  EQU 0
       0000                     KEYSP_H EQU 0
       0000                     KEYSP_L EQU 0
       0008                     COMS    EQU 8
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
                                
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PINLIN  EQU 000AEH
       00B1                     INLIN   EQU 000B1H
       00B4                     QINLIN  EQU 000B4H
       00B7                     BREAKX  EQU 000B7H
       00C0                     BEEP    EQU 000C0H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0144                     PHYDIO  EQU 00144H  ;MAIN:BIOS:
       0156                     KILBUF  EQU 00156H
                                
       FEDA                     H_STKE  EQU 0FEDAH
       FFA7                     H_PHYD  EQU 0FFA7H
                                
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU 06000H
       6800                     BANK1_SEL EQU 06800H
       7000                     BANK2_SEL EQU 07000H
       7800                     BANK3_SEL EQU 07800H
                                            ;ASCII-16K
                                ;BANK0_SEL EQU 06000H
                                ;BANK1_SEL EQU 07000H
                                            ;KONAMI-8K
       8000                     KONAMI_BANK2_SEL EQU 08000H
       A000                     KONAMI_BANK3_SEL EQU 0A000H
[EOF:MSXDEF.ASM:UTF_8]
                                    INCLUDE "LDDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                
       0001                     VER_1   EQU 1
       0006                     VER_2   EQU 6
       0000                     VER_3   EQU 0
       1D03                     MACW    EQU MAC + 01D00H    ;機種フラグとLD判別フラグ
       0103                     MACD    EQU MAC + DEV * 256 ;機種フラグとデバイスフラグ
       0160                     VER EQU VER_1 * 256 + VER_2 * 16 + VER_3
                                
       0005                     SYSTEM  EQU 00005H
       000F                     JP_HL   EQU 0000FH
       005C                     FCB1    EQU 0005CH
       006C                     FCB2    EQU 0006CH
       005D                     FCB1FN  EQU FCB1+1
       006D                     FCB2FN  EQU FCB2+1
       0080                     DTA1    EQU 00080H
                                
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       0000                     DPB_FATLN   EQU 00H
       0002                     DPB_DRD     EQU 02H
       0004                     DPB_DWT     EQU 04H
       0006                     DPB_FATID   EQU 06H
       0007                     DPB_SECPCL  EQU 07H
       0008                     DPB_MAXCL   EQU 08H
       000A                     DPB_FDMODE  EQU 0AH
       000B                     DPB_DIRSCNT EQU 0BH
       000C                     DPB_MAXCYL  EQU 0CH
       000D                     DPB_MAXSEC  EQU 0DH
       000E                     DPB_FATPS   EQU 0EH
       000F                     DPB_BPS     EQU 0FH
       0010                     DPB_DIRPS   EQU 10H
       0012                     DPB_DEVICE  EQU 12H
       0013                     DPB_UNITNO  EQU 13H
       0014                     DPB_ADDCL   EQU 14H
                                
       001A                     DPB_SDIR    EQU 1AH
       001C                     DPB_NAME    EQU 1CH
                                
[EOF:LDDEF.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\hardware.asm"
                                ; C-BIOS hardware related declarations
                                ;
                                ; Copyright (c) 2002-2005 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2004-2005 Joost Yervante Damad.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                ;---------------------------------------------------
                                ; I/O ports
                                
       002E                     DBG_CTRL:       equ     $2E             ; openMSX debugdevice control (mode)
       002F                     DBG_DATA:       equ     $2F             ; openMSX debugdevice data
                                
       0090                     PRN_STAT:       equ     $90             ; printer status
       0091                     PRN_DATA:       equ     $91             ; printer data
                                
       0098                     VDP_DATA:       equ     $98             ; VDP data port (VRAM read/write)
       0099                     VDP_ADDR:       equ     $99             ; VDP address (write only)
       0099                     VDP_STAT:       equ     $99             ; VDP status (read only)
       009A                     VDP_PALT:       equ     $9A             ; VDP palette latch (write only)
       009B                     VDP_REGS:       equ     $9B             ; VDP register access (write only)
                                
       00A0                     PSG_REGS:       equ     $A0             ; PSG register write port
       00A1                     PSG_DATA:       equ     $A1             ; PSG value write port
       00A2                     PSG_STAT:       equ     $A2             ; PSG value read port
                                
       00A8                     PSL_STAT:       equ     $A8             ; slot status
       00A9                     KBD_STAT:       equ     $A9             ; keyboard status
       00AA                     GIO_REGS:       equ     $AA             ; General IO Register
       00AB                     PPI_REGS:       equ     $AB             ; PPI register
                                
       00B4                     RTC_ADDR:       equ     $B4             ; RTC address
       00B5                     RTC_DATA:       equ     $B5             ; RTC data
                                
       00F4                     SYSFLAGS:       equ     $F4             ; MSX2+ System flags,
                                                                        ; preserved after reset
                                                                        ; bit 5: CPU boot mode (1=R800)
                                                                        ; bit 7: Boot method
                                                                        ;        (1=soft boot, no logo)
                                
       00FC                     MAP_REG1:       equ     $FC             ; memory mapper: bank in $0000-$3FFF
       00FD                     MAP_REG2:       equ     $FD             ; memory mapper: bank in $4000-$7FFF
       00FE                     MAP_REG3:       equ     $FE             ; memory mapper: bank in $8000-$BFFF
       00FF                     MAP_REG4:       equ     $FF             ; memory mapper: bank in $C000-$FFFF
                                
                                ;---------------------------------------------------
                                ; memory mapped I/O
                                
       FFFF                     SSL_REGS:       equ     $FFFF           ; secondary slot select registers
                                
                                ;---------------------------------------------------
                                ; Constants used to define which hardware the BIOS will run on.
                                ; Used by the main_<model>.asm sources.
                                
                                ; VDP models:
       9918                     TMS99X8:        equ     $9918
       9938                     V9938:          equ     $9938
       9958                     V9958:          equ     $9958
                                
                                ; MSX models:
       0000                     MODEL_MSX1:     equ     0
       0001                     MODEL_MSX2:     equ     1
       0002                     MODEL_MSX2P:    equ     2
       0003                     MODEL_MSXTR:    equ     3
                                
       0004                     MODEL_SUBROM:   equ     4
                                
                                ; Locales:
                                ; -- ID byte 0
       0000                     LOCAL_CHSET_JP  equ     $00
       0001                     LOCAL_CHSET_US  equ     $01
       0002                     LOCAL_CHSET_KO  equ     $02
                                
                                ; There are charsets which pretend to be INT, but are not... For now only BR:
       0000                     LOCAL_CHSET_VAR_NONE equ  $00
       0001                     LOCAL_CHSET_VAR_BR   equ  $01
                                
       0000                     LOCAL_DATE_YMD  equ     $00
       0010                     LOCAL_DATE_MDY  equ     $10
       0020                     LOCAL_DATE_DMY  equ     $20
                                
       0000                     LOCAL_INT_60HZ  equ     $00
       0080                     LOCAL_INT_50HZ  equ     $80
                                
                                ; -- ID byte 1
       0000                     LOCAL_KBD_JP    equ     $00
       0001                     LOCAL_KBD_US    equ     $01
       0002                     LOCAL_KBD_FR    equ     $02
       0003                     LOCAL_KBD_UK    equ     $03
       0004                     LOCAL_KBD_DE    equ     $04
                                
       0000                     LOCAL_BASIC_JP  equ     $00
       0001                     LOCAL_BASIC_US  equ     $01
                                
                                
                                ; BOOLEAN VALUES
       0001                     YES:            equ     1
       0000                     NO:             equ     0
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:hardware.asm:UTF_8]
                                    INCLUDE "msx_cbios\\systemvars.asm"
                                ;
                                ; C-BIOS system variable declarations
                                ;
                                ; Copyright (c) 2002-2003 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Joost Yervante Damad.  All rights reserved.
                                ; Copyright (c) 2004-2005 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2005 Jussi Pitkänen.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                
                                ;-------------------
                                ; help function area
                                ;-------------------
                                ; Note: Functions defined in "main.asm" are disabled here.
                                
                                ; F380-F384: interslot read
                                ;RDPRIM:         equ     $F380
                                
                                ; F385-F38B: interslot read
                                ;WRPRIM:         equ     $F385
                                
                                ; F38C-F399: interslot call
                                ;CLPRIM:         equ     $F38C
                                
                                ; F39A-F3AD: workarea for the DEF USR statement
                                ; this area is initialized with the 10 times the value $475A, which gives
                                ; the error 'Syntax Error'
       F39A                     USRTAB:         equ     $F39A
                                
                                ;----------------------
                                ; screen parameter area
                                ;----------------------
                                
                                ; F3AE: # of positions on a line in SCREEN 0 (ini:39)
       F3AE                     LINL40:         equ     $F3AE
                                
                                ; F3AF: # of positions on a line in SCREEN 1 (ini:29)
       F3AF                     LINL32:         equ     $F3AF
                                
                                ; F3B0: # of actually used positions in the current screenmodus (ini:39)
       F3B0                     LINLEN:         equ     $F3B0
                                
                                ; F3B1: # of used lines on screen (ini:24)
       F3B1                     CRTCNT:         equ     $F3B1
                                
                                ; F3B2: # of positions within a tabulator-column (ini:14)
       F3B2                     CLMLST:         equ     $F3B2
                                
                                ; F3B3-F3B4: BASE(0): name table address for SCREEN 0 (ini:$0000)
                                ; used to initialize NAMBAS when SCREEN 0 is activated
       F3B3                     TXTNAM:         equ     $F3B3
                                
                                ; F3B5-F3B6: BASE(1): color table address for SCREEN 0, unused? (ini:$0000)
       F3B5                     TXTCOL:         equ     $F3B5
                                
                                ; F3B7-F3B8: BASE(2): pattern table address for SCREEN 0 (ini:$0800)
                                ; used to initialize CGPBAS when SCREEN 0 is activated
       F3B7                     TXTCGP:         equ     $F3B7
                                
                                ; F3B9-F3BA: BASE(3): sprite attribute table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize ATRBAS when SCREEN 0 is activated
       F3B9                     TXTATR:         equ     $F3B9
                                
                                ; F3BB-F3BC: BASE(4): sprite pattern table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize PATBAS when SCREEN 0 is activated
       F3BB                     TXTPAT:         equ     $F3BB
                                
                                ; F3BD-F3BE: BASE(5): nametable address for SCREEN 1 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 1 is activated
       F3BD                     T32NAM:         equ     $F3BD
                                
                                ; F3BF-F3C0: BASE(6): color table address for SCREEN 1 (ini:$2000)
       F3BF                     T32COL:         equ     $F3BF
                                
                                ; F3C1-F3C2: BASE(7): pattern table address for SCREEN 1 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 1 is activated
       F3C1                     T32CGP:         equ     $F3C1
                                
                                ; F3C3-F3C4: BASE(8): sprite attribute table address for SCREEN 1 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 1 is activated
       F3C3                     T32ATR:         equ     $F3C3
                                
                                ; F3C5-F3C6: BASE(9): sprite pattern table address for SCREEN 1 (ini:$0800)
                                ; used to initialize PATBAS when SCREEN 1 is activated
       F3C5                     T32PAT:         equ     $F3C5
                                
                                ; F3C7-F3C8: BASE(10): name table address for SCREEN 2 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 2 is activated
       F3C7                     GRPNAM:         equ     $F3C7
                                
                                ; F3C9-F3CA: BASE(11): color table address for SCREEN 2 (ini:$2000)
       F3C9                     GRPCOL:         equ     $F3C9           ; Screen2 Color
                                
                                ; F3CB-F3CC: BASE(12): pattern table address for SCREEN 2 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 2 is activated
       F3CB                     GRPCGP:         equ     $F3CB
                                
                                ; F3CD-F3CE: BASE(13): sprite attribute table address for SCREEN 2 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 2 is activated
       F3CD                     GRPATR:         equ     $F3CD
                                
                                ; F3CF-F3D0: BASE(14): sprite pattern table address for SCREEN 2 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 2 is activated
       F3CF                     GRPPAT:         equ     $F3CF
                                
                                ; F3D1-F3D2: BASE(15): name table address for SCREEN 3 (ini:$0800)
                                ; used to initialize NAMBAS when SCREEN 3 is activated
       F3D1                     MLTNAM:         equ     $F3D1
                                
                                ; F3D3-F3D4: BASE(16): color table address for SCREEN 3 (ini:$0000)
                                ; the color table is unused in SCREEN 3
       F3D3                     MLTCOL:         equ     $F3D3
                                
                                ; F3D5-F3D6: BASE(17): pattern table address for SCREEN 3 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 3 is activated
       F3D5                     MLTCGP:         equ     $F3D5
                                
                                ; F3D7-F3D8: BASE(18): sprite attribute table address for SCREEN 3 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 3 is activated
       F3D7                     MLTATR:         equ     $F3D7
                                
                                ; F3D9-F3DA: BASE(19): sprite pattern table address for SCREEN 3 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 3 is activated
       F3D9                     MLTPAT:         equ     $F3D9
                                
                                ; F3DB: keyclick when a key is pressed: 0: no, 1: yes (ini: 1)
                                ; SCREEN ,,n will write to this address
       F3DB                     CLIKSW:         equ     $F3DB
                                
                                ; F3DC: line where the cursor is located
                                ; starts to count at 1 for the topmost line
       F3DC                     CSRY:           equ     $F3DC
                                
                                ; F3DD: column where the cursor is located
                                ; starts to count at 1 for the leftmost column
       F3DD                     CSRX:           equ     $F3DD
                                
                                ; F3DE: function key definition shown: 0: no, -1: yes
                                ; Note: MSX BIOS will mess up end-of-screen if this variable contains
                                ;       something other than $00 or $FF.
       F3DE                     CNSDFG:         equ     $F3DE
                                
                                ; F3DF-D3E6: storage for the last written value towards VDP registers 0 till 7
                                ; this is needed because these registers are write only
       F3DF                     RG0SAV:         equ     $F3DF
       F3E0                     RG1SAV:         equ     $F3E0
       F3E1                     RG2SAV:         equ     $F3E1
       F3E2                     RG3SAV:         equ     $F3E2
       F3E3                     RG4SAV:         equ     $F3E3
       F3E4                     RG5SAV:         equ     $F3E4
       F3E5                     RG6SAV:         equ     $F3E5
       F3E6                     RG7SAV:         equ     $F3E6
                                ; F3E7: last read value of VDP register 8
       F3E7                     STATFL:         equ     $F3E7
                                
                                ; F3E8: information about the joystick and space bar
                                ; 7 6 5 4 3 2 1 0
                                ; | | | |       +-- Space bar, trig(0) (0 = pressed)
                                ; | | | +---------- Stick 1, Trigger 1 (0 = pressed)
                                ; | | +------------ Stick 1, Trigger 2 (0 = pressed)
                                ; | +-------------- Stick 2, Trigger 1 (0 = pressed)
                                ; +---------------- Stick 2, Trigger 2 (0 = pressed)
       F3E8                     TRGFLG:         equ     $F3E8
                                
                                ; F3E9: code for the standard foreground color (ini:15)
       F3E9                     FORCLR:         equ     $F3E9
                                
                                ; F3EA: code for the standard background color (ini:4)
       F3EA                     BAKCLR:         equ     $F3EA
                                
                                ; F3EB: code for the standard border color (ini:7)
       F3EB                     BDRCLR:         equ     $F3EB
                                
                                ; F3EC-F3EE: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EC                     MAXUPD:         equ     $F3EC
                                
                                ; F3EF-F3F1: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EF                     MINUPD:         equ     $F3EF
                                
                                ; F3F2: working color, as used for graphical operations
                                ; normally equals to the foreground color (ini:15)
       F3F2                     ATRBYT:         equ     $F3F2
                                
                                ; F3F3-F3F4: starting value of the address of the queue-table
                                ; the queue-table contains 4 queue's: 3 for sound and one for RS232
                                ; (ini: QUETAB ($F959))
       F3F3                     QUEUES:         equ     $F3F3
                                
                                ; F3F5: CLOAD flag =0 when CLOAD =255 when CLOAD?
       F3F5                     FRCNEW:         equ     $F3F5
                                
                                ; F3F6: VDP-interupt counter that counts from 3 to 0, when it reaches zero, the
                                ; keyboard matrix is scanned, and the counters is reset at 3
       F3F6                     SCNCNT:         equ     $F3F6
                                
                                ; F3F7: key repeat counter. Runs from 13 to 0, and is changed when SCNCNT is changed
                                ; if the key remained the same. If it reaches 0, keyrepetition starts. If another key
                                ; is pressed the value is reset at 13.
       F3F7                     REPCNT:         equ     $F3F7
                                
                                ; F3F8-F3F9: first free space in the inputbuffer of the keyboard
                                ; everytime a key is added to the inputbuffer, this address is incremented,
                                ; when it equals to GETPNT, the buffer is full
                                ; the buffer is located at KEYBUF
       F3F8                     PUTPNT:         equ     $F3F8
                                
                                ; F3FA-F3FB: address in inputbuffer of first character that is not yet read
                                ; everytime a key is read from the buffer it is incremented
                                ; the buffer is located at KEYBUF
       F3FA                     GETPNT:         equ     $F3FA
                                
                                ; F3FC-F400: memory area for tape system parameters for 1200 baud
                                ; F3FC: length of  low signal for 0     (ini:83)
                                ; F3FD: length of high signal for 0     (ini:92)
                                ; F3FE: length of  low signal for 1     (ini:38)
                                ; F3FF: length of high signal for 1     (ini:45)
                                ; F400: length of synchronization block (ini:15)
       F3FC                     CS120:          equ     $F3FC
                                
                                ; F401-F405: memory area for tape system parameters for 1200 baud
                                ; F401: length of  low signal for 0     (ini:37)
                                ; F402: length of high signal for 0     (ini:45)
                                ; F403: length of  low signal for 1     (ini:14)
                                ; F404: length of high signal for 1     (ini:22)
                                ; F405: length of synchronization block (ini:31)
       F401                     CS240:          equ     $F401
                                
                                ; F406-F407: lenghts of signal for 0 for the current speed of the tape system
                                ; either equal to the content of F3FC-F3FD or the content of F401-F402
                                ; (ini: 83, 92)
       F406                     LOW_:           equ     $F406 ; real name: LOW, but doesn't compile?
                                
                                ; F408-F409: lenghts of signal for 1 for the current speed of the tape system
                                ; either equal to the content of F3FE-F3FF or the content of F403-F404
                                ; (ini: 38, 45)
       F408                     HIGH_:          equ     $F408 ; real name: HIGH, but doesn't compile?
                                
                                ; F40A: lenghts of synchronization block for the current speed of the tape system
                                ; either equal to the content of F400 or the content of F405 (ini: 15)
       F40A                     HEADER:         equ     $F40A
                                
                                ; F40B-F40C: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; only the byte in F40B is actually used
                                ; If ASPECT2 is larger then 255, the value of F40B is the number of horizontal
                                ; dots per 256 verical dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40B                     ASPCT1:         equ     $F40B
                                
                                ; F40D-F40E: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; If ASPCT2 is smaller then 512, then ASPCT2 is the
                                ; number of vertical dots per 256 horizontal dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40D                     ASPCT2:         equ     $F40D
                                
                                ; F40F-F413: work area for the BASIC statement RESUME NEXT
                                ; contains a fake end of basic program
                                ; (ini: 58, 0, 0, 0, 0)
       F40F                     ENDPRG:         equ     $F40F
                                
                                ; F414: errornumber of last error that happened while executing a BASIC program
                                ; (ini:0)
       F414                     ERRFLG:         equ     $F414
                                
                                ; F415: number of characters in the writebuffer of the printer that still
                                ; need printing
       F415                     LPTPOS:         equ     $F415
                                
                                ; F416: switch indicating if output should be screen or printer
                                ; (think LIST vs LLIST) (ini:0) values: 0: screen, 1: printer
       F416                     PRTFLG:         equ     $F416
                                
                                ; F417: switch indicating if hooked up printer is an MSX printer or not
                                ; values: 0: MSX-Printer, 1: no MSX-Printer
                                ; if the printer is no MSX-Printer, non-ASCII (>=128) characters are replaced
                                ; by spaces before sending them to the printer (ini: 0)
       F417                     NTMSXP:         equ     $F417
                                
                                ; F418: switch indicating of printing routines should use raw-mode or
                                ; should convert:
                                ; =0 to convert tabs and unknown characters to spaces and remove graphical headers
                                ; =1 to send data just like it gets it (ini: 0)
                                ; if RAWPRT is 1, the value if NTMSXP is ignored
       F418                     RAWPRT:         equ     $F418
                                
                                ; ---------------------------
                                ; basic interpreter work area
                                ; ---------------------------
                                
                                ; F419-F41A: work area for the BASIC command VAL: contains address of character that
                                ; has temporarely been replaced by O by VAL
       F419                     VLZADR:         equ     $F419
                                
                                ; F41B: work area for the BASIC command VAL: contains the character originally at
                                ; the location of VLZADR
       F41B                     VLZDAT:         equ     $F41B
                                
                                ; F41C-F41D: line number of current BASIC line being executed, in direct modus this
                                ; contains $FFFF (ini:$FFFF)
       F41C                     CURLIN:         equ     $F41C
                                
                                ; F41E: error detection prefix for KBUF, always contains ":"
                                ; originally undocumented :)
       F41E                     KBFMIN:         equ     $F41E
                                
                                ; F41F-F55C: workarea for coding basic rules that have been typed in direct modus
                                ; this are contains the code for the line interpreted in direct modus
       F41F                     KBUF:           equ     $F41F
                                
                                ; F55D: byte used as first byte of BUF for input statements, giving them always
                                ; an extra ',' (ini:44 == ',')
       F55D                     BUFMIN:         equ     $F55D
                                
                                ; F55E-F65F: used in direct modus to store the ASCII codes of the line, or simulary
                                ; for INPUT or LINE INPUT BASIC statements
       F55E                     BUF:            equ     $F55E
                                
                                ; F562-F570: used by bitblit routines to store the register data
       F562                     SX:             equ     $F562
       F564                     SY:             equ     $F564
       F566                     DX:             equ     $F566
       F568                     DY:             equ     $F568
       F56A                     NX:             equ     $F56A
       F56C                     NY:             equ     $F56C
       F56E                     CDUMMY:         equ     $F56E
       F56F                     ARG_:           equ     $F56F
       F570                     L_OP:           equ     $F570
                                
                                ; F660: last usable byte of BUF
       F660                     ENDBUF:         equ     $F660
                                
                                ; F661: number of column of last written character on the screen
       F661                     TTYPOS:         equ     $F661
                                
                                ; F662: switch indicating during variable lookup for arrays, if this has not already
                                ; been done for a DIM BASIC statement
       F662                     DIMFLG:         equ     $F662
                                
                                ; F663: workarea for evaluation of expressions; contains type of last evaluated
                                ; expression; the value of the expression is in DAC, possible values of VALTYP:
                                ; 2: integer
                                ; 3: string
                                ; 4: normal real
                                ; 8: double real
       F663                     VALTYP:         equ     $F663
                                
                                ; F664: workarea for coding of BASIC statements. switch indicating if keywords have
                                ; to be encoded or not. E.g. in DATA fields they should not be encoded
                                ; 0: encoding on, 1: encoding off
       F664                     DORES:          equ     $F664
                                
                                ; F665: workarea for coding of BASIC statements. swithc indication of numbers have to be
                                ; encoded; values: $0: encode as const, $1: encode as line number, $FF: do not encode
       F665                     DONUM:          equ     $F665
                                
                                ; F666-F667: work area for evaluation of expressions: contains address of first character
                                ; after the code of the last evaluated expression
       F666                     CONTXT:         equ     $F666
                                
                                ; F668: work area for evaluation of expressions: contains information byte about the
                                ; encoding of the last evaluated constant number; value of this constant is in CONLO
                                ; values:
                                ; $0B: octal (2 bytes)
                                ; $0C: hexadecimal (2 bytes)
                                ; $0F: decimal 0<=value<256 (1 byte)
                                ; $11-$1B: short encoding for 0->10
                                ; $1C: decimal (2bytes, 2s-compliment)
                                ; $26: $42 binary as ASCII
                                ; $0E: line number
                                ; $0D: line pointer
                                ; $1D: normal real (1 byte exp, 3 bytes BCD)
                                ; $1F: double real (1 byte exp, 7 bytes BCD)
       F668                     CONSAV:         equ     $F668
                                
                                ; F669: work area for evaluation of expressions: contains type of last evaluated number
                                ; constant; the value is in CONLO, for values of CONTYP, see VALTYP
                                ; Strings are never contant in BASIC!
       F669                     CONTYP:         equ     $F669
                                
                                ; F66A-F671: work area for evaluation of expressions: contains the value of the last
                                ; evaluated number contant; value starts at F66A, and takes bytes as needed for the type
       F66A                     CONLO:          equ     $F66A
                                
                                ; F672-F673: upper limit of memory area reserved for strings, contains the upper address
                                ; that is allowed to be used
       F672                     MEMSIZ:         equ     $F672
                                
                                ; F674-F675: top of stack; also first byte below string area
       F674                     STKTOP:         equ     $F674
                                
                                ; F676-F677: start address of current basic program, set at initialization, and
                                ; not changed by OS (ini:$8001)
       F676                     TXTTAB:         equ     $F676
                                
                                ; F678-F679: address of first unused string-descriptor in TEMPST
                                ; (ini:value of TEMPST)
       F678                     TEMPPT:         equ     $F678
                                
                                ; F67A-F697: work area for evaluation of string expressions; this area has space
                                ; for 10 string descriptors of 3 bytes; these can be used for temporarely results
                                ; of string arythmetics
       F67A                     TEMPST:         equ     $F67A
                                
                                ; F698-F69A: work area for evaluation of string expressions; this contains the
                                ; string descriptor of the intermediate result
       F698                     DSCTMP:         equ     $F698
                                
                                ; F69B-F69C: first address within the string memory area that is still free
                                ; the string area is filled backwards, soo the lower the value, the less space
                                ; remains (ini: value of MEMSIZ)
       F69B                     FRETOP:         equ     $F69B
                                
                                ; F69D-F69E: temporarely storage for adminstration of the basic interpreter
       F69D                     TEMP3:          equ     $F69D
                                
                                ; F69F-F6A0: temporarely storage for garbage collection
       F69F                     TEMP8:          equ     $F69F
                                
                                ; F6A1-F6A2: address of first byte in BASIC-code after last FOR statement
       F6A1                     ENDFOR:         equ     $F6A1
                                
                                ; F6A3-F6A4: line number of last used line of DATA statements
       F6A3                     DATLIN:         equ     $F6A3
                                
                                ; F6A5: switch indicating if a variable is allowed to be an array variable.
                                ; This is e.g. not allowed for the loop variable of a FOR statement
                                ; 0 = allowed, 1 = not allowed
       F6A5                     SUBFLG:         equ     $F6A5
                                
                                ; F6A6: switch indicating if currently a READ or INPUT statement is being executed
       F6A6                     FLKINP:         equ     $F6A6
                                
                                ; F6A7-F6A8: temporarely storage for adminstration of the basic interpreter
       F6A7                     TEMP:           equ     $F6A7
                                
                                ; F6A9: switch indicating if there are still linenumber constants in the BASIC code
                                ; that are encoded as pointers?
       F6A9                     PTRFLG:         equ     $F6A9
                                
                                ; F6AA: switch indication if currently an AUTO statement is active
                                ; 0 = no auto, 1 = auto
       F6AA                     AUTFLG:         equ     $F6AA
                                
                                ; F6AB-F6AC: last generated AUTO line number
       F6AB                     AUTLIN:         equ     $F6AB
                                
                                ; F6AD-F6AE: last used AUTO increment
       F6AD                     AUTINC:         equ     $F6AD
                                
                                ; F6AF-F6B0: work area of the error system; contains address of first byte
                                ; of statement currently being executed
       F6AF                     SAVTXT:         equ     $F6AF
                                
                                ; F6B1-F6B2: work area of the error system; contains address of the stack
                                ; before executing of the current statement started
       F6B1                     SAVSTK:         equ     $F6B1
                                
                                ; F6B3-F6B4: line number of last failed line
       F6B3                     ERRLIN:         equ     $F6B3
                                
                                ; F6B5-F6B6: line number of last used (changed, listed, added) line
       F6B5                     DOT:            equ     $F6B5
                                
                                ; F6B7-F5B8: work area of the error system; contains the address of the first
                                ; byte of the statement that last failed; on failure it is stored with the
                                ; content of SAVTXT
       F6B7                     ERRTXT:         equ     $F6B7
                                
                                ; F6B9-F6BA: work area of the error system; contains the line number where
                                ; execution should go to on error (as in basic: ON ERROR GOTO x)
       F6B9                     ONELIN:         equ     $F6B9
                                
                                ; F6BB-F6BC: work area of the error system; indication if the interpreter is
                                ; currently executing an error catch routine
                                ; 0 = no, FF = yes
       F6BB                     ONEFLG:         equ     $F6BB
                                
                                ; F6BC-F6BD: temporarely storage for the interpreter
       F6BC                     TEMP2:          equ     $F6BC
                                
                                ; F6BE-F6BF: line number of last program break, reset at 0 at any program change
       F6BE                     OLDLIN:         equ     $F6BE
                                
                                ; F6C0-F6C1: address of first statement that is not executed due to a break
       F6C0                     OLDTXT:         equ     $F6C0
                                
                                ; F6C2-F6C3: begin address of storage of basic variables and function descriptors;
                                ; possibly adjusted when program changes in size
       F6C2                     VARTAB:         equ     $F6C2
                                
                                ; F6C4-F6C5: begin address of array variables; possibly adjusted when program
                                ; changes size or more variables are allocated
       F6C4                     ARYTAB:         equ     $F6C4
                                
                                ; F6C6-F6C7: address of first free byte not used for storage of code or variables
                                ; (ini: $8003)
       F6C6                     STREND:         equ     $F6C6
                                
                                ; F6C8-F6C9: address where data needs to be searched at next READ statement
       F6C8                     DATPTR:         equ     $F6C8
                                
                                ; F6CA-F6E3: table with variable types, one for each letter in the alphabet
                                ; possible values:
                                ;       2 = integer     3 = string      4 = single      8 = double
       F6CA                     DEFTBL:         equ     $F6CA
                                
                                ; F6E4-F7B4: work area for execution of self defined functions
                                
                                ; F6E4-F6E5: contains address ; of previous parameter block on the stack;
                                ; needed for garbage collection
       F6E4                     PRMSTK:         equ     $F6E4
                                
                                ; F6E6-F6E7:  amount of valid bytes in PARM1
       F6E6                     PRMLEN:         equ     $F6E6
                                
                                ; F6E8-F74B: contains definitions of the variables in the parameter lists
                                ; of self defined functions
       F6E8                     PARM1:          equ     $F6E8
                                
                                ; F74C-F74D: previous value of PRMSTK
       F74C                     PRMDRV:         equ     $F74C
                                
                                ; F74E-F74F: number of valid bytes in PARM2
       F74E                     PRMLN2:         equ     $F74E
                                
                                ; F750-F7B3: area used for calculation of values that end up in PARM1
       F750                     PARM2:          equ     $F750
                                
                                ; F7B4: switch indicating of while searching a variable name PARM1 has
                                ; been looked at; 0 = no, 1 = yes
       F7B4                     PRMFLG:         equ     $F7B4
                                
                                ; F7B5-F7B6: address of first byte where it is no longer needed to search
                                ; for a variable name; it is equal to ARYTAB when the normal variable area
                                ; is searched, and equal to PARM1+PRMLEN when PARM1 is searched
       F7B5                     ARYTA2:         equ     $F7B5
                                
                                ; F7B7-F7B8: switch indicating iif PARM1 contains a valid parameter block
                                ; 0 = no, 1 = yes
       F7B7                     NOFUNS:         equ     $F7B7
                                
                                ; F7B8-F7B9: temporarely memory used while searching parameter blocks on
                                ; the stack
       F7B8                     TEMP9:          equ     $F7B8
                                
                                ; F7BA-F7BB: counter of the nesting-dept of the function being evaluated
       F7BA                     FUNACT:         equ     $F7BA
                                
                                ; F7BC-F7C3: work area when executing the SWAP statement; the first variable
                                ; is stored here
       F7BC                     SWPTMP:         equ     $F7BC
                                
                                ; F7C4: switch indicating if TRON is on; 0 = off, >0 = on
       F7C4                     TRCFLG:         equ     $F7C4
                                
                                ; F7C5-F7F4: workarea when executing numeric operators
       F7C5                     FBUFFR:         equ     $F7C5
       F7F0                     DECTMP:         equ     $F7F0
       F7F2                     DECTM2:         equ     $F7F2
       F7F4                     DECCNT:         equ     $F7F4
                                
                                ; F7F6-F805: workarea when executing numeric operators; intermediate
                                ; results are stored here; also used for parameter transfer when using
                                ; the USR functions; VALTYPE then contains the type, and the value is
                                ; stored like this:
                                ; typename  type  where
                                ; integer   2     F7F8-F7F9
                                ; string    3     F7F8-F7F9 (address descriptor)
                                ; single    4     F7F6-F7F9
                                ; double    8     F7F6-F7FD
       F7F6                     DAC:            equ     $F7F6
                                
                                ; F806-F856: workarea when executing numeric operators
       F806                     HOLD8:          equ     $F806
       F836                     HOLD2:          equ     $F836
       F83E                     HOLD:           equ     $F83E
       F847                     ARG:            equ     $F847
                                
                                ; F857-F85E: last calculated random double
       F857                     RNDX:           equ     $F857
                                
                                ; --------------------
                                ; filesystem work area
                                ; --------------------
                                
                                ; F85F: # of filedescriptors reserved minus 1
                                ; this is also the maximum number of open files possible
       F85F                     MAXFIL:         equ     $F85F
                                
                                ; F860-F861: start address of the file information table
       F860                     FILTAB:         equ     $F860
                                
                                ; F862-F863: start address of the first file-buffer
       F862                     NULBUF:         equ     $F862
                                
                                ; F864-F865: during file I/O the start address of the active file-buffer
       F864                     PTRFIL:         equ     $F864
                                
                                ; F866: flag indicating if the file that is being loaded have to be started
                                ; immediately; 0 = no, FF = yes
       F866                     RUNFLG:         equ     $F866
                                
                                ; note that RUNFLG and FILNAM overlap!
                                
                                ; F866-F870: filename of last file that has been active;
                                ; first 8 chars are name, last 3 are extension
       F866                     FILNAM:         equ     $F866
                                
                                ; F871-F87B: second filename if needed, e.g. the NAME command
       F871                     FILNM2:         equ     $F871
                                
                                ; F87C: switch indicating if currently a BASIC program is being loaded
                                ; 0 = no, 1 = yes
       F87C                     NLONLY:         equ     $F87C
                                
                                ; F87D-F87E: workarea for BLOAD and BSAVE; when a part of normal memory
                                ; is written, it contains the end address of the written memory region
                                ; if video memory is written it contains $4BE5 + start address of the
                                ; written memory region ??
       F87D                     SAVEND:         equ     $F87D
                                
                                ; F87F-F91E: storage area for the text of the function keys 10x16 bytes,
                                ; but strings need to be zero-terminated, soo maximum length of command is
                                ; 15 characters
       F87F                     FNKSTR:         equ     $F87F
                                
                                ; ------------------------
                                ; screen routine work area
                                ; ------------------------
                                
                                ; F91F-F921: start address of the standard ASCII pattern table
                                ; at every change towards a text mode it is copied in the pattern table
                                ; of the VDP
                                ;   F91F: slot indication (ini: 0)
                                ;   F920-F921: address (ini: 1BBF)
                                ; TODO: make CBIOS use this value instead of hardcoded value
       F91F                     CGPNT:          equ     $F91F
                                
                                ; F922-F923: start address of the nametable in the VRAM
       F922                     NAMBAS:         equ     $F922
                                
                                ; F924-F925: start address of the pattern table in the VRAM
       F924                     CGPBAS:         equ     $F924
                                
                                ; F926-F927: start address of the sprite pattern table in the VRAM
       F926                     PATBAS:         equ     $F926
                                
                                ; F928-F929: start address of the sprite location table in the VRAM
       F928                     ATRBAS:         equ     $F928
                                
                                ; F92A-F92B: address in VRAM of the pattern of the current position
                                ; on screen
       F92A                     CLOC:           equ     $F92A
                                
                                ; F92C: mask for CLOC selecting the right bits that correspond with
                                ; the current position
       F92C                     CMASK:          equ     $F92C
                                
                                ; F92D-F930: work area for graphical calculations
       F92D                     MINDEL:         equ     $F92D
       F92F                     MAXDEL:         equ     $F92F
                                
                                ; ----------------------------------------------
                                ; F931-F941: work area for calculation of CIRCLE
                                ; ----------------------------------------------
                                
                                ; F931-F932: ratio of # of dots in the horizontal and vertical direction
                                ; if = $0100 then ASPCT1 and ASPCT2 are used
                                ; if < $0100 then it is the # of dots in one direction for each
                                ; $0100 # of dots in the other direction; the direction is indicated
                                ; by CSCLXY
       F931                     ASPECT:         equ     $F931
                                
                                ; F933:F934: ; distance, in # of dots from the center of the most
                                ; distant point of the circle
       F933                     CENCNT:         equ     $F933
                                
                                ; F935: switch indication if the start and/or end point need to be
                                ; connected to the center
                                ;  bit 7: connect end point; 1 = yes
                                ;  bit 0: connect start point; 1 = yes
       F935                     CLINEF:         equ     $F935
                                
                                ; F936-F937: used during calculation of CIRCLE
       F936                     CNPNTS:         equ     $F936
                                
                                ; F938: direction of drawing of circle:
                                ;  00 = from CSTCNT towards CENCNT
                                ;  FF = from CENCNT towards CSTCNT
       F938                     CPLOTF:         equ     $F938
                                
                                ; F939-F93A: used during calculation of CIRCLE
       F939                     CPCNT:          equ     $F939
                                
                                ; F93B-F93C: ; contains the total # of dots of the full circle,
                                ; even when only a part is drawn
       F93B                     CPCNT8:         equ     $F93B
                                
                                ; F93D-F93E: used during calculation of CIRCLE
       F93D                     CRCSUM:         equ     $F93D
                                
                                ; F93F-F940: ; distance in dots from the center towards the closest
                                ; circle point
       F93F                     CSTCNT:         equ     $F93F
                                
                                ; F941: switch indicating if the X or Y direction needs to be streched:
                                ; 0 = X, 1 = Y
       F941                     CSCLXY:         equ     $F941
                                
                                ; F942-F943: store of CLOC, also used for PAINT
       F942                     CSAVEA:         equ     $F942
                                
                                ; F944: storage of CMASK; also used for PAINT
       F944                     CSAVEM:         equ     $F944
                                
                                ; F945-F946: horizontal distance towards the center
       F945                     CXOFF:          equ     $F945
                                
                                ; F947-F948: vertical distance towards the center
       F947                     CYOFF:          equ     $F947
                                
                                ; -------------------------------------------
                                ; work area for executing the PAINT statement
                                ; -------------------------------------------
                                
                                ; F949: leftmost position of protrusion towards the left
       F949                     LOHMSK:         equ     $F949
                                
                                ; F94A: new workdirection for protrusion towards the left
       F94A                     LOHDIR:         equ     $F94A
                                
                                ;F94B-F94C: leftmost position of protrusion towards the left
       F94B                     LOHADR:         equ     $F94B
                                
                                ; F94D: size of protrusion towards the left
       F94D                     LOHCNT:         equ     $F94D
                                
                                ; F94F-F950: # of pixels that may be skipped
       F94F                     SKPCNT:         equ     $F94F
                                
                                ; F951-F952: # of movements
       F951                     MOVCNT:         equ     $F951
                                
                                ; F953: current direction; $40 = \/, $C0 = /\, $00 = stop
       F953                     PDIREC:         equ     $F953
                                
                                ; F954: indicate if paint towards the left worked
       F954                     LFPROG:         equ     $F954
                                
                                ; F955: indicate of a paint towards the right worked
       F955                     RTPROG:         equ     $F955
                                
                                ; F956-F957: start address of a jumptable for subcommands
                                ; contained in a string variable, used for both PLAY and DRAW
                                ; where this systemvar points to either the PLAY or the DRAW
                                ; table
       F956                     MCLTAB:         equ     $F956
                                
                                ; F958: switch indication if MCLTAB is for PLAY or DRAW
                                ; $0 = DRAW, $FF = PLAY
       F958                     MCLFLG:         equ     $F958
                                
                                ; ------------------------------------------
                                ; work area for sound and queueing and RS232
                                ; ------------------------------------------
                                
                                ; F959-F971: Variables for three music queues and one RS232 queue
                                ; F959: VOICAQ put position
                                ; F95A: VOICAQ get position
                                ; F95B: VOICAQ putback flag
                                ; F95C: VOICAQ size
                                ; F95D: VOICAQ address
                                ; F95F-F964: VOICBQ
                                ; F965-F96A: VOICCQ
                                ; F96B-F970: RS2IQ
       F959                     QUETAB:         equ     $F959
                                
                                ; Putback characters for queues. TODO: what purpose do these have exactly?
       F971                     QUEBAK:         equ     $F971
                                
                                ; Buffers for queues.
       F975                     VOICAQ:         equ     $F975           ; Voice A queue
       F9F5                     VOICBQ:         equ     $F9F5           ; Voice B queue
       FA75                     VOICCQ:         equ     $FA75           ; Voice C queue
       FAF5                     RS2IQ:          equ     $FAF5           ; RS232   queue
                                
                                ; in MSX2 the content of RS2IQ is used differently:
       FAF5                     DPPAGE:         equ     $FAF5           ; Display page (SCR5+)
       FAF6                     ACPAGE:         equ     $FAF6           ; Active page (SCR5+)
                                
                                ; FAF7: AV control port value storage
       FAF7                     AVCSAV:         equ     $FAF7
                                
                                ; FAF8: extended BASIC ROM slot address
       FAF8                     EXBRSA:         equ     $FAF8
                                
                                ; FAF9: character count for ROMA-KANA
       FAF9                     CHRCNT:         equ     $FAF9
                                
                                ; FAFA-FAFB: character save for ROMA-KANA
       FAFA                     ROMA:           equ     $FAFA
                                
                                ; ROMA-KANA extension mode switch or VRAM size??
       FAFC                     MODE:           equ     $FAFC
                                ;Reserved       equ     $FAFD
                                
                                ; FAFE-FAFF: x position for mouse or lightpen
       FAFE                     XSAVE:          equ     $FAFE
                                
                                ; FB00-FB01: y position for mouse or lightpen
       FB00                     YSAVE:          equ     $FB00
       FB02                     LOGOPR:         equ     $FB02
                                ; FB21-FB28: Table which contains info for up to 4 disk ROMs, 2 bytes each:
                                ; - first byte: number of drives connected to this interface
                                ; - second byte: slot ID of the disk ROM
       FB21                     DRVINF:         equ     $FB21
                                ; end of MSX2 only usage of RS2IQ
                                
                                ; --------------------------------
                                ; work area for the PLAY statement
                                ; --------------------------------
                                
                                ; FB35: status about the parsing of a PLAY string
                                ;  bit 7: only one time parsed; 1 = yes
                                ;  bit 1-0: number of parsed strings (0-3)
       FB35                     PRSCNT:         equ     $FB35
                                
                                ; FB36-FB37: storage of stack
       FB36                     SAVSP:          equ     $FB36
                                
                                ; FB38: # of voice currently being parsed (0-2)
       FB38                     VOICEN:         equ     $FB38
                                
                                ; FB39-FB3A: storage of volume of a muted voice
       FB39                     SAVVOL:         equ     $FB39
                                
                                ; FB3B: size of string being parsed (also used by DRAW)
       FB3B                     MCLLEN:         equ     $FB3B
                                
                                ; FB3C-FB3D: address of string being parsed (also used by DRAW)
       FB3C                     MCLPTR:         equ     $FB3C
                                
                                ; FB3E: temporarely storage of active queue # (0-2)
       FB3E                     QUEUEN:         equ     $FB3E
                                
                                ; FB3F: flag indicating which queues are active
                                ; bit 2 = queue 2; 1 = active
                                ; bit 1 = queue 1; 1 = active
                                ; bit 0 = queue 0; 1 = active
       FB3F                     MUSICF:         equ     $FB3F
                                
                                ; FB40: count of the # of PLAY statements parsed, but not executed yet
       FB40                     PLYCNT:         equ     $FB40
                                
                                ; FB41-FB65: Voice Control Block for voice A (queue 0)
       FB41                     VCBA:           equ     $FB41
                                ; FB66-FB8A: Voice Control Block for voice B (queue 1)
       FB66                     VCBB:           equ     $FB66
                                ; FB8B-FBAF: Voice Control Block for voice C (queue 2)
       FB8B                     VCBC:           equ     $FB8B
                                
                                ; each VCB has the following structure:
                                
                                ; name                  offset  length  purpose
       0000                     METREX:         equ     0 ;     2       interrupt counter
       0002                     VCXLEN:         equ     2 ;     1       MCLLEN for voice
       0003                     VCXPTR:         equ     3 ;     2       MCLPTR for voice
       0005                     VCXSTP:         equ     5 ;     2       stack pointer
       0007                     QLENGX:         equ     7 ;     1       # bytes in queue
       0008                     NTICSX:         equ     8 ;     2       new counter ?
       000A                     TONPRX:         equ     10;     2       pitch
       000C                     AMPLTX:         equ     12;     1       amplitude
       000D                     ENVPRX:         equ     13;     2       envelope speed
       000F                     OCTAVX:         equ     15;     1       octave
       0010                     NOTELX:         equ     16;     1       tone length
       0011                     TEMPOX:         equ     17;     1       tempo
       0012                     VOLUMX:         equ     18;     1       volume
       0013                     ENVLPX:         equ     19;     1       envelope shape
       0021                     MCLSTX:         equ     33;             space for stack storage
       0024                     MCLSEX:         equ     36;             start of stack
                                ; the stack mentioned above is used to store bytevalues
                                ; that are readied to be put on the voice queue
                                
                                ; -----------------------------------------------
                                ; settings for screen editor and interrupt system
                                ; -----------------------------------------------
                                
                                ; FBB0: switch indicating if software reset is enabled
                                ; 0 = n, 1 = yes; can be used to reset BASIC by pressing
                                ; SHIFT-CODE-GRAPH; does not erase the existing program
                                ; (ini: 0)
       FBB0                     ENSTOP:         equ     $FBB0
                                
                                ; FBB1: switch indicating if the current BASIC program is in a ROM
                                ; 0 = no; 1 = yes
       FBB1                     BASROM:         equ     $FBB1
                                
                                ; FBB2-FBC9: table containing for each line if it continues on the
                                ; next line; 0 = yes, >0 = no
       FBB2                     LINTTB:         equ     $FBB2
                                
                                ; FBCA-FBCB storage of location of cursor for INLIN and QINLIN
                                ;  FBCA: CSRY , FBCB: CSRX
       FBCA                     FSTPOS:         equ     $FBCA
                                
                                ; ASCII code of the character currently covered by the cursor
                                ; TODO: is the name CURSAV or CODSAV ?
       FBCC                     CURSAV:         equ     $FBCC
                                
                                ; FBCD: switch indicating which function keys are to be displayed
                                ; on the screen; 0 = F6-F10, 1 = F1-F5
       FBCD                     FNKSWI:         equ     $FBCD
                                
                                ; FBCE-FBD7: for each function key, a flag indicating if it has
                                ; interrupt facility enabled; 0 = disabled, 1 = enabled
       FBCE                     FNKFLG:         equ     $FBCE
                                
                                ; FBD8: counter of # of interrupts that still have a pending ON .. GOSUB
       FBD8                     ONGSBF:         equ     $FBD8
                                
                                ; FBD9: flag indicating if a keyclick has already been generated, to avoid
                                ; keyclicks for a key that generates two ASCII codes
                                ; $00 = no click, $0F = click
       FBD9                     CLIKFL:         equ     $FBD9
                                
                                ; FBDA-FBE4: storage of keyboard matrix, used for detection key repetition
       FBDA                     OLDKEY:         equ     $FBDA
                                
                                ; FBE5-FBEF: current state of the keyboard matrix
       FBE5                     NEWKEY:         equ     $FBE5
                                
                                ; keyboard buffer; each char entered via the keyboard ends up here
       FBF0                     KEYBUF:         equ     $FBF0
                                ; LIMPNT: something about "key buffer pointer"
       FC17                     LIMPNT:         equ     $FC17
                                
                                ; FC18-FC3F: work area for processing the last typed line
       FC18                     LINWRK:         equ     $FC18
                                
                                ; FC40-FC47: storage for the patter of an ASCII character
                                ; used when writing an ASCII character in a graphical mode
       FC40                     PATWRK:         equ     $FC40
                                
                                ; FC48-FC49: lowest address of the RAM memory; initialized at startup
                                ; and not changed normally
       FC48                     BOTTOM:         equ     $FC48
                                
                                ; FC4A-FC4B: highest address of the RAM memory that is not reserved by
                                ; the OS; string area, filebuffers and stack are below this address
                                ; initialized at startup and not changed normally
       FC4A                     HIMEM:          equ     $FC4A
                                
                                ; FC4C-FC99: table for interrupt facilities of MSX BASIC
                                ; each 3 bytes are used like this:
                                ; byte 1 is a flag:
                                ;  bit 2: interrupt happened; 1 = yes
                                ;  bit 1: interrupt stop; 1 = yes
                                ;  bit 0: interrupt off; 1 = no
                                ; byte 2-3 is the adress of the line in BASIC where should be
                                ; jumped too
                                ; the offsets in the table are:
                                ;  offset  address interrupt
                                ;       0  FC4C    F1
                                ;       3  FC4F    F2
                                ;       6  FC52    F3
                                ;       9  FC55    F4
                                ;      12  FC58    F5
                                ;      15  FC5B    F6
                                ;      18  FC5E    F7
                                ;      21  FC61    F8
                                ;      24  FC64    F9
                                ;      27  FC67    F10
                                ;      30  FC6A    STOP
                                ;      33  FC6D    sprite collision
                                ;      36  FC70    SPACE (trigger 0)
                                ;      39  FC73    joystick 1 button 1 (trigger 1)
                                ;      39  FC76    joystick 2 button 1 (trigger 2)
                                ;      39  FC79    joystick 1 button 2 (trigger 3)
                                ;      39  FC7C    joystick 2 button 2 (trigger 4)
                                ;      39  FC7F    interval
       FC4C                     TRPTBL:         equ     $FC4C
                                
                                ; FC9A: usage unknown
       FC9A                     RTYCNT:         equ     $FC9A
                                
                                ; FC9B: STOP indication
                                ; 0 = nothing; 3 = CTRL+STOP, 4 = STOP
       FC9B                     INTFLG:         equ     $FC9B
                                
                                ; FC9C: last read Y-position of a touchpad
       FC9C                     PADY:           equ     $FC9C
                                
                                ; FC9D: last read X-position of a touchpad
       FC9D                     PADX:           equ     $FC9D
                                
                                ; FC9E-FC9F: software clock, updated at each VDP interrupt
       FC9E                     JIFFY:          equ     $FC9E           ; timer counter
                                
                                ; FCA0-FCA1: initial value of INTCNT, used when INTCNT
                                ; reaches 0; used for ON INTERVAL GOSUB
       FCA0                     INTVAL:         equ     $FCA0
                                
                                ; FCA2-FCA3: interrupt counter; lowered at each VDP interrupt;
                                ; reset with value of INTVAL when it reaches zero; if interval
                                ; interrupt is needed, it is generated
       FCA2                     INTCNT:         equ     $FCA2
                                
                                ; FCA4-FCA5: parameter used at tap input, given a value during
                                ; reading of a headerblock from tape
       FCA4                     LOWLIM:         equ     $FCA4
       FCA5                     WINWID:         equ     $FCA5
                                
                                ; FCA6: flag indicating if the previous character written
                                ; to the screen was an extension character for graphical signs
                                ; (ASCII 1); 0 = no, 1 = yes
       FCA6                     GRPHED:         equ     $FCA6
                                
                                ; FCA7 ESCCNT State of a state machine that handles the printing of escape
                                ; sequences. A subset of the VT52 escape sequences is supported.
                                ; values:
                                ; $00: not inside an escape sequence
                                ; $01: seen <ESC>x
                                ; $02: seen <ESC>y
                                ; $03: seen <ESC>Y<row>
                                ; $04: seen <ESC>Y
                                ; $FF: seen <ESC>
       FCA7                     ESCCNT:         equ     $FCA7
                                
                                ; FCA8: switch indicating insert or overwrite mode
                                ; $00 = overwrite; $FF = insert
                                ; the value of INSFLG is changed each time the INS key is pressed
       FCA8                     INSFLG:         equ     $FCA8
                                
                                ; FCA9: show cursor; 0 = no, 1 = yes
                                ; can be changed with escape sequences x5 and y5
       FCA9                     CSRSW:          equ     $FCA9
                                
                                ; FCAA: shape of cursor; 0 = block; 1 = insert
                                ; pressing the INS key changes the value of CSTYLE
                                ; can be changed with escape sequences x4 and y4
       FCAA                     CSTYLE:         equ     $FCAA
                                
                                ; switch indicating if the CAPS-LOCK is on
                                ; $00 = off, $FF = on (unofficial: $80 = perma-on)
       FCAB                     CAPST:          equ     $FCAB
                                
                                ; FCAC: dead key control in non-japanese MSX models
                                ; adds a mark on the next char pressed, if applicable
                                ;  0 = no dead key
                                ;  1 = dead key                => accent grave
                                ;  2 = SHIFT + dead key        => accent aigu
                                ;  3 = CODE + dead key         => accent circumflex
                                ;  4 = SHIFT + CODE + dead key => trema
                                ; in japanese models it controls the charset used
       FCAC                     KANAST:         equ     $FCAC
                                
                                ; FCAD: only used in japanese MSX models; it defines
                                ; the used typeset (ini: $40)
       FCAD                     KANAMD:         equ     $FCAD
                                
                                ; ----
                                ; misc
                                ; ----
                                
       FCAE                     FLBMEM:         equ     $FCAE
       FCAF                     SCRMOD:         equ     $FCAF
       FCB0                     OLDSCR:         equ     $FCB0
       FCB1                     CASPRV:         equ     $FCB1
       FCB2                     BRDATR:         equ     $FCB2
       FCB3                     GXPOS:          equ     $FCB3
       FCB5                     GYPOS:          equ     $FCB5
       FCB7                     GRPACX:         equ     $FCB7
       FCB9                     GRPACY:         equ     $FCB9
       FCBB                     DRWFLG:         equ     $FCBB
       FCBD                     DRWANG:         equ     $FCBD
       FCBE                     RUNBNF:         equ     $FCBE
       FCBF                     SAVENT:         equ     $FCBF
                                
                                ; ---------------------------
                                ; storage of slot information
                                ; ---------------------------
                                
                                ; FCC1-FCC4: Information for each primary slot. The most significant bit is
                                ; set if the primary slot is found to be expanded.
       FCC1                     EXPTBL:         equ     $FCC1
                                
                                ; FCC5-FCC8: Duplicate the contents of the four possible secondary slot
                                ; registers.
       FCC5                     SLTTBL:         equ     $FCC5
                                
                                ; FCC9-FD08: Information for any extension ROMs found during the power-up
                                ; ROM search.
                                ; FCC9-FCCC: primary slot 0, secondary slot 0
                                ; FCCD-FCD0: primary slot 0, secondary slot 1
                                ; FCD1-FCD4: primary slot 0, secondary slot 2
                                ; FCD5-FCD8: primary slot 0, secondary slot 3
                                ; FCD9-FCE8: primary slot 1
                                ; FCE9-FCF8: primary slot 2
                                ; FCF9-FD08: primary slot 3
                                ; The information is stored as below.
                                ; bit 7 (set): BASIC program
                                ; bit 6 (set): device handler
                                ; bit 5 (set): statement handler
       FCC9                     SLTATR:         equ     $FCC9
                                
       FD09                     SLTWRK:         equ     $FD09
                                
                                ; ------------------------------
                                ; storage of ROM-page parameters
                                ; ------------------------------
                                
       FD89                     PROCNM:         equ     $FD89
       FD99                     DEVICE:         equ     $FD99
                                ; ------------
                                ; system hooks
                                ; ------------
                                
                                ; system hooks are defined in hooks.asm
                                
                                ; ------------------
                                ; storage of VDP8-23
                                ; ------------------
                                
                                ; FFE7-FFF6: storage of VDP 8-23
       FFE7                     RG8SAV:         equ     $FFE7
                                
                                ; ----------------------
                                ; extra slot information
                                ; ----------------------
                                
                                ; FFF7: slot address of main-rom
                                ;?????:         equ     $FFF7
                                
                                ; ------------------
                                ; storage of VDP25-27
                                ; ------------------
                                
                                ; FFFA-FFFC: storage of VDP 25-27
       FFFA                     RG25SAV:         equ     $FFFA
                                
                                ; ---------------------------
                                ; subslot switching addresses
                                ; ---------------------------
                                
                                ; FFFF: subslot switching address
                                ; This is not actually a system variable, it is a hardware register:
                                ;   SSL_REGS (see hardware.asm).
                                
                                ; -------
                                ; the end
                                ; -------
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:systemvars.asm:UTF_8]
                                
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"   ; ID for auto-executable ROM
000002 4002 1040                    DW  INIT_ROM   ; Main program execution address.
000004 4004 0000                    DW  0      ; STATEMENT
000006 4006 0000                    DW  0      ; DEVICE
000008 4008 0000                    DW  0      ; TEXT
00000A 400A 000000000000            DW  0,0,0  ; Reserved
                                    INCLUDE "MSXINIT.ASM"
                                
                                ;   LSX-Dodgers INIT
                                ;   MSX
                                
       4010                     INIT_ROM:
000010 4010 21DAFE          10      LD  HL,H_STKE
000013 4013 3E                      DB  03EH    ;LD A,??
000014 4014 F7              12      RST 30H
000015 4015 F3               4      DI
000016 4016 77               7      LD  (HL),A
000017 4017 CD2540          17      CALL    GTSL1_
00001A 401A 23               6      INC HL
00001B 401B 77               7      LD  (HL),A
00001C 401C 114F40          10      LD  DE,START
00001F 401F 23               6      INC HL
000020 4020 73               7      LD  (HL),E
000021 4021 23               6      INC HL
000022 4022 72               7      LD  (HL),D
000023 4023 FB               4      EI
000024 4024 C9              10      RET
                                
       4025                     GTSL1_:
000025 4025 E5              11      PUSH    HL      ;Save registers
000026 4026 D5              11      PUSH    DE
                                ;
000027 4027 CD3801          17      CALL    RSLREG      ;read primary slot #
00002A 402A 0F               4      RRCA
00002B 402B 0F               4      RRCA
00002C 402C E603             7      AND 11B     ;[A]=000000PP
00002E 402E 5F               4      LD  E,A
00002F 402F 1600             7      LD  D,0     ;[DE]=000000PP
000031 4031 21C1FC          10      LD  HL,EXPTBL
000034 4034 19              11      ADD HL,DE       ;[HL]=EXPTBL+000000PP
000035 4035 5F               4      LD  E,A     ;[E]=000000PP
000036 4036 7E               7      LD  A,(HL)      ;[A]=(EXPTBL+000000PP)
000037 4037 E680             7      AND 80H     ;Use only MSB
000039 4039 2811            12      JR  Z,GTSL1NOEXP
00003B 403B B3               4      OR  E       ;[A]=F00000PP
00003C 403C 5F               4      LD  E,A     ;save primary slot number
00003D 403D 23               6      INC HL      ;point to SLTTBL entry
00003E 403E 23               6      INC HL
00003F 403F 23               6      INC HL
000040 4040 23               6      INC HL
000041 4041 7E               7      LD  A,(HL)      ;get currently expansion slot register
000042 4042 0F               4      RRCA
000043 4043 0F               4      RRCA
000044 4044 E603             7      AND 11B     ;[A] = 000000SS
000046 4046 07               4      RLCA
000047 4047 07               4      RLCA            ;[A] = 0000SS00
000048 4048 B3               4      OR  E       ;[A] = F000SSPP
                                ;
       4049                     GTSL1END:
000049 4049 D1              10      POP DE
00004A 404A E1              10      POP HL
00004B 404B C9              10      RET
       404C                     GTSL1NOEXP:
00004C 404C 7B               4      LD  A,E     ;[A] = 000000PP
00004D 404D 18FA            12      JR  GTSL1END
                                
       404F                     START:
00004F 404F F3               4      DI
000050 4050 ED56             8      IM  1
000052 4052 216040          10      LD  HL,AT_START2
000055 4055 1100C7          10      LD  DE,START2
000058 4058 010020          10      LD  BC,MSX_E-START2
00005B 405B EDB0                    LDIR
00005D 405D C300C7          10      JP  START2
                                
       4060                     AT_START2:
000060 C700                         ORG START2,AT_START2-RUN
                                
000060 C700 3100C7          10      LD  SP,START2
000063 C703 CD11C7          17      CALL    INIT        ;NZならAUTOEXECを実行
000066 C706 210000          10      LD  HL,0
000069 C709 E5              11      PUSH    HL
00006A C70A C8              11      RET Z
00006B C70B 11A1C8          10      LD  DE,AUTOD
00006E C70E C3FDE4          10      JP  _COMANL
                                
       C711                     INIT:
000071 C711 DD21900D        14      LD  IX,0D90H
000075 C715 0600             7      LD  B,0
       C717                     CHECK_CBIOS1:
000077 C717 DD7E00          19      LD  A,(IX+0)
00007A C71A FE43             7      CP  'C'
00007C C71C 202B            12      JR  NZ,CHECK_CBIOS2
00007E C71E DD7E01          19      LD  A,(IX+1)
000081 C721 FE2D             7      CP  '-'
000083 C723 2024            12      JR  NZ,CHECK_CBIOS2
000085 C725 DD7E02          19      LD  A,(IX+2)
000088 C728 FE42             7      CP  'B'
00008A C72A 201D            12      JR  NZ,CHECK_CBIOS2
00008C C72C DD7E03          19      LD  A,(IX+3)
00008F C72F FE49             7      CP  'I'
000091 C731 2016            12      JR  NZ,CHECK_CBIOS2
000093 C733 DD7E04          19      LD  A,(IX+4)
000096 C736 FE4F             7      CP  'O'
000098 C738 200F            12      JR  NZ,CHECK_CBIOS2
00009A C73A DD7E05          19      LD  A,(IX+5)
00009D C73D EE53             7      XOR 'S'
00009F C73F 2008            12      JR  NZ,CHECK_CBIOS2
                                
0000A1 C741 327ED0          13      LD  (CBIOS_SWC1),A
0000A4 C744 32A2D0          13      LD  (CBIOS_SWC2),A
                                
0000A7 C747 1804            12      JR  CHECK_CBIOS3
       C749                     CHECK_CBIOS2:
0000A9 C749 DD23            10      INC IX
0000AB C74B 10CA            13      DJNZ    CHECK_CBIOS1
       C74D                     CHECK_CBIOS3:
0000AD C74D 3ADBFE          13      LD  A,(H_STKE+1)
0000B0 C750 3262E4          13      LD  (ROM_SLT),A
0000B3 C753 2680             7      LD  H,080H
0000B5 C755 CD6ED3          17      CALL    ENASLT
                                
0000B8 C758 1141F3          10      LD  DE,0F341H
0000BB C75B 210000          10      LD  HL,00000H
0000BE C75E CD5FC8          17      CALL    INIT_RAM
                                
0000C1 C761 13               6      INC DE
0000C2 C762 210040          10      LD  HL,04000H
0000C5 C765 CD5FC8          17      CALL    INIT_RAM
                                
0000C8 C768 13               6      INC DE
0000C9 C769 210080          10      LD  HL,08000H
0000CC C76C CD5FC8          17      CALL    INIT_RAM
                                
0000CF C76F 210000          10      LD  HL,0
0000D2 C772 065C             7      LD  B,05CH
0000D4 C774 3E                      DB  03EH    ;LD A,??
0000D5 C775 EF              12      RST 28H
0000D6 C776 CD08D5          17      CALL    FILL_MEMORY
0000D9 C779 06A4             7      LD  B,0A4H
0000DB C77B AF               4      XOR A
0000DC C77C CD08D5          17      CALL    FILL_MEMORY
                                
0000DF C77F 3EC3             7      LD  A,0C3H      ;JP
0000E1 C781 2103E4          10      LD  HL,CPM_WBOOT
0000E4 C784 320000          13      LD  (00000H),A
0000E7 C787 220100          16      LD  (00001H),HL ;IPL
                                
0000EA C78A 21031D          10      LD  HL,MACW     ;3 bit7  DPB Compatible LA(1)
0000ED C78D 220300          16      LD  (00003H),HL ;  bit6-0 Machine
                                ;               ;4 LSX-Dodgers(01DH)
0000F0 C790 2106C9          10      LD  HL,BDOS
0000F3 C793 320500          13      LD  (00005H),A
0000F6 C796 220600          16      LD  (00006H),HL ;BDOS
                                
0000F9 C799 210000          10      LD  HL,0
0000FC C79C 322800          13      LD  (00028H),A
0000FF C79F 222900          16      LD  (00029H),HL ;BDOS
                                                ;インタースロットコール
000102 C7A2 216ED2          10      LD  HL,RDSLTR
000105 C7A5 320C00          13      LD  (_RDSLT),A
000108 C7A8 220D00          16      LD  (_RDSLT+1),HL
                                
00010B C7AB 2177D2          10      LD  HL,WRSLTR
00010E C7AE 321400          13      LD  (_WRSLT),A
000111 C7B1 221500          16      LD  (_WRSLT+1),HL
                                
000114 C7B4 2130D2          10      LD  HL,CALSLTR
000117 C7B7 321C00          13      LD  (_CALSLT),A
00011A C7BA 221D00          16      LD  (_CALSLT+1),HL
                                
00011D C7BD 216ED3          10      LD  HL,ENASLT
000120 C7C0 322400          13      LD  (_ENASLT),A
000123 C7C3 222500          16      LD  (_ENASLT+1),HL
                                
000126 C7C6 2120D2          10      LD  HL,CALLF
000129 C7C9 323000          13      LD  (_CALLF),A
00012C C7CC 223100          16      LD  (_CALLF+1),HL
                                
00012F C7CF 2180D2          10      LD  HL,INT38H
000132 C7D2 323800          13      LD  (00038H),A
000135 C7D5 223900          16      LD  (00038H+1),HL
                                                ;LSX-Dodgers
000138 C7D8 3EE4             7      LD  A,CPM_BOOT/256
00013A C7DA 320B00          13      LD  (0000BH),A
                                
00013D C7DD 3E                      DB  03EH    ;LD A,??
00013E C7DE E9               4      JP  (HL)
00013F C7DF 320F00          13      LD  (0000FH),A
                                                ;MSXワークエリア
000142 C7E2 3E03             7      LD  A,3
000144 C7E4 329BFC          13      LD  (INTFLG),A
                                
                                                ;ROMタイプ判別(ASCII-8K/ASCII-16K)
000147 C7E7 1E00             7      LD  E,0
000149 C7E9 3A62E4          13      LD  A,(ROM_SLT)
00014C C7EC 210068          10      LD  HL,BANK1_SEL
00014F C7EF CDFBD2          17      CALL    WRSLT
                                
000152 C7F2 210060          10      LD  HL,06000H
000155 C7F5 3A62E4          13      LD  A,(ROM_SLT)
000158 C7F8 CDBAD2          17      CALL    RDSLT
00015B C7FB FE41             7      CP  'A'
00015D C7FD 280F            12      JR  Z,ROM8K
                                                ;ASCII-8K/Konami-8Kではない(ASCII-16K)
00015F C7FF 3E                      DB  03EH    ;LD A,??
000160 C800 00               4      NOP
000161 C801 32E5E1          13      LD  (ASCII16K1),A
000164 C804 32E9E1          13      LD  (ASCII16K2),A
000167 C807 3E3F             7      LD  A,03FH
000169 C809 3201E2          13      LD  (ASCII16K3),A
00016C C80C 1829            12      JR  ROMCHECKED
       C80E                     ROM8K:              ;Konami-8Kチェック
00016E C80E 1E01             7      LD  E,1
000170 C810 3A62E4          13      LD  A,(ROM_SLT)
000173 C813 210070          10      LD  HL,BANK2_SEL
000176 C816 CDFBD2          17      CALL    WRSLT
                                
000179 C819 1E00             7      LD  E,0
00017B C81B 3A62E4          13      LD  A,(ROM_SLT)
00017E C81E 210080          10      LD  HL,KONAMI_BANK2_SEL
000181 C821 CDFBD2          17      CALL    WRSLT
                                
000184 C824 210080          10      LD  HL,08000H
000187 C827 3A62E4          13      LD  A,(ROM_SLT)
00018A C82A CDBAD2          17      CALL    RDSLT
00018D C82D FE41             7      CP  'A'
00018F C82F 2006            12      JR  NZ,ROMCHECKED
                                                ;Konami-8K
000191 C831 210080          10      LD  HL,KONAMI_BANK2_SEL
000194 C834 22F0E1          16      LD  (ROM8000H),HL
       C837                     ROMCHECKED:
                                                ;MSX2判別
000197 C837 3AF8FA          13      LD  A,(EXBRSA)
00019A C83A B7               4      OR  A
00019B C83B 3E28             7      LD  A,40
00019D C83D 2802            12      JR  Z,ISMSX1
00019F C83F 3E50             7      LD  A,80        ;MSX2以降は80桁で起動
       C841                     ISMSX1:
0001A1 C841 32AEF3          13      LD  (LINL40),A
0001A4 C844 32B1E4          13      LD  (_WIDTH),A
0001A7 C847 DD216C00        14      LD  IX,INITXT
0001AB C84B CD14D2          17      CALL    CALSLT_R
0001AE C84E DD217800        14      LD  IX,SETTXT
0001B2 C852 CD14D2          17      CALL    CALSLT_R
                                
0001B5 C855 21ADC8          10      LD  HL,INIMES
0001B8 C858 CD7BCD          17      CALL    MSX
       C85B                     INIT1:
0001BB C85B AF               4      XOR A
0001BC C85C FE03             7      CP  3
0001BE C85E C9              10      RET
                                
       C85F                     INIT_RAM:
0001BF C85F 1A               7      LD  A,(DE)
0001C0 C860 E5              11      PUSH    HL
0001C1 C861 CD8CC8          17      CALL    INIT_RAMX
0001C4 C864 E1              10      POP HL
0001C5 C865 C8              11      RET Z
0001C6 C866 3E03             7      LD  A,3     ;SLOT3
0001C8 C868 12               7      LD  (DE),A
0001C9 C869 E5              11      PUSH    HL
0001CA C86A CD8CC8          17      CALL    INIT_RAMX
0001CD C86D E1              10      POP HL
0001CE C86E C8              11      RET Z
0001CF C86F 3E83             7      LD  A,083H      ;SLOT3-0
0001D1 C871 12               7      LD  (DE),A
0001D2 C872 E5              11      PUSH    HL
0001D3 C873 CD8CC8          17      CALL    INIT_RAMX
0001D6 C876 E1              10      POP HL
0001D7 C877 C8              11      RET Z
0001D8 C878 3E87             7      LD  A,087H      ;SLOT3-1
0001DA C87A 12               7      LD  (DE),A
0001DB C87B E5              11      PUSH    HL
0001DC C87C CD8CC8          17      CALL    INIT_RAMX
0001DF C87F E1              10      POP HL
0001E0 C880 C8              11      RET Z
0001E1 C881 3E8B             7      LD  A,08BH      ;SLOT3-2
0001E3 C883 12               7      LD  (DE),A
0001E4 C884 E5              11      PUSH    HL
0001E5 C885 CD8CC8          17      CALL    INIT_RAMX
0001E8 C888 E1              10      POP HL
0001E9 C889 C8              11      RET Z
0001EA C88A 3E8F             7      LD  A,08FH      ;SLOT3-3
       C88C                     INIT_RAMX:          ;スロットがRAMかチェック ZF=1ならばRAM
0001EC C88C D5              11      PUSH    DE
0001ED C88D CD6ED3          17      CALL    ENASLT
0001F0 C890 D1              10      POP DE
0001F1 C891 010040          10      LD  BC,04000H
       C894                     INIT_RAM1:
0001F4 C894 7E               7      LD  A,(HL)
0001F5 C895 2F               4      CPL
0001F6 C896 77               7      LD  (HL),A
0001F7 C897 BE               7      CP  (HL)
0001F8 C898 2F               4      CPL
0001F9 C899 77               7      LD  (HL),A
0001FA C89A C0              11      RET NZ
0001FB C89B EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0001FD C89D E0              11      RET PO
0001FE C89E C0              11      RET NZ
0001FF C89F 18F3            12      JR  INIT_RAM1
                                
000201 C8A1 4155544F45584543    AUTOD:  DB  "AUTOEXEC "
            20                  
00020A C8AA 413A00              AUTODV: DB  "A:",0
                                
00020D C8AD 0C4C53582D446F64    INIMES: DB  00CH,"LSX-Dodgers for MSX v"
            6765727320666F72    
            204D53582076        
000223 C8C3 312E                    DB  030H + VER_1, '.'
000225 C8C5 3630                    DB  030H + VER_2 ,030H + VER_3
                                ;   DB  ""
000227 C8C7 2047616B750D0A          DB  ' Gaku',0DH,0AH
00022E C8CE 00                      DB  0
                                
00022F C8CF 0300                M2DD:   DW  3
000231 C8D1 F902                    DB  0F9H,2
000233 C8D3 CB02                    DW  715
000235 C8D5 FF0750090182            DB  0FFH,7,80,9,1,082H
00023B C8DB 0700A7000A00            DW  7,0A7H,10
       C8E1                     M2DDE:
[EOF:MSXINIT.ASM:SHIFT_JIS]
                                    INCLUDE "MSXCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                ;   MSX
                                
       C8E1                     INITE:
000241 C8E1                         DS  BDOS-INITE
000266 C906 C33ACD          10      JP  BDOS0
                                
       C909                     WBOOT1:
000269 C909 ED7B0600        20      LD  SP,(SYSTEM+1)
00026D C90D 3E03             7      LD  A,3
00026F C90F CD01D0          17      CALL    MSG_A
       C912                     WBOOT2:
[EOF:MSXCCP.ASM:UTF_8]
                                    INCLUDE "LDCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                
       C912                     COMMAND:
000272 C912 3A3DE3          13      LD  A,(FCB_BAT)
000275 C915 B7               4      OR  A
000276 C916 C258CA          10      JP  NZ,C_BAT1
000279 C919 CDCCC9          17      CALL    SETDTA1
00027C C91C 3A87E4          13      LD  A,(_DVSW)
00027F C91F C641             7      ADD A,'A'
000281 C921 CD01D0          17      CALL    MSG_A
000284 C924 3E3E             7      LD  A,'>'
000286 C926 CD01D0          17      CALL    MSG_A
000289 C929 3E50             7      LD  A,80
00028B C92B 12               7      LD  (DE),A
00028C C92C CDC0D0          17      CALL    _SYS0A      ;(BDOS)文字列入力
00028F C92F CD4DCB          17      CALL    LTNL
       C932                     COMMAND2:
000292 C932 118200          10      LD  DE,DTA1+2
000295 C935 CDFDE4          17      CALL    _COMANL
000298 C938 30D8            12      JR  NC,COMMAND
00029A C93A 1179E4          10      LD  DE,COMERM
00029D C93D CD6CCD          17      CALL    _SYS09      ;(BDOS)文字列出力
0002A0 C940 C7              12      RST 0
                                
       C941                     COMANL:
0002A1 C941 CD5CD4          17      CALL    FILE
0002A4 C944 3A19E4          13      LD  A,(FNAME+4)
0002A7 C947 FE20             7      CP  020H
0002A9 C949 201C            12      JR  NZ,COMB2
0002AB C94B D5              11      PUSH    DE
0002AC C94C 1115E4          10      LD  DE,FNAME
0002AF C94F 1A               7      LD  A,(DE)
0002B0 C950 FE20             7      CP  020H
0002B2 C952 2844            12      JR  Z,SDVSW
0002B4 C954 1B               6      DEC DE
0002B5 C955 1A               7      LD  A,(DE)
0002B6 C956 C6FF             7      ADD A,0FFH
0002B8 C958 3809            12      JR  C,COMB
0002BA C95A 13               6      INC DE
                                
0002BB C95B 210ACD          10      LD  HL,COMTB
0002BE C95E 0608             7      LD  B,COMS
0002C0 C960 CDEBD6          17      CALL    CPNAME
       C963                     COMB:
0002C3 C963 D1              10      POP DE
0002C4 C964 D20F00          10      JP  NC,JP_HL
       C967                     COMB2:
0002C7 C967 EB               4      EX  DE,HL
0002C8 C968 2235CA          16      LD  (COMSWC),HL
0002CB C96B F5              11      PUSH    AF
0002CC C96C CDEDC9          17      CALL    CEXE4
0002CF C96F F1              10      POP AF
0002D0 C970 2115E4          10      LD  HL,FNAME
0002D3 C973 116D00          10      LD  DE,FCB2+1   ;COMMAND NAME
0002D6 C976 010B00          10      LD  BC,11
0002D9 C979 EDB0                    LDIR
0002DB C97B 11DCE2          10      LD  DE,PATHD
       C97E                     CEX1:
0002DE C97E 1A               7      LD  A,(DE)
0002DF C97F FE20             7      CP  020H
0002E1 C981 D8              11      RET C
0002E2 C982 CD51D4          17      CALL    FILEC
0002E5 C985 D5              11      PUSH    DE
0002E6 C986 216D00          10      LD  HL,FCB2+1   ;COMMAND NAME
0002E9 C989 1115E4          10      LD  DE,FNAME
0002EC C98C 010B00          10      LD  BC,11
0002EF C98F EDB0                    LDIR
0002F1 C991 CDEDC9          17      CALL    CEXE4
0002F4 C994 D1              10      POP DE
0002F5 C995 13               6      INC DE
0002F6 C996 18E6            12      JR  CEX1
                                
       C998                     SDVSW:
0002F8 C998 F1              10      POP AF
0002F9 C999 3A14E4          13      LD  A,(FDRV)
0002FC C99C 3D               4      DEC A
0002FD C99D 5F               4      LD  E,A
0002FE C99E 0E0E             7      LD  C,00EH      ;(BDOS)カレントドライブの設定
000300 C9A0 1831            12      JR  SYSTEM0
                                
       C9A2                     OPEN1:
000302 C9A2 2114E4          10      LD  HL,FDRV
       C9A5                     OPEN:
000305 C9A5 0E11             7      LD  C,011H      ;(BDOS)ファイルの検索
       C9A7                     OPEN3:
000307 C9A7 D5              11      PUSH    DE
000308 C9A8 1118E3          10      LD  DE,DTA_CCP
00030B C9AB CDC9C9          17      CALL    SETDTA
00030E C9AE EB               4      EX  DE,HL
00030F C9AF CDD3C9          17      CALL    SYSTEM0
000312 C9B2 D1              10      POP DE
000313 C9B3 C9              10      RET
                                
       C9B4                     OPEN2:
000314 C9B4 0E12             7      LD  C,012H
000316 C9B6 18EF            12      JR  OPEN3
                                
       C9B8                     DEFCB:              ;Z=Ok NZ=Error
000318 C9B8 1118E3          10      LD  DE,DTA_CCP
00031B C9BB CDD1C9          17      CALL    SYSC0F
                                
00031E C9BE 1139E3          10      LD  DE,DTA_CCP+33   ;(FCB)ランダムレコード
000321 C9C1 0604             7      LD  B,4
000323 C9C3 CD1ECC          17      CALL    ZERO_MEMORY_DE
       C9C6                     SETDTA100:
000326 C9C6 110001          10      LD  DE,00100H
       C9C9                     SETDTA:
000329 C9C9 C33FCF          10      JP  _SYS1A      ;(BDOS)DTAの設定
                                
       C9CC                     SETDTA1:
00032C C9CC 118000          10      LD  DE,DTA1
00032F C9CF 18F8            12      JR  SETDTA
                                
       C9D1                     SYSC0F:
000331 C9D1 0E0F             7      LD  C,00FH      ;(BDOS)ファイルのオープン
       C9D3                     SYSTEM0:
000333 C9D3 CD0500          17      CALL    SYSTEM
000336 C9D6 B7               4      OR  A
000337 C9D7 C9              10      RET
                                
       C9D8                     C_CD:
000338 C9D8 0E5A             7      LD  C,05AH
00033A C9DA 18F7            12      JR  SYSTEM0
                                
       C9DC                     S27BUF:
00033C C9DC 2100FE          10      LD  HL,-00200H  ;スクラッチエリア(0100H)+スタック予備(0100H)
00033F C9DF 39              11      ADD HL,SP
000340 C9E0 2E00             7      LD  L,0
000342 C9E2 7C               4      LD  A,H
000343 C9E3 E6F8             7      AND 0F8H
000345 C9E5 67               4      LD  H,A
       C9E6                     S27DTA:
000346 C9E6 1118E3          10      LD  DE,DTA_CCP
       C9E9                     S27:
000349 C9E9 0E27             7      LD  C,027H      ;(BDOS)ランダムブロック読み込み
00034B C9EB 18E6            12      JR  SYSTEM0
                                
       C9ED                     CEXE4:
00034D C9ED 211DE4          10      LD  HL,FNAME+8
000350 C9F0 7E               7      LD  A,(HL)
000351 C9F1 FE20             7      CP  020H
000353 C9F3 2007            12      JR  NZ,CEXE7
000355 C9F5 3E3F             7      LD  A,'?'
000357 C9F7 77               7      LD  (HL),A
000358 C9F8 23               6      INC HL
000359 C9F9 77               7      LD  (HL),A
00035A C9FA 23               6      INC HL
00035B C9FB 77               7      LD  (HL),A
       C9FC                     CEXE7:
00035C C9FC CDA2C9          17      CALL    OPEN1
       C9FF                     CEXE5:
00035F C9FF C0              11      RET NZ
000360 CA00 2A22E3          16      LD  HL,(DTA_CCP+1+9)
000363 CA03 7C               4      LD  A,H
000364 CA04 CD73D7          17      CALL    CAP
000367 CA07 67               4      LD  H,A
000368 CA08 7D               4      LD  A,L
000369 CA09 CD73D7          17      CALL    CAP
00036C CA0C 6F               4      LD  L,A
00036D CA0D 3A21E3          13      LD  A,(DTA_CCP+1+8)
000370 CA10 CD73D7          17      CALL    CAP
000373 CA13 D642             7      SUB 'B'
000375 CA15 282C            12      JR  Z,C_BAT
000377 CA17 3D               4      DEC A       ;'C'
000378 CA18 2805            12      JR  Z,C_EXE
       CA1A                     CEXE6:
00037A CA1A CDB4C9          17      CALL    OPEN2
00037D CA1D 18E0            12      JR  CEXE5
                                
       CA1F                     C_EXE:
00037F CA1F 7C               4      LD  A,H
000380 CA20 FE4D             7      CP  'M'
000382 CA22 20F6            12      JR  NZ,CEXE6
                                
000384 CA24 CDB8C9          17      CALL    DEFCB
000387 CA27 CDDCC9          17      CALL    S27BUF
00038A CA2A 3D               4      DEC A
00038B CA2B 37               4      SCF
00038C CA2C C0              11      RET NZ
00038D CA2D 7C               4      LD  A,H
00038E CA2E B5               4      OR  L
00038F CA2F 37               4      SCF
000390 CA30 C8              11      RET Z
000391 CA31 CDCCC9          17      CALL    SETDTA1
000394 CA34 110000          10      LD  DE,0                ; self-modifying code
       CA35                     COMSWC  EQU $-2
000397 CA37 ED7B0600        20      LD  SP,(SYSTEM+1)
00039B CA3B 67               4      LD  H,A             ; A=0 in SETDTA1(_SYS1A)
00039C CA3C 6F               4      LD  L,A
00039D CA3D E5              11      PUSH    HL              ; push $0000 (reboot address)
00039E CA3E 24               4      INC H
00039F CA3F E5              11      PUSH    HL              ; push $0100 (TPA address)
0003A0 CA40 C3E9CB          10      JP  SETFCB              ; and JP $0100
                                
       CA43                     C_BAT:
0003A3 CA43 114154          10      LD  DE,'A'+'T'*256
0003A6 CA46 ED52            15      SBC HL,DE
0003A8 CA48 20D0            12      JR  NZ,CEXE6
                                
0003AA CA4A CDB8C9          17      CALL    DEFCB
                                
0003AD CA4D 2118E3          10      LD  HL,DTA_CCP
0003B0 CA50 113DE3          10      LD  DE,FCB_BAT
0003B3 CA53 012500          10      LD  BC,37
0003B6 CA56 EDB0                    LDIR
       CA58                     C_BAT1:
0003B8 CA58 CDC6C9          17      CALL    SETDTA100
0003BB CA5B CD8FCA          17      CALL    FGETC_BAT
0003BE CA5E 218100          10      LD  HL,DTA1+1
0003C1 CA61 2025            12      JR  NZ,END_BATCH
0003C3 CA63 FE21             7      CP  021H        ;スペースや改行など制御文字を飛ばす
0003C5 CA65 38F1            12      JR  C,C_BAT1
0003C7 CA67 3620            10      LD  (HL),' '
0003C9 CA69 23               6      INC HL
       CA6A                     C_BAT2:
0003CA CA6A 77               7      LD  (HL),A
0003CB CA6B 23               6      INC HL
0003CC CA6C 7D               4      LD  A,L
0003CD CA6D 3C               4      INC A       ;L==0FFH
0003CE CA6E 2809            12      JR  Z,RUN_BATCH
0003D0 CA70 CD8FCA          17      CALL    FGETC_BAT
0003D3 CA73 2004            12      JR  NZ,RUN_BATCH
0003D5 CA75 FE20             7      CP  020H
0003D7 CA77 30F1            12      JR  NC,C_BAT2
       CA79                     RUN_BATCH:
0003D9 CA79 7D               4      LD  A,L
0003DA CA7A D67F             7      SUB DTA1-1
0003DC CA7C 328000          13      LD  (DTA1),A
0003DF CA7F FE04             7      CP  4
0003E1 CA81 3805            12      JR  C,END_BATCH
0003E3 CA83 3600            10      LD  (HL),0
0003E5 CA85 C332C9          10      JP  COMMAND2
       CA88                     END_BATCH:
0003E8 CA88 AF               4      XOR A       ;バッチファイルを閉じる
0003E9 CA89 323DE3          13      LD  (FCB_BAT),A
0003EC CA8C C300E4          10      JP  CPM_BOOT
                                
       CA8F                     FGETC_BAT:
0003EF CA8F 113DE3          10      LD  DE,FCB_BAT
       CA92                     FGETC:              ;1文字ずつ読み込む
0003F2 CA92 E5              11      PUSH    HL      ;Z:成功
0003F3 CA93 210100          10      LD  HL,1
0003F6 CA96 CDE9C9          17      CALL    S27
0003F9 CA99 E1              10      POP HL
0003FA CA9A 3A0001          13      LD  A,(00100H)
0003FD CA9D C9              10      RET
                                
       CA9E                     C_DEL:
0003FE CA9E CDE9CB          17      CALL    SETFCB
000401 CAA1 CD3CD0          17      CALL    _SYS08      ;(BDOS)エコーなしコンソール入力
                                
000404 CAA4 0E13             7      LD  C,013H
000406 CAA6 180A            12      JR  CDEL1       ;(BDOS)ファイルの削除
                                
       CAA8                     C_REN:
000408 CAA8 CDE9CB          17      CALL    SETFCB
00040B CAAB 3E10             7      LD  A,010H      ;ディレクトリも対象にする
00040D CAAD 326900          13      LD  (FCB1+13),A ;属性
000410 CAB0 0E17             7      LD  C,017H      ;(BDOS)ファイル名の変更
       CAB2                     CDEL1:
000412 CAB2 115C00          10      LD  DE,FCB1
000415 CAB5 CD0500          17      CALL    SYSTEM
000418 CAB8 C6FF             7      ADD A,0FFH
00041A CABA C9              10      RET
                                
       CABB                     C_DIR:
00041B CABB CD51D4          17      CALL    FILEC
00041E CABE 2115E4          10      LD  HL,FDRV+1
000421 CAC1 CDFFCC          17      CALL    CWILD1
000424 CAC4 3EF1             7      LD  A,0F1H
000426 CAC6 3221E4          13      LD  (FDRV+13),A
000429 CAC9 CDA2C9          17      CALL    OPEN1
       CACC                     CDIR1:
00042C CACC B7               4      OR  A
00042D CACD 2008            12      JR  NZ,PDSKF
00042F CACF CD1ACB          17      CALL    P_NAME
000432 CAD2 CDB4C9          17      CALL    OPEN2
000435 CAD5 18F5            12      JR  CDIR1
       CAD7                     PDSKF:
000437 CAD7 3A14E4          13      LD  A,(FDRV)
00043A CADA 5F               4      LD  E,A
00043B CADB 0E1B             7      LD  C,01BH      ;(BDOS)ディスク情報の獲得
00043D CADD CD0500          17      CALL    SYSTEM
000440 CAE0 4F               4      LD  C,A     ;C←1クラスタ辺りの論理セクタ数
000441 CAE1 C601             7      ADD A,001H
000443 CAE3 D8              11      RET C       ;Aが0FFHだった場合
000444 CAE4 3E06             7      LD  A,8-2
       CAE6                     PDS1:               ;HL=未使用クラスタの総数
000446 CAE6 3C               4      INC A
000447 CAE7 CB19             8      RR  C
000449 CAE9 30FB            12      JR  NC,PDS1
       CAEB                     PDS2:               ;B←論理セクタのサイズの上位8ビット
00044B CAEB 3C               4      INC A
00044C CAEC CB18             8      RR  B
00044E CAEE 30FB            12      JR  NC,PDS2
000450 CAF0 47               4      LD  B,A
                                
000451 CAF1 110000          10      LD  DE,0
       CAF4                     PDS3:
000454 CAF4 29              11      ADD HL,HL
000455 CAF5 EB               4      EX  DE,HL
000456 CAF6 ED6A            15      ADC HL,HL
000458 CAF8 EB               4      EX  DE,HL
000459 CAF9 10F9            13      DJNZ    PDS3
       CAFB                     PDSKF1:
00045B CAFB CD87CB          17      CALL    PRDEC_DEHL
00045E CAFE 116DE3          10      LD  DE,FREE
000461 CB01 CD6CCD          17      CALL    _SYS09      ;(BDOS)文字列出力
000464 CB04 CD74CB          17      CALL    PUTDRV
000467 CB07 3E5C             7      LD  A,05CH      ;\
000469 CB09 CD01D0          17      CALL    MSG_A
00046C CB0C 2A22E4          16      LD  HL,(FDRV+14)    ;ディレクトリのクラスタ番号
00046F CB0F AF               4      XOR A
000470 CB10 11FEFF          10      LD  DE,0-2
000473 CB13 19              11      ADD HL,DE
000474 CB14 23               6      INC HL
000475 CB15 DC84CB          17      CALL    C,PRDEC_HL
000478 CB18 1833            12      JR  LTNL
                                
       CB1A                     P_NAME:
00047A CB1A 3A19E3          13      LD  A,(DTA_CCP+1)
00047D CB1D FE2E             7      CP  '.'
00047F CB1F C8              11      RET Z
                                
000480 CB20 3A24E3          13      LD  A,(DTA_CCP+1+00BH)
000483 CB23 F5              11      PUSH    AF
000484 CB24 CB67             8      BIT 4,A
000486 CB26 2808            12      JR  Z,DIR3
000488 CB28 1162E3          10      LD  DE,DIRMES
00048B CB2B CD6CCD          17      CALL    _SYS09      ;(BDOS)文字列出力
00048E CB2E 180A            12      JR  DIR6
       CB30                     DIR3:
000490 CB30 ED5B37E3        20      LD  DE,(DTA_CCP+1+01EH)
000494 CB34 2A35E3          16      LD  HL,(DTA_CCP+1+01CH)
000497 CB37 CD87CB          17      CALL    PRDEC_DEHL
       CB3A                     DIR6:
00049A CB3A F1              10      POP AF
00049B CB3B 0F               4      RRCA
00049C CB3C 9F               4      SBC A,A
00049D CB3D E60A             7      AND '*'-020H
00049F CB3F C620             7      ADD A,020H
0004A1 CB41 CD01D0          17      CALL    MSG_A
0004A4 CB44 CD74CB          17      CALL    PUTDRV
0004A7 CB47 2119E3          10      LD  HL,DTA_CCP+1
0004AA CB4A CDC7CB          17      CALL    FPRNT
                                
       CB4D                     LTNL:
0004AD CB4D 1E03             7      LD  E,3
0004AF CB4F C3CDE4          10      JP  _PRINT
                                
       CB52                     C_PATH:
0004B2 CB52 CD33D5          17      CALL    SPCUT
0004B5 CB55 21DCE2          10      LD  HL,PATHD
0004B8 CB58 FE21             7      CP  021H
0004BA CB5A 300C            12      JR  NC,CPATH0
       CB5C                     CPATHP:
0004BC CB5C 7E               7      LD  A,(HL)
0004BD CB5D 23               6      INC HL
0004BE CB5E FE20             7      CP  020H
0004C0 CB60 3F               4      CCF
0004C1 CB61 30EA            12      JR  NC,LTNL
0004C3 CB63 CD01D0          17      CALL    MSG_A
0004C6 CB66 18F4            12      JR  CPATHP
       CB68                     CPATH0:
0004C8 CB68 FE3B             7      CP  ';'
0004CA CB6A 2001            12      JR  NZ,CPATH1
0004CC CB6C 13               6      INC DE
       CB6D                     CPATH1:
0004CD CB6D EB               4      EX  DE,HL
0004CE CB6E 013B00          10      LD  BC,PATHX
0004D1 CB71 EDB0                    LDIR
0004D3 CB73 C9              10      RET
                                
       CB74                     PUTDRV:
0004D4 CB74 3A14E4          13      LD  A,(FDRV)
0004D7 CB77 CD66D5          17      CALL    GETDRV1
0004DA CB7A C641             7      ADD A,'A'
0004DC CB7C CD01D0          17      CALL    MSG_A
0004DF CB7F 3E3A             7      LD  A,':'
       CB81                     MSG_AR:
0004E1 CB81 C301D0          10      JP  MSG_A
                                
       CB84                     PRDEC_HL:
0004E4 CB84 AF               4      XOR A
0004E5 CB85 5F               4      LD  E,A
0004E6 CB86 57               4      LD  D,A
       CB87                     PRDEC_DEHL:
0004E7 CB87 D5              11      PUSH    DE
0004E8 CB88 110FE4          10      LD  DE,DECBF
0004EB CB8B 0605             7      LD  B,5
0004ED CB8D CD1ECC          17      CALL    ZERO_MEMORY_DE  ;A=0
0004F0 CB90 D1              10      POP DE
                                
0004F1 CB91 0E20             7      LD  C,32
       CB93                     DEC1:
0004F3 CB93 29              11      ADD HL,HL
0004F4 CB94 EB               4      EX  DE,HL
0004F5 CB95 ED6A            15      ADC HL,HL
0004F7 CB97 EB               4      EX  DE,HL
0004F8 CB98 E5              11      PUSH    HL
0004F9 CB99 2113E4          10      LD  HL,DECBF+4
0004FC CB9C 0605             7      LD  B,5
       CB9E                     DEC2:
0004FE CB9E 7E               7      LD  A,(HL)
0004FF CB9F 8F               4      ADC A,A
000500 CBA0 27               4      DAA
000501 CBA1 77               7      LD  (HL),A
000502 CBA2 2B               6      DEC HL
000503 CBA3 10F9            13      DJNZ    DEC2
000505 CBA5 E1              10      POP HL
000506 CBA6 0D               4      DEC C
000507 CBA7 20EA            12      JR  NZ,DEC1
                                
000509 CBA9 210FE4          10      LD  HL,DECBF
00050C CBAC 3E20             7      LD  A,020H
00050E CBAE 0604             7      LD  B,4
       CBB0                     DEC3:
000510 CBB0 CDBDCB          17      CALL    DEC4
000513 CBB3 CDBDCB          17      CALL    DEC4
000516 CBB6 23               6      INC HL
000517 CBB7 10F7            13      DJNZ    DEC3
       CBB9                     DECX:
000519 CBB9 CDBDCB          17      CALL    DEC4
00051C CBBC AF               4      XOR A
       CBBD                     DEC4:
00051D CBBD ED6F            18      RLD
00051F CBBF FE20             7      CP  020H
000521 CBC1 2802            12      JR  Z,DEC5
000523 CBC3 F630             7      OR  030H
       CBC5                     DEC5:
000525 CBC5 18BA            12      JR  MSG_AR
                                
       CBC7                     FPRNT:
000527 CBC7 0608             7      LD  B,8 ;ファイル名を表示
000529 CBC9 CDD8CB          17      CALL    P_N1
00052C CBCC 7E               7      LD  A,(HL)
00052D CBCD CD7FD7          17      CALL    CAP3
000530 CBD0 D8              11      RET C   ;拡張子が無い
                                
000531 CBD1 3E2E             7      LD  A,'.'
000533 CBD3 CD01D0          17      CALL    MSG_A
000536 CBD6 0603             7      LD  B,3 ;拡張子を表示
       CBD8                     P_N1:
000538 CBD8 7E               7      LD  A,(HL)
000539 CBD9 CD7FD7          17      CALL    CAP3
00053C CBDC 3807            12      JR  C,P_N2
00053E CBDE CD01D0          17      CALL    MSG_A
000541 CBE1 23               6      INC HL
000542 CBE2 10F4            13      DJNZ    P_N1
000544 CBE4 C9              10      RET
       CBE5                     P_N2:
000545 CBE5 23               6      INC HL
000546 CBE6 10FD            13      DJNZ    P_N2
000548 CBE8 C9              10      RET
                                
       CBE9                     SETFCB:
000549 CBE9 CD33D5          17      CALL    SPCUT
00054C CBEC 1A               7      LD  A,(DE)
00054D CBED FE20             7      CP  020H
00054F CBEF 3801            12      JR  C,SETFCBA
000551 CBF1 1B               6      DEC DE
       CBF2                     SETFCBA:
000552 CBF2 0624             7      LD  B,36
000554 CBF4 215C00          10      LD  HL,FCB1
000557 CBF7 E5              11      PUSH    HL
000558 CBF8 AF               4      XOR A
000559 CBF9 CD08D5          17      CALL    FILL_MEMORY
00055C CBFC E1              10      POP HL
00055D CBFD D5              11      PUSH    DE
00055E CBFE CDA5CF          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
000561 CC01 216C00          10      LD  HL,FCB2
000564 CC04 CDA5CF          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
000567 CC07 E1              10      POP HL
000568 CC08 010050          10      LD  BC,05000H
00056B CC0B 118100          10      LD  DE,00081H
       CC0E                     SETFCB1:
00056E CC0E 7E               7      LD  A,(HL)
00056F CC0F 23               6      INC HL
000570 CC10 FE20             7      CP  020H
000572 CC12 3805            12      JR  C,SETFCB2
000574 CC14 12               7      LD  (DE),A
000575 CC15 13               6      INC DE
000576 CC16 0C               4      INC C
000577 CC17 10F5            13      DJNZ    SETFCB1
       CC19                     SETFCB2:
000579 CC19 79               4      LD  A,C
00057A CC1A 328000          13      LD  (DTA1),A
00057D CC1D 04               4      INC B
       CC1E                     ZERO_MEMORY_DE:
00057E CC1E AF               4      XOR A
       CC1F                     FILL_MEMORY_DE:
00057F CC1F 12               7      LD  (DE),A
000580 CC20 13               6      INC DE
000581 CC21 10FC            13      DJNZ    FILL_MEMORY_DE
000583 CC23 C9              10      RET
                                
       CC24                     C_COPY:
000584 CC24 CDE9CB          17      CALL    SETFCB
                                
000587 CC27 1161E4          10      LD  DE,ZERO
00058A CC2A CD54D4          17      CALL    FILEC2
00058D CC2D 216C00          10      LD  HL,FCB2
000590 CC30 CDACCF          17      CALL    S29X1
                                
000593 CC33 3E10             7      LD  A,010H
000595 CC35 326900          13      LD  (FCB1+13),A
000598 CC38 216D00          10      LD  HL,FCB2+1
00059B CC3B CDFFCC          17      CALL    CWILD1
       CC3E                     COPY0:
00059E CC3E CDFCCC          17      CALL    CWILD
0005A1 CC41 215C00          10      LD  HL,FCB1
0005A4 CC44 CDA5C9          17      CALL    OPEN
0005A7 CC47 37               4      SCF
       CC48                     COPY1:
0005A8 CC48 C0              11      RET NZ
0005A9 CC49 CDB8C9          17      CALL    DEFCB
                                
0005AC CC4C 3A25E3          13      LD  A,(DTA_CCP+13)
0005AF CC4F CB67             8      BIT 4,A
0005B1 CC51 2821            12      JR  Z,COPY1A
                                
0005B3 CC53 215D00          10      LD  HL,FCB1+1
0005B6 CC56 CD97D8          17      CALL    CHKWILD
0005B9 CC59 3814            12      JR  C,COPY9
                                
0005BB CC5B 3E20             7      LD  A,020H
0005BD CC5D 325D00          13      LD  (FCB1+1),A
0005C0 CC60 2A32E3          16      LD  HL,(DTA_CCP+26)
0005C3 CC63 23               6      INC HL
0005C4 CC64 226A00          16      LD  (FCB1+14),HL
0005C7 CC67 18D5            12      JR  COPY0
                                
       CC69                     COPY8:
0005C9 CC69 CD6CCD          17      CALL    _SYS09      ;(BDOS)文字列出力
0005CC CC6C CD4DCB          17      CALL    LTNL
       CC6F                     COPY9:
0005CF CC6F CDB4C9          17      CALL    OPEN2
0005D2 CC72 18D4            12      JR  COPY1
                                
       CC74                     COPY1A:
0005D4 CC74 216C00          10      LD  HL,FCB2
0005D7 CC77 1114E4          10      LD  DE,FDRV
0005DA CC7A 011AE3          10      LD  BC,DTA_CCP+2
0005DD CC7D EDA0            16      LDI
0005DF CC7F 3E0B             7      LD  A,11
       CC81                     COPY2:
0005E1 CC81 F5              11      PUSH    AF
0005E2 CC82 7E               7      LD  A,(HL)
0005E3 CC83 FE3F             7      CP  '?'
0005E5 CC85 2001            12      JR  NZ,COPY3
0005E7 CC87 0A               7      LD  A,(BC)
       CC88                     COPY3:
0005E8 CC88 12               7      LD  (DE),A
0005E9 CC89 03               6      INC BC
0005EA CC8A 13               6      INC DE
0005EB CC8B 23               6      INC HL
0005EC CC8C F1              10      POP AF
0005ED CC8D 3D               4      DEC A
0005EE CC8E 20F1            12      JR  NZ,COPY2
0005F0 CC90 010500          10      LD  BC,16-11
0005F3 CC93 EDB0                    LDIR
       CC95                     PUTNAME:
0005F5 CC95 215D00          10      LD  HL,FCB1+1
0005F8 CC98 CD97D8          17      CALL    CHKWILD
0005FB CC9B 300B            12      JR  NC,PUTN1
0005FD CC9D 2115E4          10      LD  HL,FDRV+1
000600 CCA0 CDC7CB          17      CALL    FPRNT
000603 CCA3 3E20             7      LD  A,020H
000605 CCA5 CD01D0          17      CALL    MSG_A
       CCA8                     PUTN1:
000608 CCA8 1114E4          10      LD  DE,FDRV
00060B CCAB 0E16             7      LD  C,016H      ;(BDOS)ファイルの作成
00060D CCAD CDD3C9          17      CALL    SYSTEM0
000610 CCB0 2048            12      JR  NZ,COPYE2
000612 CCB2 67               4      LD  H,A     ;A=0
000613 CCB3 6F               4      LD  L,A
000614 CCB4 2235E4          16      LD  (FDRV+33),HL    ;(FCB)ランダムレコード
000617 CCB7 2237E4          16      LD  (FDRV+35),HL
       CCBA                     COPY6:
00061A CCBA CDDCC9          17      CALL    S27BUF
00061D CCBD 47               4      LD  B,A
00061E CCBE 3C               4      INC A
00061F CCBF 2831            12      JR  Z,COPYE
000621 CCC1 7C               4      LD  A,H
000622 CCC2 B5               4      OR  L
000623 CCC3 280C            12      JR  Z,COPY7
000625 CCC5 1114E4          10      LD  DE,FDRV
000628 CCC8 0E26             7      LD  C,026H      ;(BDOS)ランダムブロック書き込み
00062A CCCA CDD3C9          17      CALL    SYSTEM0
00062D CCCD 2023            12      JR  NZ,COPYE
00062F CCCF 10E9            13      DJNZ    COPY6
       CCD1                     COPY7:
000631 CCD1 3A25E3          13      LD  A,(DTA_CCP+13)  ;(FCB)属性
000634 CCD4 3221E4          13      LD  (FDRV+13),A
000637 CCD7 212CE3          10      LD  HL,DTA_CCP+20   ;(FCB)タイムスタンプ
00063A CCDA 1128E4          10      LD  DE,FDRV+20
00063D CCDD 010400          10      LD  BC,4
000640 CCE0 EDB0                    LDIR
                                
000642 CCE2 1114E4          10      LD  DE,FDRV
000645 CCE5 0E10             7      LD  C,010H      ;(BDOS)ファイルのクローズ
000647 CCE7 CDD3C9          17      CALL    SYSTEM0
00064A CCEA 2006            12      JR  NZ,COPYE
                                
00064C CCEC 1171E4          10      LD  DE,OK
00064F CCEF C369CC          10      JP  COPY8
                                
       CCF2                     COPYE:
000652 CCF2 1114E4          10      LD  DE,FDRV
000655 CCF5 0E13             7      LD  C,013H      ;(BDOS)ファイルの削除
000657 CCF7 CD0500          17      CALL    SYSTEM
       CCFA                     COPYE2:
00065A CCFA 37               4      SCF
00065B CCFB C9              10      RET
                                
       CCFC                     CWILD:
00065C CCFC 215D00          10      LD  HL,FCB1+1
       CCFF                     CWILD1:
00065F CCFF 7E               7      LD  A,(HL)
000660 CD00 FE20             7      CP  020H
000662 CD02 C0              11      RET NZ
       CD03                     CWILD2:
000663 CD03 3E3F             7      LD  A,'?'
000665 CD05 060B             7      LD  B,11
000667 CD07 C308D5          10      JP  FILL_MEMORY
                                
       CD0A                     COMTB:
00066A CD0A 44202020                DB  "D   "  ;1
00066E CD0E BBCA                    DW  C_DIR
000670 CD10 44495220                DB  "DIR "  ;2
000674 CD14 BBCA                    DW  C_DIR
000676 CD16 434F5059                DB  "COPY"  ;3
00067A CD1A 24CC                    DW  C_COPY
00067C CD1C 43442020                DB  "CD  "  ;4
000680 CD20 D8C9                    DW  C_CD
000682 CD22 44454C20                DB  "DEL "  ;5
000686 CD26 9ECA                    DW  C_DEL
000688 CD28 50415448                DB  "PATH"  ;6
00068C CD2C 52CB                    DW  C_PATH
00068E CD2E 52454E20                DB  "REN "  ;7
000692 CD32 A8CA                    DW  C_REN
000694 CD34 52454D20                DB  "REM "  ;8
000698 CD38 69CD                    DW  C_REM
[EOF:LDCCP.ASM:SHIFT_JIS]
                                    INCLUDE "LDOS.ASM"
                                
                                ;   LSX-Dodgers OS
                                
       CD3A                     BDOS0:
00069A CD3A E5              11      PUSH    HL
00069B CD3B 79               4      LD  A,C
00069C CD3C FE3C             7      CP  03CH
00069E CD3E 3802            12      JR  C,DOS1
0006A0 CD40 3E3C             7      LD  A,03CH
       CD42                     DOS1:
0006A2 CD42 87               4      ADD A,A
0006A3 CD43 6F               4      LD  L,A
0006A4 CD44 26E5             7      LD  H,STABLE/256
0006A6 CD46 7E               7      LD  A,(HL)
0006A7 CD47 2C               4      INC L
0006A8 CD48 66               7      LD  H,(HL)
0006A9 CD49 6F               4      LD  L,A
0006AA CD4A E3              19      EX  (SP),HL
0006AB CD4B 79               4      LD  A,C
                                ;確認用
                                ;   LD  (0050H),A
0006AC CD4C C9              10      RET
       CD4D                     _DOS2:
0006AD CD4D FE5A             7      CP  05AH        ;(BDOS)カレントディレクトリの変更(_CHDIR)
0006AF CD4F CAE7CF          10      JP  Z,_SYS5A
0006B2 CD52 FE5C             7      CP  05CH        ;(BDOS)ファイル名の解析(_PFILE)
0006B4 CD54 CAA5CF          10      JP  Z,_SYS29
0006B7 CD57 FE5F             7      CP  05FH        ;(BDOS)ディスクバッファのフラッシュ(_FLUSH)
0006B9 CD59 CAA4E1          10      JP  Z,_SYS5F
0006BC CD5C FE6F             7      CP  06FH        ;(BDOS)MSX-DOS のバージョン番号の獲得(_DOSVER)
0006BE CD5E 200A            12      JR  NZ,_ERROR
0006C0 CD60 011D00          10      LD  BC,VER_6F
0006C3 CD63 116001          10      LD  DE,VER
0006C6 CD66 210301          10      LD  HL,MACD
       CD69                     C_REM:
0006C9 CD69 AF               4      XOR A
       CD6A                     _ERROR:
0006CA CD6A A7               4      AND A
0006CB CD6B C9              10      RET
                                
       CD6C                     _SYS09:     ;文字列出力
0006CC CD6C D5              11      PUSH    DE
       CD6D                     _SX09:
0006CD CD6D 1A               7      LD  A,(DE)
0006CE CD6E 13               6      INC DE
0006CF CD6F FE24             7      CP  '$'
0006D1 CD71 2831            12      JR  Z,SX0E2
0006D3 CD73 CD01D0          17      CALL    MSG_A
0006D6 CD76 18F5            12      JR  _SX09
                                
       CD78                     MSX1:
0006D8 CD78 CD01D0          17      CALL    MSG_A
       CD7B                     MSX:
0006DB CD7B 7E               7      LD  A,(HL)
0006DC CD7C 23               6      INC HL
0006DD CD7D B7               4      OR  A
0006DE CD7E 20F8            12      JR  NZ,MSX1
0006E0 CD80 C9              10      RET
                                
       CD81                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0006E1 CD81 212200          10      LD  HL,00022H
0006E4 CD84 7D               4      LD  A,L
0006E5 CD85 C9              10      RET
                                
       CD86                     _SYS0D:     ;(BDOS)ディスクリセット
0006E6 CD86 CDDFE4          17      CALL    _FFLUSH
0006E9 CD89 E5              11      PUSH    HL
0006EA CD8A 218000          10      LD  HL,00080H
0006ED CD8D 228AE4          16      LD  (_DTA),HL
0006F0 CD90 E1              10      POP HL
0006F1 CD91 D5              11      PUSH    DE
0006F2 CD92 1E00             7      LD  E,0
0006F4 CD94 3E                      DB  03EH    ;次の PUSH DE をスキップ
                                
       CD95                     _SYS0E:     ;(BDOS)カレントドライブの設定
0006F5 CD95 D5              11      PUSH    DE
0006F6 CD96 7B               4      LD  A,E
0006F7 CD97 DDE5            15      PUSH    IX
0006F9 CD99 CDDCE4          17      CALL    _GETDPB
0006FC CD9C DDE1            14      POP IX
0006FE CD9E 3804            12      JR  C,SX0E2
000700 CDA0 7B               4      LD  A,E
000701 CDA1 3287E4          13      LD  (_DVSW),A
       CDA4                     SX0E2:
000704 CDA4 D1              10      POP DE
000705 CDA5 C9              10      RET
                                
       CDA6                     _SYS0F:     ;(BDOS)ファイルのオープン
000706 CDA6 CD45D5          17      CALL    SETDRV
000709 CDA9 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
00070C CDAC C602             7      ADD A,002H      ;Write
00070E CDAE 2848            12      JR  Z,FEND0F
000710 CDB0 CD93D8          17      CALL    CHKWILDX
                                
000713 CDB3 D46FD5          17      CALL    NC,SOPENX
       CDB6                     _S16XX:
000716 CDB6 3840            12      JR  C,FEND0F
                                                ;Directory location
000718 CDB8 3A9FE4          13      LD  A,(_FILEN)
00071B CDBB FD7719          19      LD  (IY+25),A   ;(FCB)ディレクトリロケーション
                                ;               _DIRF
00071E CDBE 3AA0E4          13      LD  A,(_DIRF)
000721 CDC1 FD771D          19      LD  (IY+29),A   ;(FCB)ディレクトリモード
                                ;               _FBPS
000724 CDC4 FD731E          19      LD  (IY+30),E   ;(FCB)ディレクトリポジション
000727 CDC7 FD721F          19      LD  (IY+31),D
                                ;               Open(Read)
00072A CDCA FD361CFF        19      LD  (IY+28),0FFH    ;(FCB)オープンモード
                                ;               FILENAME
00072E CDCE FDE5            15      PUSH    IY
000730 CDD0 D1              10      POP DE
000731 CDD1 13               6      INC DE
000732 CDD2 010B00          10      LD  BC,11
000735 CDD5 EDB0                    LDIR
                                ;               Attribute
000737 CDD7 7E               7      LD  A,(HL)
000738 CDD8 FD770D          19      LD  (IY+13),A   ;(FCB)属性(アトリビュート)
00073B CDDB 110B00          10      LD  DE,11       ;Reserved
00073E CDDE 19              11      ADD HL,DE
                                                    ;(FCB)ファイルを最後に変更した時刻
00073F CDDF 11E4E5          10      LD  DE,SDDATA       ;(FCB)ファイルを最後に変更した日付
000742 CDE2 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       CDE4                     S16LOOP:                ;(FCB)ファイルのサイズ(バイト単位)
000744 CDE4 1A               7      LD  A,(DE)
000745 CDE5 13               6      INC DE
000746 CDE6 32EDCD          13      LD  (S16PAT),A
000749 CDE9 7E               7      LD  A,(HL)
00074A CDEA 23               6      INC HL
00074B CDEB FD7700          19      LD  (IY+0),A
       CDED                     S16PAT  EQU $-1
00074E CDEE 10F4            13      DJNZ    S16LOOP
                                
000750 CDF0 AF               4      XOR A
000751 CDF1 FD770C          19      LD  (IY+12),A   ;(FCB)カレントブロック
000754 CDF4 FD2295CE        20      LD  (OFCB_SWC),IY
       CDF8                     FEND0F:
000758 CDF8 1845            12      JR  FEND10
                                
       CDFA                     _SYS10:     ;(BDOS)ファイルのクローズ
00075A CDFA CD45D5          17      CALL    SETDRV
00075D CDFD FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
000760 CE00 D6FE             7      SUB 0FEH
000762 CE02 37               4      SCF
000763 CE03 3F               4      CCF
000764 CE04 2039            12      JR  NZ,FEND10
       CE06                     _S10A:              ;Write
000766 CE06 FD770E          19      LD  (IY+14),A   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
000769 CE09 FD770F          19      LD  (IY+15),A
                                
00076C CE0C FD341C          23      INC (IY+28)     ;(FCB)オープンモード 0FEH->0FFH
00076F CE0F CD8FD9          17      CALL    SETTMS
                                
000772 CE12 FD7E1D          19      LD  A,(IY+29)   ;(FCB)ディレクトリモード
000775 CE15 32A0E4          13      LD  (_DIRF),A
000778 CE18 E67F             7      AND 07FH
00077A CE1A 32BADE          13      LD  (_SECPS),A
00077D CE1D FD5E1E          19      LD  E,(IY+30)   ;(FCB)ディレクトリポジション
000780 CE20 FD561F          19      LD  D,(IY+31)
000783 CE23 CDA4D6          17      CALL    READ_DIR
000786 CE26 3817            12      JR  C,FEND10
                                
000788 CE28 3ACFD5          13  SDECM1: LD  A,(SDECPAT) ;1セクタ辺りのディレクトリエントリ数
00078B CE2B 3D               4      DEC A       ;1024=01FH / 512=00FH / 256=7
00078C CE2C FDA619          19      AND (IY+25)     ;(FCB)ディレクトリロケーション
00078F CE2F 6F               4      LD  L,A
000790 CE30 2600             7      LD  H,0
000792 CE32 29              11      ADD HL,HL       ;*2
000793 CE33 29              11      ADD HL,HL       ;*4
000794 CE34 29              11      ADD HL,HL       ;*8
000795 CE35 29              11      ADD HL,HL       ;*16
000796 CE36 29              11      ADD HL,HL       ;*32
000797 CE37 ED4B7EE5        20      LD  BC,(_DTBUF)
00079B CE3B 09              11      ADD HL,BC
                                
00079C CE3C CDA3D8          17      CALL    SDIRENT
       CE3F                     FEND10:
00079F CE3F 1842            12      JR  FEND
                                
       CE41                     _SYS11:     ;(BDOS)最初のファイルの検索
0007A1 CE41 CD45D5          17      CALL    SETDRV
0007A4 CE44 CD9ED5          17      CALL    SOPEN
       CE47                     _S12X1:
0007A7 CE47 383A            12      JR  C,FEND
0007A9 CE49 CD3DD6          17      CALL    SOPENE2
0007AC CE4C ED5B8AE4        20      LD  DE,(_DTA)
0007B0 CE50 3A88E4          13      LD  A,(_DRV)
0007B3 CE53 3C               4      INC A
0007B4 CE54 12               7      LD  (DE),A
0007B5 CE55 D5              11      PUSH    DE
0007B6 CE56 13               6      INC DE
0007B7 CE57 012000          10      LD  BC,32
0007BA CE5A EDB0                    LDIR
0007BC CE5C FD6E0E          19      LD  L,(IY+14)   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
0007BF CE5F FD660F          19      LD  H,(IY+15)
0007C2 CE62 22F4E5          16      LD  (SCDIR),HL
0007C5 CE65 2A9AE4          16      LD  HL,(_FBPS)
0007C8 CE68 22F6E5          16      LD  (SFBPS),HL
0007CB CE6B 2A9FE4          16      LD  HL,(_FILEN)
0007CE CE6E 7C               4      LD  A,H
0007CF CE6F B7               4      OR  A
0007D0 CE70 2806            12      JR  Z,_S12DIR
0007D2 CE72 3ABADE          13      LD  A,(_SECPS)
0007D5 CE75 F680             7      OR  080H
0007D7 CE77 67               4      LD  H,A
       CE78                     _S12DIR:
0007D8 CE78 22F8E5          16      LD  (SFNDF),HL  ;Directory position and Flags
0007DB CE7B E1              10      POP HL
0007DC CE7C 1139E4          10      LD  DE,SFILE
0007DF CE7F 0E21             7      LD  C,33
       CE81                     _S11B:
0007E1 CE81 EDB0                    LDIR
       CE83                     FEND:
0007E3 CE83 9F               4      SBC A,A     ;CF=0 A=0 : CF=1 A=0FFH
       CE84                     FENDE:
0007E4 CE84 FDE1            14      POP IY
0007E6 CE86 C1              10      POP BC
0007E7 CE87 D1              10      POP DE
0007E8 CE88 E1              10      POP HL
0007E9 CE89 C9              10      RET
                                
       CE8A                     _SYS12:     ;(BDOS)次のファイルの検索
0007EA CE8A E5              11      PUSH    HL
0007EB CE8B D5              11      PUSH    DE
0007EC CE8C C5              11      PUSH    BC
0007ED CE8D FDE5            15      PUSH    IY
0007EF CE8F CD02D6          17      CALL    NOPEN
0007F2 CE92 18B3            12      JR  _S12X1
                                
       CE94                     _S16K:
0007F4 CE94 110000          10      LD  DE,0
       CE95                     OFCB_SWC    EQU $-2
0007F7 CE97 D5              11      PUSH    DE
0007F8 CE98 061A             7      LD  B,26        ;First cluster
       CE9A                     S16K1:
0007FA CE9A 13               6      INC DE
0007FB CE9B 23               6      INC HL
0007FC CE9C 10FC            13      DJNZ    S16K1
                                
0007FE CE9E 1A               7      LD  A,(DE)
0007FF CE9F BE               7      CP  (HL)
000800 CEA0 2015            12      JR  NZ,S16K2
000802 CEA2 13               6      INC DE
000803 CEA3 23               6      INC HL
000804 CEA4 1A               7      LD  A,(DE)
000805 CEA5 BE               7      CP  (HL)
000806 CEA6 200F            12      JR  NZ,S16K2
                                
000808 CEA8 E1              10      POP HL
000809 CEA9 FDE5            15      PUSH    IY
00080B CEAB D1              10      POP DE
00080C CEAC 7E               7      LD  A,(HL)
00080D CEAD CD5AD5          17      CALL    IS_SAME_DRV_A_DE
000810 CEB0 2006            12      JR  NZ,S16K3
                                                ;ここはCFが必ず0
000812 CEB2 ED52            15      SBC HL,DE       ;CP HL,DE
000814 CEB4 37               4      SCF
000815 CEB5 C0              11      RET NZ
000816 CEB6 E5              11      PUSH    HL
       CEB7                     S16K2:
000817 CEB7 E1              10      POP HL
       CEB8                     S16K3:
000818 CEB8 FDE5            15      PUSH    IY
00081A CEBA D1              10      POP DE
       CEBB                     _SYS13:     ;(BDOS)ファイルの削除
00081B CEBB CD45D5          17      CALL    SETDRV
00081E CEBE CDC9D7          17      CALL    KILL
       CEC1                     FEND13:
000821 CEC1 18C0            12      JR  FEND
                                
       CEC3                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
000823 CEC3 CD45D5          17      CALL    SETDRV
000826 CEC6 CDFBD9          17      CALL    INIT_SEQ
       CEC9                     SREAD:
000829 CEC9 CD43DA          17      CALL    RB_READ
                                
00082C CECC C601             7      ADD A,001H
00082E CECE 38B3            12      JR  C,FEND
                                
000830 CED0 7D               4      LD  A,L
000831 CED1 D601             7      SUB 001H
       CED3                     FENDX:
000833 CED3 9F               4      SBC A,A
000834 CED4 E603             7      AND 3
000836 CED6 1F               4      RRA
000837 CED7 18AB            12      JR  FENDE
                                
       CED9                     _SYS15:     ;(BDOS)シーケンシャルな書き込み
000839 CED9 CD45D5          17      CALL    SETDRV
00083C CEDC CDFBD9          17      CALL    INIT_SEQ
       CEDF                     SWRITE:
00083F CEDF CD3CDA          17      CALL    RB_WRITE
                                
000842 CEE2 C6FF             7      ADD A,0FFH
000844 CEE4 18ED            12      JR  FENDX
                                
       CEE6                     _SYS17:     ;(BDOS)ファイル名の変更
000846 CEE6 CD45D5          17      CALL    SETDRV
000849 CEE9 CD1FD8          17      CALL    NAME
00084C CEEC 18D3            12      JR  FEND13
                                
       CEEE                     _SYS16:     ;(BDOS)ファイルの作成
00084E CEEE CD45D5          17      CALL    SETDRV
                                
000851 CEF1 CD93D8          17      CALL    CHKWILDX
000854 CEF4 38CB            12      JR  C,FEND13
000856 CEF6 FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
000859 CEF9 FE05             7      CP  5
00085B CEFB 2805            12      JR  Z,_S16X2
00085D CEFD FE21             7      CP  021H
00085F CEFF DAC1CE          10      JP  C,FEND13
       CF02                     _S16X2:
                                ;               Clear FCB
000862 CF02 FDE5            15      PUSH    IY
000864 CF04 E1              10      POP HL
000865 CF05 011000          10      LD  BC,16
000868 CF08 09              11      ADD HL,BC
       CF09                     _S16X1:
000869 CF09 70               7      LD  (HL),B      ;B=0
00086A CF0A 23               6      INC HL
00086B CF0B 0D               4      DEC C
00086C CF0C 20FB            12      JR  NZ,_S16X1
                                
00086E CF0E CD94D9          17      CALL    SETTMSX
000871 CF11 FD360DFF        19      LD  (IY+13),0FFH    ;(FCB)Attribute
000875 CF15 CD6FD5          17      CALL    SOPENX
000878 CF18 3F               4      CCF
000879 CF19 CC94CE          17      CALL    Z,_S16K
00087C CF1C D44ED6          17      CALL    NC,COPEN
00087F CF1F D4A3D8          17      CALL    NC,SDIRENT
000882 CF22 C3B6CD          10      JP  _S16XX
                                
       CF25                     _SYS21:     ;(BDOS)ランダムな読み出し
000885 CF25 CD45D5          17      CALL    SETDRV
000888 CF28 CDDFD9          17      CALL    INIT_RND
00088B CF2B 189C            12      JR  SREAD
                                
       CF2D                     _SYS22:     ;(BDOS)ランダムな書き込み
       CF2D                     _SYS28:     ;(BDOS)ランダムな書き込み・その2
00088D CF2D CD45D5          17      CALL    SETDRV
000890 CF30 CDDFD9          17      CALL    INIT_RND
000893 CF33 18AA            12      JR  SWRITE
                                
       CF35                     _SYS18:     ;(BDOS)ログインベクトルの獲得
000895 CF35 21FF00          10      LD  HL,000FFH
000898 CF38 AF               4      XOR A
000899 CF39 C9              10      RET
                                
       CF3A                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00089A CF3A 3A87E4          13      LD  A,(_DVSW)
00089D CF3D A7               4      AND A
00089E CF3E C9              10      RET
                                
       CF3F                     _SYS1A:     ;(BDOS)DTAの設定
00089F CF3F ED538AE4        20      LD  (_DTA),DE
0008A3 CF43 AF               4      XOR A
0008A4 CF44 C9              10      RET
                                
       CF45                     _SYS1B:     ;(BDOS)ディスク情報の獲得
0008A5 CF45 7B               4      LD  A,E
0008A6 CF46 CD53D5          17      CALL    GETDRV
0008A9 CF49 CDDCE4          17      CALL    _GETDPB
0008AC CF4C D4E2E4          17      CALL    NC,_RDFATX
0008AF CF4F 210000          10      LD  HL,0
0008B2 CF52 D46DD9          17      CALL    NC,DSKF
                                
0008B5 CF55 ED5B6ED9        20      LD  DE,(MAXCLP) ;DPB_MAXCL-1
0008B9 CF59 1B               6      DEC DE      ;DE←クラスタの総数
0008BA CF5A FD2A7CE5        20      LD  IY,(_FATBF) ;IY←メモリ上のFATの先頭アドレス
0008BE CF5E 9F               4      SBC A,A
0008BF CF5F D8              11      RET C
0008C0 CF60 4F               4      LD  C,A     ;C=0
0008C1 CF61 DD7E0F          19      LD  A,(IX+DPB_BPS)
0008C4 CF64 E607             7      AND 7
0008C6 CF66 47               4      LD  B,A
0008C7 CF67 DD7E07          19      LD  A,(IX+DPB_SECPCL)
0008CA CF6A C9              10      RET
                                
       CF6B                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
0008CB CF6B AF               4      XOR A
0008CC CF6C 67               4      LD  H,A
0008CD CF6D 6F               4      LD  L,A
0008CE CF6E C9              10      RET
                                
       CF6F                     _SYS1F:     ;(BDOS)ディスク装置のパラメータの読み出し
0008CF CF6F 2100E6          10      LD  HL,_DEVICE
0008D2 CF72 7B               4      LD  A,E
0008D3 CF73 C3DCE4          10      JP  _GETDPB
                                
       CF76                     _SYS23:     ;(BDOS)ファイルサイズの獲得
0008D6 CF76 E5              11      PUSH    HL
0008D7 CF77 2A1EE5          16      LD  HL,(STABLE+2*00FH)  ;ファイルのオープン
0008DA CF7A CD0F00          17      CALL    JP_HL
0008DD CF7D 381B            12      JR  C,_S23X1
                                
0008DF CF7F D5              11      PUSH    DE      ;EX DE,IY
0008E0 CF80 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0008E2 CF82 FD7E10          19      LD  A,(IY+16)   ;(FCB)ファイルのサイズ(バイト単位)
0008E5 CF85 FD6E11          19      LD  L,(IY+17)   ;
0008E8 CF88 FD6612          19      LD  H,(IY+18)   ;
0008EB CF8B C5              11      PUSH    BC      ;
0008EC CF8C FD4613          19      LD  B,(IY+19)   ;
0008EF CF8F CDD1D9          17      CALL    GET_CPM_R_SIZE
0008F2 CF92 C1              10      POP BC
       CF93                     _S24X1:
0008F3 CF93 CDF1D9          17      CALL    SET_RR_AHL
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
0008F6 CF96 FDE3            23      EX  (SP),IY     ;
0008F8 CF98 D1              10      POP DE      ;
                                
0008F9 CF99 AF               4      XOR A
       CF9A                     _S23X1:
0008FA CF9A E1              10      POP HL
0008FB CF9B C9              10      RET
                                
       CF9C                     _SYS24:     ;(BDOS)ランダムレコードフィールドの設定
0008FC CF9C E5              11      PUSH    HL
0008FD CF9D D5              11      PUSH    DE      ;EX DE,IY
0008FE CF9E FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
000900 CFA0 CD03DA          17      CALL    GETSEQ
000903 CFA3 18EE            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       CFA5                     _SYS29:     ;(BDOS)ファイル名の解析(_PPATH)
000905 CFA5 C5              11      PUSH    BC
000906 CFA6 E5              11      PUSH    HL
000907 CFA7 CD5CD4          17      CALL    FILE
00090A CFAA E1              10      POP HL
00090B CFAB C1              10      POP BC
       CFAC                     S29X1:
00090C CFAC C5              11      PUSH    BC
00090D CFAD D5              11      PUSH    DE
00090E CFAE E5              11      PUSH    HL
00090F CFAF EB               4      EX  DE,HL
000910 CFB0 AF               4      XOR A
000911 CFB1 3221E4          13      LD  (FDRV+13),A
000914 CFB4 2114E4          10      LD  HL,FDRV
000917 CFB7 011000          10      LD  BC,16
00091A CFBA EDB0                    LDIR
00091C CFBC E1              10      POP HL
00091D CFBD D1              10      POP DE
00091E CFBE C1              10      POP BC
00091F CFBF C9              10      RET
                                
       CFC0                     _SYS30:     ;(BDOS)論理セクタを用いた書き込み
000920 CFC0 C5              11      PUSH    BC
000921 CFC1 0154E0          10      LD  BC,DWT24B
000924 CFC4 1804            12      JR  S2FX
       CFC6                     _SYS2F:
000926 CFC6 C5              11      PUSH    BC
000927 CFC7 0144E0          10      LD  BC,DRD24B
       CFCA                     S2FX:
00092A CFCA ED43E0CF        20      LD  (S2FPAT+1),BC
00092E CFCE CDDFE4          17      CALL    _FFLUSH
                                
000931 CFD1 D5              11      PUSH    DE
000932 CFD2 E5              11      PUSH    HL
000933 CFD3 7D               4      LD  A,L     ;Drive
000934 CFD4 CDD9E4          17      CALL    _CHGDRV
000937 CFD7 3809            12      JR  C,S30X2
000939 CFD9 44               4      LD  B,H     ;Number of clusters
00093A CFDA 2A8AE4          16      LD  HL,(_DTA)
                                
00093D CFDD 0E00             7      LD  C,0
00093F CFDF CD44E0          17  S2FPAT: CALL    DRD24B
       CFE2                     S30X2:
000942 CFE2 E1              10      POP HL
000943 CFE3 D1              10      POP DE
000944 CFE4 C1              10      POP BC
000945 CFE5 9F               4      SBC A,A
000946 CFE6 C9              10      RET
                                
       CFE7                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
000947 CFE7 C5              11      PUSH    BC
000948 CFE8 D5              11      PUSH    DE
000949 CFE9 E5              11      PUSH    HL
00094A CFEA CD51D4          17      CALL    FILEC
00094D CFED 210000          10      LD  HL,0
000950 CFF0 1114E4          10      LD  DE,FDRV
000953 CFF3 2A4EE5          16      LD  HL,(STABLE+2*027H)  ;ランダムブロック読み込み
000956 CFF6 CD0F00          17      CALL    JP_HL
000959 CFF9 18E7            12      JR  S30X2
[EOF:LDOS.ASM:SHIFT_JIS]
                                    INCLUDE "MSXIO.ASM"
                                
                                ;   LSX-Dodgers IO
                                ;   MSX
                                
       CD6A                     _SYS04  EQU _ERROR      ;(BDOS)外部出力
       CD6A                     _SYS05  EQU _ERROR      ;(BDOS)プリンタ出力
       CD6A                     _SYS1C  EQU _ERROR      ;(BDOS)ディスクの書き込み禁止化
       CD6A                     _SYS1E  EQU _ERROR      ;(BDOS)ファイル属性の設定
       CD6A                     _SYS20  EQU _ERROR      ;(BDOS)利用者番号の設定と読み出し
       CD6A                     _SYS2E  EQU _ERROR      ;(BDOS)ベリファイ・フラグの設定
                                
       0000                     INT EQU 0
       0000                     INTCTCE EQU 0
       0000                     INTCTC2 EQU 0
                                
       0000                     CTRL00  EQU 0
       0000                     CTRL03  EQU 0
       0000                     CTRL04  EQU 0
       0000                     CTRL05  EQU 0
       0000                     CTRL06  EQU 0
       0000                     CTRL07  EQU 0
       0000                     CTRL08  EQU 0
       0000                     CTRL09  EQU 0
       0000                     CTRL0A  EQU 0
       0000                     CTRL0B  EQU 0
       0000                     CTRL0C  EQU 0
       0000                     CTRL0D  EQU 0
       0000                     CTRL0E  EQU 0
       0000                     CTRL12  EQU 0
       0000                     CTRL1B  EQU 0
       0000                     CTRL1C  EQU 0
       0000                     CTRL1D  EQU 0
       0000                     CTRL1E  EQU 0
       0000                     CTRL1F  EQU 0
                                
       CFFB                     PRINT:
00095B CFFB 7B               4      LD  A,E
00095C CFFC 1803            12      JR  MSG_A
                                
       CFFE                     _SYS01:     ;(BDOS)コンソール入力
00095E CFFE CD09E4          17      CALL    _SYS07
       D001                     MSG_A:
000961 D001 FE03             7      CP  3
000963 D003 2814            12      JR  Z,MSG_BR
       D005                     MSGA1:
000965 D005 F5              11      PUSH    AF
000966 D006 C5              11      PUSH    BC
000967 D007 D5              11      PUSH    DE
000968 D008 E5              11      PUSH    HL
000969 D009 DDE5            15      PUSH    IX
00096B D00B DD21A200        14      LD  IX,CHPUT
00096F D00F CD14D2          17      CALL    CALSLT_R
000972 D012 DDE1            14      POP IX
000974 D014 E1              10      POP HL
000975 D015 D1              10      POP DE
000976 D016 C1              10      POP BC
       D017                     MSGA2:
000977 D017 F1              10      POP AF
000978 D018 C9              10      RET
       D019                     MSG_BR:
000979 D019 F5              11      PUSH    AF
00097A D01A 3ADDF3          13      LD  A,(CSRX)
00097D D01D FE02             7      CP  2
00097F D01F 38F6            12      JR  C,MSGA2
000981 D021 F1              10      POP AF
       D022                     MSG_CR:
000982 D022 F5              11      PUSH    AF
000983 D023 3E0D             7      LD  A,00DH
000985 D025 CD05D0          17      CALL    MSGA1
000988 D028 3E0A             7      LD  A,00AH
00098A D02A CD05D0          17      CALL    MSGA1
00098D D02D F1              10      POP AF
00098E D02E C9              10      RET
                                
       D02F                     _SYS02:     ;(BDOS)コンソール出力
00098F D02F CD4AD0          17      CALL    BREAK
000992 D032 1805            12      JR  PRINTX
                                
       D034                     _SYS06:     ;(BDOS)コンソール直接入出力
000994 D034 7B               4      LD  A,E
000995 D035 3C               4      INC A
000996 D036 CACAE4          10      JP  Z,_INKEY
       D039                     PRINTX:
000999 D039 C3CDE4          10      JP  _PRINT
                                
       D03C                     _SYS08:     ;(BDOS)エコーなしコンソール入力
00099C D03C CD09E4          17      CALL    _SYS07
00099F D03F FE03             7      CP  3
0009A1 D041 CCF4E4          17      CALL    Z,_BREAK
0009A4 D044 FE13             7      CP  013H        ;CTRL+S
0009A6 D046 C0              11      RET NZ
       D047                     PAUSE:
0009A7 D047 CD61D0          17      CALL    KEYBC
                                
       D04A                     BREAK:
0009AA D04A F5              11      PUSH    AF
0009AB D04B C5              11      PUSH    BC
0009AC D04C D5              11      PUSH    DE
0009AD D04D E5              11      PUSH    HL
0009AE D04E DDE5            15      PUSH    IX
0009B0 D050 DD21B700        14      LD  IX,BREAKX
0009B4 D054 CD14D2          17      CALL    CALSLT_R
0009B7 D057 DDE1            14      POP IX
0009B9 D059 E1              10      POP HL
0009BA D05A D1              10      POP DE
0009BB D05B C1              10      POP BC
0009BC D05C DCF4E4          17      CALL    C,_BREAK
0009BF D05F F1              10      POP AF
0009C0 D060 C9              10      RET
       D061                     KEYBC:
0009C1 D061 F5              11      PUSH    AF
0009C2 D062 C5              11      PUSH    BC
0009C3 D063 D5              11      PUSH    DE
0009C4 D064 E5              11      PUSH    HL
0009C5 D065 DDE5            15      PUSH    IX
0009C7 D067 DD215601        14      LD  IX,KILBUF
0009CB D06B CD14D2          17      CALL    CALSLT_R
0009CE D06E DDE1            14      POP IX
0009D0 D070 E1              10      POP HL
0009D1 D071 D1              10      POP DE
0009D2 D072 C1              10      POP BC
0009D3 D073 F1              10      POP AF
0009D4 D074 C9              10      RET
       D075                     FLGET:
0009D5 D075 C5              11      PUSH    BC
0009D6 D076 D5              11      PUSH    DE
0009D7 D077 E5              11      PUSH    HL
0009D8 D078 DDE5            15      PUSH    IX
0009DA D07A CDDFE4          17      CALL    _FFLUSH
0009DD D07D 181B            12      JR  FLGET1
       D07E                     CBIOS_SWC1  EQU $-1
0009DF D07F CDFCD1          17      CALL    GETVRAM
                                
0009E2 D082 E5              11      PUSH    HL
0009E3 D083 DD214A00        14      LD  IX,RDVRM
0009E7 D087 CD14D2          17      CALL    CALSLT_R
0009EA D08A E1              10      POP HL
0009EB D08B 32A6D0          13      LD  (SWCCHR),A
                                
0009EE D08E E5              11      PUSH    HL
0009EF D08F 3EFF             7      LD  A,0FFH
0009F1 D091 DD214D00        14      LD  IX,WRTVRM
0009F5 D095 CD14D2          17      CALL    CALSLT_R
0009F8 D098 E1              10      POP HL
                                
0009F9 D099 E5              11      PUSH    HL
       D09A                     FLGET1:
0009FA D09A DD219F00        14      LD  IX,CHGET
0009FE D09E CD14D2          17      CALL    CALSLT_R
000A01 D0A1 180C            12      JR  FLGET2
       D0A2                     CBIOS_SWC2  EQU $-1
000A03 D0A3 E1              10      POP HL
                                
000A04 D0A4 F5              11      PUSH    AF
000A05 D0A5 3E00             7      LD  A,0
       D0A6                     SWCCHR  EQU $-1
000A07 D0A7 DD214D00        14      LD  IX,WRTVRM
000A0B D0AB CD14D2          17      CALL    CALSLT_R
000A0E D0AE F1              10      POP AF
       D0AF                     FLGET2:
000A0F D0AF DDE1            14      POP IX
000A11 D0B1 E1              10      POP HL
000A12 D0B2 D1              10      POP DE
000A13 D0B3 C1              10      POP BC
000A14 D0B4 FE03             7      CP  3
000A16 D0B6 C0              11      RET NZ
000A17 D0B7 C300E4          10      JP  CPM_BOOT
                                
       D0BA                     INKEY:
000A1A D0BA CD06E4          17      CALL    CPM_CONST
000A1D D0BD C8              11      RET Z
000A1E D0BE 18B5            12      JR  FLGET
                                
       D0C0                     _SYS0A:     ;(BDOS)文字列入力
000A20 D0C0 C5              11      PUSH    BC
000A21 D0C1 E5              11      PUSH    HL
000A22 D0C2 D5              11      PUSH    DE
000A23 D0C3 CDECD0          17      CALL    GETL
000A26 D0C6 111FF4          10      LD  DE,KBUF
000A29 D0C9 E1              10      POP HL
000A2A D0CA E5              11      PUSH    HL
000A2B D0CB 0E00             7      LD  C,0
000A2D D0CD 3004            12      JR  NC,SAX0
000A2F D0CF 23               6      INC HL
000A30 D0D0 23               6      INC HL
000A31 D0D1 1808            12      JR  SAX4
       D0D3                     SAX0:
000A33 D0D3 46               7      LD  B,(HL)
000A34 D0D4 23               6      INC HL
       D0D5                     SAX1:
000A35 D0D5 23               6      INC HL
000A36 D0D6 1A               7      LD  A,(DE)
000A37 D0D7 13               6      INC DE
000A38 D0D8 B7               4      OR  A
000A39 D0D9 2004            12      JR  NZ,SAX2
       D0DB                     SAX4:
000A3B D0DB 360D            10      LD  (HL),00DH
000A3D D0DD 1804            12      JR  SAX3
       D0DF                     SAX2:
000A3F D0DF 77               7      LD  (HL),A
000A40 D0E0 0C               4      INC C
000A41 D0E1 10F2            13      DJNZ    SAX1
       D0E3                     SAX3:
000A43 D0E3 D1              10      POP DE
000A44 D0E4 79               4      LD  A,C
000A45 D0E5 13               6      INC DE
000A46 D0E6 12               7      LD  (DE),A
000A47 D0E7 1B               6      DEC DE
000A48 D0E8 E1              10      POP HL
000A49 D0E9 C1              10      POP BC
000A4A D0EA A7               4      AND A
000A4B D0EB C9              10      RET
       D0EC                     GETL:
000A4C D0EC DDE5            15      PUSH    IX
000A4E D0EE FDE5            15      PUSH    IY
                                
000A50 D0F0 2ADCF3          16      LD  HL,(CSRY)
000A53 D0F3 22CAFB          16      LD  (FSTPOS),HL
       D0F6                     GETL1:
000A56 D0F6 CD3CD0          17      CALL    _SYS08
000A59 D0F9 FE09             7      CP  9
000A5B D0FB 2008            12      JR  NZ,GETL1V
000A5D D0FD 211FF4          10      LD  HL,KBUF
000A60 D100 CD7BCD          17      CALL    MSX
000A63 D103 18F1            12      JR  GETL1
       D105                     GETL1V:
000A65 D105 5F               4      LD  E,A
000A66 D106 FE08             7      CP  8
000A68 D108 CCA2D1          17      CALL    Z,CTRL02
000A6B D10B FE20             7      CP  020H
000A6D D10D D4CED1          17      CALL    NC,INSERT
000A70 D110 CD05D0          17      CALL    MSGA1
                                
000A73 D113 7B               4      LD  A,E
000A74 D114 FE0D             7      CP  00DH
000A76 D116 20DE            12      JR  NZ,GETL1
                                
000A78 D118 111FF4          10      LD  DE,KBUF
000A7B D11B 3AB0F3          13      LD  A,(LINLEN)
000A7E D11E 47               4      LD  B,A
000A7F D11F CD1ECC          17      CALL    ZERO_MEMORY_DE
                                
000A82 D122 2ACAFB          16      LD  HL,(FSTPOS)
000A85 D125 3ADCF3          13      LD  A,(CSRY)
000A88 D128 6F               4      LD  L,A
000A89 D129 E5              11      PUSH    HL
000A8A D12A CDFFD1          17      CALL    LOC0
000A8D D12D 4D               4      LD  C,L
000A8E D12E 44               4      LD  B,H
000A8F D12F E1              10      POP HL
000A90 D130 3AB0F3          13      LD  A,(LINLEN)
000A93 D133 94               4      SUB H
000A94 D134 3D               4      DEC A
000A95 D135 5F               4      LD  E,A
000A96 D136 211FF4          10      LD  HL,KBUF
       D139                     GETL2:
000A99 D139 CDD0E4          17      CALL    _SCRN
000A9C D13C 03               6      INC BC
000A9D D13D 77               7      LD  (HL),A
000A9E D13E 23               6      INC HL
000A9F D13F 1D               4      DEC E
000AA0 D140 20F7            12      JR  NZ,GETL2
000AA2 D142 CD22D0          17      CALL    MSG_CR
                                
000AA5 D145 FDE1            14      POP IY
000AA7 D147 DDE1            14      POP IX
       D149                     GETL3:
000AA9 D149 2B               6      DEC HL
000AAA D14A 7E               7      LD  A,(HL)
000AAB D14B FE21             7      CP  021H
000AAD D14D D0              11      RET NC
000AAE D14E 3600            10      LD  (HL),0
000AB0 D150 15               4      DEC D
000AB1 D151 20F6            12      JR  NZ,GETL3
000AB3 D153 C9              10      RET
                                
       D154                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       D154                     CONSTX:
000AB4 D154 C5              11      PUSH    BC
000AB5 D155 D5              11      PUSH    DE
000AB6 D156 E5              11      PUSH    HL
000AB7 D157 DDE5            15      PUSH    IX
000AB9 D159 DD219C00        14      LD  IX,CHSNS
000ABD D15D CD14D2          17      CALL    CALSLT_R
000AC0 D160 DDE1            14      POP IX
000AC2 D162 E1              10      POP HL
000AC3 D163 D1              10      POP DE
000AC4 D164 C1              10      POP BC
000AC5 D165 C9              10      RET
                                
       D166                     _SYS2A:     ;(BDOS)日付の獲得
000AC6 D166 AF               4      XOR A
000AC7 D167 57               4      LD  D,A
000AC8 D168 5F               4      LD  E,A
000AC9 D169 67               4      LD  H,A
000ACA D16A 6F               4      LD  L,A
000ACB D16B C9              10      RET
                                
       D16C                     _SYS2C:     ;(BDOS)時刻の獲得
000ACC D16C AF               4      XOR A
000ACD D16D 57               4      LD  D,A
000ACE D16E 5F               4      LD  E,A
000ACF D16F 67               4      LD  H,A
000AD0 D170 6F               4      LD  L,A
000AD1 D171 C9              10      RET
                                
       D172                     POS:
000AD2 D172 F5              11      PUSH    AF
000AD3 D173 2ADCF3          16      LD  HL,(CSRY)
000AD6 D176 7D               4      LD  A,L
000AD7 D177 6C               4      LD  L,H
000AD8 D178 67               4      LD  H,A
000AD9 D179 2C               4      INC L
000ADA D17A 24               4      INC H
000ADB D17B F1              10      POP AF
000ADC D17C C9              10      RET
                                
       D17D                     LOC:
000ADD D17D F5              11      PUSH    AF
000ADE D17E E5              11      PUSH    HL
000ADF D17F 7D               4      LD  A,L
000AE0 D180 6C               4      LD  L,H
000AE1 D181 67               4      LD  H,A
000AE2 D182 2D               4      DEC L
000AE3 D183 25               4      DEC H
000AE4 D184 DDE5            15      PUSH    IX
000AE6 D186 DD21C600        14      LD  IX,POSIT
000AEA D18A CD14D2          17      CALL    CALSLT_R
000AED D18D DDE1            14      POP IX
000AEF D18F E1              10      POP HL
000AF0 D190 F1              10      POP AF
000AF1 D191 C9              10      RET
       D192                     SCRN:
000AF2 D192 E5              11      PUSH    HL
000AF3 D193 DDE5            15      PUSH    IX
                                
000AF5 D195 69               4      LD  L,C
000AF6 D196 60               4      LD  H,B
000AF7 D197 DD214A00        14      LD  IX,RDVRM
000AFB D19B CD14D2          17      CALL    CALSLT_R
                                
000AFE D19E DDE1            14      POP IX
000B00 D1A0 E1              10      POP HL
000B01 D1A1 C9              10      RET
                                
       D1A2                     CTRL02:
000B02 D1A2 F5              11      PUSH    AF
000B03 D1A3 D5              11      PUSH    DE
000B04 D1A4 2ADCF3          16      LD  HL,(CSRY)
000B07 D1A7 3AB0F3          13      LD  A,(LINLEN)
000B0A D1AA 4F               4      LD  C,A
000B0B D1AB 94               4      SUB H   ;CSRX
000B0C D1AC C602             7      ADD A,2
000B0E D1AE 47               4      LD  B,A ;カーソルより右の文字数
000B0F D1AF 61               4      LD  H,C ;LINLEN
000B10 D1B0 C5              11      PUSH    BC
000B11 D1B1 CDFFD1          17      CALL    LOC0
000B14 D1B4 C1              10      POP BC
                                
000B15 D1B5 1620             7      LD  D,020H
       D1B7                     C8X1:
000B17 D1B7 DD214A00        14      LD  IX,RDVRM
000B1B D1BB CD14D2          17      CALL    CALSLT_R
000B1E D1BE 4F               4      LD  C,A
000B1F D1BF 7A               4      LD  A,D
000B20 D1C0 DD214D00        14      LD  IX,WRTVRM
000B24 D1C4 CD14D2          17      CALL    CALSLT_R
000B27 D1C7 2B               6      DEC HL
000B28 D1C8 51               4      LD  D,C
000B29 D1C9 10EC            13      DJNZ    C8X1
000B2B D1CB D1              10      POP DE
000B2C D1CC F1              10      POP AF
000B2D D1CD C9              10      RET
                                
       D1CE                     INSERT:
000B2E D1CE F5              11      PUSH    AF
000B2F D1CF D5              11      PUSH    DE
000B30 D1D0 2ADCF3          16      LD  HL,(CSRY)
000B33 D1D3 3AB0F3          13      LD  A,(LINLEN)
000B36 D1D6 4F               4      LD  C,A
000B37 D1D7 94               4      SUB H   ;CSRX
000B38 D1D8 3C               4      INC A
000B39 D1D9 47               4      LD  B,A ;カーソルより右の文字数
000B3A D1DA C5              11      PUSH    BC
000B3B D1DB CDFFD1          17      CALL    LOC0
000B3E D1DE C1              10      POP BC
                                
000B3F D1DF 1620             7      LD  D,020H
       D1E1                     INS1:
000B41 D1E1 DD214A00        14      LD  IX,RDVRM
000B45 D1E5 CD14D2          17      CALL    CALSLT_R
000B48 D1E8 4F               4      LD  C,A
000B49 D1E9 7A               4      LD  A,D
000B4A D1EA DD214D00        14      LD  IX,WRTVRM
000B4E D1EE CD14D2          17      CALL    CALSLT_R
000B51 D1F1 23               6      INC HL
000B52 D1F2 51               4      LD  D,C
000B53 D1F3 10EC            13      DJNZ    INS1
000B55 D1F5 D1              10      POP DE
000B56 D1F6 F1              10      POP AF
000B57 D1F7 C9              10      RET
                                
       D1F8                     CONOUT1:
000B58 D1F8 59               4      LD  E,C
000B59 D1F9 C3CDE4          10      JP  _PRINT
                                
       D1FC                     GETVRAM:
000B5C D1FC 2ADCF3          16      LD  HL,(CSRY)
       D1FF                     LOC0:
000B5F D1FF 2D               4      DEC L
000B60 D200 25               4      DEC H
000B61 D201 4C               4      LD  C,H ;CSRX-1
000B62 D202 5D               4      LD  E,L ;CSRY-1
       D203                     LOC1:
000B63 D203 3AB0F3          13      LD  A,(LINLEN)
000B66 D206 67               4      LD  H,A
000B67 D207 1600             7      LD  D,0
000B69 D209 6A               4      LD  L,D ;0
000B6A D20A 0608             7      LD  B,8
       D20C                     LOC2:
000B6C D20C 29              11      ADD HL,HL
000B6D D20D 3001            12      JR  NC,LOC3
000B6F D20F 19              11      ADD HL,DE
       D210                     LOC3:
000B70 D210 10FA            13      DJNZ    LOC2
000B72 D212 09              11      ADD HL,BC
000B73 D213 C9              10      RET
                                
       D214                     CALSLT_R:
000B74 D214 FDE5            15      PUSH    IY
000B76 D216 FD2AC1FC        20      LD  IY,(EXPTBL) ;メインROMスロット
000B7A D21A CD30D2          17      CALL    CALSLTR
000B7D D21D FDE1            14      POP IY
000B7F D21F C9              10      RET
                                
       D220                     CALLF:
000B80 D220 08               4      EX  AF,AF'
000B81 D221 E3              19      EX  (SP),HL
000B82 D222 7E               7      LD  A,(HL)
000B83 D223 FD67             9      LD  IYH,A
000B85 D225 23               6      INC HL
000B86 D226 7E               7      LD  A,(HL)
000B87 D227 DD6F             9      LD  IXL,A
000B89 D229 23               6      INC HL
000B8A D22A 7E               7      LD  A,(HL)
000B8B D22B DD67             9      LD  IXH,A
000B8D D22D 23               6      INC HL
000B8E D22E E3              19      EX  (SP),HL
000B8F D22F 08               4      EX  AF,AF'
       D230                     CALSLTR:
000B90 D230 F3               4      DI
000B91 D231 ED736AD2        20      LD  (CSSP),SP
000B95 D235 F5              11      PUSH    AF
000B96 D236 3E1C             7      LD  A,_CALSLT
       D238                     SLTCALL:
000B98 D238 3257D2          13      LD  (SLTCALLX),A
000B9B D23B 3A6BD2          13      LD  A,(CSSP+1)
000B9E D23E FE41             7      CP  040H+1
000BA0 D240 3005            12      JR  NC,CALSLTR1
000BA2 D242 F1              10      POP AF
000BA3 D243 315EF5          10      LD  SP,BUF
000BA6 D246 F5              11      PUSH    AF
       D247                     CALSLTR1:
000BA7 D247 C5              11      PUSH    BC
000BA8 D248 D5              11      PUSH    DE
000BA9 D249 E5              11      PUSH    HL
000BAA D24A 2600             7      LD  H,0
000BAC D24C 3AC0FC          13      LD  A,(EXPTBL-1)    ;メインROMに切り替える
000BAF D24F CD6ED3          17      CALL    ENASLT
000BB2 D252 E1              10      POP HL
000BB3 D253 D1              10      POP DE
000BB4 D254 C1              10      POP BC
000BB5 D255 F1              10      POP AF
000BB6 D256 CD1C00          17      CALL    _CALSLT
       D257                     SLTCALLX    EQU $-2
000BB9 D259 F5              11      PUSH    AF
000BBA D25A C5              11      PUSH    BC
000BBB D25B D5              11      PUSH    DE
000BBC D25C E5              11      PUSH    HL
000BBD D25D 2600             7      LD  H,0
000BBF D25F 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000BC2 D262 CD6ED3          17      CALL    ENASLT
000BC5 D265 E1              10      POP HL
000BC6 D266 D1              10      POP DE
000BC7 D267 C1              10      POP BC
000BC8 D268 F1              10      POP AF
000BC9 D269 310000          10      LD  SP,0
       D26A                     CSSP    EQU $-2
000BCC D26C FB               4      EI
000BCD D26D C9              10      RET
                                
       D26E                     RDSLTR:
000BCE D26E ED736AD2        20      LD  (CSSP),SP
000BD2 D272 F5              11      PUSH    AF
000BD3 D273 3E0C             7      LD  A,_RDSLT
000BD5 D275 18C1            12      JR  SLTCALL
                                
       D277                     WRSLTR:
000BD7 D277 ED736AD2        20      LD  (CSSP),SP
000BDB D27B F5              11      PUSH    AF
000BDC D27C 3E14             7      LD  A,_WRSLT
000BDE D27E 18B8            12      JR  SLTCALL
                                
       D280                     INT38H:
000BE0 D280 F5              11      PUSH    AF
000BE1 D281 E5              11      PUSH    HL          ;メインROMを呼び出すのでスタックが被っていないかチェック
000BE2 D282 2AACD2          16      LD  HL,(INTSP)
000BE5 D285 7C               4      LD  A,H
000BE6 D286 B5               4      OR  L
000BE7 D287 202D            12      JR  NZ,INT38H2
000BE9 D289 C5              11      PUSH    BC
000BEA D28A D5              11      PUSH    DE
000BEB D28B 2100BF          10      LD  HL,010000H-04100H   ;Page1
000BEE D28E 39              11      ADD HL,SP
000BEF D28F ED73ACD2        20      LD  (INTSP),SP
000BF3 D293 3803            12      JR  C,INT38H1
000BF5 D295 315EF5          10      LD  SP,BUF
       D298                     INT38H1:
000BF8 D298 2600             7      LD  H,0
000BFA D29A 3AC0FC          13      LD  A,(EXPTBL-1)    ;メインROMに切り替える
000BFD D29D CD6ED3          17      CALL    ENASLT
000C00 D2A0 CD3800          17      CALL    00038H
000C03 D2A3 2600             7      LD  H,0
000C05 D2A5 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000C08 D2A8 CD6ED3          17      CALL    ENASLT
000C0B D2AB 310000          10      LD  SP,0
       D2AC                     INTSP   EQU $-2
000C0E D2AE 210000          10      LD  HL,0
000C11 D2B1 22ACD2          16      LD  (INTSP),HL
000C14 D2B4 D1              10      POP DE
000C15 D2B5 C1              10      POP BC
       D2B6                     INT38H2:
000C16 D2B6 E1              10      POP HL
000C17 D2B7 F1              10      POP AF
000C18 D2B8 FB               4      EI
000C19 D2B9 C9              10      RET
                                
[EOF:MSXIO.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\slot.asm"
                                ;-------------------------------------
                                ; 000Ch RDSLT
                                ; Reads a value from an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to read
                                ; Output:  A  = value read
                                ;          Interrupts disabled.
                                ; Changes: F, C, DE
       D2BA                     rdslt:
000C1A D2BA C5              11                  push    bc
000C1B D2BB E5              11                  push    hl
000C1C D2BC F5              11                  push    af
000C1D D2BD 57               4                  ld      d,a             ; init D in case call is not made
000C1E D2BE A7               4                  and     a               ; expanded slot?
000C1F D2BF F3               4                  di
000C20 D2C0 FCD9D3          17                  call    m,select_subslot
000C23 D2C3 F1              10                  pop     af
000C24 D2C4 E1              10                  pop     hl
                                
000C25 D2C5 E5              11                  push    hl              ; HL = address
000C26 D2C6 D5              11                  push    de              ; D = slot ID, E = saved SSL
000C27 D2C7 E5              11                  push    hl              ; HL = address
000C28 D2C8 F5              11                  push    af              ; A = slot ID
000C29 D2C9 7C               4                  ld      a,h
000C2A D2CA 07               4                  rlca
000C2B D2CB 07               4                  rlca
000C2C D2CC E603             7                  and     $03
000C2E D2CE 6F               4                  ld      l,a             ; L = page number
                                
000C2F D2CF 47               4                  ld      b,a
000C30 D2D0 3EFC             7                  ld      a,$FC
000C32 D2D2 CDF3D2          17                  call    rdsft
000C35 D2D5 5F               4                  ld      e,a             ; E = mask (shifted)
000C36 D2D6 45               4                  ld      b,l             ; B = page number
000C37 D2D7 F1              10                  pop     af              ; A = slot ID
000C38 D2D8 E603             7                  and     $03
000C3A D2DA CDF3D2          17                  call    rdsft
000C3D D2DD 47               4                  ld      b,a             ; B = primary slot (shifted)
000C3E D2DE DBA8            11                  in      a,(PSL_STAT)
000C40 D2E0 57               4                  ld      d,a             ; D = primary slot select for restore
000C41 D2E1 A3               4                  and     e
000C42 D2E2 B0               4                  or      b               ; A = primary slot select for read
000C43 D2E3 E1              10                  pop     hl              ; HL = address
                                
000C44 D2E4 CD80F3          17                  call    rdprim
000C47 D2E7 7B               4                  ld      a,e
000C48 D2E8 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000C49 D2E9 F5              11                  push    af              ; A = value read
000C4A D2EA CB7A             8                  bit     7,d             ; expanded slot?
000C4C D2EC C415D4          17                  call    nz,restore_subslot
000C4F D2EF F1              10                  pop     af              ; A = value read
000C50 D2F0 E1              10                  pop     hl              ; HL = address
000C51 D2F1 C1              10                  pop     bc
000C52 D2F2 C9              10                  ret
                                
       D2F3                     rdsft:
000C53 D2F3 04               4                  inc     b
000C54 D2F4 05               4                  dec     b
000C55 D2F5 C8              11                  ret     z
       D2F6                     rdsft_lp:
000C56 D2F6 07               4                  rlca
000C57 D2F7 07               4                  rlca
000C58 D2F8 10FC            13                  djnz    rdsft_lp
000C5A D2FA C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0014 WRSLT
                                ; Writes a value to an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to write
                                ;          E  = value to write
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, D
       D2FB                     wrslt:
000C5B D2FB E5              11                  push    hl
000C5C D2FC 57               4                  ld      d,a             ; D = slot ID
000C5D D2FD D5              11                  push    de
000C5E D2FE A7               4                  and     a               ; expanded slot?
000C5F D2FF F3               4                  di
000C60 D300 FCD9D3          17                  call    m,select_subslot
000C63 D303 C1              10                  pop     bc              ; B = slot ID, C = data
000C64 D304 E1              10                  pop     hl
000C65 D305 D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
000C66 D306 E5              11                  push    hl              ; HL = address
000C67 D307 7C               4                  ld      a,h
000C68 D308 07               4                  rlca
000C69 D309 07               4                  rlca
000C6A D30A E603             7                  and     $03
000C6C D30C 6F               4                  ld      l,a             ; L = page number
                                
000C6D D30D 47               4                  ld      b,a             ; B = page number
000C6E D30E 3EFC             7                  ld      a,$FC
000C70 D310 CDF3D2          17                  call    rdsft
000C73 D313 5F               4                  ld      e,a             ; E = mask (shifted)
                                
000C74 D314 45               4                  ld      b,l             ; B = page number
000C75 D315 7A               4                  ld      a,d
000C76 D316 E603             7                  and     $03             ; A = 000000PP
000C78 D318 CDF3D2          17                  call    rdsft
000C7B D31B 47               4                  ld      b,a             ; B = primary slot (shifted)
000C7C D31C DBA8            11                  in      a,(PSL_STAT)
000C7E D31E 57               4                  ld      d,a             ; D = primary slot select for restore
000C7F D31F A3               4                  and     e
000C80 D320 B0               4                  or      b               ; A = primary slot select for write
000C81 D321 E1              10                  pop     hl              ; HL = address
000C82 D322 59               4                  ld      e,c             ; E = data
000C83 D323 CD85F3          17                  call    wrprim
                                
000C86 D326 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000C87 D327 E5              11                  push    hl              ; HL = address
000C88 D328 CB7A             8                  bit     7,d             ; expanded slot?
000C8A D32A C415D4          17                  call    nz,restore_subslot
000C8D D32D E1              10                  pop     hl
000C8E D32E C9              10                  ret
                                
                                ;-------------------------------------
                                ; $001C CALSLT
                                ; Function : Executes inter-slot call.
                                ; Input    : IY - High byte with input for A in RDSLT
                                ;            IX - The address that will be called
                                ; Remark   : Variables can never be given in alternative registers
                                ;            of the Z-80 or IX and IY
                                
       D32F                     calslt:
000C8F D32F 08               4                  ex      af,af'
000C90 D330 D9               4                  exx
                                
                                ; Select secondary slot of target:
                                ; Note: This approach fails if target is in page 0 of slot 0.1, 0.2 or 0.3.
                                ; TODO: Put slot 0 specific routine in page 3, on the stack if necessary.
000C91 D331 F3               4                  di
000C92 D332 FDE5            15                  push    iy
000C94 D334 F1              10                  pop     af              ; A = slot ID: E000SSPP
000C95 D335 DDE5            15                  push    ix
000C97 D337 E1              10                  pop     hl              ; HL = address to call
000C98 D338 57               4                  ld      d,a             ; init D in case call is not made
000C99 D339 A7               4                  and     a               ; expanded slot?
000C9A D33A FCD9D3          17                  call    m,select_subslot
000C9D D33D D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
                                ; Calculate primary slot select value:
000C9E D33E 7A               4                  ld      a,d             ; A = slot ID: E000SSPP
000C9F D33F E603             7                  and     $03
000CA1 D341 47               4                  ld      b,a             ; B = primary slot
000CA2 D342 0EFC             7                  ld      c,$FC           ; C = mask
                                                ; Calculate page that contains call address.
000CA4 D344 DDE5            15                  push    ix
000CA6 D346 F1              10                  pop     af              ; A = high byte call address
000CA7 D347 07               4                  rlca
000CA8 D348 07               4                  rlca
000CA9 D349 E603             7                  and     $03             ; A = page
                                                ; Shift B and C page*2 positions to the left.
000CAB D34B 87               4                  add     a,a
000CAC D34C 2807            12                  jr      z,calslt_sh2
       D34E                     calslt_sh1:
000CAE D34E CB00             4                  rlc     b
000CB0 D350 CB01             4                  rlc     c
000CB2 D352 3D               4                  dec     a
000CB3 D353 20F9            12                  jr      nz,calslt_sh1
       D355                     calslt_sh2:
                                
                                ; Select primary slot of target and perform call:
000CB5 D355 2162D3          10                  ld      hl,calslt_restore
000CB8 D358 E5              11                  push    hl
000CB9 D359 DBA8            11                  in      a,(PSL_STAT)
000CBB D35B F5              11                  push    af
000CBC D35C A1               4                  and     c               ; C = mask (shifted)
000CBD D35D B0               4                  or      b               ; B = primary slot (shifted)
000CBE D35E D9               4                  exx
000CBF D35F C38CF3          10                  jp      clprim
                                
       D362                     calslt_restore:
000CC2 D362 08               4                  ex      af,af'
000CC3 D363 D9               4                  exx
                                
                                ; Restore secondary slot:
000CC4 D364 F3               4                  di
000CC5 D365 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000CC6 D366 CB7A             8                  bit     7,d             ; expanded slot?
000CC8 D368 C415D4          17                  call    nz,restore_subslot
                                
                                ; Done:
000CCB D36B 08               4                  ex      af,af'
000CCC D36C D9               4                  exx
000CCD D36D C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0024 ENASLT
                                ; Selects a slot in the page specified by an address.
                                ; Input:   A  = slot ID: ExxxSSPP
                                ;               E  = expanded flag
                                ;               SS = secondary slot number (only if expanded)
                                ;               PP = primary slot number
                                ;          HL = address inside the page to change
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, DE
                                
       D36E                     enaslt:
                                
                                ; A=(A >> 6)&0x3
000CCE D36E F3               4                  di
000CCF D36F E5              11                  push    hl
                                
000CD0 D370 6F               4                  ld      l,a             ; L = ExxxSSPP
                                
000CD1 D371 E603             7                  and     $03             ; A = 000000PP
000CD3 D373 47               4                  ld      b,a
000CD4 D374 3EAB             7                  ld      a,$AB
       D376                     psl_dup_lp:
000CD6 D376 C655             7                  add     a,$55
000CD8 D378 05               4                  dec     b
000CD9 D379 F276D3          10                  jp      p,psl_dup_lp
                                
000CDC D37C 57               4                  ld      d,a             ; D = PP PP PP PP
                                
000CDD D37D 7C               4                  ld      a,h
000CDE D37E 07               4                  rlca
000CDF D37F 07               4                  rlca
000CE0 D380 E603             7                  and     $03
                                
000CE2 D382 67               4                  ld      h,a             ; H = page number (0-3)
                                
000CE3 D383 47               4                  ld      b,a
                                
000CE4 D384 3EC0             7                  ld      a,$C0
       D386                     page_msk_lp:
000CE6 D386 07               4                  rlca
000CE7 D387 07               4                  rlca
000CE8 D388 05               4                  dec     b
000CE9 D389 F286D3          10                  jp      p,page_msk_lp
                                
000CEC D38C 5F               4                  ld      e,a             ; E = page mask (00 00 00 11 << page)
000CED D38D 2F               4                  cpl
000CEE D38E 4F               4                  ld      c,a             ; C = page mask complement
                                
000CEF D38F 7A               4                  ld      a,d
000CF0 D390 A3               4                  and     e
000CF1 D391 47               4                  ld      b,a             ; B = 00 00 00 PP << page
                                
000CF2 D392 7D               4                  ld      a,l
000CF3 D393 A7               4                  and     a
000CF4 D394 F2D1D3          10                  jp      p,chg_psl
                                
                                ;SSL-Change
000CF7 D397 0F               4                  rrca
000CF8 D398 0F               4                  rrca
000CF9 D399 E603             7                  and     $03             ; A = 000000SS
                                
000CFB D39B E5              11                  push    hl
000CFC D39C C5              11                  push    bc
                                
000CFD D39D 47               4                  ld      b,a
000CFE D39E 3EAB             7                  ld      a,$AB
       D3A0                     ssl_dup_lp:
000D00 D3A0 C655             7                  add     a,$55
000D02 D3A2 05               4                  dec     b
000D03 D3A3 F2A0D3          10                  jp      p,ssl_dup_lp
                                
000D06 D3A6 A3               4                  and     e
000D07 D3A7 47               4                  ld      b,a             ; B = 00 00 00 SS << page
                                
000D08 D3A8 7A               4                  ld      a,d
000D09 D3A9 E6C0             7                  and     $C0
000D0B D3AB 67               4                  ld      h,a
                                
000D0C D3AC DBA8            11                  in      a,(PSL_STAT)
000D0E D3AE 6F               4                  ld      l,a
000D0F D3AF E6C0             7                  and     $C0
000D11 D3B1 B4               4                  or      h
000D12 D3B2 D3A8            11                  out     (PSL_STAT),a
                                
000D14 D3B4 3AFFFF          13                  ld      a,(SSL_REGS)
000D17 D3B7 2F               4                  cpl
000D18 D3B8 A1               4                  and     c               ; preserve other pages
000D19 D3B9 B0               4                  or      b
000D1A D3BA 4F               4                  ld      c,a
000D1B D3BB 32FFFF          13                  ld      (SSL_REGS),a
                                
000D1E D3BE 7D               4                  ld      a,l
000D1F D3BF D3A8            11                  out     (PSL_STAT),a
                                
                                                ; (SLTTBL + PP) <- RegC
                                
000D21 D3C1 21C5FC          10                  ld      hl,SLTTBL
                                
000D24 D3C4 7A               4                  ld      a,d
000D25 D3C5 E603             7                  and     $03             ; A = 000000PP
                                
000D27 D3C7 85               4                  add     a,l
000D28 D3C8 6F               4                  ld      l,a             ; L = L + A
                                
000D29 D3C9 7C               4                  ld      a,h
000D2A D3CA CE00             7                  adc     a,0
000D2C D3CC 67               4                  ld      h,a             ; H = H + Cy
                                
000D2D D3CD 79               4                  ld      a,c
000D2E D3CE 77               7                  ld      (hl),a
                                
000D2F D3CF C1              10                  pop     bc
000D30 D3D0 E1              10                  pop     hl
                                
       D3D1                     chg_psl:
000D31 D3D1 DBA8            11                  in      a,(PSL_STAT)
000D33 D3D3 A1               4                  and     c
000D34 D3D4 B0               4                  or      b
000D35 D3D5 D3A8            11                  out     (PSL_STAT),a
                                
000D37 D3D7 E1              10                  pop     hl
000D38 D3D8 C9              10                  ret
                                
                                ;--------------------------------
                                ; Select subslot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address which specifies page to select
                                ;               (actually, only the highest 2 bits of H are relevant)
                                ; Output:  D  = slot ID (same as input)
                                ;          E  = original value of secondary slot select register
                                ;          SLTTBL[slot] = new value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D3D9                     select_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000D39 D3D9 57               4                  ld      d,a             ; D = E000SSPP
000D3A D3DA 0F               4                  rrca
000D3B D3DB 0F               4                  rrca
000D3C D3DC 5F               4                  ld      e,a             ; E = PPE000SS
000D3D D3DD E6C0             7                  and     $C0
000D3F D3DF 6F               4                  ld      l,a             ; L = PP000000
000D40 D3E0 DBA8            11                  in      a,(PSL_STAT)
000D42 D3E2 4F               4                  ld      c,a             ; C = saved PSL
000D43 D3E3 E63F             7                  and     $3F
000D45 D3E5 B5               4                  or      l
000D46 D3E6 D3A8            11                  out     (PSL_STAT),a
                                                ; Shift mask and subslot according to page.
000D48 D3E8 7B               4                  ld      a,e             ; A = PPE000SS
000D49 D3E9 E603             7                  and     $03
000D4B D3EB 6F               4                  ld      l,a             ; L = subslot
000D4C D3EC 7C               4                  ld      a,h             ; A = high byte of address
000D4D D3ED 2603             7                  ld      h,$03           ; H = mask
000D4F D3EF 1802            12                  jr      select_subslot_next
       D3F1                     select_subslot_lp:
000D51 D3F1 29              11                  add     hl,hl           ; Shift 2 bits to the left.
000D52 D3F2 29              11                  add     hl,hl
       D3F3                     select_subslot_next:
000D53 D3F3 D640             7                  sub     $40             ; Subtract 1 page.
000D55 D3F5 30FA            12                  jr      nc,select_subslot_lp
000D57 D3F7 7C               4                  ld      a,h
000D58 D3F8 2F               4                  cpl
000D59 D3F9 67               4                  ld      h,a
                                                ; Select secondary slot of target.
000D5A D3FA 3AFFFF          13                  ld      a,(SSL_REGS)
000D5D D3FD 2F               4                  cpl
000D5E D3FE 5F               4                  ld      e,a             ; E = saved SSL
000D5F D3FF A4               4                  and     h               ; H = mask (shifted)
000D60 D400 B5               4                  or      l               ; L = subslot (shifted)
000D61 D401 32FFFF          13                  ld      (SSL_REGS),a
000D64 D404 6F               4                  ld      l,a             ; L = value written to SSL_REGS
                                                ; Restore original primary slot in page 3.
000D65 D405 79               4                  ld      a,c
000D66 D406 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000D68 D408 7A               4                  ld      a,d
000D69 D409 E603             7                  and     $03             ; A = 000000SS
000D6B D40B 4F               4                  ld      c,a
000D6C D40C 0600             7                  ld      b,0
000D6E D40E 7D               4                  ld      a,l             ; A = value written to SSL_REGS
000D6F D40F 21C5FC          10                  ld      hl,SLTTBL
000D72 D412 09              11                  add     hl,bc
000D73 D413 77               7                  ld      (hl),a
000D74 D414 C9              10                  ret
                                
                                ;--------------------------------
                                ; Restore subslot, companion routine to select_subslot.
                                ; Input:   D  = slot ID: E000SSPP
                                ;          E  = original value of secondary slot select register
                                ; Output:  SLTTBL[slot] = original value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D415                     restore_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000D75 D415 7A               4                  ld      a,d
000D76 D416 0F               4                  rrca
000D77 D417 0F               4                  rrca
000D78 D418 E6C0             7                  and     $C0
000D7A D41A 47               4                  ld      b,a             ; B = PP000000
000D7B D41B DBA8            11                  in      a,(PSL_STAT)
000D7D D41D 4F               4                  ld      c,a             ; C = saved PSL
000D7E D41E E63F             7                  and     $3F
000D80 D420 B0               4                  or      b
000D81 D421 D3A8            11                  out     (PSL_STAT),a
                                                ; Restore secondary slot.
000D83 D423 7B               4                  ld      a,e
000D84 D424 32FFFF          13                  ld      (SSL_REGS),a
                                                ; Restore original primary slot in page 3.
000D87 D427 79               4                  ld      a,c
000D88 D428 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000D8A D42A 7A               4                  ld      a,d
000D8B D42B E603             7                  and     $03             ; A = 000000SS
000D8D D42D 4F               4                  ld      c,a
000D8E D42E 0600             7                  ld      b,0
000D90 D430 21C5FC          10                  ld      hl,SLTTBL
000D93 D433 09              11                  add     hl,bc
000D94 D434 73               7                  ld      (hl),e
000D95 D435 C9              10                  ret
                                
                                ;--------------------------------
                                
       D436                     m_rdprim:
000D96 D436 D3A8            11                  out     (PSL_STAT),a
000D98 D438 5E               7                  ld      e,(hl)
000D99 D439 1803            12                  jr      m_wrprm1
       D43B                     m_wrprim:
000D9B D43B D3A8            11                  out     (PSL_STAT),a
000D9D D43D 73               7                  ld      (hl),e
       D43E                     m_wrprm1:
000D9E D43E 7A               4                  ld      a,d
000D9F D43F D3A8            11                  out     (PSL_STAT),a
000DA1 D441 C9              10                  ret
       D442                     m_clprim:
000DA2 D442 D3A8            11                  out     (PSL_STAT),a
000DA4 D444 08               4                  ex      af,af'
000DA5 D445 CD98F3          17                  call    cl_jp
000DA8 D448 08               4                  ex      af,af'
000DA9 D449 F1              10                  pop     af
000DAA D44A D3A8            11                  out     (PSL_STAT),a
000DAC D44C 08               4                  ex      af,af'
000DAD D44D C9              10                  ret
       D44E                     m_cl_jp:
000DAE D44E DDE9             8                  jp      (ix)
       D450                     m_prim_end:
000DB0 D450 00               4                  nop
                                
       F380                     rdprim:         equ     $F380
       F385                     wrprim:         equ     rdprim+(m_wrprim-m_rdprim)
       F38C                     clprim:         equ     rdprim+(m_clprim-m_rdprim)
       F398                     cl_jp:          equ     rdprim+(m_cl_jp-m_rdprim)
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:slot.asm:UTF_8]
                                    INCLUDE "LDFILE.ASM"
                                
                                ;   LSX-Dodgers FILE
                                
       D451                     FILEC:
000DB1 D451 CD5CD4          17      CALL    FILE
       D454                     FILEC2:
000DB4 D454 3A15E4          13      LD  A,(FDRV+1)
000DB7 D457 FE20             7      CP  020H
000DB9 D459 C8              11      RET Z
000DBA D45A 1839            12      JR  SETDIR1
                                
       D45C                     FILE:
000DBC D45C AF               4      XOR A
000DBD D45D 3214E4          13      LD  (FDRV),A
000DC0 D460 67               4      LD  H,A
000DC1 D461 6F               4      LD  L,A
000DC2 D462 2222E4          16      LD  (FDRV+14),HL
000DC5 D465 CD33D5          17      CALL    SPCUT
000DC8 D468 CD18D5          17      CALL    CCHK3
000DCB D46B 2812            12      JR  Z,DEVI1
000DCD D46D 13               6      INC DE
000DCE D46E 1A               7      LD  A,(DE)
000DCF D46F 1B               6      DEC DE
000DD0 D470 FE3A             7      CP  ':'
000DD2 D472 200B            12      JR  NZ,DEVI1
000DD4 D474 1A               7      LD  A,(DE)      ;DRIVE
000DD5 D475 CD73D7          17      CALL    CAP
000DD8 D478 D640             7      SUB '@'
000DDA D47A 13               6      INC DE
000DDB D47B 13               6      INC DE
000DDC D47C 3214E4          13      LD  (FDRV),A
       D47F                     DEVI1:
000DDF D47F 1A               7      LD  A,(DE)
000DE0 D480 D65C             7      SUB 05CH        ;\
000DE2 D482 2009            12      JR  NZ,NOROOT
000DE4 D484 6F               4      LD  L,A     ;A=0でH=0のはずなのでHL=0
000DE5 D485 222EE4          16      LD  (FDRV+26),HL
000DE8 D488 2C               4      INC L
000DE9 D489 2222E4          16      LD  (FDRV+14),HL
000DEC D48C 13               6      INC DE
       D48D                     NOROOT:
                                
       D48D                     SETDIR:
000DED D48D CDB9D4          17      CALL    FILED
000DF0 D490 1A               7      LD  A,(DE)
000DF1 D491 FE5C             7      CP  05CH        ;\
000DF3 D493 C0              11      RET NZ
000DF4 D494 13               6      INC DE
       D495                     SETDIR1:
000DF5 D495 3E10             7      LD  A,010H      ;Directory
000DF7 D497 3221E4          13      LD  (FDRV+13),A
000DFA D49A D5              11      PUSH    DE
000DFB D49B 1114E4          10      LD  DE,FDRV
000DFE D49E 2A1EE5          16      LD  HL,(STABLE+2*00FH)
000E01 D4A1 CD0F00          17      CALL    JP_HL
000E04 D4A4 D1              10      POP DE
000E05 D4A5 B7               4      OR  A
000E06 D4A6 C0              11      RET NZ
                                
000E07 D4A7 3A21E4          13      LD  A,(FDRV+13)
000E0A D4AA CB67             8      BIT 4,A
000E0C D4AC C8              11      RET Z
                                
000E0D D4AD CD00D5          17      CALL    FILEI
000E10 D4B0 2A2EE4          16      LD  HL,(FDRV+26)
000E13 D4B3 23               6      INC HL
000E14 D4B4 2222E4          16      LD  (FDRV+14),HL
000E17 D4B7 18D4            12      JR  SETDIR
                                
       D4B9                     FILED:
000E19 D4B9 CD00D5          17      CALL    FILEI
000E1C D4BC 2115E4          10      LD  HL,FNAME
                                
000E1F D4BF 0608             7      LD  B,8
       D4C1                     FILE2:
000E21 D4C1 CD0DD5          17      CALL    CCHKF
000E24 D4C4 C8              11      RET Z
000E25 D4C5 FE2A             7      CP  '*'
000E27 D4C7 282E            12      JR  Z,FILE9
000E29 D4C9 FE2E             7      CP  '.'
000E2B D4CB 280C            12      JR  Z,FILE4
000E2D D4CD 77               7      LD  (HL),A
000E2E D4CE 23               6      INC HL
000E2F D4CF 10F0            13      DJNZ    FILE2
                                
       D4D1                     FILE3:
000E31 D4D1 CD0DD5          17      CALL    CCHKF
000E34 D4D4 C8              11      RET Z
000E35 D4D5 FE2E             7      CP  '.'
000E37 D4D7 20F8            12      JR  NZ,FILE3
                                
       D4D9                     FILE4:
000E39 D4D9 211DE4          10      LD  HL,FNAME+8
000E3C D4DC 0603             7      LD  B,3
                                
       D4DE                     FILE4L:
000E3E D4DE CD0DD5          17      CALL    CCHKF
000E41 D4E1 C8              11      RET Z
000E42 D4E2 FE2E             7      CP  '.'
000E44 D4E4 2008            12      JR  NZ,FILE12
000E46 D4E6 3215E4          13      LD  (FNAME),A   ;Parent directory(..)
000E49 D4E9 3216E4          13      LD  (FNAME+1),A
000E4C D4EC 3E20             7      LD  A,020H
       D4EE                     FILE12:
000E4E D4EE FE2A             7      CP  '*'
000E50 D4F0 280A            12      JR  Z,FILE10
000E52 D4F2 77               7      LD  (HL),A
000E53 D4F3 23               6      INC HL
000E54 D4F4 10E8            13      DJNZ    FILE4L
000E56 D4F6 C9              10      RET
                                
       D4F7                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000E57 D4F7 CDFCD4          17      CALL    FILE10
000E5A D4FA 18D5            12      JR  FILE3
                                
       D4FC                     FILE10:
000E5C D4FC 3E3F             7      LD  A,'?'
000E5E D4FE 1808            12      JR  FILL_MEMORY
       D500                     FILEI:              ;名前＋拡張子をスペースで初期化
000E60 D500 3E20             7      LD  A,020H
000E62 D502 01000B          10      LD  BC,11*256   ;C=0にしておく
000E65 D505 2115E4          10      LD  HL,FNAME
       D508                     FILL_MEMORY:            ;HLからBバイトAで埋める
000E68 D508 77               7      LD  (HL),A
000E69 D509 23               6      INC HL
000E6A D50A 10FC            13      DJNZ    FILL_MEMORY
000E6C D50C C9              10      RET
                                
       D50D                     CCHKF:
000E6D D50D 1A               7      LD  A,(DE)
000E6E D50E CD15D5          17      CALL    CCHK2
000E71 D511 C8              11      RET Z
000E72 D512 C380D8          10      JP  FKAN
                                
       D515                     CCHK2:
000E75 D515 0C               4      INC C
000E76 D516 0D               4      DEC C
000E77 D517 C0              11      RET NZ
       D518                     CCHK3:              ;ZF=1 で使えない文字
000E78 D518 FE2B             7      CP  '+'
000E7A D51A C8              11      RET Z
000E7B D51B FE2C             7      CP  ','
000E7D D51D C8              11      RET Z
000E7E D51E FE2F             7      CP  '/'
000E80 D520 C8              11      RET Z
000E81 D521 FE3A             7      CP  ':'
000E83 D523 C8              11      RET Z
000E84 D524 FE3B             7      CP  ';'
000E86 D526 C8              11      RET Z
000E87 D527 FE3D             7      CP  '='
000E89 D529 C8              11      RET Z
000E8A D52A FE5C             7      CP  05CH    ;\
000E8C D52C C8              11      RET Z
000E8D D52D FE20             7      CP  020H
000E8F D52F D0              11      RET NC
000E90 D530 BF               4      CP  A       ;Z=1
000E91 D531 C9              10      RET
                                
       D532                     SS1:
000E92 D532 13               6      INC DE
       D533                     SPCUT:              ;スペースをカット
000E93 D533 1A               7      LD  A,(DE)
000E94 D534 FE20             7      CP  020H
000E96 D536 28FA            12      JR  Z,SS1
000E98 D538 C9              10      RET
                                
       D539                     SETDRVF:
000E99 D539 1114E4          10      LD  DE,FDRV
       D53C                     SETDRV0:
000E9C D53C CD45D5          17      CALL    SETDRV
000E9F D53F FDE1            14      POP IY
000EA1 D541 C1              10      POP BC
000EA2 D542 D1              10      POP DE
000EA3 D543 E1              10      POP HL
000EA4 D544 C9              10      RET
                                
       D545                     SETDRV:
000EA5 D545 E3              19      EX  (SP),HL     ;HL=RETRN ADDRESS
000EA6 D546 D5              11      PUSH    DE      ;PUSH HL/DE/BC/IY
000EA7 D547 C5              11      PUSH    BC
000EA8 D548 1A               7      LD  A,(DE)
000EA9 D549 D5              11      PUSH    DE
000EAA D54A FDE3            23      EX  (SP),IY
                                
000EAC D54C CD53D5          17      CALL    GETDRV
000EAF D54F CDD9E4          17      CALL    _CHGDRV
                                
000EB2 D552 E9               4      JP  (HL)
                                
       D553                     GETDRV:
000EB3 D553 CD66D5          17      CALL    GETDRV1
000EB6 D556 3288E4          13      LD  (_DRV),A
000EB9 D559 C9              10      RET
                                
       D55A                     IS_SAME_DRV_A_DE:
                                ;   A と (DE) が同じドライブか調べる
                                ;   ZF=1ならば同じドライブ
000EBA D55A CD66D5          17      CALL    GETDRV1
000EBD D55D C5              11      PUSH    BC
000EBE D55E 4F               4      LD  C,A
000EBF D55F 1A               7      LD  A,(DE)
000EC0 D560 CD66D5          17      CALL    GETDRV1
000EC3 D563 A9               4      XOR C
000EC4 D564 C1              10      POP BC
000EC5 D565 C9              10      RET
       D566                     GETDRV1:
000EC6 D566 E67F             7      AND 07FH
000EC8 D568 D601             7      SUB 001H
000ECA D56A D0              11      RET NC
000ECB D56B 3A87E4          13      LD  A,(_DVSW)   ;Current Drive
000ECE D56E C9              10      RET
                                
       D56F                     SOPENX:
000ECF D56F 1139E4          10      LD  DE,SFILE
000ED2 D572 FD7E00          19      LD  A,(IY+0)        ;(FCB)ドライブ番号
000ED5 D575 CD5AD5          17      CALL    IS_SAME_DRV_A_DE
000ED8 D578 2024            12      JR  NZ,SOPEN
000EDA D57A 13               6      INC DE
000EDB D57B FDE5            15      PUSH    IY
000EDD D57D E1              10      POP HL
000EDE D57E 23               6      INC HL
000EDF D57F CD0BD7          17      CALL    CPFILE
000EE2 D582 201A            12      JR  NZ,SOPEN
                                
000EE4 D584 2AF4E5          16      LD  HL,(SCDIR)
000EE7 D587 FD750E          19      LD  (IY+14),L   ;(FCB)アクセスするディレクトリのクラスタ番号+1
000EEA D58A FD740F          19      LD  (IY+15),H
                                
000EED D58D 2AF8E5          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
000EF0 D590 229FE4          16      LD  (_FILEN),HL
                                
000EF3 D593 ED5BF6E5        20      LD  DE,(SFBPS)
000EF7 D597 2139E4          10      LD  HL,SFILE
000EFA D59A 36FF            10      LD  (HL),0FFH
000EFC D59C 23               6      INC HL
000EFD D59D C9              10      RET
       D59E                     SOPEN:
000EFE D59E 21B3D6          10      LD  HL,FILESE
       D5A1                     SOPENC:
000F01 D5A1 22DAD5          16      LD  (OPENPAT),HL
                                
000F04 D5A4 CDE2E4          17      CALL    _RDFATX     ;Detect Media
000F07 D5A7 3856            12      JR  C,RDDERR
                                
000F09 D5A9 AF               4      XOR A
000F0A D5AA 329FE4          13      LD  (_FILEN),A
000F0D D5AD CDB3D7          17      CALL    LDDIRX1     ;A=0で呼び出す
000F10 D5B0 2818            12      JR  Z,SDIRX1
                                
000F12 D5B2 CDA4D6          17      CALL    READ_DIR    ;Sub Directory
000F15 D5B5 3808            12      JR  C,SDIRX0
000F17 D5B7 2A7EE5          16      LD  HL,(_DTBUF)
000F1A D5BA 7E               7      LD  A,(HL)
000F1B D5BB FE2E             7      CP  '.'
000F1D D5BD 280F            12      JR  Z,SOPEN1
       D5BF                     SDIRX0:
000F1F D5BF AF               4      XOR A
000F20 D5C0 32A0E4          13      LD  (_DIRF),A
000F23 D5C3 FD360E01        19      LD  (IY+14),1   ;(FCB)レコードサイズ
000F27 D5C7 FD770F          19      LD  (IY+15),A
       D5CA                     SDIRX1:
000F2A D5CA ED5BFCE5        20      LD  DE,(_DIRPS) ;Root Directory
       D5CE                     SOPEN1:
000F2E D5CE 0E20             7      LD  C,32        ;自己書き換え 1セクタ辺りのディレクトリエントリ数  1024=32 / 512=16 / 256=8
       D5CF                     SDECPAT EQU $-1
       D5D0                     SOPEN1X:
000F30 D5D0 CDA4D6          17      CALL    READ_DIR    ;FILE SEARCH
000F33 D5D3 382A            12      JR  C,RDDERR
000F35 D5D5 2A7EE5          16      LD  HL,(_DTBUF)
       D5D8                     SOPEN2:
000F38 D5D8 D5              11      PUSH    DE
000F39 D5D9 CDB3D6          17      CALL    FILESE      ;(self-modifying code)
       D5DA                     OPENPAT EQU $-2
000F3C D5DC D1              10      POP DE
000F3D D5DD 386D            12      JR  C,SOPENE
000F3F D5DF 281B            12      JR  Z,SCF_FF_RET
       D5E1                     SOPEN3:
000F41 D5E1 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
000F44 D5E4 B7               4      OR  A
000F45 D5E5 200C            12      JR  NZ,SOPEN5
000F47 D5E7 13               6      INC DE      ;ルートディレクトリ
000F48 D5E8 E5              11      PUSH    HL
000F49 D5E9 210C00          10      LD  HL,12       ;(self-modifying code)MAXDIR
       D5EA                     MD_PAT  EQU $-2
000F4C D5EC ED52            15      SBC HL,DE       ;CF=0 なので SUB HL,DE
000F4E D5EE E1              10      POP HL
000F4F D5EF 20DD            12      JR  NZ,SOPEN1
000F51 D5F1 1807            12      JR  SOPEN6
       D5F3                     SOPEN5:
000F53 D5F3 CDC2DE          17      CALL    GNCLX       ;END DIR
000F56 D5F6 D8              11      RET C
000F57 D5F7 CD6BD7          17      CALL    ENDCL
       D5FA                     SOPEN6:
000F5A D5FA 38D2            12      JR  C,SOPEN1
       D5FC                     SCF_FF_RET:
000F5C D5FC 37               4      SCF         ;CF=1
000F5D D5FD 9F               4      SBC A,A     ;A=0FFH
000F5E D5FE C9              10      RET
                                
       D5FF                     RDDERR:
000F5F D5FF BF               4      CP  A       ;READ ERR CF=1 ZF=1
000F60 D600 37               4      SCF
000F61 D601 C9              10      RET
                                
       D602                     NOPEN:
000F62 D602 21B3D6          10      LD  HL,FILESE
000F65 D605 22DAD5          16      LD  (OPENPAT),HL
000F68 D608 FD2A98E4        20      LD  IY,(_FCB)
000F6C D60C CD93D8          17      CALL    CHKWILDX
000F6F D60F 30EB            12      JR  NC,SCF_FF_RET
000F71 D611 FD7E00          19      LD  A,(IY+0)
000F74 D614 CD53D5          17      CALL    GETDRV
000F77 D617 CDD9E4          17      CALL    _CHGDRV
000F7A D61A D8              11      RET C
000F7B D61B 2AF8E5          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
000F7E D61E 229FE4          16      LD  (_FILEN),HL
                                
000F81 D621 CDAED7          17      CALL    LDDIRX
000F84 D624 ED5B9AE4        20      LD  DE,(_FBPS)
000F88 D628 CDA4D6          17      CALL    READ_DIR
000F8B D62B 38D2            12      JR  C,RDDERR
000F8D D62D 3A9EE4          13      LD  A,(_FBCNT)
000F90 D630 3D               4      DEC A
000F91 D631 28AE            12      JR  Z,SOPEN3
       D633                     NOPEN2:
000F93 D633 2A9CE4          16      LD  HL,(_FBAD)
000F96 D636 012000          10      LD  BC,020H
000F99 D639 09              11      ADD HL,BC
000F9A D63A 4F               4      LD  C,A
000F9B D63B 189B            12      JR  SOPEN2
                                
       D63D                     SOPENE2:
000F9D D63D 229CE4          16      LD  (_FBAD),HL
000FA0 D640 79               4      LD  A,C
000FA1 D641 329EE4          13      LD  (_FBCNT),A
000FA4 D644 ED539AE4        20      LD  (_FBPS),DE
000FA8 D648 FD2298E4        20      LD  (_FCB),IY
       D64C                     SOPENE:
000FAC D64C AF               4      XOR A
000FAD D64D C9              10      RET
                                
       D64E                     COPEN:
000FAE D64E FD360D20        19      LD  (IY+13),020H    ;(FCB)属性(アトリビュート)
                                
000FB2 D652 21D0D6          10      LD  HL,NEXTSE
000FB5 D655 CDA1D5          17      CALL    SOPENC
000FB8 D658 D0              11      RET NC
000FB9 D659 C8              11      RET Z
000FBA D65A 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
000FBD D65D B7               4      OR  A
000FBE D65E 37               4      SCF
000FBF D65F C8              11      RET Z       ;ルートディレクトリ
000FC0 D660 0601             7      LD  B,1
000FC2 D662 CDF2D8          17      CALL    WRDF
000FC5 D665 D8              11      RET C
000FC6 D666 ED5BFEE5        20      LD  DE,(_CLPS)
000FCA D66A D5              11      PUSH    DE
000FCB D66B CD34D7          17      CALL    DCPAT
000FCE D66E CD4DDD          17      CALL    DRDNX
000FD1 D671 2A7EE5          16      LD  HL,(_DTBUF) ;ディレクトリエントリを0クリア
000FD4 D674 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
000FD7 D677 47               4      LD  B,A
000FD8 D678 AF               4      XOR A
000FD9 D679 4F               4      LD  C,A
       D67A                     COPENCL:
000FDA D67A 77               7      LD  (HL),A
000FDB D67B EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000FDD D67D EA7AD6          10      JP  PE,COPENCL
                                
000FE0 D680 3A52D7          13      LD  A,(SPCPAT)  ;1クラスタの論理セクタ数
000FE3 D683 3D               4      DEC A
000FE4 D684 2819            12      JR  Z,COPENE
000FE6 D686 3E01             7      LD  A,1     ;1セクタ辺りのセクタ数が2以上の場合
000FE8 D688 32BADE          13      LD  (_SECPS),A
000FEB D68B D1              10      POP DE      ;DE=(_CLPS)
000FEC D68C D5              11      PUSH    DE
       D68D                     COPEN1:
000FED D68D D5              11      PUSH    DE      ;データバッファに入らないセクタもゼロクリア
000FEE D68E C5              11      PUSH    BC
000FEF D68F 2A7EE5          16      LD  HL,(_DTBUF)
000FF2 D692 CD4ED7          17      CALL    CLUSTX
000FF5 D695 CD52E0          17      CALL    DWT24
000FF8 D698 C1              10      POP BC
000FF9 D699 D1              10      POP DE
000FFA D69A CDB9DE          17      CALL    NEXTX
000FFD D69D 20EE            12      JR  NZ,COPEN1
       D69F                     COPENE:
000FFF D69F 2A7EE5          16      LD  HL,(_DTBUF)
001002 D6A2 D1              10      POP DE
001003 D6A3 C9              10      RET
                                
       D6A4                     READ_DIR:
001004 D6A4 ED53FEE5        20      LD  (_CLPS),DE
001008 D6A8 C5              11      PUSH    BC
001009 D6A9 D5              11      PUSH    DE
00100A D6AA CD34D7          17      CALL    DCPAT
00100D D6AD CD2DDD          17      CALL    DRDX
001010 D6B0 D1              10      POP DE
001011 D6B1 C1              10      POP BC
001012 D6B2 C9              10      RET
                                
       D6B3                     FILESE:
001013 D6B3 7E               7      LD  A,(HL)
001014 D6B4 B7               4      OR  A
001015 D6B5 C8              11      RET Z       ;END:ZF=1 CF=0
001016 D6B6 FEE5             7      CP  0E5H
001018 D6B8 280E            12      JR  Z,FILESE1
00101A D6BA FDE5            15      PUSH    IY
00101C D6BC D1              10      POP DE
00101D D6BD 13               6      INC DE
00101E D6BE E5              11      PUSH    HL
00101F D6BF CD0BD7          17      CALL    CPFILE
001022 D6C2 CC2CD7          17      CALL    Z,CPFILE2
001025 D6C5 E1              10      POP HL
001026 D6C6 37               4      SCF
001027 D6C7 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       D6C8                     FILESE1:
001028 D6C8 CDDFD6          17      CALL    FNEXT
00102B D6CB 20E6            12      JR  NZ,FILESE
       D6CD                     ZF0_CF0_AFF_RET:
00102D D6CD F6FF             7      OR  0FFH        ;ZF=0 CF=0
00102F D6CF C9              10      RET
                                
       D6D0                     NEXTSE:
001030 D6D0 7E               7      LD  A,(HL)
001031 D6D1 B7               4      OR  A
001032 D6D2 37               4      SCF
001033 D6D3 C8              11      RET Z       ;!!!:ZF=1 CF=1
001034 D6D4 FEE5             7      CP  0E5H
001036 D6D6 37               4      SCF
001037 D6D7 C8              11      RET Z       ;!!!:(ZF=1) CF=1
001038 D6D8 CDDFD6          17      CALL    FNEXT
00103B D6DB 20F3            12      JR  NZ,NEXTSE
00103D D6DD 18EE            12      JR  ZF0_CF0_AFF_RET
                                
       D6DF                     FNEXT:
00103F D6DF E5              11      PUSH    HL
001040 D6E0 219FE4          10      LD  HL,_FILEN
001043 D6E3 34              11      INC (HL)
001044 D6E4 E1              10      POP HL
001045 D6E5 112000          10      LD  DE,020H
001048 D6E8 19              11      ADD HL,DE
001049 D6E9 0D               4      DEC C
00104A D6EA C9              10      RET
                                
       D6EB                     CPNAME:
00104B D6EB C5              11      PUSH    BC
00104C D6EC D5              11      PUSH    DE
00104D D6ED E5              11      PUSH    HL
00104E D6EE CD05D7          17      CALL    CPFILE4
001051 D6F1 E1              10      POP HL
001052 D6F2 23               6      INC HL
001053 D6F3 23               6      INC HL
001054 D6F4 23               6      INC HL
001055 D6F5 23               6      INC HL
001056 D6F6 D1              10      POP DE
001057 D6F7 C1              10      POP BC
001058 D6F8 2005            12      JR  NZ,CPNAME1
00105A D6FA 7E               7      LD  A,(HL)
00105B D6FB 23               6      INC HL
00105C D6FC 66               7      LD  H,(HL)
00105D D6FD 6F               4      LD  L,A
00105E D6FE C9              10      RET
       D6FF                     CPNAME1:
00105F D6FF 23               6      INC HL
001060 D700 23               6      INC HL
001061 D701 10E8            13      DJNZ    CPNAME
001063 D703 37               4      SCF
001064 D704 C9              10      RET
                                
       D705                     CPFILE4:
001065 D705 C5              11      PUSH    BC
001066 D706 010004          10      LD  BC,00400H
001069 D709 1804            12      JR  CPSTR1
       D70B                     CPFILE:
00106B D70B C5              11      PUSH    BC
00106C D70C 01000B          10      LD  BC,00B00H
       D70F                     CPSTR1:
00106F D70F 1A               7      LD  A,(DE)
001070 D710 FE3F             7      CP  '?'     ;Wild card
001072 D712 2812            12      JR  Z,CPSTR2
001074 D714 7E               7      LD  A,(HL)
001075 D715 CD79D8          17      CALL    FKANC
001078 D718 E5              11      PUSH    HL
001079 D719 67               4      LD  H,A
00107A D71A 1A               7      LD  A,(DE)
00107B D71B CB01             4      RLC C
00107D D71D CD79D8          17      CALL    FKANC
001080 D720 CB09             4      RRC C
001082 D722 BC               4      CP  H       ;CP (HL),(DE)
001083 D723 E1              10      POP HL
001084 D724 2004            12      JR  NZ,CPSTR3
       D726                     CPSTR2:
001086 D726 13               6      INC DE
001087 D727 23               6      INC HL
001088 D728 10E5            13      DJNZ    CPSTR1
       D72A                     CPSTR3:
00108A D72A C1              10      POP BC
00108B D72B C9              10      RET
                                
       D72C                     CPFILE2:
00108C D72C FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
00108F D72F F6E1             7      OR  0E1H
001091 D731 2F               4      CPL
001092 D732 A6               7      AND (HL)
001093 D733 C9              10      RET
                                
       D734                     DCPAT:
001094 D734 0E00             7      LD  C,0
001096 D736 2A7EE5          16      LD  HL,(_DTBUF)
001099 D739 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
00109C D73C B7               4      OR  A
00109D D73D C8              11      RET Z       ;ルートディレクトリの場合はCレジスタを0にしておく(CDEがセクタ番号)
00109E D73E 3A52D7          13      LD  A,(SPCPAT)
0010A1 D741 4F               4      LD  C,A
0010A2 D742 3ABADE          13      LD  A,(_SECPS)
0010A5 D745 B9               4      CP  C
0010A6 D746 3801            12      JR  C,DC1
0010A8 D748 AF               4      XOR A
       D749                     DC1:
0010A9 D749 F680             7      OR  080H
0010AB D74B 32A0E4          13      LD  (_DIRF),A   ;bit0-6:セクタインデックス
       D74E                     CLUSTX:
0010AE D74E E5              11      PUSH    HL
0010AF D74F EB               4      EX  DE,HL
0010B0 D750 AF               4      XOR A
0010B1 D751 0E01             7      LD  C,1     ;自己書き換え（1クラスタの論理セクタ数）
       D752                     SPCPAT  EQU $-1
       D753                     L_CLDBL:
0010B3 D753 CB19             8      RR  C       ;->CF
0010B5 D755 3804            12      JR  C,E_CLDBL
0010B7 D757 29              11      ADD HL,HL       ;*2
0010B8 D758 8F               4      ADC A,A
0010B9 D759 18F8            12      JR  L_CLDBL
       D75B                     E_CLDBL:
0010BB D75B 4F               4      LD  C,A
0010BC D75C 3ABADE          13      LD  A,(_SECPS)
0010BF D75F B5               4      OR  L
0010C0 D760 6F               4      LD  L,A
0010C1 D761 110800          10      LD  DE,8    ;+8 (2D)  !ADDCL (self-modifying code)
       D762                     CLSPAT  EQU $-2
0010C4 D764 AF               4      XOR A
0010C5 D765 19              11      ADD HL,DE   ;データ格納領域の先頭論理セクタ番号
0010C6 D766 89               4      ADC A,C
0010C7 D767 4F               4      LD  C,A
0010C8 D768 EB               4      EX  DE,HL
0010C9 D769 E1              10      POP HL
0010CA D76A C9              10      RET
                                
       D76B                     ENDCL:
0010CB D76B 7A               4      LD  A,D ;END CLUSTER
0010CC D76C FE01             7      CP  1   ;164=356    (self-modifying code)
       D76D                     CLPAT1  EQU $-1
0010CE D76E C0              11      RET NZ
0010CF D76F 7B               4      LD  A,E
0010D0 D770 FE64             7      CP  064H    ;       (self-modifying code)
       D771                     CLPAT2  EQU $-1
0010D2 D772 C9              10      RET
                                
       D773                     CAP:
0010D3 D773 FE61             7      CP  'a'
0010D5 D775 D8              11      RET C
0010D6 D776 FE7B             7      CP  'z'+1
0010D8 D778 D0              11      RET NC
0010D9 D779 D620             7      SUB 020H
0010DB D77B C9              10      RET
       D77C                     CAP2:
0010DC D77C CD73D7          17      CALL    CAP
       D77F                     CAP3:               ;
0010DF D77F FE05             7      CP  5
0010E1 D781 2803            12      JR  Z,CAP4
0010E3 D783 FE21             7      CP  021H
0010E5 D785 C9              10      RET
       D786                     CAP4:
0010E6 D786 3EE5             7      LD  A,0E5H
0010E8 D788 C9              10      RET
                                
       D789                     CHDIR:
0010E9 D789 CD74E1          17      CALL    GETDPBD
0010EC D78C 381D            12      JR  C,CHDIR2
0010EE D78E DD751A          19      LD  (IX+DPB_SDIR),L
0010F1 D791 DD741B          19      LD  (IX+DPB_SDIR+1),H
0010F4 D794 1815            12      JR  CHDIR2      ;POP_IX_RET
                                
       D796                     LDDIR:
0010F6 D796 CD74E1          17      CALL    GETDPBD
0010F9 D799 DD5E1A          19      LD  E,(IX+DPB_SDIR)
0010FC D79C DD561B          19      LD  D,(IX+DPB_SDIR+1)
0010FF D79F 13               6      INC DE
001100 D7A0 FD730E          19      LD  (IY+14),E   ;(FCB)アクセスするディレクトリのクラスタ番号+1
001103 D7A3 FD720F          19      LD  (IY+15),D
001106 D7A6 1B               6      DEC DE
001107 D7A7 AF               4      XOR A
001108 D7A8 32A0E4          13      LD  (_DIRF),A
       D7AB                     CHDIR2:
00110B D7AB DDE1            14      POP IX
00110D D7AD C9              10      RET
                                
       D7AE                     LDDIRX:
00110E D7AE 3AA0E4          13      LD  A,(_DIRF)   ;(FCB)アクセスするディレクトリのセクタインデックス
001111 D7B1 E67F             7      AND 07FH
       D7B3                     LDDIRX1:
001113 D7B3 32BADE          13      LD  (_SECPS),A
001116 D7B6 FD5E0E          19      LD  E,(IY+14)   ;(FCB)アクセスするディレクトリのクラスタ番号+1
001119 D7B9 FD560F          19      LD  D,(IY+15)
00111C D7BC 1B               6      DEC DE
00111D D7BD CD6BD7          17      CALL    ENDCL
001120 D7C0 D496D7          17      CALL    NC,LDDIR
       D7C3                     LDDIRS:
001123 D7C3 7A               4      LD  A,D
001124 D7C4 B3               4      OR  E
001125 D7C5 32A0E4          13      LD  (_DIRF),A   ;ディレクトリか判別
001128 D7C8 C9              10      RET
                                
       D7C9                     KILL:
001129 D7C9 CD93D8          17      CALL    CHKWILDX
00112C D7CC 3834            12      JR  C,KILLW
00112E D7CE CD6FD5          17      CALL    SOPENX
       D7D1                     KILLS:
001131 D7D1 3E1F             7      LD  A,01FH
001133 D7D3 D415D8          17      CALL    NC,CHKATT
001136 D7D6 D8              11      RET C
       D7D7                     KILLSX:
001137 D7D7 36E5            10      LD  (HL),0E5H   ;DIR
001139 D7D9 CD6DD8          17      CALL    WTDB
00113C D7DC 111A00          10      LD  DE,01AH
00113F D7DF 19              11      ADD HL,DE
001140 D7E0 5E               7      LD  E,(HL)
001141 D7E1 23               6      INC HL
001142 D7E2 56               7      LD  D,(HL)
       D7E3                     KILLS1:
001143 D7E3 CD6BD7          17      CALL    ENDCL
001146 D7E6 D0              11      RET NC      ;CF=0
001147 D7E7 21FEFF          10      LD  HL,0-2
00114A D7EA 19              11      ADD HL,DE
00114B D7EB D0              11      RET NC      ;DE= 0 or 1
00114C D7EC D5              11      PUSH    DE
00114D D7ED CDF7E4          17      CALL    _GNCL
001150 D7F0 ED53FEE5        20      LD  (_CLPS),DE
001154 D7F4 D1              10      POP DE
001155 D7F5 210000          10      LD  HL,0
001158 D7F8 D4FAE4          17      CALL    NC,_SNCL
00115B D7FB D8              11      RET C
00115C D7FC ED5BFEE5        20      LD  DE,(_CLPS)  ;FAT
001160 D800 18E1            12      JR  KILLS1
                                
       D802                     KILLW:
001162 D802 CD9ED5          17      CALL    SOPEN
       D805                     KILLW1:
001165 D805 380B            12      JR  C,KILLW2
001167 D807 CD3DD6          17      CALL    SOPENE2
00116A D80A CDD1D7          17      CALL    KILLS
00116D D80D CD02D6          17      CALL    NOPEN
001170 D810 18F3            12      JR  KILLW1
       D812                     KILLW2:
001172 D812 C8              11      RET Z
001173 D813 3F               4      CCF
001174 D814 C9              10      RET
                                
       D815                     CHKATT:
001175 D815 E5              11      PUSH    HL
001176 D816 110B00          10      LD  DE,00BH
001179 D819 19              11      ADD HL,DE
00117A D81A A6               7      AND (HL)
00117B D81B E1              10      POP HL
00117C D81C C8              11      RET Z
00117D D81D 37               4      SCF
00117E D81E C9              10      RET
                                
       D81F                     NAME:
00117F D81F CD93D8          17      CALL    CHKWILDX
001182 D822 D8              11      RET C
001183 D823 110400          10      LD  DE,4
001186 D826 19              11      ADD HL,DE
001187 D827 223CD8          16      LD  (NAMEP),HL
00118A D82A 23               6      INC HL
00118B D82B CD97D8          17      CALL    CHKWILD
00118E D82E D8              11      RET C
                                
00118F D82F CD6FD5          17      CALL    SOPENX
001192 D832 3E0F             7      LD  A,00FH
001194 D834 D415D8          17      CALL    NC,CHKATT
001197 D837 D8              11      RET C
                                
001198 D838 FDE5            15      PUSH    IY
00119A D83A FD210000        14      LD  IY,0        ;自己書き換え
       D83C                     NAMEP   EQU $-2
00119E D83E CD6FD5          17      CALL    SOPENX
0011A1 D841 FDE3            23      EX  (SP),IY
0011A3 D843 3F               4      CCF
0011A4 D844 D49ED5          17      CALL    NC,SOPEN
0011A7 D847 EB               4      EX  DE,HL
0011A8 D848 E1              10      POP HL
0011A9 D849 D8              11      RET C
                                
       D84A                     SETNAME:
0011AA D84A 01000B          10      LD  BC,11*256
0011AD D84D 23               6      INC HL
0011AE D84E 7E               7      LD  A,(HL)
0011AF D84F FEE5             7      CP  0E5H
0011B1 D851 2004            12      JR  NZ,SNAME1
0011B3 D853 3E05             7      LD  A,5
0011B5 D855 180E            12      JR  SNAME3
       D857                     SNAME1:
0011B7 D857 7E               7      LD  A,(HL)
0011B8 D858 0C               4      INC C
0011B9 D859 0D               4      DEC C
0011BA D85A 2009            12      JR  NZ,SNAME3
0011BC D85C CD73D7          17      CALL    CAP
0011BF D85F FEA0             7      CP  0A0H
0011C1 D861 2002            12      JR  NZ,SNAME3
0011C3 D863 3E20             7      LD  A,020H
       D865                     SNAME3:
0011C5 D865 12               7      LD  (DE),A
0011C6 D866 7E               7      LD  A,(HL)
0011C7 D867 23               6      INC HL
0011C8 D868 CD80D8          17      CALL    FKAN
0011CB D86B 10EA            13      DJNZ    SNAME1
       D86D                     WTDB:
0011CD D86D 3EFF             7      LD  A,0FFH
0011CF D86F 3239E4          13      LD  (SFILE),A
       D872                     SWTDBF:
0011D2 D872 3E01             7      LD  A,1
0011D4 D874 32A4E4          13      LD  (_WTDBF),A
0011D7 D877 AF               4      XOR A
0011D8 D878 C9              10      RET
                                
       D879                     FKANC:
0011D9 D879 CB41             8      BIT 0,C
0011DB D87B CC7CD7          17      CALL    Z,CAP2
0011DE D87E 1801            12      JR  FKANX
       D880                     FKAN:           ;漢字チェック
0011E0 D880 13               6      INC DE
       D881                     FKANX:
0011E1 D881 CB41             8      BIT 0,C
0011E3 D883 CB81             8      RES 0,C
0011E5 D885 C0              11      RET NZ
0011E6 D886 FE80             7      CP  080H
0011E8 D888 D8              11      RET C
0011E9 D889 FEA0             7      CP  0A0H
0011EB D88B 3803            12      JR  C,FKAN1
0011ED D88D FEE0             7      CP  0E0H
0011EF D88F D8              11      RET C
       D890                     FKAN1:
0011F0 D890 0C               4      INC C
0011F1 D891 A7               4      AND A
0011F2 D892 C9              10      RET
                                
       D893                     CHKWILDX:
0011F3 D893 FDE5            15      PUSH    IY
0011F5 D895 E1              10      POP HL
0011F6 D896 23               6      INC HL
       D897                     CHKWILD:
0011F7 D897 060B             7      LD  B,11
0011F9 D899 3E3F             7      LD  A,'?'
       D89B                     CHKWIL1:
0011FB D89B BE               7      CP  (HL)
0011FC D89C 23               6      INC HL
0011FD D89D 37               4      SCF
0011FE D89E C8              11      RET Z
0011FF D89F 10FA            13      DJNZ    CHKWIL1
001201 D8A1 AF               4      XOR A
001202 D8A2 C9              10      RET
                                
       D8A3                     SDIRENT:        ;IY=FCB HL=DIR
001203 D8A3 D5              11      PUSH    DE
001204 D8A4 E5              11      PUSH    HL
001205 D8A5 FDE5            15      PUSH    IY
001207 D8A7 D1              10      POP DE
001208 D8A8 EB               4      EX  DE,HL
001209 D8A9 CD4AD8          17      CALL    SETNAME
                                ;               Attribute
00120C D8AC FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
00120F D8AF 12               7      LD  (DE),A
001210 D8B0 13               6      INC DE
                                ;               Reserved
001211 D8B1 AF               4      XOR A
001212 D8B2 060A             7      LD  B,10
       D8B4                     SDE1:
001214 D8B4 12               7      LD  (DE),A
001215 D8B5 13               6      INC DE
001216 D8B6 10FC            13      DJNZ    SDE1
                                                    ;(FCB)更新時刻
001218 D8B8 21E4E5          10      LD  HL,SDDATA       ;(FCB)更新年月日
00121B D8BB 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       D8BD                     SDLOOP:                 ;(FCB)ファイルのサイズ(バイト単位)
00121D D8BD 7E               7      LD  A,(HL)
00121E D8BE 23               6      INC HL
00121F D8BF 32C4D8          13      LD  (SDPAT),A
001222 D8C2 FD7E00          19      LD  A,(IY+0)    ;LD A,(IY+A)
       D8C4                     SDPAT   EQU $-1
001225 D8C5 12               7      LD  (DE),A
001226 D8C6 13               6      INC DE
001227 D8C7 10F4            13      DJNZ    SDLOOP
                                
001229 D8C9 AF               4      XOR A
00122A D8CA E1              10      POP HL
00122B D8CB D1              10      POP DE
00122C D8CC C9              10      RET
                                
       D8CD                     WOPEN:
00122D D8CD FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
001230 D8D0 E61F             7      AND 01FH
001232 D8D2 37               4      SCF
001233 D8D3 C0              11      RET NZ
001234 D8D4 FD361CFE        19      LD  (IY+28),0FEH    ;(FCB)オープンモード
       D8D8                     TOPEN2:
001238 D8D8 AF               4      XOR A
       D8D9                     TOPEN:              ;Initializes the time stamp
001239 D8D9 FD3617FF        19      LD  (IY+23),0FFH    ;(FCB)更新時刻
00123D D8DD C9              10      RET
                                
       D8DE                     WRDFX:
00123E D8DE 3A52D7          13      LD  A,(SPCPAT)  ;1クラスタの論理セクタ
       D8E1                     L_WRFX:
001241 D8E1 1F               4      RRA         ;->CF
001242 D8E2 3806            12      JR  C,E_WRFX
001244 D8E4 CB39             8      SRL C
001246 D8E6 CB1C             8      RR  H       ;CH=CH/2
001248 D8E8 18F7            12      JR  L_WRFX
       D8EA                     E_WRFX:
00124A D8EA 41               4      LD  B,C
00124B D8EB 4C               4      LD  C,H
00124C D8EC 03               6      INC BC
00124D D8ED 3E37             7      LD  A,037H      ;SCF
00124F D8EF 324ADD          13      LD  (DRDN1),A
                                
       D8F2                     WRDF:               ;BCクラスタ分FATを確保する
001252 D8F2 110200          10      LD  DE,2
001255 D8F5 AF               4      XOR A
001256 D8F6 32BADE          13      LD  (_SECPS),A
       D8F9                     WRDF1:
001259 D8F9 C5              11      PUSH    BC
00125A D8FA D5              11      PUSH    DE
00125B D8FB CDF7E4          17      CALL    _GNCL
00125E D8FE 381C            12      JR  C,WRDF3
001260 D900 7A               4      LD  A,D     ;空いているかチェック
001261 D901 B3               4      OR  E
001262 D902 202A            12      JR  NZ,WRDF4
001264 D904 E1              10      POP HL      ;HL=空いているクラスタ
001265 D905 E5              11      PUSH    HL
001266 D906 ED5BFEE5        20      LD  DE,(_CLPS)  ;DE=元の(_CLPS)
00126A D90A 22FEE5          16      LD  (_CLPS),HL
00126D D90D 7A               4      LD  A,D     ;元の(_CLPS)が 0 か?
00126E D90E B3               4      OR  E
00126F D90F 2008            12      JR  NZ,WRDF2
001271 D911 FD751A          19      LD  (IY+26),L   ;(FCB)ファイルの先頭クラスタ
001274 D914 FD741B          19      LD  (IY+27),H   ;元が空の場合はFCBにクラスタをセットする
001277 D917 1803            12      JR  WRDF3
       D919                     WRDF2:
001279 D919 CDFAE4          17      CALL    _SNCL
       D91C                     WRDF3:
00127C D91C D1              10      POP DE
00127D D91D C1              10      POP BC
00127E D91E D8              11      RET C
00127F D91F 0B               6      DEC BC
001280 D920 78               4      LD  A,B
001281 D921 B1               4      OR  C
001282 D922 200C            12      JR  NZ,WRDF5    ;ここでループカウンタチェック
001284 D924 ED5BFEE5        20      LD  DE,(_CLPS)
001288 D928 21FFFF          10      LD  HL,0FFFFH   ;FATエントリ終了(EOCマーク)
00128B D92B C3FAE4          10      JP  _SNCL
                                
       D92E                     WRDF4:              ;DEクラスタが空じゃないので次に移動する
00128E D92E D1              10      POP DE
00128F D92F C1              10      POP BC
       D930                     WRDF5:
001290 D930 13               6      INC DE
001291 D931 CD6BD7          17      CALL    ENDCL
001294 D934 38C3            12      JR  C,WRDF1
001296 D936 37               4      SCF
001297 D937 C9              10      RET
                                
       D938                     RWXR:
001298 D938 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       D93B                     L_RWX:
00129B D93B 1F               4      RRA     ;->CF
00129C D93C 3808            12      JR  C,E_RWX
00129E D93E CB38             8      SRL B   ;BCH=BCH/2
0012A0 D940 CB19             8      RR  C   ;
0012A2 D942 CB1C             8      RR  H   ;
0012A4 D944 18F5            12      JR  L_RWX
       D946                     E_RWX:
0012A6 D946 FD5E1A          19      LD  E,(IY+26)   ;(FCB)ファイルの先頭クラスタ
0012A9 D949 FD561B          19      LD  D,(IY+27)
0012AC D94C AF               4      XOR A
0012AD D94D 32BADE          13      LD  (_SECPS),A
       D950                     RWX1:
0012B0 D950 ED53FEE5        20      LD  (_CLPS),DE
0012B4 D954 7A               4      LD  A,D
0012B5 D955 B3               4      OR  E
0012B6 D956 2813            12      JR  Z,SCF_RET   ;RET DE==0 => CF=1
                                
0012B8 D958 78               4      LD  A,B
0012B9 D959 B1               4      OR  C
0012BA D95A B4               4      OR  H
0012BB D95B C8              11      RET Z       ;RET BCH==0 => CF=0
                                
0012BC D95C CDC2DE          17      CALL    GNCLX
0012BF D95F D8              11      RET C
0012C0 D960 7C               4      LD  A,H     ;
0012C1 D961 25               4      DEC H       ;
0012C2 D962 B7               4      OR  A       ;DEC BCH
0012C3 D963 2001            12      JR  NZ,RWX2     ;
0012C5 D965 0B               6      DEC BC      ;
       D966                     RWX2:
0012C6 D966 CD6BD7          17      CALL    ENDCL
0012C9 D969 38E5            12      JR  C,RWX1
       D96B                     SCF_RET:
0012CB D96B 37               4      SCF
0012CC D96C C9              10      RET
                                
       D96D                     DSKF:
0012CD D96D 110000          10      LD  DE,0
       D96E                     MAXCLP  EQU $-2
0012D0 D970 2AACE4          16      LD  HL,(_FAKEFREE)
0012D3 D973 7C               4      LD  A,H
0012D4 D974 B5               4      OR  L
0012D5 D975 2803            12      JR  Z,DSKF1
0012D7 D977 110100          10      LD  DE,1
       D97A                     DSKF1:
0012DA D97A D5              11      PUSH    DE
0012DB D97B CDF7E4          17      CALL    _GNCL
0012DE D97E 380C            12      JR  C,POPSCF
0012E0 D980 7A               4      LD  A,D
0012E1 D981 B3               4      OR  E
0012E2 D982 2001            12      JR  NZ,DSKF2
0012E4 D984 23               6      INC HL
       D985                     DSKF2:
0012E5 D985 D1              10      POP DE
0012E6 D986 1B               6      DEC DE
0012E7 D987 7A               4      LD  A,D
0012E8 D988 B3               4      OR  E
0012E9 D989 20EF            12      JR  NZ,DSKF1
0012EB D98B C9              10      RET
                                
       D98C                     POPSCF:
0012EC D98C F1              10      POP AF
0012ED D98D 37               4      SCF
0012EE D98E C9              10      RET
                                
       D98F                     SETTMS:
0012EF D98F FD7E17          19      LD  A,(IY+23)   ;(FCB)ファイルを最後に変更した時刻
0012F2 D992 3C               4      INC A
0012F3 D993 C0              11      RET NZ      ;ファイルが更新されていない
       D994                     SETTMSX:            ;FCBに日付時刻をセットする
0012F4 D994 CD6CD1          17      CALL    _SYS2C      ;(BDOS)時刻の獲得
                                                ;H←時  L←分  D←秒
0012F7 D997 CB25             8      SLA L       ;   *2
0012F9 D999 CB25             8      SLA L       ;   *4
0012FB D99B 29              11      ADD HL,HL       ;*2 *8
0012FC D99C 29              11      ADD HL,HL       ;*4 *16
0012FD D99D 29              11      ADD HL,HL       ;*8 *32
0012FE D99E 7A               4      LD  A,D
0012FF D99F 0F               4      RRCA            ;bit.0->7->->->0->C
001300 D9A0 E61F             7      AND 01FH
001302 D9A2 B5               4      OR  L
001303 D9A3 FD7716          19      LD  (IY+22),A   ;(FCB)ファイルを最後に変更した時刻
001306 D9A6 FD7417          19      LD  (IY+23),H
                                
001309 D9A9 CD66D1          17      CALL    _SYS2A      ;(BDOS)日付の獲得
                                                ;HL←年  D←月  E←日
00130C D9AC 0144F8          10      LD  BC,0-1980
00130F D9AF 09              11      ADD HL,BC
001310 D9B0 65               4      LD  H,L
                                
001311 D9B1 7A               4      LD  A,D
001312 D9B2 87               4      ADD A,A     ;*2
001313 D9B3 87               4      ADD A,A     ;*4
001314 D9B4 87               4      ADD A,A     ;*8
001315 D9B5 87               4      ADD A,A     ;*16
001316 D9B6 6F               4      LD  L,A
001317 D9B7 29              11      ADD HL,HL       ;*32
001318 D9B8 7D               4      LD  A,L
001319 D9B9 B3               4      OR  E
00131A D9BA FD7714          19      LD  (IY+20),A   ;(FCB)ファイルを最後に変更した日付
00131D D9BD FD7415          19      LD  (IY+21),H
001320 D9C0 C9              10      RET
                                
       D9C1                     PUSHRR:
001321 D9C1 3259DA          13      LD  (SETSEQ_SWC_RND),A
001324 D9C4 226BDA          16      LD  (SETSEQ_SWC_SEQ_RR),HL
001327 D9C7 CDE7D9          17      CALL    GET_RR_AHL
00132A D9CA 220FE4          16      LD  (RR_BUF_HL),HL
00132D D9CD 3211E4          13      LD  (RR_BUF_A),A
001330 D9D0 C9              10      RET
                                
       D9D1                     GET_CPM_R_SIZE:     ;バイト単位からCP/Mのレコード単位を求める（1レコード=128バイト）
001331 D9D1 87               4      ADD A,A     ;in BHLA => out AHL
001332 D9D2 ED6A            15      ADC HL,HL
001334 D9D4 CB18             8      RR  B
001336 D9D6 B7               4      OR  A
001337 D9D7 78               4      LD  A,B     ;ここでフラグは変化しない
001338 D9D8 C8              11      RET Z
001339 D9D9 2C               4      INC L       ;INC AHL
00133A D9DA C0              11      RET NZ      ;
00133B D9DB 24               4      INC H       ;
00133C D9DC C0              11      RET NZ      ;
00133D D9DD 3C               4      INC A       ;
00133E D9DE C9              10      RET
                                
       D9DF                     INIT_RND:
00133F D9DF 3ECD             7      LD  A,0CDH      ;CALL ????
001341 D9E1 212EDA          10      LD  HL,POPRR
001344 D9E4 CDC1D9          17      CALL    PUSHRR
       D9E7                     GET_RR_AHL:
001347 D9E7 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
00134A D9EA FD6622          19      LD  H,(IY+34)   ;
00134D D9ED FD7E23          19      LD  A,(IY+35)   ;
001350 D9F0 C9              10      RET
       D9F1                     SET_RR_AHL:
001351 D9F1 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001354 D9F4 FD7422          19      LD  (IY+34),H
001357 D9F7 FD7723          19      LD  (IY+35),A
00135A D9FA C9              10      RET
       D9FB                     INIT_SEQ:
00135B D9FB 3E01             7      LD  A,1     ;LD BC,????
00135D D9FD 212BDA          10      LD  HL,SETSEQ
001360 DA00 CDC1D9          17      CALL    PUSHRR
       DA03                     GETSEQ:
001363 DA03 FD6E20          19      LD  L,(IY+32)   ;(FCB)カレントレコード
001366 DA06 FD660C          19      LD  H,(IY+12)   ;(FCB)カレントブロック
001369 DA09 AF               4      XOR A
                                
00136A DA0A CB25             8      SLA L   ;L=L*2
                                
00136C DA0C CB3C             8      SRL H   ;HL=HL/2
00136E DA0E CB1D             8      RR  L   ;
001370 DA10 C9              10      RET
                                
       DA11                     SETSEQ1:
001371 DA11 F5              11      PUSH    AF
001372 DA12 E5              11      PUSH    HL      ;AHL=Random record
001373 DA13 CDE7D9          17      CALL    GET_RR_AHL
001376 DA16 47               4      LD  B,A     ;AHL→HLA
001377 DA17 7D               4      LD  A,L     ;(IY+33)(FCB)ランダムレコード
001378 DA18 6C               4      LD  L,H     ;(IY+34)
001379 DA19 60               4      LD  H,B     ;(IY+35)
00137A DA1A 0600             7      LD  B,0
                                
00137C DA1C CDD1D9          17      CALL    GET_CPM_R_SIZE
                                
00137F DA1F 29              11      ADD HL,HL
001380 DA20 CB3D             8      SRL L       ;L=L/2
001382 DA22 FD7520          19      LD  (IY+32),L   ;(FCB)カレントレコード
001385 DA25 FD740C          19      LD  (IY+12),H   ;(FCB)カレントブロック
001388 DA28 E1              10      POP HL
001389 DA29 F1              10      POP AF
00138A DA2A C9              10      RET
       DA2B                     SETSEQ:
00138B DA2B CD11DA          17      CALL    SETSEQ1
       DA2E                     POPRR:
00138E DA2E F5              11      PUSH    AF
00138F DA2F E5              11      PUSH    HL
001390 DA30 2A0FE4          16      LD  HL,(RR_BUF_HL)
001393 DA33 3A11E4          13      LD  A,(RR_BUF_A)
001396 DA36 CDF1D9          17      CALL    SET_RR_AHL
001399 DA39 E1              10      POP HL
00139A DA3A F1              10      POP AF
00139B DA3B C9              10      RET
                                
       DA3C                     RB_WRITE:
00139C DA3C C5              11      PUSH    BC
00139D DA3D ED4B4CE5        20      LD  BC,(STABLE+2*026H)  ;(BDOS)ランダムブロック書き込み
0013A1 DA41 1805            12      JR  RBRW
       DA43                     RB_READ:
0013A3 DA43 C5              11      PUSH    BC
0013A4 DA44 ED4B4EE5        20      LD  BC,(STABLE+2*027H)  ;(BDOS)ランダムブロック読み込み
       DA48                     RBRW:
0013A8 DA48 1F               4      RRA     ;AHL = AHL*128
0013A9 DA49 7C               4      LD  A,H ;AHL = AHL0/2
0013AA DA4A 1F               4      RRA     ;A
0013AB DA4B 65               4      LD  H,L ;
0013AC DA4C CB1C             8      RR  H   ;H
0013AE DA4E 2E00             7      LD  L,0 ;
0013B0 DA50 CB1D             8      RR  L   ;L
0013B2 DA52 CDF1D9          17      CALL    SET_RR_AHL
0013B5 DA55 218000          10      LD  HL,128
0013B8 DA58 C5              11      PUSH    BC
       DA59                     SETSEQ_SWC_RND:
0013B9 DA59 CD11DA          17      CALL    SETSEQ1
0013BC DA5C C1              10      POP BC
0013BD DA5D FDCB20FE        23      SET 7,(IY+32)   ;(FCB)カレントレコード
0013C1 DA61 FDE5            15      PUSH    IY
0013C3 DA63 D1              10      POP DE
0013C4 DA64 D5              11      PUSH    DE
0013C5 DA65 CD73DA          17      CALL    JP_BC
0013C8 DA68 FDE1            14      POP IY
0013CA DA6A CD2BDA          17      CALL    SETSEQ
       DA6B                     SETSEQ_SWC_SEQ_RR   EQU $-2
0013CD DA6D FDCB20BE        23      RES 7,(IY+32)   ;(FCB)カレントレコード
                                
0013D1 DA71 C1              10      POP BC
0013D2 DA72 C9              10      RET
       DA73                     JP_BC:
0013D3 DA73 C5              11      PUSH    BC
0013D4 DA74 C9              10      RET
                                
       D5FC                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       D5FC                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       D5FC                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       D5FC                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       D5FC                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:LDFILE.ASM:SHIFT_JIS]
                                    INCLUDE "LDFILE2.ASM"
                                
                                ;   LSX-Dodgers FILE2
                                
                                                ;Write random block
       DA75                     _SYS26:     ;(BDOS)ランダムブロック書き込み
0013D5 DA75 AF               4      XOR A
0013D6 DA76 324ADD          13      LD  (DRDN1),A   ;NOP
0013D9 DA79 229ADC          16      LD  (RBSIZE),HL ;HL←書き込むレコード数
0013DC DA7C 225DE4          16      LD  (LEFTX),HL
0013DF DA7F CD45D5          17      CALL    SETDRV
                                
0013E2 DA82 CDF2DB          17      CALL    RBX0
0013E5 DA85 DA12DB          10      JP  C,RBWERR
0013E8 DA88 CDCDD8          17      CALL    WOPEN
0013EB DA8B DA12DB          10      JP  C,RBWERR
0013EE DA8E 7C               4      LD  A,H
0013EF DA8F B5               4      OR  L
0013F0 DA90 CA0BDB          10      JP  Z,RBW1
                                
0013F3 DA93 2B               6      DEC HL
                                
0013F4 DA94 CDB0DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
0013F7 DA97 19              11      ADD HL,DE       ;BCHL=HL+BCDE
0013F8 DA98 3001            12      JR  NC,S26X1    ;
0013FA DA9A 03               6      INC BC      ;
       DA9B                     S26X1:
0013FB DA9B CD38D9          17      CALL    RWXR
0013FE DA9E DCDED8          17      CALL    C,WRDFX
001401 DAA1 DA12DB          10      JP  C,RBWERR
                                
001404 DAA4 CD21DC          17      CALL    RBX2
001407 DAA7 281A            12      JR  Z,RBWB      ;NZ=セクタ以下の端数がある
001409 DAA9 CD40DC          17      CALL    RBXA
00140C DAAC 3864            12      JR  C,RBWERR
00140E DAAE EB               4      EX  DE,HL
00140F DAAF C5              11      PUSH    BC
001410 DAB0 EDB0                    LDIR
001412 DAB2 225FE4          16      LD  (DTAX),HL
                                
001415 DAB5 CD72D8          17      CALL    SWTDBF      ;バッファデータは更新された
                                
001418 DAB8 2A5DE4          16      LD  HL,(LEFTX)
00141B DABB D1              10      POP DE
00141C DABC ED52            15      SBC HL,DE
00141E DABE 225DE4          16      LD  (LEFTX),HL
001421 DAC1 2831            12      JR  Z,RBWEND
                                
       DAC3                     RBWB:
001423 DAC3 CD75DC          17      CALL    RBXB
001426 DAC6 2814            12      JR  Z,RBWC
       DAC8                     RBWB1:
001428 DAC8 C5              11      PUSH    BC
001429 DAC9 D5              11      PUSH    DE
00142A DACA CD4ED7          17      CALL    CLUSTX
00142D DACD CDC4DC          17      CALL    DWTC
001430 DAD0 D1              10      POP DE
001431 DAD1 C1              10      POP BC
001432 DAD2 D4C2DE          17      CALL    NC,GNCLX
001435 DAD5 383B            12      JR  C,RBWERR
001437 DAD7 10EF            13      DJNZ    RBWB1
001439 DAD9 CD14DD          17      CALL    DRW_FLUSH
       DADC                     RBWC:
00143C DADC CD8DDC          17      CALL    RBXC
00143F DADF 2813            12      JR  Z,RBWEND
001441 DAE1 C5              11      PUSH    BC
001442 DAE2 CD4ED7          17      CALL    CLUSTX
001445 DAE5 CD49DD          17      CALL    DRDN
001448 DAE8 C1              10      POP BC
001449 DAE9 3827            12      JR  C,RBWERR
00144B DAEB ED5B7EE5        20      LD  DE,(_DTBUF)
00144F DAEF EDB0                    LDIR
001451 DAF1 CD72D8          17      CALL    SWTDBF      ;バッファデータは更新された
       DAF4                     RBWEND:
001454 DAF4 CD99DC          17      CALL    RBXEND
                                
001457 DAF7 CD01DC          17      CALL    RBX1
00145A DAFA 300F            12      JR  NC,RBW1     ;ランダムレコードの方が大きい場合はサイズを合わせる
00145C DAFC CDB0DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
00145F DAFF FD7310          19      LD  (IY+16),E   ;ファイルのサイズ(バイト単位)
001462 DB02 FD7211          19      LD  (IY+17),D   ;
001465 DB05 FD7112          19      LD  (IY+18),C   ;
001468 DB08 FD7013          19      LD  (IY+19),B   ;
       DB0B                     RBW1:
00146B DB0B FDE1            14      POP IY
00146D DB0D C1              10      POP BC
00146E DB0E D1              10      POP DE
00146F DB0F E1              10      POP HL
       DB10                     DD_NUL:
001470 DB10 AF               4      XOR A
       DB11                     DRDF0:
       DB11                     DWTF0:
001471 DB11 C9              10      RET
                                
       DB12                     RBWERR:
001472 DB12 FDE5            15      PUSH    IY
001474 DB14 D1              10      POP DE
001475 DB15 2A20E5          16      LD  HL,(STABLE+2*010H)
001478 DB18 CD0F00          17      CALL    JP_HL
       DB1B                     RBRERR1:
00147B DB1B 3E01             7      LD  A,001H
       DB1D                     RBRERR2:
00147D DB1D FDE1            14      POP IY
00147F DB1F C1              10      POP BC
001480 DB20 D1              10      POP DE
001481 DB21 E1              10      POP HL
001482 DB22 37               4      SCF
001483 DB23 210000          10      LD  HL,0
001486 DB26 C9              10      RET
                                
       DB27                     RBRERR:
001487 DB27 3EFF             7      LD  A,0FFH
001489 DB29 18F2            12      JR  RBRERR2
                                
       DB2B                     RBRFL:
00148B DB2B 3E00             7  RBRFLP: LD  A,000H
00148D DB2D FE0D             7      CP  00DH
00148F DB2F 2005            12      JR  NZ,RBRFL1
001491 DB31 D5              11      PUSH    DE
001492 DB32 1E0A             7      LD  E,00AH
001494 DB34 1805            12      JR  RBRFL2
       DB36                     RBRFL1:
001496 DB36 D5              11      PUSH    DE
001497 DB37 CD09E4          17      CALL    _SYS07
00149A DB3A 5F               4      LD  E,A
       DB3B                     RBRFL2:
00149B DB3B CDCDE4          17      CALL    _PRINT
00149E DB3E 7B               4      LD  A,E
00149F DB3F D1              10      POP DE
0014A0 DB40 322CDB          13      LD  (RBRFLP+1),A
0014A3 DB43 C9              10      RET
       DB44                     DDX:
0014A4 DB44 FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
0014A7 DB47 CD73D7          17      CALL    CAP
0014AA DB4A FE41             7      CP  'A'
0014AC DB4C C9              10      RET
                                
                                                ;Read random block
       DB4D                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0014AD DB4D 225DE4          16      LD  (LEFTX),HL
0014B0 DB50 CD45D5          17      CALL    SETDRV
                                
0014B3 DB53 FDCB0D66        20      BIT 4,(IY+13)   ;(FCB)属性(アトリビュート)
0014B7 DB57 C2E0DB          10      JP  NZ,RBRDIR   ;ディレクトリ
0014BA DB5A CDF2DB          17      CALL    RBX0
0014BD DB5D DA27DB          10      JP  C,RBRERR
0014C0 DB60 CD01DC          17      CALL    RBX1
0014C3 DB63 D419DC          17      CALL    NC,RBX1R
0014C6 DB66 DA1BDB          10      JP  C,RBRERR1
0014C9 DB69 EB               4      EX  DE,HL
0014CA DB6A ED52            15      SBC HL,DE       ;CP 00HL,BCDE
0014CC DB6C 19              11      ADD HL,DE
0014CD DB6D 79               4      LD  A,C
0014CE DB6E DE00             7      SBC A,0
0014D0 DB70 78               4      LD  A,B
0014D1 DB71 DE00             7      SBC A,0
0014D3 DB73 3801            12      JR  C,RBR1
0014D5 DB75 EB               4      EX  DE,HL
       DB76                     RBR1:
0014D6 DB76 9F               4      SBC A,A
0014D7 DB77 E601             7      AND 1
0014D9 DB79 32DEDB          13      LD  (RBRAP+1),A
                                
0014DC DB7C 7C               4      LD  A,H
0014DD DB7D B5               4      OR  L
0014DE DB7E 2857            12      JR  Z,RBREND0
                                
0014E0 DB80 229ADC          16      LD  (RBSIZE),HL ;HL←読み込むレコード数
0014E3 DB83 225DE4          16      LD  (LEFTX),HL
                                
0014E6 DB86 CD21DC          17      CALL    RBX2
0014E9 DB89 2819            12      JR  Z,RBRB
0014EB DB8B CD40DC          17      CALL    RBXA
0014EE DB8E DA27DB          10      JP  C,RBRERR
0014F1 DB91 C5              11      PUSH    BC
0014F2 DB92 EDB0                    LDIR
0014F4 DB94 ED535FE4        20      LD  (DTAX),DE
0014F8 DB98 2A5DE4          16      LD  HL,(LEFTX)
0014FB DB9B D1              10      POP DE
0014FC DB9C A7               4      AND A
0014FD DB9D ED52            15      SBC HL,DE
0014FF DB9F 225DE4          16      LD  (LEFTX),HL
001502 DBA2 2830            12      JR  Z,RBREND
                                
       DBA4                     RBRB:
001504 DBA4 CD75DC          17      CALL    RBXB
001507 DBA7 2815            12      JR  Z,RBRC
       DBA9                     RBRB1:
001509 DBA9 C5              11      PUSH    BC
00150A DBAA D5              11      PUSH    DE
00150B DBAB CD4ED7          17      CALL    CLUSTX
00150E DBAE CDCADC          17      CALL    DRDC
001511 DBB1 D1              10      POP DE
001512 DBB2 C1              10      POP BC
001513 DBB3 D4C2DE          17      CALL    NC,GNCLX
001516 DBB6 DA27DB          10      JP  C,RBRERR
001519 DBB9 10EE            13      DJNZ    RBRB1
00151B DBBB CD14DD          17      CALL    DRW_FLUSH
       DBBE                     RBRC:
00151E DBBE CD8DDC          17      CALL    RBXC
001521 DBC1 2811            12      JR  Z,RBREND
001523 DBC3 C5              11      PUSH    BC
001524 DBC4 CD4ED7          17      CALL    CLUSTX
001527 DBC7 CD2DDD          17      CALL    DRDX
00152A DBCA C1              10      POP BC
00152B DBCB DA27DB          10      JP  C,RBRERR
00152E DBCE EB               4      EX  DE,HL
00152F DBCF 2A7EE5          16      LD  HL,(_DTBUF)
001532 DBD2 EDB0                    LDIR
       DBD4                     RBREND:
001534 DBD4 CD99DC          17      CALL    RBXEND
       DBD7                     RBREND0:
001537 DBD7 FDE1            14      POP IY
001539 DBD9 C1              10      POP BC
00153A DBDA D1              10      POP DE
00153B DBDB F1              10      POP AF  ;(HL)
00153C DBDC AF               4      XOR A
00153D DBDD 3E00             7  RBRAP:  LD  A,000H
00153F DBDF C9              10      RET
                                
       DBE0                     RBRDIR:
001540 DBE0 FD6E1A          19      LD  L,(IY+26)   ;(FCB)ファイルの先頭クラスタ
001543 DBE3 FD661B          19      LD  H,(IY+27)
001546 DBE6 CD89D7          17      CALL    CHDIR
001549 DBE9 AF               4      XOR A
00154A DBEA 67               4      LD  H,A
00154B DBEB 6F               4      LD  L,A
00154C DBEC 3C               4      INC A
00154D DBED 32DEDB          13      LD  (RBRAP+1),A
001550 DBF0 18E5            12      JR  RBREND0
                                
       DBF2                     RBX0:
001552 DBF2 2A8AE4          16      LD  HL,(_DTA)
001555 DBF5 225FE4          16      LD  (DTAX),HL
001558 DBF8 2A5DE4          16      LD  HL,(LEFTX)
00155B DBFB FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
00155E DBFE D6FD             7      SUB 0FDH
001560 DC00 C9              10      RET
                                
       DC01                     RBX1:               ;ファイルサイズとランダムレコードを比べる
001561 DC01 E5              11      PUSH    HL      ;Record byte
                                                ;AHL=File size
001562 DC02 FD6E10          19      LD  L,(IY+16)   ;ファイルのサイズ(バイト単位)
001565 DC05 FD6611          19      LD  H,(IY+17)   ;
001568 DC08 FD7E12          19      LD  A,(IY+18)   ;
                                
00156B DC0B CDB0DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
00156E DC0E A7               4      AND A
00156F DC0F ED52            15      SBC HL,DE
001571 DC11 99               4      SBC A,C
001572 DC12 4F               4      LD  C,A
001573 DC13 FD7E13          19      LD  A,(IY+19)   ;ファイルのサイズ
001576 DC16 98               4      SBC A,B
001577 DC17 D1              10      POP DE
001578 DC18 C9              10      RET
       DC19                     RBX1R:
001579 DC19 47               4      LD  B,A
00157A DC1A B1               4      OR  C
00157B DC1B EB               4      EX  DE,HL   ;BCDE=File byte HL=Record byte
00157C DC1C B2               4      OR  D
00157D DC1D B3               4      OR  E
00157E DC1E C0              11      RET NZ
00157F DC1F 37               4      SCF
001580 DC20 C9              10      RET
                                
       DC21                     RBX2:               ;Cluster settings
001581 DC21 FD6622          19      LD  H,(IY+34)   ;(+33)(FCB)ランダムレコード
001584 DC24 FD4E23          19      LD  C,(IY+35)
001587 DC27 0600             7      LD  B,0
001589 DC29 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
00158D DC2D 2003            12      JR  NZ,RBX3
00158F DC2F FD4624          19      LD  B,(IY+36)
       DC32                     RBX3:
001592 DC32 CD38D9          17      CALL    RWXR
001595 DC35 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
001598 DC38 3D               4      DEC A
001599 DC39 FDA622          19      AND (IY+34)
00159C DC3C FDB621          19      OR  (IY+33)
00159F DC3F C9              10      RET
                                
       DC40                     RBXA:
0015A0 DC40 C5              11      PUSH    BC
0015A1 DC41 D5              11      PUSH    DE
0015A2 DC42 CD4ED7          17      CALL    CLUSTX
0015A5 DC45 CD2DDD          17      CALL    DRDX
0015A8 DC48 D1              10      POP DE
0015A9 DC49 C1              10      POP BC
0015AA DC4A D4C2DE          17      CALL    NC,GNCLX
0015AD DC4D D8              11      RET C
0015AE DC4E ED53FEE5        20      LD  (_CLPS),DE
                                
0015B2 DC52 FD4E21          19      LD  C,(IY+33)   ;(FCB)ランダムレコード
0015B5 DC55 210004          10  SECSZ:  LD  HL,0400H    ;自己書き換え 1024=0400H / 512=0200H ここに1セクタのサイズが格納される
0015B8 DC58 7C               4      LD  A,H
0015B9 DC59 3D               4      DEC A       ;1024=3 / 512=1
0015BA DC5A FDA622          19      AND (IY+34)     ;(FCB)ランダムレコード
0015BD DC5D 47               4      LD  B,A     ;BCに1セクタ以下の端数が入る
0015BE DC5E ED42            15      SBC HL,BC       ;残りを計算
                                
0015C0 DC60 ED5B5DE4        20      LD  DE,(LEFTX)
0015C4 DC64 ED52            15      SBC HL,DE       ;CP HL,DE
0015C6 DC66 19              11      ADD HL,DE       ;
0015C7 DC67 3801            12      JR  C,RBXA1     ;DEとHLを比較して大きい方をHLに
0015C9 DC69 EB               4      EX  DE,HL
       DC6A                     RBXA1:
0015CA DC6A E5              11      PUSH    HL
0015CB DC6B 2A7EE5          16      LD  HL,(_DTBUF)
0015CE DC6E 09              11      ADD HL,BC
0015CF DC6F ED5B5FE4        20      LD  DE,(DTAX)
0015D3 DC73 C1              10      POP BC
0015D4 DC74 C9              10      RET
                                
       DC75                     RBXB:
0015D5 DC75 2A5FE4          16      LD  HL,(DTAX)
0015D8 DC78 ED5BFEE5        20      LD  DE,(_CLPS)
0015DC DC7C 3A5EE4          13      LD  A,(LEFTX+1)
0015DF DC7F 47               4      LD  B,A
0015E0 DC80 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       DC83                     RBXB1:
0015E3 DC83 1F               4      RRA     ;->CF
0015E4 DC84 3804            12      JR  C,RBXB2
0015E6 DC86 CB38             8      SRL B   ;B=B/2
0015E8 DC88 18F9            12      JR  RBXB1
       DC8A                     RBXB2:
0015EA DC8A 78               4      LD  A,B
0015EB DC8B B7               4      OR  A
0015EC DC8C C9              10      RET
                                
       DC8D                     RBXC:
0015ED DC8D ED4B5DE4        20      LD  BC,(LEFTX)
0015F1 DC91 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
0015F4 DC94 3D               4      DEC A
0015F5 DC95 A0               4      AND B
0015F6 DC96 47               4      LD  B,A     ;1セクタ以下の端数がない場合はZ
0015F7 DC97 B1               4      OR  C
0015F8 DC98 C9              10      RET
                                
       DC99                     RBXEND:             ;レコード数だけランダムレコードを進める
0015F9 DC99 110000          10      LD  DE,0        ;進めるレコード数(RBSIZE)
       DC9A                     RBSIZE  EQU $-2
0015FC DC9C CDE7D9          17      CALL    GET_RR_AHL
0015FF DC9F 19              11      ADD HL,DE
001600 DCA0 CE00             7      ADC A,0
001602 DCA2 CDF1D9          17      CALL    SET_RR_AHL
001605 DCA5 EB               4      EX  DE,HL       ;HL=進めるレコード数
001606 DCA6 D0              11      RET NC
001607 DCA7 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
00160B DCAB C0              11      RET NZ
00160C DCAC FD3424          23      INC (IY+36)
00160F DCAF C9              10      RET
                                
       DCB0                     GET_RR_BCDE:            ;BCDE=Random record
001610 DCB0 FD5E21          19      LD  E,(IY+33)   ;(FCB)ランダムレコード
001613 DCB3 FD5622          19      LD  D,(IY+34)
001616 DCB6 FD4E23          19      LD  C,(IY+35)
001619 DCB9 0600             7      LD  B,0     ;CP/M互換のアクセスの場合はFCBは36バイト
00161B DCBB FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
00161F DCBF C0              11      RET NZ
001620 DCC0 FD4624          19      LD  B,(IY+36)
001623 DCC3 C9              10      RET
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめる
                                
       DCC4                     DWTC:
001624 DCC4 E5              11      PUSH    HL
001625 DCC5 2154E0          10      LD  HL,DWT24B
001628 DCC8 1804            12      JR  DWTC1
       DCCA                     DRDC:
00162A DCCA E5              11      PUSH    HL
00162B DCCB 2144E0          10      LD  HL,DRD24B
       DCCE                     DWTC1:
00162E DCCE 2228DD          16      LD  (DRWF_MODE),HL
001631 DCD1 E1              10      POP HL
001632 DCD2 3A18DD          13      LD  A,(DRWF_B)
001635 DCD5 B7               4      OR  A
001636 DCD6 200F            12      JR  NZ,DRDC1
       DCD8                     SAVE_DRWC:
001638 DCD8 0601             7      LD  B,1
00163A DCDA ED4317DD        20      LD  (DRWF_C),BC
00163E DCDE ED531EDD        20      LD  (DRWF_E),DE
001642 DCE2 2221DD          16      LD  (DRWF_HL),HL
001645 DCE5 1820            12      JR  INC_HL_DRWC
       DCE7                     DRDC1:
001647 DCE7 E5              11      PUSH    HL
001648 DCE8 211EDD          10      LD  HL,DRWF_E
00164B DCEB 86               7      ADD A,(HL)
00164C DCEC F5              11      PUSH    AF
00164D DCED BB               4      CP  E
00164E DCEE 201D            12      JR  NZ,DRDC2
001650 DCF0 F1              10      POP AF
001651 DCF1 23               6      INC HL
001652 DCF2 7E               7      LD  A,(HL)
001653 DCF3 CE00             7      ADC A,0
001655 DCF5 F5              11      PUSH    AF
001656 DCF6 BA               4      CP  D
001657 DCF7 2014            12      JR  NZ,DRDC2
001659 DCF9 F1              10      POP AF
00165A DCFA 3A17DD          13      LD  A,(DRWF_C)
00165D DCFD CE00             7      ADC A,0
00165F DCFF B9               4      CP  C
001660 DD00 200C            12      JR  NZ,DRDC3
001662 DD02 2118DD          10      LD  HL,DRWF_B
001665 DD05 34              11      INC (HL)
001666 DD06 E1              10      POP HL
       DD07                     INC_HL_DRWC:
001667 DD07 3A57DC          13      LD  A,(SECSZ+2)     ;1セクタのサイズの上位1バイト
00166A DD0A 84               4      ADD A,H
00166B DD0B 67               4      LD  H,A
00166C DD0C C9              10      RET
       DD0D                     DRDC2:
00166D DD0D F1              10      POP AF
       DD0E                     DRDC3:
00166E DD0E CD14DD          17      CALL    DRW_FLUSH
001671 DD11 E1              10      POP HL
001672 DD12 18C4            12      JR  SAVE_DRWC
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめたものをフラッシュする
       DD14                     DRW_FLUSH:
001674 DD14 C5              11      PUSH    BC
001675 DD15 D5              11      PUSH    DE
001676 DD16 010000          10      LD  BC,0
       DD17                     DRWF_C  EQU $-2
       DD18                     DRWF_B  EQU $-1
001679 DD19 78               4      LD  A,B
00167A DD1A B7               4      OR  A
00167B DD1B 280D            12      JR  Z,DRDF1
00167D DD1D 110000          10      LD  DE,0
       DD1E                     DRWF_E  EQU $-2
       DD1F                     DRWF_D  EQU $-1
001680 DD20 210000          10      LD  HL,0
       DD21                     DRWF_HL EQU $-2
001683 DD23 AF               4      XOR A
001684 DD24 3218DD          13      LD  (DRWF_B),A
001687 DD27 CD44E0          17      CALL    DRD24B
       DD28                     DRWF_MODE   EQU $-2
       DD2A                     DRDF1:
00168A DD2A D1              10      POP DE
00168B DD2B C1              10      POP BC
00168C DD2C C9              10      RET
[EOF:LDFILE2.ASM:SHIFT_JIS]
                                    INCLUDE "LDDIO.ASM"
                                
                                ;   LSX-Dodgers DIO
                                
       DD2D                     DRDX:
00168D DD2D CD6BDD          17      CALL    DRDY
001690 DD30 C8              11      RET Z
001691 DD31 CD51DD          17      CALL    DRDX1       ;データバッファの情報を保存
001694 DD34 D8              11      RET C
001695 DD35 E5              11      PUSH    HL
001696 DD36 C5              11      PUSH    BC
001697 DD37 D5              11      PUSH    DE
001698 DD38 2A7EE5          16      LD  HL,(_DTBUF)
00169B DD3B 3A94DD          13      LD  A,(_DBS24)
00169E DD3E 4F               4      LD  C,A
00169F DD3F CD42E0          17      CALL    DRD24
0016A2 DD42 DC66DD          17      CALL    C,DRDNE
       DD45                     POP_DE_BC_HL_RET:
0016A5 DD45 D1              10      POP DE
0016A6 DD46 C1              10      POP BC
0016A7 DD47 E1              10      POP HL
0016A8 DD48 C9              10      RET
                                
                                ;   CDE:セクタ番号
       DD49                     DRDN:
0016A9 DD49 AF               4      XOR A
0016AA DD4A 00               4  DRDN1:  NOP         ;自己書き換え NOP / SCF
0016AB DD4B 30E0            12      JR  NC,DRDX
       DD4D                     DRDNX:
0016AD DD4D CD6BDD          17      CALL    DRDY
0016B0 DD50 C8              11      RET Z
       DD51                     DRDX1:
0016B1 DD51 CD81DD          17      CALL    DWTX
                                                ;データバッファの読み込んだドライブ・セクタ情報を保存
0016B4 DD54 ED53A6E4        20      LD  (_DBSEC),DE
0016B8 DD58 79               4      LD  A,C
0016B9 DD59 3294DD          13      LD  (_DBS24),A
                                
0016BC DD5C 3A88E4          13      LD  A,(_DRV)
0016BF DD5F 32A5E4          13      LD  (_DBDRV),A
0016C2 DD62 CDD9E4          17      CALL    _CHGDRV
0016C5 DD65 D0              11      RET NC
       DD66                     DRDNE:
0016C6 DD66 9F               4      SBC A,A     ;CF=1ならばA=0FFH
0016C7 DD67 32A5E4          13      LD  (_DBDRV),A
0016CA DD6A C9              10      RET
                                
                                ;   CDE:セクタ番号
       DD6B                     DRDY:
0016CB DD6B 3A94DD          13      LD  A,(_DBS24)
0016CE DD6E B9               4      CP  C
0016CF DD6F C0              11      RET NZ
                                
0016D0 DD70 E5              11      PUSH    HL
0016D1 DD71 3A88E4          13      LD  A,(_DRV)
0016D4 DD74 21A5E4          10      LD  HL,_DBDRV
0016D7 DD77 AE               7      XOR (HL)
0016D8 DD78 2005            12      JR  NZ,POP_HL_RET
                                
0016DA DD7A 2AA6E4          16      LD  HL,(_DBSEC)
0016DD DD7D ED52            15      SBC HL,DE       ;上でXORを使っているのでCF=0のはず
       DD7F                     POP_HL_RET:
0016DF DD7F E1              10      POP HL
0016E0 DD80 C9              10      RET
                                
       DD81                     DWTX:
0016E1 DD81 3AA4E4          13      LD  A,(_WTDBF)
0016E4 DD84 B7               4      OR  A
0016E5 DD85 C8              11      RET Z
0016E6 DD86 AF               4      XOR A
0016E7 DD87 32A4E4          13      LD  (_WTDBF),A
                                
0016EA DD8A E5              11      PUSH    HL
0016EB DD8B C5              11      PUSH    BC
0016EC DD8C D5              11      PUSH    DE
0016ED DD8D 3AA5E4          13      LD  A,(_DBDRV)
0016F0 DD90 CDD9E4          17      CALL    _CHGDRV
0016F3 DD93 0E00             7      LD  C,0
       DD94                     _DBS24  EQU $-1
0016F5 DD95 ED5BA6E4        20      LD  DE,(_DBSEC)
0016F9 DD99 2A7EE5          16      LD  HL,(_DTBUF)
0016FC DD9C D452E0          17      CALL    NC,DWT24
       DD9F                     POP_DE_BC_HL_RET2:
0016FF DD9F 18A4            12      JR  POP_DE_BC_HL_RET
                                
       DDA1                     RDFATX:
001701 DDA1 E5              11      PUSH    HL
001702 DDA2 3A88E4          13      LD  A,(_DRV)
001705 DDA5 21AAE4          10      LD  HL,_FATDRV
001708 DDA8 AE               7      XOR (HL)
001709 DDA9 28D4            12      JR  Z,POP_HL_RET
                                
00170B DDAB C5              11      PUSH    BC
00170C DDAC D5              11      PUSH    DE
00170D DDAD DDE5            15      PUSH    IX
00170F DDAF CDCBDD          17      CALL    WTFATX
001712 DDB2 3813            12      JR  C,POP_IX_DE_BC_HL_RET
                                
001714 DDB4 AF               4      XOR A
001715 DDB5 32ABE4          13      LD  (_FATIX),A
001718 DDB8 3A88E4          13      LD  A,(_DRV)
00171B DDBB 32AAE4          13      LD  (_FATDRV),A
00171E DDBE CDE5E4          17      CALL    _RDFAT
       DDC1                     RDFATE2:
001721 DDC1 3004            12      JR  NC,POP_IX_DE_BC_HL_RET
001723 DDC3 9F               4      SBC A,A     ;A=0xFF
001724 DDC4 32AAE4          13      LD  (_FATDRV),A
       DDC7                     POP_IX_DE_BC_HL_RET:
001727 DDC7 DDE1            14      POP IX
001729 DDC9 18D4            12      JR  POP_DE_BC_HL_RET2
                                
       DDCB                     WTFATX:
00172B DDCB 3AA2E4          13      LD  A,(_WTFATF)
00172E DDCE B7               4      OR  A
00172F DDCF C8              11      RET Z
001730 DDD0 E5              11      PUSH    HL
001731 DDD1 3AAAE4          13      LD  A,(_FATDRV)
001734 DDD4 21A5E4          10      LD  HL,_DBDRV
001737 DDD7 AE               7      XOR (HL)
001738 DDD8 CC81DD          17      CALL    Z,DWTX
00173B DDDB 38A2            12      JR  C,POP_HL_RET
00173D DDDD C5              11      PUSH    BC
00173E DDDE D5              11      PUSH    DE
00173F DDDF DDE5            15      PUSH    IX
001741 DDE1 CD5FE0          17      CALL    WTFAT
001744 DDE4 AF               4      XOR A
001745 DDE5 32A2E4          13      LD  (_WTFATF),A
001748 DDE8 18DD            12      JR  POP_IX_DE_BC_HL_RET
                                
       DDEA                     NCL1:
00174A DDEA 7A               4      LD  A,D
00174B DDEB B3               4      OR  E
00174C DDEC 37               4      SCF
00174D DDED C8              11      RET Z
                                
00174E DDEE 7A               4      LD  A,D
00174F DDEF CB3F             8      SRL A   ;/2
001751 DDF1 CB3F             8      SRL A   ;/2
                                
001753 DDF3 E5              11      PUSH    HL
001754 DDF4 3213DE          13      LD  (NCLPAT_FATIX),A    ;_FATIX
001757 DDF7 2AAAE4          16      LD  HL,(_FATDRV)    ;L=_FATDRV H=_FATIX
00175A DDFA BC               4      CP  H
00175B DDFB 3A88E4          13      LD  A,(_DRV)    ;LDではフラグは変化しない
00175E DDFE 3212DE          13      LD  (NCLPAT_FATDRV),A   ;_FATDRV
001761 DE01 2005            12      JR  NZ,NCL2     ;FATIXが違う
001763 DE03 BD               4      CP  L
001764 DE04 2002            12      JR  NZ,NCL2     ;ドライブが違う
001766 DE06 E1              10      POP HL
001767 DE07 C9              10      RET
       DE08                     NCL2:
001768 DE08 C5              11      PUSH    BC
001769 DE09 D5              11      PUSH    DE
00176A DE0A DDE5            15      PUSH    IX
00176C DE0C CDCBDD          17      CALL    WTFATX
00176F DE0F 38B6            12      JR  C,POP_IX_DE_BC_HL_RET
001771 DE11 010000          10      LD  BC,0        ;自己書き換え C=_FATDRV B=_FATIX
       DE13                     NCLPAT_FATIX    EQU $-1
       DE12                     NCLPAT_FATDRV   EQU $-2
001774 DE14 ED43AAE4        20      LD  (_FATDRV),BC
001778 DE18 CD34E0          17      CALL    RDFATS
00177B DE1B 18A4            12      JR  RDFATE2
                                
       DE1D                     NCL3:
00177D DE1D CB9A             8      RES 3,D
00177F DE1F CB92             8      RES 2,D
001781 DE21 6B               4      LD  L,E
001782 DE22 62               4      LD  H,D
001783 DE23 CB3C             8      SRL H   ;
001785 DE25 CB1D             8      RR  L   ;HLA=HLA/2
001787 DE27 1F               4      RRA     ;
001788 DE28 F5              11      PUSH    AF
001789 DE29 3AABE4          13      LD  A,(_FATIX)
00178C DE2C 0F               4      RRCA
00178D DE2D 300B            12      JR  NC,NCL3X1
00178F DE2F 3A57DC          13      LD  A,(SECSZ+2)
001792 DE32 FE04             7      CP  4       ;1セクタ1024バイトの場合は奇数インデックスの場合に先頭を512バイトずらす
001794 DE34 2004            12      JR  NZ,NCL3X1
001796 DE36 010002          10      LD  BC,512
001799 DE39 09              11      ADD HL,BC
       DE3A                     NCL3X1:
00179A DE3A F1              10      POP AF
00179B DE3B ED4B7CE5        20      LD  BC,(_FATBF)
00179F DE3F 19              11      ADD HL,DE
0017A0 DE40 09              11      ADD HL,BC
0017A1 DE41 17               4      RLA
0017A2 DE42 C9              10      RET
                                
       DE43                     GNCL:
0017A3 DE43 CDEADD          17      CALL    NCL1        ;GET NEXT CLUSTER
0017A6 DE46 D8              11      RET C
0017A7 DE47 C5              11      PUSH    BC
0017A8 DE48 E5              11      PUSH    HL
0017A9 DE49 CD1DDE          17      CALL    NCL3
0017AC DE4C 3809            12      JR  C,GNC1
0017AE DE4E 5E               7      LD  E,(HL)
0017AF DE4F 23               6      INC HL
0017B0 DE50 7E               7      LD  A,(HL)
0017B1 DE51 E60F             7      AND 00FH
0017B3 DE53 57               4      LD  D,A
0017B4 DE54 E1              10      POP HL
0017B5 DE55 C1              10      POP BC
0017B6 DE56 C9              10      RET
       DE57                     GNC1:
0017B7 DE57 7E               7      LD  A,(HL)
0017B8 DE58 23               6      INC HL
0017B9 DE59 56               7      LD  D,(HL)
0017BA DE5A 0604             7      LD  B,4
       DE5C                     GNC1L:
0017BC DE5C CB3A             8      SRL D   ;DA=DA/2
0017BE DE5E 1F               4      RRA     ;
0017BF DE5F 10FB            13      DJNZ    GNC1L
                                
0017C1 DE61 5F               4      LD  E,A
0017C2 DE62 E1              10      POP HL
0017C3 DE63 C1              10      POP BC
0017C4 DE64 A7               4      AND A
0017C5 DE65 C9              10      RET
                                
       DE66                     SNCL:
0017C6 DE66 CDEADD          17      CALL    NCL1
0017C9 DE69 D8              11      RET C
                                ;               SET NEXT CLUSTER
0017CA DE6A E5              11      PUSH    HL
0017CB DE6B C5              11      PUSH    BC
0017CC DE6C D5              11      PUSH    DE
0017CD DE6D E5              11      PUSH    HL
0017CE DE6E CD1DDE          17      CALL    NCL3
0017D1 DE71 D1              10      POP DE
                                ;CF=ODD
0017D2 DE72 7E               7      LD  A,(HL)
0017D3 DE73 73               7      LD  (HL),E
0017D4 DE74 3806            12      JR  C,SNC1
                                ;EVEN
                                ;M[0] = E
                                ;M[1] = (M[1] & 0xF0) | (D & 0x0F)
0017D6 DE76 23               6      INC HL
0017D7 DE77 ED67            18      RRD     ;M={A[3:0],E[3:0]}
0017D9 DE79 7A               4      LD  A,D
0017DA DE7A 1804            12      JR  SNC11
       DE7C                     SNC1:
                                ;ODD
                                ;HL[0] = (HL[0]&0x0F) | (E<<4)
                                ;HL[1] = DE>>4
0017DC DE7C ED6F            18      RLD     ;M={D[3:0],E[7:4]}
0017DE DE7E 23               6      INC HL
0017DF DE7F 72               7      LD  (HL),D  ;M={D[3:0],E[7:4]}
       DE80                     SNC11:
0017E0 DE80 ED6F            18      RLD     ;M={M[7:4],D[3:0]}
0017E2 DE82 B7               4      OR  A
0017E3 DE83 D1              10      POP DE
0017E4 DE84 C1              10      POP BC
0017E5 DE85 E1              10      POP HL
       DE86                     FAT_CHANGED:
0017E6 DE86 3E01             7      LD  A,1
0017E8 DE88 32A2E4          13      LD  (_WTFATF),A
0017EB DE8B C9              10      RET
                                
       DE8C                     N16CL3:
0017EC DE8C C5              11      PUSH    BC
0017ED DE8D 6B               4      LD  L,E
0017EE DE8E 7A               4      LD  A,D
0017EF DE8F E603             7      AND 3
0017F1 DE91 67               4      LD  H,A
0017F2 DE92 29              11      ADD HL,HL
0017F3 DE93 ED4B7CE5        20      LD  BC,(_FATBF)
0017F7 DE97 09              11      ADD HL,BC
0017F8 DE98 C1              10      POP BC
0017F9 DE99 C9              10      RET
                                
       DE9A                     GNCL16:
0017FA DE9A CDEADD          17      CALL    NCL1        ;GET NEXT CLUSTER for FAT16
0017FD DE9D D8              11      RET C
0017FE DE9E E5              11      PUSH    HL
0017FF DE9F CD8CDE          17      CALL    N16CL3
001802 DEA2 5E               7      LD  E,(HL)
001803 DEA3 23               6      INC HL
001804 DEA4 56               7      LD  D,(HL)
001805 DEA5 E1              10      POP HL
001806 DEA6 C9              10      RET
                                
       DEA7                     SNCL16:
001807 DEA7 CDEADD          17      CALL    NCL1        ;GET NEXT CLUSTER for FAT16
00180A DEAA D8              11      RET C
00180B DEAB D5              11      PUSH    DE
00180C DEAC E5              11      PUSH    HL
00180D DEAD CD8CDE          17      CALL    N16CL3
001810 DEB0 D1              10      POP DE      ;HL
001811 DEB1 73               7      LD  (HL),E
001812 DEB2 23               6      INC HL
001813 DEB3 72               7      LD  (HL),D
001814 DEB4 6B               4      LD  L,E
001815 DEB5 62               4      LD  H,D
001816 DEB6 D1              10      POP DE
001817 DEB7 18CD            12      JR  FAT_CHANGED
                                
                                ;------------------------
                                ;次のセクタを探す際に_SECPSの値をチェック
                                ;in
                                ;   DE : セクタ番号
                                ;out
                                ;   DE : 次のセクタ番号
                                ;note
                                ;
                                ;------------------------
       DEB9                     NEXTX:
001819 DEB9 3E00             7      LD  A,0 ;自己書き換え
       DEBA                     _SECPS  EQU $-1
00181B DEBB 3C               4      INC A
00181C DEBC E600             7      AND 0   ;自己書き換え　1クラスタの論理セクタ数-1
       DEBD                     _NCPAT  EQU $-1
00181E DEBE 32BADE          13      LD  (_SECPS),A
001821 DEC1 C9              10      RET
                                
       DEC2                     GNCLX:
001822 DEC2 CDB9DE          17      CALL    NEXTX
001825 DEC5 C0              11      RET NZ  ;1クラスタのセクタ未満の場合は戻る
001826 DEC6 C3F7E4          10      JP  _GNCL   ;次のクラスタを探す
                                
       DEC9                     RDFAT:
001829 DEC9 3E80             7      LD  A,080H
00182B DECB 3270E4          13      LD  (CHECK),A
       DECE                     RDFAT1:
00182E DECE 3A88E4          13      LD  A,(_DRV)
001831 DED1 CD7DE1          17      CALL    CHGDRVR
001834 DED4 D8              11      RET C
001835 DED5 DD7E12          19      LD  A,(IX+DPB_DEVICE)
001838 DED8 CB6F             8      BIT 5,A
00183A DEDA 2868            12      JR  Z,RDFAT0X
00183C DEDC 2170E4          10      LD  HL,CHECK
00183F DEDF A6               7      AND (HL)
001840 DEE0 77               7      LD  (HL),A
001841 DEE1 110000          10      LD  DE,0        ;BPB
001844 DEE4 2A7CE5          16      LD  HL,(_FATBF)
001847 DEE7 CD40E0          17      CALL    DRD16
00184A DEEA 3024            12      JR  NC,GETBPB
00184C DEEC 2170E4          10      LD  HL,CHECK
00184F DEEF CB06            15      RLC (HL)
001851 DEF1 3F               4      CCF
001852 DEF2 D8              11      RET C
001853 DEF3 DDCB0A1E        23      RR  (IX+DPB_FDMODE)
001857 DEF7 3F               4      CCF         ;フロッピーディスクのFDモードを切り替える
001858 DEF8 DDCB0A16        23      RL  (IX+DPB_FDMODE)
00185C DEFC 3EFF             7      LD  A,0FFH
00185E DEFE 3289E4          13      LD  (_DSK),A
001861 DF01 3A84E4          13      LD  A,(_DRIVE)
001864 DF04 E603             7      AND 3
001866 DF06 F680             7      OR  080H
001868 DF08 6F               4      LD  L,A
001869 DF09 26E4             7      LD  H,_CYL0/256
00186B DF0B 3EFF             7      LD  A,0FFH
00186D DF0D 77               7      LD  (HL),A
00186E DF0E 18BE            12      JR  RDFAT1
       DF10                     GETBPB:
001870 DF10 FDE5            15      PUSH    IY
001872 DF12 FD2A7CE5        20      LD  IY,(_FATBF) ;BPB
001876 DF16 CDF1E4          17      CALL    _BPB2DPB
001879 DF19 FDE1            14      POP IY
00187B DF1B DD7E12          19      LD  A,(IX+DPB_DEVICE)
00187E DF1E 3021            12      JR  NC,GETBPBOK
001880 DF20 E60F             7      AND 00FH
001882 DF22 FE07             7      CP  7
001884 DF24 37               4      SCF
001885 DF25 C0              11      RET NZ
001886 DF26 DDCB0A46        20      BIT 0,(IX+DPB_FDMODE)
00188A DF2A 21C0E5          10      LD  HL,M2D
00188D DF2D 2002            12      JR  NZ,SETFDMODE
00188F DF2F 2ED2             7      LD  L,M2HD-STABLE
       DF31                     SETFDMODE:
001891 DF31 DDE5            15      PUSH    IX
001893 DF33 D1              10      POP DE
001894 DF34 EDA0            16      LDI
001896 DF36 EDA0            16      LDI
001898 DF38 13               6      INC DE
001899 DF39 13               6      INC DE
00189A DF3A 13               6      INC DE
00189B DF3B 13               6      INC DE
00189C DF3C 010C00          10      LD  BC,12
00189F DF3F EDB0                    LDIR
       DF41                     GETBPBOK:
0018A1 DF41 CDE8E0          17      CALL    CHGDRV2
       DF44                     RDFAT0X:
0018A4 DF44 CD34E0          17      CALL    RDFATS
0018A7 DF47 D8              11      RET C
0018A8 DF48 DDAE06          19      XOR (IX+DPB_FATID)
0018AB DF4B C8              11      RET Z
0018AC DF4C DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
0018B0 DF50 C0              11      RET NZ      ;BPBを取得している場合はFATIDをチェックしない
0018B1 DF51 37               4      SCF
0018B2 DF52 C9              10      RET
                                
       DF53                     POP_HL_SCF_RET:
0018B3 DF53 E1              10      POP HL
0018B4 DF54 37               4      SCF
0018B5 DF55 C9              10      RET
                                
       DF56                     BPB2DPB:
0018B6 DF56 FD7E0B          19      LD  A,(IY+11)   ;BPB_BytsPerSec
0018B9 DF59 B7               4      OR  A
0018BA DF5A 37               4      SCF
0018BB DF5B C0              11      RET NZ
       DF5C                     BPBOK:
0018BC DF5C FD7E0D          19      LD  A,(IY+13)   ;BPB_SecPerClus
0018BF DF5F DD7707          19      LD  (IX+DPB_SECPCL),A
                                
0018C2 DF62 FD7E16          19      LD  A,(IY+22)   ;BPB_FATSz16
0018C5 DF65 DD7700          19      LD  (IX+DPB_FATLN),A
0018C8 DF68 FD7E17          19      LD  A,(IY+23)   ;BPB_FATSz16
0018CB DF6B DD7701          19      LD  (IX+DPB_FATLN+1),A
                                
0018CE DF6E FD6E0E          19      LD  L,(IY+14)   ;BPB_RsvdSecCnt
0018D1 DF71 FD660F          19      LD  H,(IY+15)
0018D4 DF74 DD750E          19      LD  (IX+DPB_FATPS),L
0018D7 DF77 FD5E16          19      LD  E,(IY+22)   ;BPB_FATSz16
0018DA DF7A FD5617          19      LD  D,(IY+23)
0018DD DF7D FD4610          19      LD  B,(IY+16)   ;BPB_NumFATs
       DF80                     BPBDP1:             ;BPB_FATSz16 * BPB_NumFATs
0018E0 DF80 19              11      ADD HL,DE
0018E1 DF81 10FD            13      DJNZ    BPBDP1
       DF83                     BPBDP2:
0018E3 DF83 DD7510          19      LD  (IX+DPB_DIRPS),L
0018E6 DF86 DD7411          19      LD  (IX+DPB_DIRPS+1),H
0018E9 DF89 E5              11      PUSH    HL
                                
0018EA DF8A FD6E11          19      LD  L,(IY+17)   ;BPB_RootEntCnt
0018ED DF8D FD6612          19      LD  H,(IY+18)
0018F0 DF90 FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
0018F3 DF93 B7               4      OR  A
0018F4 DF94 28BD            12      JR  Z,POP_HL_SCF_RET
0018F6 DF96 0606             7      LD  B,6
       DF98                     BPBBPS1:
0018F8 DF98 05               4      DEC B
0018F9 DF99 0F               4      RRCA
0018FA DF9A 30FC            12      JR  NC,BPBBPS1
       DF9C                     BPBDE1:
0018FC DF9C 29              11      ADD HL,HL
0018FD DF9D 10FD            13      DJNZ    BPBDE1
                                
0018FF DF9F 7C               4      LD  A,H
001900 DFA0 DD770B          19      LD  (IX+DPB_DIRSCNT),A  ;
                                
001903 DFA3 D1              10      POP DE      ;DPB_DIRPS
001904 DFA4 6C               4      LD  L,H
001905 DFA5 2600             7      LD  H,0
001907 DFA7 19              11      ADD HL,DE       ;MAXDIR
001908 DFA8 E5              11      PUSH    HL
001909 DFA9 FD4E0D          19      LD  C,(IY+13)   ;BPB_SecPerClus
00190C DFAC CB21             8      SLA C       ;*2
00190E DFAE AF               4      XOR A
00190F DFAF 47               4      LD  B,A
001910 DFB0 ED42            15      SBC HL,BC
001912 DFB2 DD7514          19      LD  (IX+DPB_ADDCL),L
001915 DFB5 DD7415          19      LD  (IX+DPB_ADDCL+1),H
                                
001918 DFB8 D1              10      POP DE      ;DE=DPB_MAXDIR
001919 DFB9 FD6E13          19      LD  L,(IY+19)   ;BPB_TotSec16
00191C DFBC FD6614          19      LD  H,(IY+20)
                                
00191F DFBF DD7E12          19      LD  A,(IX+DPB_DEVICE)
001922 DFC2 E60F             7      AND 00FH
001924 DFC4 FE07             7      CP  7       ;フロッピー
001926 DFC6 2019            12      JR  NZ,NOT_FD
001928 DFC8 E5              11      PUSH    HL
001929 DFC9 FD4E18          19      LD  C,(IY+24)   ;BPB_SecPerTr
00192C DFCC DD710D          19      LD  (IX+DPB_MAXSEC),C
00192F DFCF AF               4      XOR A
001930 DFD0 CB21             8      SLA C       ;両面なのでセクタ数を２倍
001932 DFD2 0610             7      LD  B,16
       DFD4                     DIVSEC:             ;MAXCYL = BPB_TotSec16 / (BPB_SecPerTr * 2)
001934 DFD4 29              11      ADD HL,HL
001935 DFD5 17               4      RLA
001936 DFD6 B9               4      CP  C
001937 DFD7 3802            12      JR  C,DIVSEC1
001939 DFD9 91               4      SUB C
00193A DFDA 2C               4      INC L
       DFDB                     DIVSEC1:
00193B DFDB 10F7            13      DJNZ    DIVSEC
00193D DFDD DD750C          19      LD  (IX+DPB_MAXCYL),L
001940 DFE0 E1              10      POP HL  ;ここまでフロッピー専用
       DFE1                     NOT_FD:
001941 DFE1 7C               4      LD  A,H
001942 DFE2 B5               4      OR  L
001943 DFE3 3E00             7      LD  A,0     ;LDでフラグは変化しない。BPB_TotSec16を AHL で扱う為、Aに0を入れる
001945 DFE5 2010            12      JR  NZ,BPB16BIT ;BPB_TotSec16が「0」の場合はBPB_TotSec32で計算
001947 DFE7 FD7E23          19      LD  A,(IY+35)   ;念のために総セクタ数が24ビットを超える場合はエラーを返す
00194A DFEA B7               4      OR  A
00194B DFEB 37               4      SCF
00194C DFEC C0              11      RET NZ
00194D DFED FD6E20          19      LD  L,(IY+32)   ;BPB_TotSec32 は AHL の24ビットで扱う
001950 DFF0 FD6621          19      LD  H,(IY+33)   ;1クラスタの論理セクタ数(DPB_SECPCL)が最大128なので
001953 DFF3 FD7E22          19      LD  A,(IY+34)   ;24ビットを超えると必ずクラスタ数が16ビットを超えてしまうのでこれで十分
001956 DFF6 A7               4      AND A       ;CF=0
       DFF7                     BPB16BIT:
001957 DFF7 ED52            15      SBC HL,DE
001959 DFF9 DE00             7      SBC A,0
00195B DFFB FD460D          19      LD  B,(IY+13)   ;BPB_SecPerClus
       DFFE                     BPBTC1:             ;総クラスタ数(AHL) = 総セクタ数(AHL) / セクタサイズ(B)
00195E DFFE CB18             8      RR  B       ;->CY
001960 E000 3808            12      JR  C,BPBTC2
001962 E002 CB3F             8      SRL A
001964 E004 CB1C             8      RR  H       ;AHL=AHL/2
001966 E006 CB1D             8      RR  L
001968 E008 18F4            12      JR  BPBTC1
       E00A                     BPBTC2:
00196A E00A B7               4      OR  A
00196B E00B 37               4      SCF
00196C E00C C0              11      RET NZ      ;念のため(クラスタ数が16ビットを超える場合)
00196D E00D 23               6      INC HL
00196E E00E 23               6      INC HL
00196F E00F DD7508          19      LD  (IX+DPB_MAXCL),L
001972 E012 DD7409          19      LD  (IX+DPB_MAXCL+1),H
                                
001975 E015 FD7E15          19      LD  A,(IY+21)   ;BPB_Media
001978 E018 DD7706          19      LD  (IX+DPB_FATID),A
                                
00197B E01B FD7E10          19      LD  A,(IY+16)   ;BPB_NumFATs
00197E E01E C6FE             7      ADD A,0-2       ;>2:CF=1
001980 E020 FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
001983 E023 6F               4      LD  L,A
001984 E024 3002            12      JR  NC,BPBFAT1
001986 E026 F680             7      OR  080H
       E028                     BPBFAT1:            ;ここではCF=0
001988 E028 DD770F          19      LD  (IX+DPB_BPS),A
00198B E02B 2D               4      DEC L       ;以下のセクタサイズに合致しない場合はCF=1でエラーにする
00198C E02C C8              11      RET Z       ;1セクタ256バイト
00198D E02D 2D               4      DEC L
00198E E02E C8              11      RET Z       ;1セクタ512バイト
00198F E02F 2D               4      DEC L
001990 E030 2D               4      DEC L
001991 E031 C8              11      RET Z       ;1セクタ1024バイト
001992 E032 37               4      SCF
001993 E033 C9              10      RET
                                
       E034                     RDFATS:
001994 E034 CD7AE0          17      CALL    FATSETUP
001997 E037 D8              11      RET C
001998 E038 CD44E0          17      CALL    DRD24B
00199B E03B 2A7CE5          16      LD  HL,(_FATBF)
00199E E03E 7E               7      LD  A,(HL)
00199F E03F C9              10      RET
                                
       E040                     DRD16:
0019A0 E040 0E00             7      LD  C,0
       E042                     DRD24:
0019A2 E042 0601             7      LD  B,1
       E044                     DRD24B:
0019A4 E044 DDE5            15      PUSH    IX
0019A6 E046 DD2AA8E4        20      LD  IX,(_DPB)
0019AA E04A CDC2E1          17      CALL    FDRD        ;自己書き換え（ディスク読み込み）
       E04B                     DRDPAT  EQU $-2
       E04D                     POP_IX_RET:
0019AD E04D DDE1            14      POP IX
0019AF E04F C9              10      RET
                                
       E050                     DWT16:
0019B0 E050 0E00             7      LD  C,0
       E052                     DWT24:
0019B2 E052 0601             7      LD  B,1
       E054                     DWT24B:
0019B4 E054 DDE5            15      PUSH    IX
0019B6 E056 DD2AA8E4        20      LD  IX,(_DPB)
0019BA E05A CDC0E1          17      CALL    FDWT        ;自己書き換え（ディスク書き込み）
       E05B                     DWTPAT  EQU $-2
0019BD E05D 18EE            12      JR  POP_IX_RET
                                
       E05F                     WTFAT:
0019BF E05F CD7AE0          17      CALL    FATSETUP
0019C2 E062 D454E0          17      CALL    NC,DWT24B
0019C5 E065 D8              11      RET C
0019C6 E066 DDCB0F7E        20      BIT 7,(IX+DPB_BPS)
0019CA E06A C8              11      RET Z       ;予備FATが無い
0019CB E06B CD81E0          17      CALL    FATS2
0019CE E06E E5              11      PUSH    HL      ;予備FAT
0019CF E06F DD6E00          19      LD  L,(IX+DPB_FATLN)
0019D2 E072 DD6601          19      LD  H,(IX+DPB_FATLN+1)
0019D5 E075 19              11      ADD HL,DE
0019D6 E076 EB               4      EX  DE,HL
0019D7 E077 E1              10      POP HL
0019D8 E078 18DA            12      JR  DWT24B
                                ;------------------------
                                ;FATのセットアップ
                                ;out
                                ;   B  : FATセクタ数
                                ;   DE : FAT先頭セクタ番号
                                ;   HL : FATバッファポインタ
                                ;   CF : 1=ドライブ切り替えエラー
                                ;note
                                ;   FATサイズがFATバッファを超える場合は
                                ;   対象クラスタ領域==(_FATIX)によって
                                ;   FAT12:対象クラスタ1024毎に1.5KBを切り替える
                                ;   FAT16:対象クラスタ1024毎に2KBを切り替える
                                ;------------------------
       E07A                     FATSETUP:
0019DA E07A 3AAAE4          13      LD  A,(_FATDRV)
0019DD E07D CD7DE1          17      CALL    CHGDRVR     ;ドライブ切り替え
0019E0 E080 D8              11      RET C
       E081                     FATS2:
0019E1 E081 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;512=2 1024=4
0019E4 E084 0F               4      RRCA
0019E5 E085 CDAEE0          17      CALL    FATSETUP12  ;自己書き換え
       E086                     FATSX   EQU $-2
0019E8 E088 210000          10      LD  HL,0
0019EB E08B 4A               4      LD  C,D
0019EC E08C 54               4      LD  D,H
0019ED E08D 3AABE4          13      LD  A,(_FATIX)  ;範囲FAT12:0-3/FAT16:0-63(0-03FH):65535*2/2048
0019F0 E090 47               4      LD  B,A
0019F1 E091 04               4      INC B
0019F2 E092 DD7E00          19      LD  A,(IX+DPB_FATLN)
       E095                     FAT_SKP:
0019F5 E095 05               4      DEC B
0019F6 E096 2805            12      JR  Z,FAT1
0019F8 E098 19              11      ADD HL,DE
0019F9 E099 93               4      SUB E
0019FA E09A 30F9            12      JR  NC,FAT_SKP
0019FC E09C C9              10      RET
       E09D                     FAT1:
0019FD E09D EB               4      EX  DE,HL
0019FE E09E B9               4      CP  C       ;C=FATバッファに読み込めるセクタ数
0019FF E09F 3801            12      JR  C,FAT2
001A01 E0A1 79               4      LD  A,C
       E0A2                     FAT2:
001A02 E0A2 47               4      LD  B,A
                                
001A03 E0A3 2AFAE5          16      LD  HL,(_FATPS) ;fat sector pos
001A06 E0A6 19              11      ADD HL,DE
001A07 E0A7 EB               4      EX  DE,HL
001A08 E0A8 2A7CE5          16      LD  HL,(_FATBF)
001A0B E0AB AF               4      XOR A       ;CF=0
001A0C E0AC 4F               4      LD  C,A
001A0D E0AD C9              10      RET
                                ;
                                ;   FATバッファに読み込める最大のセクタ数と_FATIXで進めるセクタ数
                                ;   FATSETUP* (FAT12/FAT16)
                                ;out
                                ;   D : FATバッファに読み込める最大のセクタ数
                                ;   E : _FATIXで進めるセクタ数
       E0AE                     FATSETUP12:
001A0E E0AE 110606          10      LD  DE,0606H    ;256
001A11 E0B1 D8              11      RET C
001A12 E0B2 110303          10      LD  DE,0303H    ;512
001A15 E0B5 0F               4      RRCA
001A16 E0B6 D8              11      RET C
001A17 E0B7 110102          10      LD  DE,0201H    ;1024
001A1A E0BA C9              10      RET
                                
       E0BB                     FATSETUP16:
001A1B E0BB 110808          10      LD  DE,0808H    ;256
001A1E E0BE D8              11      RET C
001A1F E0BF 110404          10      LD  DE,0404H
001A22 E0C2 0F               4      RRCA            ;512
001A23 E0C3 D8              11      RET C
001A24 E0C4 110202          10      LD  DE,0202H    ;1024
001A27 E0C7 C9              10      RET
                                
       E0C8                     CHGDRV:
001A28 E0C8 E5              11      PUSH    HL
001A29 E0C9 2189E4          10      LD  HL,_DSK
001A2C E0CC BE               7      CP  (HL)
001A2D E0CD 280A            12      JR  Z,CHGDRVE
       E0CF                     CHGDRV1:
001A2F E0CF DDE5            15      PUSH    IX
001A31 E0D1 CDDBE0          17      CALL    CHGDRV0
001A34 E0D4 3A89E4          13      LD  A,(_DSK)
001A37 E0D7 DDE1            14      POP IX
       E0D9                     CHGDRVE:
001A39 E0D9 E1              10      POP HL
001A3A E0DA C9              10      RET
                                
       E0DB                     CHGDRV0:
001A3B E0DB 6F               4      LD  L,A
001A3C E0DC CDDCE4          17      CALL    _GETDPB
001A3F E0DF D8              11      RET C
001A40 E0E0 DD22A8E4        20      LD  (_DPB),IX
001A44 E0E4 7D               4      LD  A,L
001A45 E0E5 3289E4          13      LD  (_DSK),A
       E0E8                     CHGDRV2:
001A48 E0E8 C5              11      PUSH    BC
001A49 E0E9 D5              11      PUSH    DE
001A4A E0EA ED7333E1        20      LD  (SPPAT2),SP
001A4E E0EE F3               4      DI
001A4F E0EF DDF9            10      LD  SP,IX
                                
001A51 E0F1 E1              10      POP HL      ;00:DPB_FATLN
001A52 E0F2 E1              10      POP HL      ;02:DPB_DRD
001A53 E0F3 224BE0          16      LD  (DRDPAT),HL
                                
001A56 E0F6 E1              10      POP HL
001A57 E0F7 225BE0          16      LD  (DWTPAT),HL ;04:DPB_DWT
                                
001A5A E0FA E1              10      POP HL      ;L=06:DPB_FATID H=07:DPB_SECPCL
001A5B E0FB 7C               4      LD  A,H
001A5C E0FC 3252D7          13      LD  (SPCPAT),A  ;1クラスタの論理セクタ数
001A5F E0FF 3D               4      DEC A
001A60 E100 32BDDE          13      LD  (_NCPAT),A
                                
001A63 E103 E1              10      POP HL      ;08:DPB_MAXCL
001A64 E104 7D               4      LD  A,L
001A65 E105 3271D7          13      LD  (CLPAT2),A
001A68 E108 7C               4      LD  A,H
001A69 E109 326DD7          13      LD  (CLPAT1),A
001A6C E10C 2B               6      DEC HL
001A6D E10D 226ED9          16      LD  (MAXCLP),HL
                                
001A70 E110 E1              10      POP HL      ;L=0A:DPB_FDMODE H=0B:DPB_DIRSCNT
001A71 E111 4C               4      LD  C,H
                                
001A72 E112 E1              10      POP HL      ;L=0C:DPB_MAXCYL H=0D:DPB_MAXSEC
                                
001A73 E113 E1              10      POP HL      ;L=0E:DPB_FATPS H=0F:DPB_BPS
001A74 E114 7C               4      LD  A,H     ;DPB_BPS
001A75 E115 E607             7      AND 7
001A77 E117 3257DC          13      LD  (SECSZ+2),A ;1セクタのサイズの上位1バイト 0x400 - 0x200 - 0x100
                                                ;1セクタ512 2D/2DD/2HC/2HQ(2HD1.44MB)/EMM/BRAM/EMEM等
                                                ;1セクタ1024 2HD/2HDE98
                                                ;1セクタ256 GRAM/RAMF/CMOS/等
                                                ;1024   512 256
                                                ;4  2   1
001A7A E11A 87               4      ADD A,A     ;8  4   2
001A7B E11B 87               4      ADD A,A     ;010H   8   4
001A7C E11C 87               4      ADD A,A     ;020H   010H    8
001A7D E11D 32CFD5          13      LD  (SDECPAT),A ;1セクタ辺りのディレクトリエントリ数
                                
001A80 E120 2600             7      LD  H,0
001A82 E122 22FAE5          16      LD  (_FATPS),HL
                                
001A85 E125 E1              10      POP HL      ;10:DPB_DIRPS
001A86 E126 22FCE5          16      LD  (_DIRPS),HL
                                
001A89 E129 E1              10      POP HL      ;L=12:DPB_DEVICE H=13:DPB_UNITNO
001A8A E12A 7C               4      LD  A,H
001A8B E12B 3284E4          13      LD  (_DRIVE),A
                                
001A8E E12E E1              10      POP HL      ;14:DPB_ADDCL
001A8F E12F 2262D7          16      LD  (CLSPAT),HL
                                
001A92 E132 310000          10      LD  SP,0        ;元のSPを復元
       E133                     SPPAT2  EQU $-2
001A95 E135 FB               4      EI
001A96 E136 2AFCE5          16      LD  HL,(_DIRPS)
001A99 E139 0600             7      LD  B,0
001A9B E13B 09              11      ADD HL,BC       ;C=DPB_DIRSCNT
001A9C E13C 22EAD5          16      LD  (MD_PAT),HL
                                
001A9F E13F 2A6ED9          16      LD  HL,(MAXCLP);
001AA2 E142 11F60F          10      LD  DE,4086     ;クラスタ数が4086未満:FAT12 4086以上:FAT16
001AA5 E145 ED52            15      SBC HL,DE       ;CF=0のはず
001AA7 E147 300F            12      JR  NC,SETFAT16
001AA9 E149 2143DE          10      LD  HL,GNCL     ;FAT12
001AAC E14C 1166DE          10      LD  DE,SNCL
001AAF E14F 01AEE0          10      LD  BC,FATSETUP12
001AB2 E152 DDCB0FAE        23      RES 5,(IX+DPB_BPS)  ;DPB_BPS(FAT12)
001AB6 E156 180D            12      JR  EXTRA1
       E158                     SETFAT16:
001AB8 E158 219ADE          10      LD  HL,GNCL16   ;FAT16
001ABB E15B 11A7DE          10      LD  DE,SNCL16
001ABE E15E 01BBE0          10      LD  BC,FATSETUP16
001AC1 E161 DDCB0FEE        23      SET 5,(IX+DPB_BPS)  ;DPB_BPS(FAT16)
       E165                     EXTRA1:
001AC5 E165 22F8E4          16      LD  (GNCPAT),HL
001AC8 E168 ED53FBE4        20      LD  (SNCPAT),DE
001ACC E16C ED4386E0        20      LD  (FATSX),BC
001AD0 E170 D1              10      POP DE
001AD1 E171 C1              10      POP BC
001AD2 E172 AF               4      XOR A
001AD3 E173 C9              10      RET
                                
       E174                     GETDPBD:
001AD4 E174 DDE3            23      EX  (SP),IX
001AD6 E176 DDE5            15      PUSH    IX
001AD8 E178 3A88E4          13      LD  A,(_DRV)
001ADB E17B 1807            12      JR  GETDPB1
                                
       E17D                     CHGDRVR:
001ADD E17D CDD9E4          17      CALL    _CHGDRV
001AE0 E180 D8              11      RET C
001AE1 E181 3A89E4          13      LD  A,(_DSK)
       E184                     GETDPB1:
001AE4 E184 C3DCE4          10      JP  _GETDPB
                                
       E187                     GETDPB:
001AE7 E187 FE08             7      CP  8
001AE9 E189 3F               4      CCF
001AEA E18A D8              11      RET C
001AEB E18B 0F               4      RRCA
001AEC E18C 0F               4      RRCA
001AED E18D 0F               4      RRCA
001AEE E18E DD                      DB  0DDH        ;Z80未定義命令
001AEF E18F 6F               4      LD  L,A     ;LD IXL,A
001AF0 E190 DD                      DB  0DDH        ;Z80未定義命令
001AF1 E191 26E6             7      LD  H,_DEVICE/256   ;LD IXH,_DEVICE/256
001AF3 E193 DD7E00          19      LD  A,(IX+DPB_FATLN)
001AF6 E196 A7               4      AND A       ;CF=0の為
001AF7 E197 DDCB0F6E        20      BIT 5,(IX+DPB_BPS)
001AFB E19B C0              11      RET NZ      ;FAT16
001AFC E19C DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
001B00 E1A0 C0              11      RET NZ      ;BPB
001B01 E1A1 FE01             7      CP  001H        ;A=0 THEN CF=1
001B03 E1A3 C9              10      RET
                                
       E1A4                     _SYS5F:
001B04 E1A4 AF               4      XOR A
       E1A5                     FFLUSH:
001B05 E1A5 F5              11      PUSH    AF
001B06 E1A6 CDCBDD          17      CALL    WTFATX
001B09 E1A9 AF               4      XOR A
001B0A E1AA 32ABE4          13      LD  (_FATIX),A
001B0D E1AD 2F               4      CPL         ;0FFH
001B0E E1AE 32AAE4          13      LD  (_FATDRV),A
001B11 E1B1 3E                      DB  03EH        ;次のPUSH AFをスキップ
       E1B2                     FFLUSHBUF:
001B12 E1B2 F5              11      PUSH    AF
001B13 E1B3 CD81DD          17      CALL    DWTX
001B16 E1B6 3EFF             7      LD  A,0FFH
001B18 E1B8 3239E4          13      LD  (SFILE),A
001B1B E1BB 32A5E4          13      LD  (_DBDRV),A
001B1E E1BE F1              10      POP AF
001B1F E1BF C9              10      RET
                                
[EOF:LDDIO.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDISK.ASM"
                                
                                ;   LSX-Dodgers DISK
                                ;   MSX
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ可変(256/512/1024)
                                
       E1C0                     WTTRK:
       E1C0                     FDWT:
001B20 E1C0 37               4      SCF
001B21 E1C1 C9              10      RET
       E1C2                     FDRD:
001B22 E1C2 ED7353E2        20      LD  (DRDSP),SP
001B26 E1C6 3A54E2          13      LD  A,(DRDSPH)  ;スタックがカートリッジと被っていないかチェック
001B29 E1C9 FE7F             7      CP  07FH
001B2B E1CB 3807            12      JR  C,FDRD1
001B2D E1CD FEC1             7      CP  0C1H
001B2F E1CF 3003            12      JR  NC,FDRD1
001B31 E1D1 315EF5          10      LD  SP,BUF
       E1D4                     FDRD1:
001B34 E1D4 C5              11      PUSH    BC
001B35 E1D5 D5              11      PUSH    DE
                                
001B36 E1D6 E5              11      PUSH    HL
001B37 E1D7 EB               4      EX  DE,HL
001B38 E1D8 DD460F          19      LD  B,(IX+DPB_BPS)
       E1DB                     EADR1:
001B3B E1DB CB18             8      RR  B
001B3D E1DD 3803            12      JR  C,EADR2
001B3F E1DF 29              11      ADD HL,HL
001B40 E1E0 18F9            12      JR  EADR1
       E1E2                     EADR2:
001B42 E1E2 E5              11      PUSH    HL  ;あとでDEで受け取る
001B43 E1E3 29              11      ADD HL,HL   ;64KB→32KB
001B44 E1E4 29              11      ADD HL,HL   ;32KB→16KB
       E1E5                     ASCII16K1:
001B45 E1E5 29              11      ADD HL,HL   ;16KB→8KB  ;ASCII-16Kの場合はここがNOPに置き換えられる
                                
001B46 E1E6 DD7E0C          19      LD  A,(IX+DPB_MAXCYL)   ;16KB単位でカートリッジ内のディスクが存在する位置を指定
       E1E9                     ASCII16K2:
001B49 E1E9 87               4      ADD A,A         ;ASCII-16Kの場合はここがNOPに置き換えられる
001B4A E1EA 84               4      ADD A,H
001B4B E1EB 5F               4      LD  E,A
001B4C E1EC 3A62E4          13      LD  A,(ROM_SLT)
001B4F E1EF 210070          10      LD  HL,BANK2_SEL
       E1F0                     ROM8000H    EQU $-2
001B52 E1F2 CDFBD2          17      CALL    WRSLT
                                
001B55 E1F5 2680             7      LD  H,080H
001B57 E1F7 3A62E4          13      LD  A,(ROM_SLT) ;カートリッジROMに切り替える
001B5A E1FA CD6ED3          17      CALL    ENASLT
                                
001B5D E1FD D1              10      POP DE
001B5E E1FE E1              10      POP HL      ;HLは読み出し先のメモリアドレス
                                
001B5F E1FF 7B               4      LD  A,E
001B60 E200 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F/16K:3F)
       E201                     ASCII16K3   EQU $-1
001B62 E202 1E00             7      LD  E,0     ;DEはROMディスクから読み出すアドレス
001B64 E204 C680             7      ADD A,080H
001B66 E206 57               4      LD  D,A
                                
001B67 E207 3E                      DB  03EH
001B68 E208 A7               4      AND A
001B69 E209 3236E2          13      LD  (DRD_SWC3),A
001B6C E20C 7C               4      LD  A,H     ;読み出し先がカートリッジと被っていないかチェック
001B6D E20D FE7B             7      CP  07BH
001B6F E20F 3812            12      JR  C,DRD2
001B71 E211 FEC1             7      CP  0C1H
001B73 E213 300E            12      JR  NC,DRD2
001B75 E215 223DE2          16      LD  (DRD_SWC1),HL   ;被っている場合はデータバッファをフラッシュして一時的に使う
001B78 E218 2100EF          10      LD  HL,DTBUF
001B7B E21B 3E                      DB  03EH
001B7C E21C 37               4      SCF
001B7D E21D 3236E2          13      LD  (DRD_SWC3),A
001B80 E220 CDB2E1          17      CALL    FFLUSHBUF
       E223                     DRD2:
001B83 E223 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001B86 E226 E607             7      AND 7
001B88 E228 47               4      LD  B,A
001B89 E229 4B               4      LD  C,E ;E=0
                                
001B8A E22A EB               4      EX  DE,HL
001B8B E22B EDB0                    LDIR
001B8D E22D D5              11      PUSH    DE
001B8E E22E 2680             7      LD  H,080H
001B90 E230 3A43F3          13      LD  A,(0F341H+2)    ;メインRAMに戻す
001B93 E233 CD6ED3          17      CALL    ENASLT
       E236                     DRD_SWC3:
001B96 E236 A7               4      AND A       ;自己書き換え)被っている場合はSCFになる
001B97 E237 3012            12      JR  NC,DRD3
                                
001B99 E239 2100EF          10      LD  HL,DTBUF
001B9C E23C 110000          10      LD  DE,0
       E23D                     DRD_SWC1    EQU $-2
001B9F E23F DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001BA2 E242 E607             7      AND 7
001BA4 E244 47               4      LD  B,A
001BA5 E245 0E00             7      LD  C,0
001BA7 E247 EDB0                    LDIR
001BA9 E249 E1              10      POP HL
001BAA E24A D5              11      PUSH    DE
       E24B                     DRD3:
001BAB E24B E1              10      POP HL
001BAC E24C D1              10      POP DE
001BAD E24D 13               6      INC DE
001BAE E24E C1              10      POP BC
001BAF E24F 1083            13      DJNZ    FDRD1
001BB1 E251 AF               4      XOR A
001BB2 E252 310000          10      LD  SP,0
       E253                     DRDSP   EQU $-2
       E254                     DRDSPH  EQU $-1
001BB5 E255 FB               4      EI
001BB6 E256 C9              10      RET
                                
       E257                     PDWT:
001BB7 E257 37               4      SCF
001BB8 E258 CB7C             8      BIT 7,H
001BBA E25A 2056            12      JR  NZ,PDWX
001BBC E25C CDB2E1          17      CALL    FFLUSHBUF
       E25F                     PDWT1:
001BBF E25F C5              11      PUSH    BC
001BC0 E260 D5              11      PUSH    DE
001BC1 E261 1100EF          10      LD  DE,DTBUF
001BC4 E264 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001BC7 E267 E607             7      AND 7
001BC9 E269 47               4      LD  B,A
001BCA E26A 0E00             7      LD  C,0
001BCC E26C EDB0                    LDIR
001BCE E26E E5              11      PUSH    HL
001BCF E26F 2100EF          10      LD  HL,DTBUF
001BD2 E272 0601             7      LD  B,1
001BD4 E274 37               4      SCF
001BD5 E275 CDB2E2          17      CALL    PDWX
001BD8 E278 3834            12      JR  C,PDRWERR
001BDA E27A E1              10      POP HL
001BDB E27B D1              10      POP DE
001BDC E27C 13               6      INC DE
001BDD E27D C1              10      POP BC
001BDE E27E 10D7            13      DJNZ    PDWT
001BE0 E280 AF               4      XOR A
001BE1 E281 C9              10      RET
       E282                     PDRD:
001BE2 E282 A7               4      AND A
001BE3 E283 CB7C             8      BIT 7,H
001BE5 E285 202B            12      JR  NZ,PDWX
001BE7 E287 CDB2E1          17      CALL    FFLUSHBUF
       E28A                     PDRD1:
001BEA E28A C5              11      PUSH    BC
001BEB E28B D5              11      PUSH    DE
001BEC E28C E5              11      PUSH    HL
001BED E28D 2100EF          10      LD  HL,DTBUF
001BF0 E290 0601             7      LD  B,1
001BF2 E292 A7               4      AND A
001BF3 E293 CDB2E2          17      CALL    PDWX
001BF6 E296 3816            12      JR  C,PDRWERR
001BF8 E298 D1              10      POP DE
001BF9 E299 2100EF          10      LD  HL,DTBUF
001BFC E29C DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001BFF E29F E607             7      AND 7
001C01 E2A1 47               4      LD  B,A
001C02 E2A2 0E00             7      LD  C,0
001C04 E2A4 EDB0                    LDIR
001C06 E2A6 EB               4      EX  DE,HL
001C07 E2A7 D1              10      POP DE
001C08 E2A8 13               6      INC DE
001C09 E2A9 C1              10      POP BC
001C0A E2AA 10D6            13      DJNZ    PDRD
001C0C E2AC AF               4      XOR A
001C0D E2AD C9              10      RET
       E2AE                     PDRWERR:
001C0E E2AE E1              10      POP HL
001C0F E2AF D1              10      POP DE
001C10 E2B0 C1              10      POP BC
001C11 E2B1 C9              10      RET
       E2B2                     PDWX:                   ;CF=0 READ CF=1 WRITE
001C12 E2B2 DDCB1266        20      BIT 4,(IX+DPB_DEVICE)   ;デバイス情報
001C16 E2B6 2003            12      JR  NZ,PDWX1
001C18 E2B8 DD4E06          19      LD  C,(IX+DPB_FATID)    ;メディアバイト
       E2BB                     PDWX1:
001C1B E2BB DD7E13          19      LD  A,(IX+DPB_UNITNO)   ;デバイスドライバ内におけるユニット番号
001C1E E2BE C5              11      PUSH    BC
001C1F E2BF D5              11      PUSH    DE
001C20 E2C0 E5              11      PUSH    HL
001C21 E2C1 DDE5            15      PUSH    IX
001C23 E2C3 FDE5            15      PUSH    IY
001C25 E2C5 CDA7FF          17      CALL    H_PHYD
001C28 E2C8 FDE1            14      POP IY
001C2A E2CA DDE1            14      POP IX
001C2C E2CC E1              10      POP HL
001C2D E2CD D1              10      POP DE
001C2E E2CE C1              10      POP BC
001C2F E2CF D8              11      RET C
       E2D0                     PDWX2:
001C30 E2D0 13               6      INC DE
001C31 E2D1 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001C34 E2D4 E607             7      AND 7
001C36 E2D6 84               4      ADD A,H
001C37 E2D7 67               4      LD  H,A
001C38 E2D8 10F6            13      DJNZ    PDWX2
001C3A E2DA AF               4      XOR A
001C3B E2DB C9              10      RET
[EOF:MSXDISK.ASM:UTF_8]
                                    INCLUDE "LDCCPWK.ASM"
                                
                                ;   LSX-Dodgers CCP WORK
                                
       003B                     PATHX   EQU 59
001C3C E2DC                     PATHD:  DS  PATHX
001C77 E317 00                  PATHE:  DB  0
                                
       E318                     DTA_CCP:
001C78 E318                         DS  37
                                
       E33D                     FCB_BAT:
001C9D E33D                         DS  37
                                
001CC2 E362 2020203C4449523E    DIRMES: DB  "   <DIR>  $"
            202024              
001CCD E36D 20667265652024      FREE:   DB  " free $"
[EOF:LDCCPWK.ASM:UTF_8]
                                    INCLUDE "LDWORK.ASM"
                                
                                ;   LSX-Dodgers WORK0
                                ;
                                ;   CP/M互換BIOS
                                ;   BOOT:アドレス下位1バイトが0になるように
       E374                     AT_WORK:
001CD4 E374                         DS  WORKAD-AT_WORK
                                
       E400                     CPM_BOOT:
001D60 E400 C30000          10      JP  0
       E403                     _SYS00:     ;(BDOS)プログラム終了
       E403                     CPM_WBOOT:
001D63 E403 C309C9          10      JP  WBOOT1
       E406                     CPM_CONST:
001D66 E406 C354D1          10      JP  CONSTX
       E409                     _SYS07:     ;(BDOS)コンソール直接入力
       E409                     CPM_CONIN:
001D69 E409 C375D0          10      JP  FLGET
       E40C                     CPM_CONOUT:
001D6C E40C C3F8D1          10      JP  CONOUT1
                                
       E40F                     DECBF:              ;10進数表示時のバッファ(5バイト)
001D6F E40F                         DS  5
       E40F                     RR_BUF_HL   EQU DECBF   ;CP/M互換ファイルアクセスの際のランダムレコードの一時的な保管場所
       E411                     RR_BUF_A    EQU DECBF+2 ;計3バイト
                                
001D74 E414 00                  FDRV:   DB  0
001D75 E415                     FNAME:  DS  36
001D99 E439                     SFILE:  DS  33      ;DRV FILENAME
                                
001DBA E45A                         DS  3
                                
001DBD E45D 0000                LEFTX:  DW  0
001DBF E45F 0000                DTAX:   DW  0
                                
       E461                     ZERO:
       E461                     BEEPD:
001DC1 E461 008E01000B000C10        DB  0,08EH,1,0,00BH,0,00CH,010H
001DC9 E469 073E08100D00FF          DB  007H,03EH,008H,010H,00DH,0,0FFH
       E462                     RTC_YY  EQU BEEPD+1
       E463                     RTC_MW  EQU BEEPD+2
       E464                     RTC_DD  EQU BEEPD+3
       E465                     RTC_TT  EQU BEEPD+4
       E466                     RTC_MM  EQU BEEPD+5
       E467                     RTC_SS  EQU BEEPD+6
       E462                     ROM_SLT EQU BEEPD+1
                                
001DD0 E470 00                  CHECK:  DB  0
                                
001DD1 E471 4F4B24              OK: DB  "OK$"
001DD4 E474                         DS  5
001DD9 E479 4572726F722124      COMERM: DB  "Error!$"
                                ;   システムワークエリア
                                ;   _CYL0:アドレス下位1バイトが080Hになるように
001DE0 E480 FF                  _CYL0:  DB  0FFH    ;Cylinder
001DE1 E481 FF                  _CYL1:  DB  0FFH    ;Cylinder
001DE2 E482 FF                  _CYL2:  DB  0FFH    ;Cylinder
001DE3 E483 FF                  _CYL3:  DB  0FFH    ;Cylinder
001DE4 E484 00                  _DRIVE: DB  0   ;unit number
001DE5 E485 00                  _SEEKSP:DB  0   ;Seek speed
001DE6 E486 FF                  _ISEEK: DB  0FFH    ;
001DE7 E487 00                  _DVSW:  DB  0
001DE8 E488 00                  _DRV:   DB  0
001DE9 E489 FF                  _DSK:   DB  0FFH
001DEA E48A 8000                _DTA:   DW  00080H
001DEC E48C 0000                _CTC:   DW  0
001DEE E48E 0000                _TXADR: DW  0
001DF0 E490 0000                _KEYPS: DW  0
001DF2 E492 00FF                _KEYD:  DW  0FF00H  ;キーデータ
001DF4 E494 0000                _KEYSP: DB  KEYSP_L,KEYSP_H ;オートリピートの速度
001DF6 E496 00                  _COLORF:DB  COLORF  ;色
001DF7 E497 19                  _LINE:  DB  LINE
                                
001DF8 E498 0000                _FCB:   DW  0   ;SEARCH FILES
001DFA E49A 0000                _FBPS:  DW  0   ;    //
001DFC E49C 0000                _FBAD:  DW  0   ;    //
001DFE E49E 00                  _FBCNT: DB  0   ;    //
001DFF E49F 00                  _FILEN: DB  0   ;    //
001E00 E4A0 00                  _DIRF:  DB  0   ;bit7:ディレクトリ bit0-6:セクタインデックス
001E01 E4A1                         DS  1
001E02 E4A2 00                  _WTFATF:DB  0   ;FATバッファの更新フラグ
001E03 E4A3                         DS  1
001E04 E4A4 00                  _WTDBF: DB  0   ;データバッファの更新フラグ
001E05 E4A5 FF                  _DBDRV: DB  0FFH    ;データバッファにあるデータを読み込んだドライブ
001E06 E4A6 0000                _DBSEC: DW  0   ;データバッファにあるデータを読み込んだセクタ番号
001E08 E4A8 0000                _DPB:   DW  0
       E4AA                     _FATDRV:
001E0A E4AA FF                      DB  0FFH    ;FATバッファに読み込んでいるドライブ
001E0B E4AB 00                  _FATIX: DB  0   ;FATバッファに読み込んでいるインデックス
       E4AC                     _FAKEFREE:
001E0C E4AC 0000                    DW  0   ;偽の残量（FATサイズが大きくなると重くなるのでその対策）
                                
001E0E E4AE                         DS  2
                                
       E4B0                     CRTCD:
001E10 E4B0 6F                      DB  06FH
       E4B1                     _WIDTH:
001E11 E4B1 28                      DB  WIDTH
       E4B2                     TVRAMTOP:
001E12 E4B2 5938                    DB  059H,038H
001E14 E4B4 1F02                    DB  01FH,002H
       E4B6                     _LINE2:
001E16 E4B6 19                      DB  019H
       E4B7                     WKE4:
001E17 E4B7 1C                      DB  01CH
       E4B8                     WKE6:
001E18 E4B8 00                      DB  000H
       E4B9                     WK40:
001E19 E4B9 07                      DB  007H
       E4BA                     _PAGE_MINUS:
001E1A E4BA 18FC                    DW  0-WIDTH*LINE
       E4BC                     _WIDTH_MINUS:
001E1C E4BC D8FF                    DW  0-WIDTH
       E4BE                     WK30:
001E1E E4BE 0C                      DB  00CH
       E4BF                     WK31:
       E4BF                     WK1FD0:
001E1F E4BF 20                      DB  020H
                                
001E20 E4C0 0000                CTC0:   DW  INTCTCE
001E22 E4C2 0000                CTC1:   DW  INTCTCE
001E24 E4C4 0000                CTC2:   DW  INTCTCE
001E26 E4C6 0000                CTC3:   DW  INTCTCE
001E28 E4C8 0000                INTVEC: DW  INT
                                
                                ;   LSX-Dodgers 独自BIOS
                                
001E2A E4CA C3BAD0          10  _INKEY: JP  INKEY
001E2D E4CD C3FBCF          10  _PRINT: JP  PRINT
001E30 E4D0 C392D1          10  _SCRN:  JP  SCRN
001E33 E4D3 C372D1          10  _POS:   JP  POS
001E36 E4D6 C37DD1          10  _LOC:   JP  LOC
       E4D9                     _CHGDRV:
001E39 E4D9 C3C8E0          10      JP  CHGDRV
       E4DC                     _GETDPB:
001E3C E4DC C387E1          10      JP  GETDPB
       E4DF                     _FFLUSH:
001E3F E4DF C3A5E1          10      JP  FFLUSH
       E4E2                     _RDFATX:
001E42 E4E2 C3A1DD          10      JP  RDFATX
001E45 E4E5 C3C9DE          10  _RDFAT: JP  RDFAT
001E48 E4E8 C3C0E1          10  _WTTRK: JP  WTTRK
001E4B E4EB C3C2E1          10  _FDRD:  JP  FDRD
001E4E E4EE C3C0E1          10  _FDWT:  JP  FDWT
       E4F1                     _BPB2DPB:
001E51 E4F1 C356DF          10      JP  BPB2DPB
       E4F4                     _BREAK:
001E54 E4F4 C388CA          10      JP  END_BATCH
       E4F7                     _GNCL:
001E57 E4F7 C343DE          10      JP  GNCL        ; self-modifying code
       E4F8                     GNCPAT  EQU $-2
       E4FA                     _SNCL:
001E5A E4FA C366DE          10      JP  SNCL        ; self-modifying code
       E4FB                     SNCPAT  EQU $-2
001E5D E4FD C341C9          10  _COMANL:JP  COMANL
                                
       E500                     _WE:
[EOF:LDWORK.ASM:SHIFT_JIS]
                                    INCLUDE "LDCALL.ASM"
                                
                                ;   LSX-Dodgers システムコール(BDOS)
                                ;
                                ;   LSX-Dodgers SYSTEM CALL
                                ;   STABLE:アドレス下位1バイトが0になるように
                                
       E500                     STABLE:
                                ;0
001E60 E500 03E4FECF2FD0FCD5        DW  _SYS00,_SYS01,_SYS02,_SYS03
001E68 E508 6ACD6ACD34D009E4        DW  _SYS04,_SYS05,_SYS06,_SYS07
001E70 E510 3CD06CCDC0D054D1        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001E78 E518 81CD86CD95CDA6CD        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001E80 E520 FACD41CE8ACEBBCE        DW  _SYS10,_SYS11,_SYS12,_SYS13
001E88 E528 C3CED9CEEECEE6CE        DW  _SYS14,_SYS15,_SYS16,_SYS17
001E90 E530 35CF3ACF3FCF45CF        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001E98 E538 6ACD6BCF6ACD6FCF        DW  _SYS1C,_SYS1D,_SYS1E,_SYS1F
                                ;2
001EA0 E540 6ACD25CF2DCF76CF        DW  _SYS20,_SYS21,_SYS22,_SYS23
001EA8 E548 9CCF6ACD75DA4DDB        DW  _SYS24,_ERROR,_SYS26,_SYS27
001EB0 E550 2DCFA5CF66D1FCD5        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001EB8 E558 6CD1FCD56ACDC6CF        DW  _SYS2C,_SYS2D,_SYS2E,_SYS2F
                                ;3
001EC0 E560 C0CF6ACD6ACD6ACD        DW  _SYS30,_ERROR,_ERROR,_ERROR
001EC8 E568 6ACD6ACD6ACD6ACD        DW  _ERROR,_ERROR,_ERROR,_ERROR
001ED0 E570 6ACDFCD5FCD5E7CF        DW  _ERROR,_SYS39,_SYS3A,_SYS5A
                                ;DOS2
001ED8 E578 4DCD                    DW  _DOS2
                                
001EDA E57A                         DS  2
001EDC E57C 00E7                _FATBF: DW  FATBF
001EDE E57E 00EF                _DTBUF: DW  DTBUF
                                
                                ;   コントロールコードテーブル
                                ;   CTRLTB:アドレス下位1バイトが080Hになるように
                                
       E580                     CTRLTB:
001EE0 E580 00000000A2D10000        DW  CTRL00,CTRL00,CTRL02,CTRL03 ;  A,B,C
001EE8 E588 0000000000000000        DW  CTRL04,CTRL05,CTRL06,CTRL07 ;D,E,F,G
001EF0 E590 0000000000000000        DW  CTRL08,CTRL09,CTRL0A,CTRL0B ;H,I,J,K
001EF8 E598 0000000000000000        DW  CTRL0C,CTRL0D,CTRL0E,CTRL00 ;L,M,N,O
001F00 E5A0 0000000000000000        DW  CTRL00,CTRL00,CTRL12,CTRL00 ;P,Q,R,S
001F08 E5A8 0000000000000000        DW  CTRL00,CTRL00,CTRL00,CTRL00 ;T,U,V,W
001F10 E5B0 0000000000000000        DW  CTRL00,CTRL00,CTRL0C,CTRL1B ;X,Y,Z,ESC
001F18 E5B8 0000000000000000        DW  CTRL1C,CTRL1D,CTRL1E,CTRL1F ;→,←,↑,↓
                                
001F20 E5C0 0200                M2D:    DW  2
001F22 E5C2 FD02                    DB  0FDH,2
001F24 E5C4 6401                    DW  356
001F26 E5C6 FF0728090182            DB  0FFH,7,40,9,1,082H
001F2C E5CC 0500A7000800            DW  5,0A7H,8
                                
001F32 E5D2 0200                M2HD:   DW  2
001F34 E5D4 FE01                    DB  0FEH,1
001F36 E5D6 C704                    DW  1223
001F38 E5D8 FE064D080184            DB  0FEH,6,77,8,1,084H
001F3E E5DE 0500A7000900            DW  5,0A7H,9
                                
001F44 E5E4 1617                SDDATA: DB  22,23       ;(FCB)ファイルを最後に変更した時刻
001F46 E5E6 1415                    DB  20,21       ;(FCB)ファイルを最後に変更した日付
001F48 E5E8 1A1B                    DB  26,27       ;(FCB)ファイルの先頭クラスタ
001F4A E5EA 10111213                DB  16,17,18,19 ;(FCB)ファイルのサイズ(バイト単位)
       E5EE                     SDDATAE:
                                
001F4E E5EE                         DS  2
       E5F0                     _FCB_BAT:
001F50 E5F0 3DE3                    DW  FCB_BAT
       E5F2                     _PATH:
001F52 E5F2 DCE2                    DW  PATHD
                                
001F54 E5F4                     SCDIR:  DS  2       ;+14 +15
001F56 E5F6                     SFBPS:  DS  2       ;FBPS
001F58 E5F8                     SFNDF:  DS  2       ;FILEN DIRF
                                
001F5A E5FA 0000                _FATPS: DW  0
001F5C E5FC 0000                _DIRPS: DW  0
001F5E E5FE 0000                _CLPS:  DW  0
                                
       E600                     _PE:
[EOF:LDCALL.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDPB.ASM"
                                
                                ;   LSX-Dodgers DPB
                                ;   MSX
                                
       E600                     _DEVICE:
                                
                                ;   A:
                                
001F60 E600 0300                    DW  3   ;DPB_FATLN
001F62 E602 EBE4                    DW  _FDRD   ;DPB_DRD
001F64 E604 EEE4                    DW  _FDWT   ;DPB_DWT
001F66 E606 F9                      DB  0F9H    ;DPB_FATID
001F67 E607 03                      DB  3   ;DPB_SECPCL
001F68 E608 CB02                    DW  715 ;DPB_MAXCL
001F6A E60A 00                      DB  0   ;DPB_FDMODE
001F6B E60B 07                      DB  7   ;DPB_DIRSCNT
001F6C E60C 01                      DB  1   ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001F6D E60D 00                      DB  0   ;DPB_MAXSEC
001F6E E60E 01                      DB  1   ;DPB_FATPS
001F6F E60F 82                      DB  082H    ;DPB_BPS
001F70 E610 0700                    DW  7   ;DPB_DIRPS
001F72 E612 2C                      DB  02CH    ;DPB_DEVICE
001F73 E613 00                      DB  0   ;DPB_UNITNO
001F74 E614 0A00                    DW  10  ;DPB_ADDCL
001F76 E616 0000                    DW  0   ;DPB_16
001F78 E618 0000                    DW  0   ;DPB_18
001F7A E61A 0000                    DW  0   ;DPB_SDIR
001F7C E61C 524F4D30                DB  "ROM0"  ;DPB_NAME
                                
                                ;   B:
                                
001F80 E620 0300                    DW  3   ;DPB_FATLN
001F82 E622 EBE4                    DW  _FDRD   ;DPB_DRD
001F84 E624 EEE4                    DW  _FDWT   ;DPB_DWT
001F86 E626 F9                      DB  0F9H    ;DPB_FATID
001F87 E627 03                      DB  3   ;DPB_SECPCL
001F88 E628 CB02                    DW  715 ;DPB_MAXCL
001F8A E62A 00                      DB  0   ;DPB_FDMODE
001F8B E62B 07                      DB  7   ;DPB_DIRSCNT
001F8C E62C 2E                      DB  46  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001F8D E62D 00                      DB  0   ;DPB_MAXSEC
001F8E E62E 01                      DB  1   ;DPB_FATPS
001F8F E62F 82                      DB  082H    ;DPB_BPS
001F90 E630 0700                    DW  7   ;DPB_DIRPS
001F92 E632 2C                      DB  02CH    ;DPB_DEVICE
001F93 E633 01                      DB  1   ;DPB_UNITNO
001F94 E634 0A00                    DW  10  ;DPB_ADDCL
001F96 E636 0000                    DW  0   ;DPB_16
001F98 E638 0000                    DW  0   ;DPB_18
001F9A E63A 0000                    DW  0   ;DPB_SDIR
001F9C E63C 524F4D31                DB  "ROM1"  ;DPB_NAME
                                
                                ;   C:
                                
001FA0 E640                         DS  32
                                
                                ;   D:
                                
001FC0 E660                         DS  32
                                
                                ;   E:
                                
001FE0 E680 0300                    DW  3   ;DPB_FATLN
001FE2 E682 82E2                    DW  PDRD    ;DPB_DRD
001FE4 E684 57E2                    DW  PDWT    ;DPB_DWT
001FE6 E686 F9                      DB  0F9H    ;DPB_FATID
001FE7 E687 03                      DB  3   ;DPB_SECPCL
001FE8 E688 CB02                    DW  715 ;DPB_MAXCL
001FEA E68A FF                      DB  0FFH    ;DPB_FDMODE
001FEB E68B 07                      DB  7   ;DPB_DIRSCNT
001FEC E68C 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001FED E68D 09                      DB  9   ;DPB_MAXSEC
001FEE E68E 01                      DB  1   ;DPB_FATPS
001FEF E68F 82                      DB  082H    ;DPB_BPS
001FF0 E690 0700                    DW  7   ;DPB_DIRPS
001FF2 E692 2C                      DB  02CH    ;DPB_DEVICE
001FF3 E693 00                      DB  0   ;DPB_UNITNO
001FF4 E694 0A00                    DW  10  ;DPB_ADDCL
001FF6 E696 0000                    DW  0   ;DPB_16
001FF8 E698 0000                    DW  0   ;DPB_18
001FFA E69A 0000                    DW  0   ;DPB_SDIR
001FFC E69C 44534B30                DB  "DSK0"  ;DPB_NAME
                                
                                ;   F:
                                
002000 E6A0 0300                    DW  3   ;DPB_FATLN
002002 E6A2 82E2                    DW  PDRD    ;DPB_DRD
002004 E6A4 57E2                    DW  PDWT    ;DPB_DWT
002006 E6A6 F9                      DB  0F9H    ;DPB_FATID
002007 E6A7 03                      DB  3   ;DPB_SECPCL
002008 E6A8 CB02                    DW  715 ;DPB_MAXCL
00200A E6AA FF                      DB  0FFH    ;DPB_FDMODE
00200B E6AB 07                      DB  7   ;DPB_DIRSCNT
00200C E6AC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00200D E6AD 09                      DB  9   ;DPB_MAXSEC
00200E E6AE 01                      DB  1   ;DPB_FATPS
00200F E6AF 82                      DB  082H    ;DPB_BPS
002010 E6B0 0700                    DW  7   ;DPB_DIRPS
002012 E6B2 2C                      DB  02CH    ;DPB_DEVICE
002013 E6B3 01                      DB  1   ;DPB_UNITNO
002014 E6B4 0A00                    DW  10  ;DPB_ADDCL
002016 E6B6 0000                    DW  0   ;DPB_16
002018 E6B8 0000                    DW  0   ;DPB_18
00201A E6BA 0000                    DW  0   ;DPB_SDIR
00201C E6BC 44534B31                DB  "DSK1"  ;DPB_NAME
                                
                                ;   G:
                                
002020 E6C0 0300                    DW  3   ;DPB_FATLN
002022 E6C2 82E2                    DW  PDRD    ;DPB_DRD
002024 E6C4 57E2                    DW  PDWT    ;DPB_DWT
002026 E6C6 F9                      DB  0F9H    ;DPB_FATID
002027 E6C7 03                      DB  3   ;DPB_SECPCL
002028 E6C8 CB02                    DW  715 ;DPB_MAXCL
00202A E6CA FF                      DB  0FFH    ;DPB_FDMODE
00202B E6CB 07                      DB  7   ;DPB_DIRSCNT
00202C E6CC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00202D E6CD 09                      DB  9   ;DPB_MAXSEC
00202E E6CE 01                      DB  1   ;DPB_FATPS
00202F E6CF 82                      DB  082H    ;DPB_BPS
002030 E6D0 0700                    DW  7   ;DPB_DIRPS
002032 E6D2 2C                      DB  02CH    ;DPB_DEVICE
002033 E6D3 02                      DB  2   ;DPB_UNITNO
002034 E6D4 0A00                    DW  10  ;DPB_ADDCL
002036 E6D6 0000                    DW  0   ;DPB_16
002038 E6D8 0000                    DW  0   ;DPB_18
00203A E6DA 0000                    DW  0   ;DPB_SDIR
00203C E6DC 44534B32                DB  "DSK2"  ;DPB_NAME
                                
                                ;   H:
002040 E6E0 0300                    DW  3   ;DPB_FATLN
002042 E6E2 82E2                    DW  PDRD    ;DPB_DRD
002044 E6E4 57E2                    DW  PDWT    ;DPB_DWT
002046 E6E6 F9                      DB  0F9H    ;DPB_FATID
002047 E6E7 03                      DB  3   ;DPB_SECPCL
002048 E6E8 CB02                    DW  715 ;DPB_MAXCL
00204A E6EA FF                      DB  0FFH    ;DPB_FDMODE
00204B E6EB 07                      DB  7   ;DPB_DIRSCNT
00204C E6EC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00204D E6ED 09                      DB  9   ;DPB_MAXSEC
00204E E6EE 01                      DB  1   ;DPB_FATPS
00204F E6EF 82                      DB  082H    ;DPB_BPS
002050 E6F0 0700                    DW  7   ;DPB_DIRPS
002052 E6F2 2C                      DB  02CH    ;DPB_DEVICE
002053 E6F3 07                      DB  7   ;DPB_UNITNO
002054 E6F4 0A00                    DW  10  ;DPB_ADDCL
002056 E6F6 0000                    DW  0   ;DPB_16
002058 E6F8 0000                    DW  0   ;DPB_18
00205A E6FA 0000                    DW  0   ;DPB_SDIR
00205C E6FC 44534B37                DB  "DSK7"  ;DPB_NAME
       E700                     MSX_E:
[EOF:MSXDPB.ASM:UTF_8]
                                
002060 E700                         DS  03FFFH - $$
003FFF 069F 00                      DB  0
       06A0                     LAST_ADR:
                                
                                    END
[EOF:MSX.ASM:UTF_8]
