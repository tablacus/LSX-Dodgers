                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.0.0, LST:Full:4
                                ;   LSX-Dodgers for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "MSXDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       0003                     MAC EQU 3   ;MSX
       0001                     DEV EQU 1
                                
       001D                     VER_6F  EQU 0001DH
       0020                     NBSP    EQU 020H
                                
       4000                     RUN EQU 04000H
                                
       C700                     START2  EQU 0C700H
       C906                     BDOS    EQU 0C906H
       E400                     WORKAD  EQU 0E400H
       E700                     FATBF   EQU 0E700H
       EF00                     DTBUF   EQU 0EF00H
       0028                     WIDTH   EQU 40
       0019                     LINE    EQU 25
       0000                     COLORF  EQU 0
       0000                     KEYSP_H EQU 0
       0000                     KEYSP_L EQU 0
       0009                     COMS    EQU 9
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
                                
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PINLIN  EQU 000AEH
       00B1                     INLIN   EQU 000B1H
       00B4                     QINLIN  EQU 000B4H
       00B7                     BREAKX  EQU 000B7H
       00C0                     BEEP    EQU 000C0H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0144                     PHYDIO  EQU 00144H  ;MAIN:BIOS:
                                
       FEDA                     H_STKE  EQU 0FEDAH
       FFA7                     H_PHYD  EQU 0FFA7H
                                
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU 06000H
       6800                     BANK1_SEL EQU 06800H
       7000                     BANK2_SEL EQU 07000H
       7800                     BANK3_SEL EQU 07800H
                                            ;ASCII-16K
                                ;BANK0_SEL EQU 06000H
                                ;BANK1_SEL EQU 07000H
                                            ;KONAMI-8K
       8000                     KONAMI_BANK2_SEL EQU 08000H
       A000                     KONAMI_BANK3_SEL EQU 0A000H
[EOF:MSXDEF.ASM:UTF_8]
                                    INCLUDE "LDDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                
       0001                     VER_1   EQU 1
       0005                     VER_2   EQU 5
       0007                     VER_3   EQU 7
       1D03                     MACW    EQU MAC + 01D00H    ;機種フラグとLD判別フラグ
       0103                     MACD    EQU MAC + DEV * 256 ;機種フラグとデバイスフラグ
       0157                     VER EQU VER_1 * 256 + VER_2 * 16 + VER_3
                                
       0005                     SYSTEM  EQU 00005H
       000F                     JP_HL   EQU 0000FH
       005C                     FCB1    EQU 0005CH
       006C                     FCB2    EQU 0006CH
       005D                     FCB1FN  EQU FCB1+1
       006D                     FCB2FN  EQU FCB2+1
       0080                     DTA1    EQU 00080H
                                
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       0000                     DPB_FATLN   EQU 00H
       0002                     DPB_DRD     EQU 02H
       0004                     DPB_DWT     EQU 04H
       0006                     DPB_FATID   EQU 06H
       0007                     DPB_SECPCL  EQU 07H
       0008                     DPB_MAXCL   EQU 08H
       000A                     DPB_FDMODE  EQU 0AH
       000B                     DPB_DIRSCNT EQU 0BH
       000C                     DPB_MAXCYL  EQU 0CH
       000D                     DPB_MAXSEC  EQU 0DH
       000E                     DPB_FATPS   EQU 0EH
       000F                     DPB_BPS     EQU 0FH
       0010                     DPB_DIRPS   EQU 10H
       0012                     DPB_DEVICE  EQU 12H
       0013                     DPB_UNITNO  EQU 13H
       0014                     DPB_ADDCL   EQU 14H
                                
       001A                     DPB_SDIR    EQU 1AH
       001C                     DPB_NAME    EQU 1CH
                                
[EOF:LDDEF.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\hardware.asm"
                                ; C-BIOS hardware related declarations
                                ;
                                ; Copyright (c) 2002-2005 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2004-2005 Joost Yervante Damad.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                ;---------------------------------------------------
                                ; I/O ports
                                
       002E                     DBG_CTRL:       equ     $2E             ; openMSX debugdevice control (mode)
       002F                     DBG_DATA:       equ     $2F             ; openMSX debugdevice data
                                
       0090                     PRN_STAT:       equ     $90             ; printer status
       0091                     PRN_DATA:       equ     $91             ; printer data
                                
       0098                     VDP_DATA:       equ     $98             ; VDP data port (VRAM read/write)
       0099                     VDP_ADDR:       equ     $99             ; VDP address (write only)
       0099                     VDP_STAT:       equ     $99             ; VDP status (read only)
       009A                     VDP_PALT:       equ     $9A             ; VDP palette latch (write only)
       009B                     VDP_REGS:       equ     $9B             ; VDP register access (write only)
                                
       00A0                     PSG_REGS:       equ     $A0             ; PSG register write port
       00A1                     PSG_DATA:       equ     $A1             ; PSG value write port
       00A2                     PSG_STAT:       equ     $A2             ; PSG value read port
                                
       00A8                     PSL_STAT:       equ     $A8             ; slot status
       00A9                     KBD_STAT:       equ     $A9             ; keyboard status
       00AA                     GIO_REGS:       equ     $AA             ; General IO Register
       00AB                     PPI_REGS:       equ     $AB             ; PPI register
                                
       00B4                     RTC_ADDR:       equ     $B4             ; RTC address
       00B5                     RTC_DATA:       equ     $B5             ; RTC data
                                
       00F4                     SYSFLAGS:       equ     $F4             ; MSX2+ System flags,
                                                                        ; preserved after reset
                                                                        ; bit 5: CPU boot mode (1=R800)
                                                                        ; bit 7: Boot method
                                                                        ;        (1=soft boot, no logo)
                                
       00FC                     MAP_REG1:       equ     $FC             ; memory mapper: bank in $0000-$3FFF
       00FD                     MAP_REG2:       equ     $FD             ; memory mapper: bank in $4000-$7FFF
       00FE                     MAP_REG3:       equ     $FE             ; memory mapper: bank in $8000-$BFFF
       00FF                     MAP_REG4:       equ     $FF             ; memory mapper: bank in $C000-$FFFF
                                
                                ;---------------------------------------------------
                                ; memory mapped I/O
                                
       FFFF                     SSL_REGS:       equ     $FFFF           ; secondary slot select registers
                                
                                ;---------------------------------------------------
                                ; Constants used to define which hardware the BIOS will run on.
                                ; Used by the main_<model>.asm sources.
                                
                                ; VDP models:
       9918                     TMS99X8:        equ     $9918
       9938                     V9938:          equ     $9938
       9958                     V9958:          equ     $9958
                                
                                ; MSX models:
       0000                     MODEL_MSX1:     equ     0
       0001                     MODEL_MSX2:     equ     1
       0002                     MODEL_MSX2P:    equ     2
       0003                     MODEL_MSXTR:    equ     3
                                
       0004                     MODEL_SUBROM:   equ     4
                                
                                ; Locales:
                                ; -- ID byte 0
       0000                     LOCAL_CHSET_JP  equ     $00
       0001                     LOCAL_CHSET_US  equ     $01
       0002                     LOCAL_CHSET_KO  equ     $02
                                
                                ; There are charsets which pretend to be INT, but are not... For now only BR:
       0000                     LOCAL_CHSET_VAR_NONE equ  $00
       0001                     LOCAL_CHSET_VAR_BR   equ  $01
                                
       0000                     LOCAL_DATE_YMD  equ     $00
       0010                     LOCAL_DATE_MDY  equ     $10
       0020                     LOCAL_DATE_DMY  equ     $20
                                
       0000                     LOCAL_INT_60HZ  equ     $00
       0080                     LOCAL_INT_50HZ  equ     $80
                                
                                ; -- ID byte 1
       0000                     LOCAL_KBD_JP    equ     $00
       0001                     LOCAL_KBD_US    equ     $01
       0002                     LOCAL_KBD_FR    equ     $02
       0003                     LOCAL_KBD_UK    equ     $03
       0004                     LOCAL_KBD_DE    equ     $04
                                
       0000                     LOCAL_BASIC_JP  equ     $00
       0001                     LOCAL_BASIC_US  equ     $01
                                
                                
                                ; BOOLEAN VALUES
       0001                     YES:            equ     1
       0000                     NO:             equ     0
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:hardware.asm:UTF_8]
                                    INCLUDE "msx_cbios\\systemvars.asm"
                                ;
                                ; C-BIOS system variable declarations
                                ;
                                ; Copyright (c) 2002-2003 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Joost Yervante Damad.  All rights reserved.
                                ; Copyright (c) 2004-2005 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2005 Jussi Pitkänen.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                
                                ;-------------------
                                ; help function area
                                ;-------------------
                                ; Note: Functions defined in "main.asm" are disabled here.
                                
                                ; F380-F384: interslot read
                                ;RDPRIM:         equ     $F380
                                
                                ; F385-F38B: interslot read
                                ;WRPRIM:         equ     $F385
                                
                                ; F38C-F399: interslot call
                                ;CLPRIM:         equ     $F38C
                                
                                ; F39A-F3AD: workarea for the DEF USR statement
                                ; this area is initialized with the 10 times the value $475A, which gives
                                ; the error 'Syntax Error'
       F39A                     USRTAB:         equ     $F39A
                                
                                ;----------------------
                                ; screen parameter area
                                ;----------------------
                                
                                ; F3AE: # of positions on a line in SCREEN 0 (ini:39)
       F3AE                     LINL40:         equ     $F3AE
                                
                                ; F3AF: # of positions on a line in SCREEN 1 (ini:29)
       F3AF                     LINL32:         equ     $F3AF
                                
                                ; F3B0: # of actually used positions in the current screenmodus (ini:39)
       F3B0                     LINLEN:         equ     $F3B0
                                
                                ; F3B1: # of used lines on screen (ini:24)
       F3B1                     CRTCNT:         equ     $F3B1
                                
                                ; F3B2: # of positions within a tabulator-column (ini:14)
       F3B2                     CLMLST:         equ     $F3B2
                                
                                ; F3B3-F3B4: BASE(0): name table address for SCREEN 0 (ini:$0000)
                                ; used to initialize NAMBAS when SCREEN 0 is activated
       F3B3                     TXTNAM:         equ     $F3B3
                                
                                ; F3B5-F3B6: BASE(1): color table address for SCREEN 0, unused? (ini:$0000)
       F3B5                     TXTCOL:         equ     $F3B5
                                
                                ; F3B7-F3B8: BASE(2): pattern table address for SCREEN 0 (ini:$0800)
                                ; used to initialize CGPBAS when SCREEN 0 is activated
       F3B7                     TXTCGP:         equ     $F3B7
                                
                                ; F3B9-F3BA: BASE(3): sprite attribute table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize ATRBAS when SCREEN 0 is activated
       F3B9                     TXTATR:         equ     $F3B9
                                
                                ; F3BB-F3BC: BASE(4): sprite pattern table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize PATBAS when SCREEN 0 is activated
       F3BB                     TXTPAT:         equ     $F3BB
                                
                                ; F3BD-F3BE: BASE(5): nametable address for SCREEN 1 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 1 is activated
       F3BD                     T32NAM:         equ     $F3BD
                                
                                ; F3BF-F3C0: BASE(6): color table address for SCREEN 1 (ini:$2000)
       F3BF                     T32COL:         equ     $F3BF
                                
                                ; F3C1-F3C2: BASE(7): pattern table address for SCREEN 1 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 1 is activated
       F3C1                     T32CGP:         equ     $F3C1
                                
                                ; F3C3-F3C4: BASE(8): sprite attribute table address for SCREEN 1 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 1 is activated
       F3C3                     T32ATR:         equ     $F3C3
                                
                                ; F3C5-F3C6: BASE(9): sprite pattern table address for SCREEN 1 (ini:$0800)
                                ; used to initialize PATBAS when SCREEN 1 is activated
       F3C5                     T32PAT:         equ     $F3C5
                                
                                ; F3C7-F3C8: BASE(10): name table address for SCREEN 2 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 2 is activated
       F3C7                     GRPNAM:         equ     $F3C7
                                
                                ; F3C9-F3CA: BASE(11): color table address for SCREEN 2 (ini:$2000)
       F3C9                     GRPCOL:         equ     $F3C9           ; Screen2 Color
                                
                                ; F3CB-F3CC: BASE(12): pattern table address for SCREEN 2 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 2 is activated
       F3CB                     GRPCGP:         equ     $F3CB
                                
                                ; F3CD-F3CE: BASE(13): sprite attribute table address for SCREEN 2 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 2 is activated
       F3CD                     GRPATR:         equ     $F3CD
                                
                                ; F3CF-F3D0: BASE(14): sprite pattern table address for SCREEN 2 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 2 is activated
       F3CF                     GRPPAT:         equ     $F3CF
                                
                                ; F3D1-F3D2: BASE(15): name table address for SCREEN 3 (ini:$0800)
                                ; used to initialize NAMBAS when SCREEN 3 is activated
       F3D1                     MLTNAM:         equ     $F3D1
                                
                                ; F3D3-F3D4: BASE(16): color table address for SCREEN 3 (ini:$0000)
                                ; the color table is unused in SCREEN 3
       F3D3                     MLTCOL:         equ     $F3D3
                                
                                ; F3D5-F3D6: BASE(17): pattern table address for SCREEN 3 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 3 is activated
       F3D5                     MLTCGP:         equ     $F3D5
                                
                                ; F3D7-F3D8: BASE(18): sprite attribute table address for SCREEN 3 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 3 is activated
       F3D7                     MLTATR:         equ     $F3D7
                                
                                ; F3D9-F3DA: BASE(19): sprite pattern table address for SCREEN 3 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 3 is activated
       F3D9                     MLTPAT:         equ     $F3D9
                                
                                ; F3DB: keyclick when a key is pressed: 0: no, 1: yes (ini: 1)
                                ; SCREEN ,,n will write to this address
       F3DB                     CLIKSW:         equ     $F3DB
                                
                                ; F3DC: line where the cursor is located
                                ; starts to count at 1 for the topmost line
       F3DC                     CSRY:           equ     $F3DC
                                
                                ; F3DD: column where the cursor is located
                                ; starts to count at 1 for the leftmost column
       F3DD                     CSRX:           equ     $F3DD
                                
                                ; F3DE: function key definition shown: 0: no, -1: yes
                                ; Note: MSX BIOS will mess up end-of-screen if this variable contains
                                ;       something other than $00 or $FF.
       F3DE                     CNSDFG:         equ     $F3DE
                                
                                ; F3DF-D3E6: storage for the last written value towards VDP registers 0 till 7
                                ; this is needed because these registers are write only
       F3DF                     RG0SAV:         equ     $F3DF
       F3E0                     RG1SAV:         equ     $F3E0
       F3E1                     RG2SAV:         equ     $F3E1
       F3E2                     RG3SAV:         equ     $F3E2
       F3E3                     RG4SAV:         equ     $F3E3
       F3E4                     RG5SAV:         equ     $F3E4
       F3E5                     RG6SAV:         equ     $F3E5
       F3E6                     RG7SAV:         equ     $F3E6
                                ; F3E7: last read value of VDP register 8
       F3E7                     STATFL:         equ     $F3E7
                                
                                ; F3E8: information about the joystick and space bar
                                ; 7 6 5 4 3 2 1 0
                                ; | | | |       +-- Space bar, trig(0) (0 = pressed)
                                ; | | | +---------- Stick 1, Trigger 1 (0 = pressed)
                                ; | | +------------ Stick 1, Trigger 2 (0 = pressed)
                                ; | +-------------- Stick 2, Trigger 1 (0 = pressed)
                                ; +---------------- Stick 2, Trigger 2 (0 = pressed)
       F3E8                     TRGFLG:         equ     $F3E8
                                
                                ; F3E9: code for the standard foreground color (ini:15)
       F3E9                     FORCLR:         equ     $F3E9
                                
                                ; F3EA: code for the standard background color (ini:4)
       F3EA                     BAKCLR:         equ     $F3EA
                                
                                ; F3EB: code for the standard border color (ini:7)
       F3EB                     BDRCLR:         equ     $F3EB
                                
                                ; F3EC-F3EE: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EC                     MAXUPD:         equ     $F3EC
                                
                                ; F3EF-F3F1: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EF                     MINUPD:         equ     $F3EF
                                
                                ; F3F2: working color, as used for graphical operations
                                ; normally equals to the foreground color (ini:15)
       F3F2                     ATRBYT:         equ     $F3F2
                                
                                ; F3F3-F3F4: starting value of the address of the queue-table
                                ; the queue-table contains 4 queue's: 3 for sound and one for RS232
                                ; (ini: QUETAB ($F959))
       F3F3                     QUEUES:         equ     $F3F3
                                
                                ; F3F5: CLOAD flag =0 when CLOAD =255 when CLOAD?
       F3F5                     FRCNEW:         equ     $F3F5
                                
                                ; F3F6: VDP-interupt counter that counts from 3 to 0, when it reaches zero, the
                                ; keyboard matrix is scanned, and the counters is reset at 3
       F3F6                     SCNCNT:         equ     $F3F6
                                
                                ; F3F7: key repeat counter. Runs from 13 to 0, and is changed when SCNCNT is changed
                                ; if the key remained the same. If it reaches 0, keyrepetition starts. If another key
                                ; is pressed the value is reset at 13.
       F3F7                     REPCNT:         equ     $F3F7
                                
                                ; F3F8-F3F9: first free space in the inputbuffer of the keyboard
                                ; everytime a key is added to the inputbuffer, this address is incremented,
                                ; when it equals to GETPNT, the buffer is full
                                ; the buffer is located at KEYBUF
       F3F8                     PUTPNT:         equ     $F3F8
                                
                                ; F3FA-F3FB: address in inputbuffer of first character that is not yet read
                                ; everytime a key is read from the buffer it is incremented
                                ; the buffer is located at KEYBUF
       F3FA                     GETPNT:         equ     $F3FA
                                
                                ; F3FC-F400: memory area for tape system parameters for 1200 baud
                                ; F3FC: length of  low signal for 0     (ini:83)
                                ; F3FD: length of high signal for 0     (ini:92)
                                ; F3FE: length of  low signal for 1     (ini:38)
                                ; F3FF: length of high signal for 1     (ini:45)
                                ; F400: length of synchronization block (ini:15)
       F3FC                     CS120:          equ     $F3FC
                                
                                ; F401-F405: memory area for tape system parameters for 1200 baud
                                ; F401: length of  low signal for 0     (ini:37)
                                ; F402: length of high signal for 0     (ini:45)
                                ; F403: length of  low signal for 1     (ini:14)
                                ; F404: length of high signal for 1     (ini:22)
                                ; F405: length of synchronization block (ini:31)
       F401                     CS240:          equ     $F401
                                
                                ; F406-F407: lenghts of signal for 0 for the current speed of the tape system
                                ; either equal to the content of F3FC-F3FD or the content of F401-F402
                                ; (ini: 83, 92)
       F406                     LOW_:           equ     $F406 ; real name: LOW, but doesn't compile?
                                
                                ; F408-F409: lenghts of signal for 1 for the current speed of the tape system
                                ; either equal to the content of F3FE-F3FF or the content of F403-F404
                                ; (ini: 38, 45)
       F408                     HIGH_:          equ     $F408 ; real name: HIGH, but doesn't compile?
                                
                                ; F40A: lenghts of synchronization block for the current speed of the tape system
                                ; either equal to the content of F400 or the content of F405 (ini: 15)
       F40A                     HEADER:         equ     $F40A
                                
                                ; F40B-F40C: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; only the byte in F40B is actually used
                                ; If ASPECT2 is larger then 255, the value of F40B is the number of horizontal
                                ; dots per 256 verical dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40B                     ASPCT1:         equ     $F40B
                                
                                ; F40D-F40E: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; If ASPCT2 is smaller then 512, then ASPCT2 is the
                                ; number of vertical dots per 256 horizontal dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40D                     ASPCT2:         equ     $F40D
                                
                                ; F40F-F413: work area for the BASIC statement RESUME NEXT
                                ; contains a fake end of basic program
                                ; (ini: 58, 0, 0, 0, 0)
       F40F                     ENDPRG:         equ     $F40F
                                
                                ; F414: errornumber of last error that happened while executing a BASIC program
                                ; (ini:0)
       F414                     ERRFLG:         equ     $F414
                                
                                ; F415: number of characters in the writebuffer of the printer that still
                                ; need printing
       F415                     LPTPOS:         equ     $F415
                                
                                ; F416: switch indicating if output should be screen or printer
                                ; (think LIST vs LLIST) (ini:0) values: 0: screen, 1: printer
       F416                     PRTFLG:         equ     $F416
                                
                                ; F417: switch indicating if hooked up printer is an MSX printer or not
                                ; values: 0: MSX-Printer, 1: no MSX-Printer
                                ; if the printer is no MSX-Printer, non-ASCII (>=128) characters are replaced
                                ; by spaces before sending them to the printer (ini: 0)
       F417                     NTMSXP:         equ     $F417
                                
                                ; F418: switch indicating of printing routines should use raw-mode or
                                ; should convert:
                                ; =0 to convert tabs and unknown characters to spaces and remove graphical headers
                                ; =1 to send data just like it gets it (ini: 0)
                                ; if RAWPRT is 1, the value if NTMSXP is ignored
       F418                     RAWPRT:         equ     $F418
                                
                                ; ---------------------------
                                ; basic interpreter work area
                                ; ---------------------------
                                
                                ; F419-F41A: work area for the BASIC command VAL: contains address of character that
                                ; has temporarely been replaced by O by VAL
       F419                     VLZADR:         equ     $F419
                                
                                ; F41B: work area for the BASIC command VAL: contains the character originally at
                                ; the location of VLZADR
       F41B                     VLZDAT:         equ     $F41B
                                
                                ; F41C-F41D: line number of current BASIC line being executed, in direct modus this
                                ; contains $FFFF (ini:$FFFF)
       F41C                     CURLIN:         equ     $F41C
                                
                                ; F41E: error detection prefix for KBUF, always contains ":"
                                ; originally undocumented :)
       F41E                     KBFMIN:         equ     $F41E
                                
                                ; F41F-F55C: workarea for coding basic rules that have been typed in direct modus
                                ; this are contains the code for the line interpreted in direct modus
       F41F                     KBUF:           equ     $F41F
                                
                                ; F55D: byte used as first byte of BUF for input statements, giving them always
                                ; an extra ',' (ini:44 == ',')
       F55D                     BUFMIN:         equ     $F55D
                                
                                ; F55E-F65F: used in direct modus to store the ASCII codes of the line, or simulary
                                ; for INPUT or LINE INPUT BASIC statements
       F55E                     BUF:            equ     $F55E
                                
                                ; F562-F570: used by bitblit routines to store the register data
       F562                     SX:             equ     $F562
       F564                     SY:             equ     $F564
       F566                     DX:             equ     $F566
       F568                     DY:             equ     $F568
       F56A                     NX:             equ     $F56A
       F56C                     NY:             equ     $F56C
       F56E                     CDUMMY:         equ     $F56E
       F56F                     ARG_:           equ     $F56F
       F570                     L_OP:           equ     $F570
                                
                                ; F660: last usable byte of BUF
       F660                     ENDBUF:         equ     $F660
                                
                                ; F661: number of column of last written character on the screen
       F661                     TTYPOS:         equ     $F661
                                
                                ; F662: switch indicating during variable lookup for arrays, if this has not already
                                ; been done for a DIM BASIC statement
       F662                     DIMFLG:         equ     $F662
                                
                                ; F663: workarea for evaluation of expressions; contains type of last evaluated
                                ; expression; the value of the expression is in DAC, possible values of VALTYP:
                                ; 2: integer
                                ; 3: string
                                ; 4: normal real
                                ; 8: double real
       F663                     VALTYP:         equ     $F663
                                
                                ; F664: workarea for coding of BASIC statements. switch indicating if keywords have
                                ; to be encoded or not. E.g. in DATA fields they should not be encoded
                                ; 0: encoding on, 1: encoding off
       F664                     DORES:          equ     $F664
                                
                                ; F665: workarea for coding of BASIC statements. swithc indication of numbers have to be
                                ; encoded; values: $0: encode as const, $1: encode as line number, $FF: do not encode
       F665                     DONUM:          equ     $F665
                                
                                ; F666-F667: work area for evaluation of expressions: contains address of first character
                                ; after the code of the last evaluated expression
       F666                     CONTXT:         equ     $F666
                                
                                ; F668: work area for evaluation of expressions: contains information byte about the
                                ; encoding of the last evaluated constant number; value of this constant is in CONLO
                                ; values:
                                ; $0B: octal (2 bytes)
                                ; $0C: hexadecimal (2 bytes)
                                ; $0F: decimal 0<=value<256 (1 byte)
                                ; $11-$1B: short encoding for 0->10
                                ; $1C: decimal (2bytes, 2s-compliment)
                                ; $26: $42 binary as ASCII
                                ; $0E: line number
                                ; $0D: line pointer
                                ; $1D: normal real (1 byte exp, 3 bytes BCD)
                                ; $1F: double real (1 byte exp, 7 bytes BCD)
       F668                     CONSAV:         equ     $F668
                                
                                ; F669: work area for evaluation of expressions: contains type of last evaluated number
                                ; constant; the value is in CONLO, for values of CONTYP, see VALTYP
                                ; Strings are never contant in BASIC!
       F669                     CONTYP:         equ     $F669
                                
                                ; F66A-F671: work area for evaluation of expressions: contains the value of the last
                                ; evaluated number contant; value starts at F66A, and takes bytes as needed for the type
       F66A                     CONLO:          equ     $F66A
                                
                                ; F672-F673: upper limit of memory area reserved for strings, contains the upper address
                                ; that is allowed to be used
       F672                     MEMSIZ:         equ     $F672
                                
                                ; F674-F675: top of stack; also first byte below string area
       F674                     STKTOP:         equ     $F674
                                
                                ; F676-F677: start address of current basic program, set at initialization, and
                                ; not changed by OS (ini:$8001)
       F676                     TXTTAB:         equ     $F676
                                
                                ; F678-F679: address of first unused string-descriptor in TEMPST
                                ; (ini:value of TEMPST)
       F678                     TEMPPT:         equ     $F678
                                
                                ; F67A-F697: work area for evaluation of string expressions; this area has space
                                ; for 10 string descriptors of 3 bytes; these can be used for temporarely results
                                ; of string arythmetics
       F67A                     TEMPST:         equ     $F67A
                                
                                ; F698-F69A: work area for evaluation of string expressions; this contains the
                                ; string descriptor of the intermediate result
       F698                     DSCTMP:         equ     $F698
                                
                                ; F69B-F69C: first address within the string memory area that is still free
                                ; the string area is filled backwards, soo the lower the value, the less space
                                ; remains (ini: value of MEMSIZ)
       F69B                     FRETOP:         equ     $F69B
                                
                                ; F69D-F69E: temporarely storage for adminstration of the basic interpreter
       F69D                     TEMP3:          equ     $F69D
                                
                                ; F69F-F6A0: temporarely storage for garbage collection
       F69F                     TEMP8:          equ     $F69F
                                
                                ; F6A1-F6A2: address of first byte in BASIC-code after last FOR statement
       F6A1                     ENDFOR:         equ     $F6A1
                                
                                ; F6A3-F6A4: line number of last used line of DATA statements
       F6A3                     DATLIN:         equ     $F6A3
                                
                                ; F6A5: switch indicating if a variable is allowed to be an array variable.
                                ; This is e.g. not allowed for the loop variable of a FOR statement
                                ; 0 = allowed, 1 = not allowed
       F6A5                     SUBFLG:         equ     $F6A5
                                
                                ; F6A6: switch indicating if currently a READ or INPUT statement is being executed
       F6A6                     FLKINP:         equ     $F6A6
                                
                                ; F6A7-F6A8: temporarely storage for adminstration of the basic interpreter
       F6A7                     TEMP:           equ     $F6A7
                                
                                ; F6A9: switch indicating if there are still linenumber constants in the BASIC code
                                ; that are encoded as pointers?
       F6A9                     PTRFLG:         equ     $F6A9
                                
                                ; F6AA: switch indication if currently an AUTO statement is active
                                ; 0 = no auto, 1 = auto
       F6AA                     AUTFLG:         equ     $F6AA
                                
                                ; F6AB-F6AC: last generated AUTO line number
       F6AB                     AUTLIN:         equ     $F6AB
                                
                                ; F6AD-F6AE: last used AUTO increment
       F6AD                     AUTINC:         equ     $F6AD
                                
                                ; F6AF-F6B0: work area of the error system; contains address of first byte
                                ; of statement currently being executed
       F6AF                     SAVTXT:         equ     $F6AF
                                
                                ; F6B1-F6B2: work area of the error system; contains address of the stack
                                ; before executing of the current statement started
       F6B1                     SAVSTK:         equ     $F6B1
                                
                                ; F6B3-F6B4: line number of last failed line
       F6B3                     ERRLIN:         equ     $F6B3
                                
                                ; F6B5-F6B6: line number of last used (changed, listed, added) line
       F6B5                     DOT:            equ     $F6B5
                                
                                ; F6B7-F5B8: work area of the error system; contains the address of the first
                                ; byte of the statement that last failed; on failure it is stored with the
                                ; content of SAVTXT
       F6B7                     ERRTXT:         equ     $F6B7
                                
                                ; F6B9-F6BA: work area of the error system; contains the line number where
                                ; execution should go to on error (as in basic: ON ERROR GOTO x)
       F6B9                     ONELIN:         equ     $F6B9
                                
                                ; F6BB-F6BC: work area of the error system; indication if the interpreter is
                                ; currently executing an error catch routine
                                ; 0 = no, FF = yes
       F6BB                     ONEFLG:         equ     $F6BB
                                
                                ; F6BC-F6BD: temporarely storage for the interpreter
       F6BC                     TEMP2:          equ     $F6BC
                                
                                ; F6BE-F6BF: line number of last program break, reset at 0 at any program change
       F6BE                     OLDLIN:         equ     $F6BE
                                
                                ; F6C0-F6C1: address of first statement that is not executed due to a break
       F6C0                     OLDTXT:         equ     $F6C0
                                
                                ; F6C2-F6C3: begin address of storage of basic variables and function descriptors;
                                ; possibly adjusted when program changes in size
       F6C2                     VARTAB:         equ     $F6C2
                                
                                ; F6C4-F6C5: begin address of array variables; possibly adjusted when program
                                ; changes size or more variables are allocated
       F6C4                     ARYTAB:         equ     $F6C4
                                
                                ; F6C6-F6C7: address of first free byte not used for storage of code or variables
                                ; (ini: $8003)
       F6C6                     STREND:         equ     $F6C6
                                
                                ; F6C8-F6C9: address where data needs to be searched at next READ statement
       F6C8                     DATPTR:         equ     $F6C8
                                
                                ; F6CA-F6E3: table with variable types, one for each letter in the alphabet
                                ; possible values:
                                ;       2 = integer     3 = string      4 = single      8 = double
       F6CA                     DEFTBL:         equ     $F6CA
                                
                                ; F6E4-F7B4: work area for execution of self defined functions
                                
                                ; F6E4-F6E5: contains address ; of previous parameter block on the stack;
                                ; needed for garbage collection
       F6E4                     PRMSTK:         equ     $F6E4
                                
                                ; F6E6-F6E7:  amount of valid bytes in PARM1
       F6E6                     PRMLEN:         equ     $F6E6
                                
                                ; F6E8-F74B: contains definitions of the variables in the parameter lists
                                ; of self defined functions
       F6E8                     PARM1:          equ     $F6E8
                                
                                ; F74C-F74D: previous value of PRMSTK
       F74C                     PRMDRV:         equ     $F74C
                                
                                ; F74E-F74F: number of valid bytes in PARM2
       F74E                     PRMLN2:         equ     $F74E
                                
                                ; F750-F7B3: area used for calculation of values that end up in PARM1
       F750                     PARM2:          equ     $F750
                                
                                ; F7B4: switch indicating of while searching a variable name PARM1 has
                                ; been looked at; 0 = no, 1 = yes
       F7B4                     PRMFLG:         equ     $F7B4
                                
                                ; F7B5-F7B6: address of first byte where it is no longer needed to search
                                ; for a variable name; it is equal to ARYTAB when the normal variable area
                                ; is searched, and equal to PARM1+PRMLEN when PARM1 is searched
       F7B5                     ARYTA2:         equ     $F7B5
                                
                                ; F7B7-F7B8: switch indicating iif PARM1 contains a valid parameter block
                                ; 0 = no, 1 = yes
       F7B7                     NOFUNS:         equ     $F7B7
                                
                                ; F7B8-F7B9: temporarely memory used while searching parameter blocks on
                                ; the stack
       F7B8                     TEMP9:          equ     $F7B8
                                
                                ; F7BA-F7BB: counter of the nesting-dept of the function being evaluated
       F7BA                     FUNACT:         equ     $F7BA
                                
                                ; F7BC-F7C3: work area when executing the SWAP statement; the first variable
                                ; is stored here
       F7BC                     SWPTMP:         equ     $F7BC
                                
                                ; F7C4: switch indicating if TRON is on; 0 = off, >0 = on
       F7C4                     TRCFLG:         equ     $F7C4
                                
                                ; F7C5-F7F4: workarea when executing numeric operators
       F7C5                     FBUFFR:         equ     $F7C5
       F7F0                     DECTMP:         equ     $F7F0
       F7F2                     DECTM2:         equ     $F7F2
       F7F4                     DECCNT:         equ     $F7F4
                                
                                ; F7F6-F805: workarea when executing numeric operators; intermediate
                                ; results are stored here; also used for parameter transfer when using
                                ; the USR functions; VALTYPE then contains the type, and the value is
                                ; stored like this:
                                ; typename  type  where
                                ; integer   2     F7F8-F7F9
                                ; string    3     F7F8-F7F9 (address descriptor)
                                ; single    4     F7F6-F7F9
                                ; double    8     F7F6-F7FD
       F7F6                     DAC:            equ     $F7F6
                                
                                ; F806-F856: workarea when executing numeric operators
       F806                     HOLD8:          equ     $F806
       F836                     HOLD2:          equ     $F836
       F83E                     HOLD:           equ     $F83E
       F847                     ARG:            equ     $F847
                                
                                ; F857-F85E: last calculated random double
       F857                     RNDX:           equ     $F857
                                
                                ; --------------------
                                ; filesystem work area
                                ; --------------------
                                
                                ; F85F: # of filedescriptors reserved minus 1
                                ; this is also the maximum number of open files possible
       F85F                     MAXFIL:         equ     $F85F
                                
                                ; F860-F861: start address of the file information table
       F860                     FILTAB:         equ     $F860
                                
                                ; F862-F863: start address of the first file-buffer
       F862                     NULBUF:         equ     $F862
                                
                                ; F864-F865: during file I/O the start address of the active file-buffer
       F864                     PTRFIL:         equ     $F864
                                
                                ; F866: flag indicating if the file that is being loaded have to be started
                                ; immediately; 0 = no, FF = yes
       F866                     RUNFLG:         equ     $F866
                                
                                ; note that RUNFLG and FILNAM overlap!
                                
                                ; F866-F870: filename of last file that has been active;
                                ; first 8 chars are name, last 3 are extension
       F866                     FILNAM:         equ     $F866
                                
                                ; F871-F87B: second filename if needed, e.g. the NAME command
       F871                     FILNM2:         equ     $F871
                                
                                ; F87C: switch indicating if currently a BASIC program is being loaded
                                ; 0 = no, 1 = yes
       F87C                     NLONLY:         equ     $F87C
                                
                                ; F87D-F87E: workarea for BLOAD and BSAVE; when a part of normal memory
                                ; is written, it contains the end address of the written memory region
                                ; if video memory is written it contains $4BE5 + start address of the
                                ; written memory region ??
       F87D                     SAVEND:         equ     $F87D
                                
                                ; F87F-F91E: storage area for the text of the function keys 10x16 bytes,
                                ; but strings need to be zero-terminated, soo maximum length of command is
                                ; 15 characters
       F87F                     FNKSTR:         equ     $F87F
                                
                                ; ------------------------
                                ; screen routine work area
                                ; ------------------------
                                
                                ; F91F-F921: start address of the standard ASCII pattern table
                                ; at every change towards a text mode it is copied in the pattern table
                                ; of the VDP
                                ;   F91F: slot indication (ini: 0)
                                ;   F920-F921: address (ini: 1BBF)
                                ; TODO: make CBIOS use this value instead of hardcoded value
       F91F                     CGPNT:          equ     $F91F
                                
                                ; F922-F923: start address of the nametable in the VRAM
       F922                     NAMBAS:         equ     $F922
                                
                                ; F924-F925: start address of the pattern table in the VRAM
       F924                     CGPBAS:         equ     $F924
                                
                                ; F926-F927: start address of the sprite pattern table in the VRAM
       F926                     PATBAS:         equ     $F926
                                
                                ; F928-F929: start address of the sprite location table in the VRAM
       F928                     ATRBAS:         equ     $F928
                                
                                ; F92A-F92B: address in VRAM of the pattern of the current position
                                ; on screen
       F92A                     CLOC:           equ     $F92A
                                
                                ; F92C: mask for CLOC selecting the right bits that correspond with
                                ; the current position
       F92C                     CMASK:          equ     $F92C
                                
                                ; F92D-F930: work area for graphical calculations
       F92D                     MINDEL:         equ     $F92D
       F92F                     MAXDEL:         equ     $F92F
                                
                                ; ----------------------------------------------
                                ; F931-F941: work area for calculation of CIRCLE
                                ; ----------------------------------------------
                                
                                ; F931-F932: ratio of # of dots in the horizontal and vertical direction
                                ; if = $0100 then ASPCT1 and ASPCT2 are used
                                ; if < $0100 then it is the # of dots in one direction for each
                                ; $0100 # of dots in the other direction; the direction is indicated
                                ; by CSCLXY
       F931                     ASPECT:         equ     $F931
                                
                                ; F933:F934: ; distance, in # of dots from the center of the most
                                ; distant point of the circle
       F933                     CENCNT:         equ     $F933
                                
                                ; F935: switch indication if the start and/or end point need to be
                                ; connected to the center
                                ;  bit 7: connect end point; 1 = yes
                                ;  bit 0: connect start point; 1 = yes
       F935                     CLINEF:         equ     $F935
                                
                                ; F936-F937: used during calculation of CIRCLE
       F936                     CNPNTS:         equ     $F936
                                
                                ; F938: direction of drawing of circle:
                                ;  00 = from CSTCNT towards CENCNT
                                ;  FF = from CENCNT towards CSTCNT
       F938                     CPLOTF:         equ     $F938
                                
                                ; F939-F93A: used during calculation of CIRCLE
       F939                     CPCNT:          equ     $F939
                                
                                ; F93B-F93C: ; contains the total # of dots of the full circle,
                                ; even when only a part is drawn
       F93B                     CPCNT8:         equ     $F93B
                                
                                ; F93D-F93E: used during calculation of CIRCLE
       F93D                     CRCSUM:         equ     $F93D
                                
                                ; F93F-F940: ; distance in dots from the center towards the closest
                                ; circle point
       F93F                     CSTCNT:         equ     $F93F
                                
                                ; F941: switch indicating if the X or Y direction needs to be streched:
                                ; 0 = X, 1 = Y
       F941                     CSCLXY:         equ     $F941
                                
                                ; F942-F943: store of CLOC, also used for PAINT
       F942                     CSAVEA:         equ     $F942
                                
                                ; F944: storage of CMASK; also used for PAINT
       F944                     CSAVEM:         equ     $F944
                                
                                ; F945-F946: horizontal distance towards the center
       F945                     CXOFF:          equ     $F945
                                
                                ; F947-F948: vertical distance towards the center
       F947                     CYOFF:          equ     $F947
                                
                                ; -------------------------------------------
                                ; work area for executing the PAINT statement
                                ; -------------------------------------------
                                
                                ; F949: leftmost position of protrusion towards the left
       F949                     LOHMSK:         equ     $F949
                                
                                ; F94A: new workdirection for protrusion towards the left
       F94A                     LOHDIR:         equ     $F94A
                                
                                ;F94B-F94C: leftmost position of protrusion towards the left
       F94B                     LOHADR:         equ     $F94B
                                
                                ; F94D: size of protrusion towards the left
       F94D                     LOHCNT:         equ     $F94D
                                
                                ; F94F-F950: # of pixels that may be skipped
       F94F                     SKPCNT:         equ     $F94F
                                
                                ; F951-F952: # of movements
       F951                     MOVCNT:         equ     $F951
                                
                                ; F953: current direction; $40 = \/, $C0 = /\, $00 = stop
       F953                     PDIREC:         equ     $F953
                                
                                ; F954: indicate if paint towards the left worked
       F954                     LFPROG:         equ     $F954
                                
                                ; F955: indicate of a paint towards the right worked
       F955                     RTPROG:         equ     $F955
                                
                                ; F956-F957: start address of a jumptable for subcommands
                                ; contained in a string variable, used for both PLAY and DRAW
                                ; where this systemvar points to either the PLAY or the DRAW
                                ; table
       F956                     MCLTAB:         equ     $F956
                                
                                ; F958: switch indication if MCLTAB is for PLAY or DRAW
                                ; $0 = DRAW, $FF = PLAY
       F958                     MCLFLG:         equ     $F958
                                
                                ; ------------------------------------------
                                ; work area for sound and queueing and RS232
                                ; ------------------------------------------
                                
                                ; F959-F971: Variables for three music queues and one RS232 queue
                                ; F959: VOICAQ put position
                                ; F95A: VOICAQ get position
                                ; F95B: VOICAQ putback flag
                                ; F95C: VOICAQ size
                                ; F95D: VOICAQ address
                                ; F95F-F964: VOICBQ
                                ; F965-F96A: VOICCQ
                                ; F96B-F970: RS2IQ
       F959                     QUETAB:         equ     $F959
                                
                                ; Putback characters for queues. TODO: what purpose do these have exactly?
       F971                     QUEBAK:         equ     $F971
                                
                                ; Buffers for queues.
       F975                     VOICAQ:         equ     $F975           ; Voice A queue
       F9F5                     VOICBQ:         equ     $F9F5           ; Voice B queue
       FA75                     VOICCQ:         equ     $FA75           ; Voice C queue
       FAF5                     RS2IQ:          equ     $FAF5           ; RS232   queue
                                
                                ; in MSX2 the content of RS2IQ is used differently:
       FAF5                     DPPAGE:         equ     $FAF5           ; Display page (SCR5+)
       FAF6                     ACPAGE:         equ     $FAF6           ; Active page (SCR5+)
                                
                                ; FAF7: AV control port value storage
       FAF7                     AVCSAV:         equ     $FAF7
                                
                                ; FAF8: extended BASIC ROM slot address
       FAF8                     EXBRSA:         equ     $FAF8
                                
                                ; FAF9: character count for ROMA-KANA
       FAF9                     CHRCNT:         equ     $FAF9
                                
                                ; FAFA-FAFB: character save for ROMA-KANA
       FAFA                     ROMA:           equ     $FAFA
                                
                                ; ROMA-KANA extension mode switch or VRAM size??
       FAFC                     MODE:           equ     $FAFC
                                ;Reserved       equ     $FAFD
                                
                                ; FAFE-FAFF: x position for mouse or lightpen
       FAFE                     XSAVE:          equ     $FAFE
                                
                                ; FB00-FB01: y position for mouse or lightpen
       FB00                     YSAVE:          equ     $FB00
       FB02                     LOGOPR:         equ     $FB02
                                ; FB21-FB28: Table which contains info for up to 4 disk ROMs, 2 bytes each:
                                ; - first byte: number of drives connected to this interface
                                ; - second byte: slot ID of the disk ROM
       FB21                     DRVINF:         equ     $FB21
                                ; end of MSX2 only usage of RS2IQ
                                
                                ; --------------------------------
                                ; work area for the PLAY statement
                                ; --------------------------------
                                
                                ; FB35: status about the parsing of a PLAY string
                                ;  bit 7: only one time parsed; 1 = yes
                                ;  bit 1-0: number of parsed strings (0-3)
       FB35                     PRSCNT:         equ     $FB35
                                
                                ; FB36-FB37: storage of stack
       FB36                     SAVSP:          equ     $FB36
                                
                                ; FB38: # of voice currently being parsed (0-2)
       FB38                     VOICEN:         equ     $FB38
                                
                                ; FB39-FB3A: storage of volume of a muted voice
       FB39                     SAVVOL:         equ     $FB39
                                
                                ; FB3B: size of string being parsed (also used by DRAW)
       FB3B                     MCLLEN:         equ     $FB3B
                                
                                ; FB3C-FB3D: address of string being parsed (also used by DRAW)
       FB3C                     MCLPTR:         equ     $FB3C
                                
                                ; FB3E: temporarely storage of active queue # (0-2)
       FB3E                     QUEUEN:         equ     $FB3E
                                
                                ; FB3F: flag indicating which queues are active
                                ; bit 2 = queue 2; 1 = active
                                ; bit 1 = queue 1; 1 = active
                                ; bit 0 = queue 0; 1 = active
       FB3F                     MUSICF:         equ     $FB3F
                                
                                ; FB40: count of the # of PLAY statements parsed, but not executed yet
       FB40                     PLYCNT:         equ     $FB40
                                
                                ; FB41-FB65: Voice Control Block for voice A (queue 0)
       FB41                     VCBA:           equ     $FB41
                                ; FB66-FB8A: Voice Control Block for voice B (queue 1)
       FB66                     VCBB:           equ     $FB66
                                ; FB8B-FBAF: Voice Control Block for voice C (queue 2)
       FB8B                     VCBC:           equ     $FB8B
                                
                                ; each VCB has the following structure:
                                
                                ; name                  offset  length  purpose
       0000                     METREX:         equ     0 ;     2       interrupt counter
       0002                     VCXLEN:         equ     2 ;     1       MCLLEN for voice
       0003                     VCXPTR:         equ     3 ;     2       MCLPTR for voice
       0005                     VCXSTP:         equ     5 ;     2       stack pointer
       0007                     QLENGX:         equ     7 ;     1       # bytes in queue
       0008                     NTICSX:         equ     8 ;     2       new counter ?
       000A                     TONPRX:         equ     10;     2       pitch
       000C                     AMPLTX:         equ     12;     1       amplitude
       000D                     ENVPRX:         equ     13;     2       envelope speed
       000F                     OCTAVX:         equ     15;     1       octave
       0010                     NOTELX:         equ     16;     1       tone length
       0011                     TEMPOX:         equ     17;     1       tempo
       0012                     VOLUMX:         equ     18;     1       volume
       0013                     ENVLPX:         equ     19;     1       envelope shape
       0021                     MCLSTX:         equ     33;             space for stack storage
       0024                     MCLSEX:         equ     36;             start of stack
                                ; the stack mentioned above is used to store bytevalues
                                ; that are readied to be put on the voice queue
                                
                                ; -----------------------------------------------
                                ; settings for screen editor and interrupt system
                                ; -----------------------------------------------
                                
                                ; FBB0: switch indicating if software reset is enabled
                                ; 0 = n, 1 = yes; can be used to reset BASIC by pressing
                                ; SHIFT-CODE-GRAPH; does not erase the existing program
                                ; (ini: 0)
       FBB0                     ENSTOP:         equ     $FBB0
                                
                                ; FBB1: switch indicating if the current BASIC program is in a ROM
                                ; 0 = no; 1 = yes
       FBB1                     BASROM:         equ     $FBB1
                                
                                ; FBB2-FBC9: table containing for each line if it continues on the
                                ; next line; 0 = yes, >0 = no
       FBB2                     LINTTB:         equ     $FBB2
                                
                                ; FBCA-FBCB storage of location of cursor for INLIN and QINLIN
                                ;  FBCA: CSRY , FBCB: CSRX
       FBCA                     FSTPOS:         equ     $FBCA
                                
                                ; ASCII code of the character currently covered by the cursor
                                ; TODO: is the name CURSAV or CODSAV ?
       FBCC                     CURSAV:         equ     $FBCC
                                
                                ; FBCD: switch indicating which function keys are to be displayed
                                ; on the screen; 0 = F6-F10, 1 = F1-F5
       FBCD                     FNKSWI:         equ     $FBCD
                                
                                ; FBCE-FBD7: for each function key, a flag indicating if it has
                                ; interrupt facility enabled; 0 = disabled, 1 = enabled
       FBCE                     FNKFLG:         equ     $FBCE
                                
                                ; FBD8: counter of # of interrupts that still have a pending ON .. GOSUB
       FBD8                     ONGSBF:         equ     $FBD8
                                
                                ; FBD9: flag indicating if a keyclick has already been generated, to avoid
                                ; keyclicks for a key that generates two ASCII codes
                                ; $00 = no click, $0F = click
       FBD9                     CLIKFL:         equ     $FBD9
                                
                                ; FBDA-FBE4: storage of keyboard matrix, used for detection key repetition
       FBDA                     OLDKEY:         equ     $FBDA
                                
                                ; FBE5-FBEF: current state of the keyboard matrix
       FBE5                     NEWKEY:         equ     $FBE5
                                
                                ; keyboard buffer; each char entered via the keyboard ends up here
       FBF0                     KEYBUF:         equ     $FBF0
                                ; LIMPNT: something about "key buffer pointer"
       FC17                     LIMPNT:         equ     $FC17
                                
                                ; FC18-FC3F: work area for processing the last typed line
       FC18                     LINWRK:         equ     $FC18
                                
                                ; FC40-FC47: storage for the patter of an ASCII character
                                ; used when writing an ASCII character in a graphical mode
       FC40                     PATWRK:         equ     $FC40
                                
                                ; FC48-FC49: lowest address of the RAM memory; initialized at startup
                                ; and not changed normally
       FC48                     BOTTOM:         equ     $FC48
                                
                                ; FC4A-FC4B: highest address of the RAM memory that is not reserved by
                                ; the OS; string area, filebuffers and stack are below this address
                                ; initialized at startup and not changed normally
       FC4A                     HIMEM:          equ     $FC4A
                                
                                ; FC4C-FC99: table for interrupt facilities of MSX BASIC
                                ; each 3 bytes are used like this:
                                ; byte 1 is a flag:
                                ;  bit 2: interrupt happened; 1 = yes
                                ;  bit 1: interrupt stop; 1 = yes
                                ;  bit 0: interrupt off; 1 = no
                                ; byte 2-3 is the adress of the line in BASIC where should be
                                ; jumped too
                                ; the offsets in the table are:
                                ;  offset  address interrupt
                                ;       0  FC4C    F1
                                ;       3  FC4F    F2
                                ;       6  FC52    F3
                                ;       9  FC55    F4
                                ;      12  FC58    F5
                                ;      15  FC5B    F6
                                ;      18  FC5E    F7
                                ;      21  FC61    F8
                                ;      24  FC64    F9
                                ;      27  FC67    F10
                                ;      30  FC6A    STOP
                                ;      33  FC6D    sprite collision
                                ;      36  FC70    SPACE (trigger 0)
                                ;      39  FC73    joystick 1 button 1 (trigger 1)
                                ;      39  FC76    joystick 2 button 1 (trigger 2)
                                ;      39  FC79    joystick 1 button 2 (trigger 3)
                                ;      39  FC7C    joystick 2 button 2 (trigger 4)
                                ;      39  FC7F    interval
       FC4C                     TRPTBL:         equ     $FC4C
                                
                                ; FC9A: usage unknown
       FC9A                     RTYCNT:         equ     $FC9A
                                
                                ; FC9B: STOP indication
                                ; 0 = nothing; 3 = CTRL+STOP, 4 = STOP
       FC9B                     INTFLG:         equ     $FC9B
                                
                                ; FC9C: last read Y-position of a touchpad
       FC9C                     PADY:           equ     $FC9C
                                
                                ; FC9D: last read X-position of a touchpad
       FC9D                     PADX:           equ     $FC9D
                                
                                ; FC9E-FC9F: software clock, updated at each VDP interrupt
       FC9E                     JIFFY:          equ     $FC9E           ; timer counter
                                
                                ; FCA0-FCA1: initial value of INTCNT, used when INTCNT
                                ; reaches 0; used for ON INTERVAL GOSUB
       FCA0                     INTVAL:         equ     $FCA0
                                
                                ; FCA2-FCA3: interrupt counter; lowered at each VDP interrupt;
                                ; reset with value of INTVAL when it reaches zero; if interval
                                ; interrupt is needed, it is generated
       FCA2                     INTCNT:         equ     $FCA2
                                
                                ; FCA4-FCA5: parameter used at tap input, given a value during
                                ; reading of a headerblock from tape
       FCA4                     LOWLIM:         equ     $FCA4
       FCA5                     WINWID:         equ     $FCA5
                                
                                ; FCA6: flag indicating if the previous character written
                                ; to the screen was an extension character for graphical signs
                                ; (ASCII 1); 0 = no, 1 = yes
       FCA6                     GRPHED:         equ     $FCA6
                                
                                ; FCA7 ESCCNT State of a state machine that handles the printing of escape
                                ; sequences. A subset of the VT52 escape sequences is supported.
                                ; values:
                                ; $00: not inside an escape sequence
                                ; $01: seen <ESC>x
                                ; $02: seen <ESC>y
                                ; $03: seen <ESC>Y<row>
                                ; $04: seen <ESC>Y
                                ; $FF: seen <ESC>
       FCA7                     ESCCNT:         equ     $FCA7
                                
                                ; FCA8: switch indicating insert or overwrite mode
                                ; $00 = overwrite; $FF = insert
                                ; the value of INSFLG is changed each time the INS key is pressed
       FCA8                     INSFLG:         equ     $FCA8
                                
                                ; FCA9: show cursor; 0 = no, 1 = yes
                                ; can be changed with escape sequences x5 and y5
       FCA9                     CSRSW:          equ     $FCA9
                                
                                ; FCAA: shape of cursor; 0 = block; 1 = insert
                                ; pressing the INS key changes the value of CSTYLE
                                ; can be changed with escape sequences x4 and y4
       FCAA                     CSTYLE:         equ     $FCAA
                                
                                ; switch indicating if the CAPS-LOCK is on
                                ; $00 = off, $FF = on (unofficial: $80 = perma-on)
       FCAB                     CAPST:          equ     $FCAB
                                
                                ; FCAC: dead key control in non-japanese MSX models
                                ; adds a mark on the next char pressed, if applicable
                                ;  0 = no dead key
                                ;  1 = dead key                => accent grave
                                ;  2 = SHIFT + dead key        => accent aigu
                                ;  3 = CODE + dead key         => accent circumflex
                                ;  4 = SHIFT + CODE + dead key => trema
                                ; in japanese models it controls the charset used
       FCAC                     KANAST:         equ     $FCAC
                                
                                ; FCAD: only used in japanese MSX models; it defines
                                ; the used typeset (ini: $40)
       FCAD                     KANAMD:         equ     $FCAD
                                
                                ; ----
                                ; misc
                                ; ----
                                
       FCAE                     FLBMEM:         equ     $FCAE
       FCAF                     SCRMOD:         equ     $FCAF
       FCB0                     OLDSCR:         equ     $FCB0
       FCB1                     CASPRV:         equ     $FCB1
       FCB2                     BRDATR:         equ     $FCB2
       FCB3                     GXPOS:          equ     $FCB3
       FCB5                     GYPOS:          equ     $FCB5
       FCB7                     GRPACX:         equ     $FCB7
       FCB9                     GRPACY:         equ     $FCB9
       FCBB                     DRWFLG:         equ     $FCBB
       FCBD                     DRWANG:         equ     $FCBD
       FCBE                     RUNBNF:         equ     $FCBE
       FCBF                     SAVENT:         equ     $FCBF
                                
                                ; ---------------------------
                                ; storage of slot information
                                ; ---------------------------
                                
                                ; FCC1-FCC4: Information for each primary slot. The most significant bit is
                                ; set if the primary slot is found to be expanded.
       FCC1                     EXPTBL:         equ     $FCC1
                                
                                ; FCC5-FCC8: Duplicate the contents of the four possible secondary slot
                                ; registers.
       FCC5                     SLTTBL:         equ     $FCC5
                                
                                ; FCC9-FD08: Information for any extension ROMs found during the power-up
                                ; ROM search.
                                ; FCC9-FCCC: primary slot 0, secondary slot 0
                                ; FCCD-FCD0: primary slot 0, secondary slot 1
                                ; FCD1-FCD4: primary slot 0, secondary slot 2
                                ; FCD5-FCD8: primary slot 0, secondary slot 3
                                ; FCD9-FCE8: primary slot 1
                                ; FCE9-FCF8: primary slot 2
                                ; FCF9-FD08: primary slot 3
                                ; The information is stored as below.
                                ; bit 7 (set): BASIC program
                                ; bit 6 (set): device handler
                                ; bit 5 (set): statement handler
       FCC9                     SLTATR:         equ     $FCC9
                                
       FD09                     SLTWRK:         equ     $FD09
                                
                                ; ------------------------------
                                ; storage of ROM-page parameters
                                ; ------------------------------
                                
       FD89                     PROCNM:         equ     $FD89
       FD99                     DEVICE:         equ     $FD99
                                ; ------------
                                ; system hooks
                                ; ------------
                                
                                ; system hooks are defined in hooks.asm
                                
                                ; ------------------
                                ; storage of VDP8-23
                                ; ------------------
                                
                                ; FFE7-FFF6: storage of VDP 8-23
       FFE7                     RG8SAV:         equ     $FFE7
                                
                                ; ----------------------
                                ; extra slot information
                                ; ----------------------
                                
                                ; FFF7: slot address of main-rom
                                ;?????:         equ     $FFF7
                                
                                ; ------------------
                                ; storage of VDP25-27
                                ; ------------------
                                
                                ; FFFA-FFFC: storage of VDP 25-27
       FFFA                     RG25SAV:         equ     $FFFA
                                
                                ; ---------------------------
                                ; subslot switching addresses
                                ; ---------------------------
                                
                                ; FFFF: subslot switching address
                                ; This is not actually a system variable, it is a hardware register:
                                ;   SSL_REGS (see hardware.asm).
                                
                                ; -------
                                ; the end
                                ; -------
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:systemvars.asm:UTF_8]
                                
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"   ; ID for auto-executable ROM
000002 4002 1040                    DW  INIT_ROM   ; Main program execution address.
000004 4004 0000                    DW  0      ; STATEMENT
000006 4006 0000                    DW  0      ; DEVICE
000008 4008 0000                    DW  0      ; TEXT
00000A 400A 000000000000            DW  0,0,0  ; Reserved
                                    INCLUDE "MSXINIT.ASM"
                                
                                ;   LSX-Dodgers INIT
                                ;   MSX
                                
       4010                     INIT_ROM:
000010 4010 21DAFE          10      LD  HL,H_STKE
000013 4013 3EF7             7      LD  A, 0F7H     ;RST 30H
000015 4015 F3               4      DI
000016 4016 77               7      LD  (HL),A
000017 4017 CD2540          17      CALL    GTSL1_
00001A 401A 23               6      INC HL
00001B 401B 77               7      LD  (HL),A
00001C 401C 114F40          10      LD  DE,START
00001F 401F 23               6      INC HL
000020 4020 73               7      LD  (HL),E
000021 4021 23               6      INC HL
000022 4022 72               7      LD  (HL),D
000023 4023 FB               4      EI
000024 4024 C9              10      RET
                                
       4025                     GTSL1_:
000025 4025 E5              11      PUSH    HL      ;Save registers
000026 4026 D5              11      PUSH    DE
                                ;
000027 4027 CD3801          17      CALL    RSLREG      ;read primary slot #
00002A 402A 0F               4      RRCA
00002B 402B 0F               4      RRCA
00002C 402C E603             7      AND 11B     ;[A]=000000PP
00002E 402E 5F               4      LD  E,A
00002F 402F 1600             7      LD  D,0     ;[DE]=000000PP
000031 4031 21C1FC          10      LD  HL,EXPTBL
000034 4034 19              11      ADD HL,DE       ;[HL]=EXPTBL+000000PP
000035 4035 5F               4      LD  E,A     ;[E]=000000PP
000036 4036 7E               7      LD  A,(HL)      ;[A]=(EXPTBL+000000PP)
000037 4037 E680             7      AND 80H     ;Use only MSB
000039 4039 2811            12      JR  Z,GTSL1NOEXP
00003B 403B B3               4      OR  E       ;[A]=F00000PP
00003C 403C 5F               4      LD  E,A     ;save primary slot number
00003D 403D 23               6      INC HL      ;point to SLTTBL entry
00003E 403E 23               6      INC HL
00003F 403F 23               6      INC HL
000040 4040 23               6      INC HL
000041 4041 7E               7      LD  A,(HL)      ;get currently expansion slot register
000042 4042 0F               4      RRCA
000043 4043 0F               4      RRCA
000044 4044 E603             7      AND 11B     ;[A] = 000000SS
000046 4046 07               4      RLCA
000047 4047 07               4      RLCA            ;[A] = 0000SS00
000048 4048 B3               4      OR  E       ;[A] = F000SSPP
                                ;
       4049                     GTSL1END:
000049 4049 D1              10      POP DE
00004A 404A E1              10      POP HL
00004B 404B C9              10      RET
       404C                     GTSL1NOEXP:
00004C 404C 7B               4      LD  A,E     ;[A] = 000000PP
00004D 404D 18FA            12      JR  GTSL1END
                                
       404F                     START:
00004F 404F F3               4      DI
000050 4050 ED56             8      IM  1
000052 4052 216040          10      LD  HL,AT_START2
000055 4055 1100C7          10      LD  DE,START2
000058 4058 010020          10      LD  BC,MSX_E-START2
00005B 405B EDB0                    LDIR
00005D 405D C300C7          10      JP  START2
                                
       4060                     AT_START2:
000060 C700                         ORG START2,AT_START2-RUN
                                
000060 C700 3100C7          10      LD  SP,START2
000063 C703 CD11C7          17      CALL    INIT        ;NZならAUTOEXECを実行
000066 C706 210000          10      LD  HL,0
000069 C709 E5              11      PUSH    HL
00006A C70A C8              11      RET Z
00006B C70B 1165C8          10      LD  DE,AUTOD
00006E C70E C3FDE4          10      JP  _COMANL
                                
       C711                     INIT:
000071 C711 3ADBFE          13      LD  A,(H_STKE+1)
000074 C714 3262E4          13      LD  (ROM_SLT),A
000077 C717 2680             7      LD  H,080H
000079 C719 CDECD3          17      CALL    ENASLT
                                
00007C C71C 1141F3          10      LD  DE,0F341H
00007F C71F 210000          10      LD  HL,00000H
000082 C722 CD23C8          17      CALL    INIT_RAM
                                
000085 C725 13               6      INC DE
000086 C726 210040          10      LD  HL,04000H
000089 C729 CD23C8          17      CALL    INIT_RAM
                                
00008C C72C 13               6      INC DE
00008D C72D 210080          10      LD  HL,08000H
000090 C730 CD23C8          17      CALL    INIT_RAM
                                
000093 C733 210000          10      LD  HL,0
000096 C736 065C             7      LD  B,05CH
000098 C738 3EEF             7      LD  A,0EFH      ;RST 28H
00009A C73A CD86D5          17      CALL    FILL_MEMORY
00009D C73D 06A4             7      LD  B,0A4H
00009F C73F AF               4      XOR A
0000A0 C740 CD86D5          17      CALL    FILL_MEMORY
                                
0000A3 C743 3EC3             7      LD  A,0C3H      ;JP
0000A5 C745 2103E4          10      LD  HL,CPM_WBOOT
0000A8 C748 320000          13      LD  (00000H),A
0000AB C74B 220100          16      LD  (00001H),HL ;IPL
                                
0000AE C74E 21031D          10      LD  HL,MACW     ;3 bit7  DPB Compatible LA(1)
0000B1 C751 220300          16      LD  (00003H),HL ;  bit6-0 Machine
                                ;               ;4 LSX-Dodgers(01DH)
0000B4 C754 2106C9          10      LD  HL,BDOS
0000B7 C757 320500          13      LD  (00005H),A
0000BA C75A 220600          16      LD  (00006H),HL ;BDOS
                                
0000BD C75D 210000          10      LD  HL,0
0000C0 C760 322800          13      LD  (00028H),A
0000C3 C763 222900          16      LD  (00029H),HL ;BDOS
                                                ;インタースロットコール
0000C6 C766 21ECD2          10      LD  HL,RDSLTR
0000C9 C769 320C00          13      LD  (_RDSLT),A
0000CC C76C 220D00          16      LD  (_RDSLT+1),HL
                                
0000CF C76F 21F5D2          10      LD  HL,WRSLTR
0000D2 C772 321400          13      LD  (_WRSLT),A
0000D5 C775 221500          16      LD  (_WRSLT+1),HL
                                
0000D8 C778 21AED2          10      LD  HL,CALSLTR
0000DB C77B 321C00          13      LD  (_CALSLT),A
0000DE C77E 221D00          16      LD  (_CALSLT+1),HL
                                
0000E1 C781 21ECD3          10      LD  HL,ENASLT
0000E4 C784 322400          13      LD  (_ENASLT),A
0000E7 C787 222500          16      LD  (_ENASLT+1),HL
                                
0000EA C78A 219ED2          10      LD  HL,CALLF
0000ED C78D 323000          13      LD  (_CALLF),A
0000F0 C790 223100          16      LD  (_CALLF+1),HL
                                
0000F3 C793 21FED2          10      LD  HL,INT38H
0000F6 C796 323800          13      LD  (00038H),A
0000F9 C799 223900          16      LD  (00038H+1),HL
                                                ;LSX-Dodgers
0000FC C79C 3EE4             7      LD  A,CPM_BOOT/256
0000FE C79E 320B00          13      LD  (0000BH),A
                                
000101 C7A1 3EE9             7      LD  A,0E9H      ;JP (HL)
000103 C7A3 320F00          13      LD  (0000FH),A
                                                ;MSXワークエリア
000106 C7A6 3E03             7      LD  A,3
000108 C7A8 329BFC          13      LD  (INTFLG),A
                                
                                                ;ROMタイプ判別(ASCII-8K/ASCII-16K)
00010B C7AB 1E00             7      LD  E,0
00010D C7AD 3A62E4          13      LD  A,(ROM_SLT)
000110 C7B0 210068          10      LD  HL,BANK1_SEL
000113 C7B3 CD79D3          17      CALL    WRSLT
                                
000116 C7B6 210060          10      LD  HL,06000H
000119 C7B9 3A62E4          13      LD  A,(ROM_SLT)
00011C C7BC CD38D3          17      CALL    RDSLT
00011F C7BF FE41             7      CP  'A'
000121 C7C1 280F            12      JR  Z,ROM8K
                                                ;ASCII-8K/Konami-8Kではない(ASCII-16K)
000123 C7C3 3E00             7      LD  A,0     ;NOP
000125 C7C5 326FE2          13      LD  (ASCII16K1),A
000128 C7C8 3273E2          13      LD  (ASCII16K2),A
00012B C7CB 3E3F             7      LD  A,03FH
00012D C7CD 328BE2          13      LD  (ASCII16K3),A
000130 C7D0 1829            12      JR  ROMCHECKED
       C7D2                     ROM8K:              ;Konami-8Kチェック
000132 C7D2 1E01             7      LD  E,1
000134 C7D4 3A62E4          13      LD  A,(ROM_SLT)
000137 C7D7 210070          10      LD  HL,BANK2_SEL
00013A C7DA CD79D3          17      CALL    WRSLT
                                
00013D C7DD 1E00             7      LD  E,0
00013F C7DF 3A62E4          13      LD  A,(ROM_SLT)
000142 C7E2 210080          10      LD  HL,KONAMI_BANK2_SEL
000145 C7E5 CD79D3          17      CALL    WRSLT
                                
000148 C7E8 210080          10      LD  HL,08000H
00014B C7EB 3A62E4          13      LD  A,(ROM_SLT)
00014E C7EE CD38D3          17      CALL    RDSLT
000151 C7F1 FE41             7      CP  'A'
000153 C7F3 2006            12      JR  NZ,ROMCHECKED
                                                ;Konami-8K
000155 C7F5 210080          10      LD  HL,KONAMI_BANK2_SEL
000158 C7F8 227AE2          16      LD  (ROM8000H),HL
       C7FB                     ROMCHECKED:
                                                ;MSX2判別
00015B C7FB 3AF8FA          13      LD  A,(EXBRSA)
00015E C7FE B7               4      OR  A
00015F C7FF 3E28             7      LD  A,40
000161 C801 2802            12      JR  Z,ISMSX1
000163 C803 3E50             7      LD  A,80        ;MSX2以降は80桁で起動
       C805                     ISMSX1:
000165 C805 32AEF3          13      LD  (LINL40),A
000168 C808 32B1E4          13      LD  (_WIDTH),A
00016B C80B DD216C00        14      LD  IX,INITXT
00016F C80F CD92D2          17      CALL    CALSLT_R
000172 C812 DD217800        14      LD  IX,SETTXT
000176 C816 CD92D2          17      CALL    CALSLT_R
                                
000179 C819 2171C8          10      LD  HL,INIMES
00017C C81C CD3BCE          17      CALL    MSX
       C81F                     INIT1:
00017F C81F AF               4      XOR A
000180 C820 FE03             7      CP  3
000182 C822 C9              10      RET
                                
       C823                     INIT_RAM:
000183 C823 1A               7      LD  A,(DE)
000184 C824 E5              11      PUSH    HL
000185 C825 CD50C8          17      CALL    INIT_RAMX
000188 C828 E1              10      POP HL
000189 C829 C8              11      RET Z
00018A C82A 3E03             7      LD  A,3     ;SLOT3
00018C C82C 12               7      LD  (DE),A
00018D C82D E5              11      PUSH    HL
00018E C82E CD50C8          17      CALL    INIT_RAMX
000191 C831 E1              10      POP HL
000192 C832 C8              11      RET Z
000193 C833 3E83             7      LD  A,083H      ;SLOT3-0
000195 C835 12               7      LD  (DE),A
000196 C836 E5              11      PUSH    HL
000197 C837 CD50C8          17      CALL    INIT_RAMX
00019A C83A E1              10      POP HL
00019B C83B C8              11      RET Z
00019C C83C 3E87             7      LD  A,087H      ;SLOT3-1
00019E C83E 12               7      LD  (DE),A
00019F C83F E5              11      PUSH    HL
0001A0 C840 CD50C8          17      CALL    INIT_RAMX
0001A3 C843 E1              10      POP HL
0001A4 C844 C8              11      RET Z
0001A5 C845 3E8B             7      LD  A,08BH      ;SLOT3-2
0001A7 C847 12               7      LD  (DE),A
0001A8 C848 E5              11      PUSH    HL
0001A9 C849 CD50C8          17      CALL    INIT_RAMX
0001AC C84C E1              10      POP HL
0001AD C84D C8              11      RET Z
0001AE C84E 3E8F             7      LD  A,08FH      ;SLOT3-3
       C850                     INIT_RAMX:          ;スロットがRAMかチェック ZF=1ならばRAM
0001B0 C850 D5              11      PUSH    DE
0001B1 C851 CDECD3          17      CALL    ENASLT
0001B4 C854 D1              10      POP DE
0001B5 C855 010040          10      LD  BC,04000H
       C858                     INIT_RAM1:
0001B8 C858 7E               7      LD  A,(HL)
0001B9 C859 2F               4      CPL
0001BA C85A 77               7      LD  (HL),A
0001BB C85B BE               7      CP  (HL)
0001BC C85C 2F               4      CPL
0001BD C85D 77               7      LD  (HL),A
0001BE C85E C0              11      RET NZ
0001BF C85F EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0001C1 C861 E0              11      RET PO
0001C2 C862 C0              11      RET NZ
0001C3 C863 18F3            12      JR  INIT_RAM1
                                
0001C5 C865 4155544F45584543    AUTOD:  DB  "AUTOEXEC "
            20                  
0001CE C86E 413A00              AUTODV: DB  "A:",0
                                
0001D1 C871 0C4C53582D446F64    INIMES: DB  00CH,"LSX-Dodgers for MSX v"
            6765727320666F72    
            204D53582076        
0001E7 C887 312E                    DB  030H + VER_1, '.'
0001E9 C889 3537                    DB  030H + VER_2 ,030H + VER_3
                                ;   DB  ""
0001EB C88B 2047616B750D0A          DB  ' Gaku',0DH,0AH
0001F2 C892 00                      DB  0
                                
0001F3 C893 0300                M2DD:   DW  3
0001F5 C895 F902                    DB  0F9H,2
0001F7 C897 CB02                    DW  715
0001F9 C899 FF0750090182            DB  0FFH,7,80,9,1,082H
0001FF C89F 0700A7000A00            DW  7,0A7H,10
       C8A5                     M2DDE:
[EOF:MSXINIT.ASM:SHIFT_JIS]
                                    INCLUDE "MSXCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                ;   MSX
                                
       C8A5                     INITE:
000205 C8A5                         DS  BDOS-INITE
000266 C906 C3FACD          10      JP  BDOS0
                                
       C909                     WBOOT1:
000269 C909 3E03             7      LD  A,3
00026B C90B CDC6D0          17      CALL    MSG_A
       C90E                     WBOOT2:
[EOF:MSXCCP.ASM:UTF_8]
                                    INCLUDE "LDCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                
       C90E                     COMMAND:
00026E C90E 3ACCE3          13      LD  A,(FCB_BAT)
000271 C911 B7               4      OR  A
000272 C912 C253CA          10      JP  NZ,C_BAT1
000275 C915 CDC8C9          17      CALL    SETDTA1
000278 C918 3A87E4          13      LD  A,(_DVSW)
00027B C91B C641             7      ADD A,'A'
00027D C91D CDC6D0          17      CALL    MSG_A
000280 C920 3E3E             7      LD  A,'>'
000282 C922 CDC6D0          17      CALL    MSG_A
000285 C925 3E50             7      LD  A,80
000287 C927 12               7      LD  (DE),A
000288 C928 CD3ED1          17      CALL    _SYS0A      ;(BDOS)文字列入力
00028B C92B CD56CB          17      CALL    LTNL
       C92E                     COMMAND2:
00028E C92E 118200          10      LD  DE,DTA1+2
000291 C931 CDFDE4          17      CALL    _COMANL
000294 C934 30D8            12      JR  NC,COMMAND
000296 C936 1179E4          10      LD  DE,COMERM
000299 C939 CD2CCE          17      CALL    _SYS09      ;(BDOS)文字列出力
00029C C93C C7              12      RST 0
                                
       C93D                     COMANL:
00029D C93D CDDAD4          17      CALL    FILE
0002A0 C940 3A19E4          13      LD  A,(FNAME+4)
0002A3 C943 FE20             7      CP  020H
0002A5 C945 201C            12      JR  NZ,COMB2
0002A7 C947 D5              11      PUSH    DE
0002A8 C948 1115E4          10      LD  DE,FNAME
0002AB C94B 1A               7      LD  A,(DE)
0002AC C94C FE20             7      CP  020H
0002AE C94E 2844            12      JR  Z,SDVSW
0002B0 C950 1B               6      DEC DE
0002B1 C951 1A               7      LD  A,(DE)
0002B2 C952 C6FF             7      ADD A,0FFH
0002B4 C954 3809            12      JR  C,COMB
0002B6 C956 13               6      INC DE
                                
0002B7 C957 21C4CD          10      LD  HL,COMTB
0002BA C95A 0609             7      LD  B,COMS
0002BC C95C CD5ED7          17      CALL    CPNAME
       C95F                     COMB:
0002BF C95F D1              10      POP DE
0002C0 C960 D20F00          10      JP  NC,JP_HL
       C963                     COMB2:
0002C3 C963 EB               4      EX  DE,HL
0002C4 C964 2230CA          16      LD  (COMPAT+1),HL
0002C7 C967 F5              11      PUSH    AF
0002C8 C968 CDE8C9          17      CALL    CEXE4
0002CB C96B F1              10      POP AF
0002CC C96C 2115E4          10      LD  HL,FNAME
0002CF C96F 116D00          10      LD  DE,FCB2+1   ;COMMAND NAME
0002D2 C972 010B00          10      LD  BC,11
0002D5 C975 EDB0                    LDIR
0002D7 C977 1166E3          10      LD  DE,PATHD
       C97A                     CEX1:
0002DA C97A 1A               7      LD  A,(DE)
0002DB C97B FE20             7      CP  020H
0002DD C97D D8              11      RET C
0002DE C97E CDCFD4          17      CALL    FILEC
0002E1 C981 D5              11      PUSH    DE
0002E2 C982 216D00          10      LD  HL,FCB2+1   ;COMMAND NAME
0002E5 C985 1115E4          10      LD  DE,FNAME
0002E8 C988 010B00          10      LD  BC,11
0002EB C98B EDB0                    LDIR
0002ED C98D CDE8C9          17      CALL    CEXE4
0002F0 C990 D1              10      POP DE
0002F1 C991 13               6      INC DE
0002F2 C992 18E6            12      JR  CEX1
                                
       C994                     SDVSW:
0002F4 C994 F1              10      POP AF
0002F5 C995 3A14E4          13      LD  A,(FDRV)
0002F8 C998 3D               4      DEC A
0002F9 C999 5F               4      LD  E,A
0002FA C99A 0E0E             7      LD  C,00EH      ;(BDOS)カレントドライブの設定
0002FC C99C 1831            12      JR  SYSTEM0
                                
       C99E                     OPEN1:
0002FE C99E 2114E4          10      LD  HL,FDRV
       C9A1                     OPEN:
000301 C9A1 0E11             7      LD  C,011H      ;(BDOS)ファイルの検索
       C9A3                     OPEN3:
000303 C9A3 D5              11      PUSH    DE
000304 C9A4 11A7E3          10      LD  DE,DTA_CCP
000307 C9A7 CDC5C9          17      CALL    SETDTA
00030A C9AA EB               4      EX  DE,HL
00030B C9AB CDCFC9          17      CALL    SYSTEM0
00030E C9AE D1              10      POP DE
00030F C9AF C9              10      RET
                                
       C9B0                     OPEN2:
000310 C9B0 0E12             7      LD  C,012H
000312 C9B2 18EF            12      JR  OPEN3
                                
       C9B4                     DEFCB:              ;Z=Ok NZ=Error
000314 C9B4 11A7E3          10      LD  DE,DTA_CCP
000317 C9B7 CDCDC9          17      CALL    SYSC0F
                                
00031A C9BA 11C8E3          10      LD  DE,DTA_CCP+33   ;(FCB)ランダムレコード
00031D C9BD 0604             7      LD  B,4
00031F C9BF CD94CC          17      CALL    ZERO_MEMORY_DE
       C9C2                     SETDTA100:
000322 C9C2 110001          10      LD  DE,00100H
       C9C5                     SETDTA:
000325 C9C5 C304D0          10      JP  _SYS1A      ;(BDOS)DTAの設定
                                
       C9C8                     SETDTA1:
000328 C9C8 118000          10      LD  DE,DTA1
00032B C9CB 18F8            12      JR  SETDTA
                                
       C9CD                     SYSC0F:
00032D C9CD 0E0F             7      LD  C,00FH      ;(BDOS)ファイルのオープン
       C9CF                     SYSTEM0:
00032F C9CF CD0500          17      CALL    SYSTEM
000332 C9D2 B7               4      OR  A
000333 C9D3 C9              10      RET
                                
       C9D4                     C_CD:
000334 C9D4 0E5A             7      LD  C,5AH
000336 C9D6 18F7            12      JR  SYSTEM0
                                
       C9D8                     S27BUF:
000338 C9D8 3A0700          13      LD  A,(SYSTEM+2)
00033B C9DB 3D               4      DEC A
00033C C9DC E6F8             7      AND 0F8H
00033E C9DE 67               4      LD  H,A
00033F C9DF 2E00             7      LD  L,0
       C9E1                     S27DTA:
000341 C9E1 11A7E3          10      LD  DE,DTA_CCP
       C9E4                     S27:
000344 C9E4 0E27             7      LD  C,027H      ;(BDOS)ランダムブロック読み込み
000346 C9E6 18E7            12      JR  SYSTEM0
                                
       C9E8                     CEXE4:
000348 C9E8 211DE4          10      LD  HL,FNAME+8
00034B C9EB 7E               7      LD  A,(HL)
00034C C9EC FE20             7      CP  020H
00034E C9EE 2007            12      JR  NZ,CEXE7
000350 C9F0 3E3F             7      LD  A,'?'
000352 C9F2 77               7      LD  (HL),A
000353 C9F3 23               6      INC HL
000354 C9F4 77               7      LD  (HL),A
000355 C9F5 23               6      INC HL
000356 C9F6 77               7      LD  (HL),A
       C9F7                     CEXE7:
000357 C9F7 CD9EC9          17      CALL    OPEN1
       C9FA                     CEXE5:
00035A C9FA C0              11      RET NZ
00035B C9FB 2AB1E3          16      LD  HL,(DTA_CCP+1+9)
00035E C9FE 7C               4      LD  A,H
00035F C9FF CDE6D7          17      CALL    CAP
000362 CA02 67               4      LD  H,A
000363 CA03 7D               4      LD  A,L
000364 CA04 CDE6D7          17      CALL    CAP
000367 CA07 6F               4      LD  L,A
000368 CA08 3AB0E3          13      LD  A,(DTA_CCP+1+8)
00036B CA0B CDE6D7          17      CALL    CAP
00036E CA0E D642             7      SUB 'B'
000370 CA10 282C            12      JR  Z,C_BAT
000372 CA12 3D               4      DEC A       ;'C'
000373 CA13 2805            12      JR  Z,C_EXE
       CA15                     CEXE6:
000375 CA15 CDB0C9          17      CALL    OPEN2
000378 CA18 18E0            12      JR  CEXE5
                                
       CA1A                     C_EXE:
00037A CA1A 7C               4      LD  A,H
00037B CA1B FE4D             7      CP  'M'
00037D CA1D 20F6            12      JR  NZ,CEXE6
                                
00037F CA1F CDB4C9          17      CALL    DEFCB
000382 CA22 CDD8C9          17      CALL    S27BUF
000385 CA25 3D               4      DEC A
000386 CA26 37               4      SCF
000387 CA27 C0              11      RET NZ
000388 CA28 7C               4      LD  A,H
000389 CA29 B5               4      OR  L
00038A CA2A 37               4      SCF
00038B CA2B C8              11      RET Z
00038C CA2C CDC8C9          17      CALL    SETDTA1
00038F CA2F 110000          10  COMPAT: LD  DE,0                ; self-modifying code
000392 CA32 ED7B0600        20      LD  SP,(SYSTEM+1)
000396 CA36 67               4      LD  H,A             ; A=0 in SETDTA1(_SYS1A)
000397 CA37 6F               4      LD  L,A
000398 CA38 E5              11      PUSH    HL              ; push $0000 (reboot address)
000399 CA39 24               4      INC H
00039A CA3A E5              11      PUSH    HL              ; push $0100 (TPA address)
00039B CA3B C35FCC          10      JP  SETFCB              ; and JP $0100
                                
       CA3E                     C_BAT:
00039E CA3E 114154          10      LD  DE,'A'+'T'*256
0003A1 CA41 ED52            15      SBC HL,DE
0003A3 CA43 20D0            12      JR  NZ,CEXE6
                                
0003A5 CA45 CDB4C9          17      CALL    DEFCB
                                
0003A8 CA48 21A7E3          10      LD  HL,DTA_CCP
0003AB CA4B 11CCE3          10      LD  DE,FCB_BAT
0003AE CA4E 012500          10      LD  BC,37
0003B1 CA51 EDB0                    LDIR
       CA53                     C_BAT1:
0003B3 CA53 CDC2C9          17      CALL    SETDTA100
0003B6 CA56 CD8ACA          17      CALL    FGETC_BAT
0003B9 CA59 218100          10      LD  HL,DTA1+1
0003BC CA5C 2025            12      JR  NZ,END_BATCH
0003BE CA5E FE21             7      CP  021H        ;スペースや改行など制御文字を飛ばす
0003C0 CA60 38F1            12      JR  C,C_BAT1
0003C2 CA62 3620            10      LD  (HL),' '
0003C4 CA64 23               6      INC HL
       CA65                     C_BAT2:
0003C5 CA65 77               7      LD  (HL),A
0003C6 CA66 23               6      INC HL
0003C7 CA67 7D               4      LD  A,L
0003C8 CA68 3C               4      INC A       ;L==0FFH
0003C9 CA69 2809            12      JR  Z,RUN_BATCH
0003CB CA6B CD8ACA          17      CALL    FGETC_BAT
0003CE CA6E 2004            12      JR  NZ,RUN_BATCH
0003D0 CA70 FE20             7      CP  020H
0003D2 CA72 30F1            12      JR  NC,C_BAT2
       CA74                     RUN_BATCH:
0003D4 CA74 7D               4      LD  A,L
0003D5 CA75 D67F             7      SUB DTA1-1
0003D7 CA77 328000          13      LD  (DTA1),A
0003DA CA7A FE04             7      CP  4
0003DC CA7C 3805            12      JR  C,END_BATCH
0003DE CA7E 3600            10      LD  (HL),0
0003E0 CA80 C32EC9          10      JP  COMMAND2
       CA83                     END_BATCH:
0003E3 CA83 AF               4      XOR A       ;バッチファイルを閉じる
0003E4 CA84 32CCE3          13      LD  (FCB_BAT),A
0003E7 CA87 C300E4          10      JP  CPM_BOOT
                                
       CA8A                     FGETC_BAT:
0003EA CA8A 11CCE3          10      LD  DE,FCB_BAT
       CA8D                     FGETC:              ;1文字ずつ読み込む
0003ED CA8D E5              11      PUSH    HL      ;Z:成功
0003EE CA8E 210100          10      LD  HL,1
0003F1 CA91 CDE4C9          17      CALL    S27
0003F4 CA94 E1              10      POP HL
0003F5 CA95 3A0001          13      LD  A,(00100H)
0003F8 CA98 C9              10      RET
                                
       CA99                     C_DEL:
0003F9 CA99 CD5FCC          17      CALL    SETFCB
0003FC CA9C CD01D1          17      CALL    _SYS08      ;(BDOS)エコーなしコンソール入力
                                
0003FF CA9F 0E13             7      LD  C,013H
000401 CAA1 180A            12      JR  CDEL1       ;(BDOS)ファイルの削除
                                
       CAA3                     C_REN:
000403 CAA3 CD5FCC          17      CALL    SETFCB
000406 CAA6 3E10             7      LD  A,010H      ;ディレクトリも対象にする
000408 CAA8 326900          13      LD  (FCB1+13),A ;属性
00040B CAAB 0E17             7      LD  C,017H      ;(BDOS)ファイル名の変更
       CAAD                     CDEL1:
00040D CAAD 115C00          10      LD  DE,FCB1
000410 CAB0 CD0500          17      CALL    SYSTEM
000413 CAB3 C6FF             7      ADD A,0FFH
000415 CAB5 C9              10      RET
                                
       CAB6                     C_DIR:
000416 CAB6 CDCFD4          17      CALL    FILEC
000419 CAB9 2115E4          10      LD  HL,FDRV+1
00041C CABC CDAACD          17      CALL    CWILD1
00041F CABF 3EF1             7      LD  A,0F1H
000421 CAC1 3221E4          13      LD  (FDRV+13),A
000424 CAC4 CD9EC9          17      CALL    OPEN1
       CAC7                     CDIR1:
000427 CAC7 B7               4      OR  A
000428 CAC8 2008            12      JR  NZ,PDSKF
00042A CACA CD15CB          17      CALL    P_NAME
00042D CACD CDB0C9          17      CALL    OPEN2
000430 CAD0 18F5            12      JR  CDIR1
                                
       CAD2                     PDSKF:
000432 CAD2 3A14E4          13      LD  A,(FDRV)
000435 CAD5 5F               4      LD  E,A
000436 CAD6 0E1B             7      LD  C,01BH      ;(BDOS)ディスク情報の獲得
000438 CAD8 CD0500          17      CALL    SYSTEM
00043B CADB 4F               4      LD  C,A     ;C←1クラスタ辺りの論理セクタ数
00043C CADC C601             7      ADD A,001H
00043E CADE D8              11      RET C       ;Aが0FFHだった場合
00043F CADF 3E06             7      LD  A,8-2
       CAE1                     PDS1:               ;HL=未使用クラスタの総数
000441 CAE1 3C               4      INC A
000442 CAE2 CB19             8      RR  C
000444 CAE4 30FB            12      JR  NC,PDS1
       CAE6                     PDS2:               ;B←論理セクタのサイズの上位8ビット
000446 CAE6 3C               4      INC A
000447 CAE7 CB18             8      RR  B
000449 CAE9 30FB            12      JR  NC,PDS2
00044B CAEB 47               4      LD  B,A
                                
00044C CAEC 110000          10      LD  DE,0
       CAEF                     PDS3:
00044F CAEF 29              11      ADD HL,HL
000450 CAF0 EB               4      EX  DE,HL
000451 CAF1 ED6A            15      ADC HL,HL
000453 CAF3 EB               4      EX  DE,HL
000454 CAF4 10F9            13      DJNZ    PDS3
       CAF6                     PDSKF1:
000456 CAF6 CD8ECB          17      CALL    PRDEC_DEHL
000459 CAF9 11F1E3          10      LD  DE,FREE
00045C CAFC CD2CCE          17      CALL    _SYS09      ;(BDOS)文字列出力
00045F CAFF CD7DCB          17      CALL    PUTDRV
000462 CB02 3E5C             7      LD  A,05CH      ;\
000464 CB04 CDC6D0          17      CALL    MSG_A
000467 CB07 2A22E4          16      LD  HL,(FDRV+14)    ;ディレクトリのクラスタ番号
00046A CB0A AF               4      XOR A
00046B CB0B 11FEFF          10      LD  DE,0-2
00046E CB0E 19              11      ADD HL,DE
00046F CB0F 23               6      INC HL
000470 CB10 DC8ACB          17      CALL    C,PRDEC_HL
000473 CB13 1841            12      JR  LTNL
                                
       CB15                     P_NAME:
000475 CB15 3AA8E3          13      LD  A,(DTA_CCP+1)
000478 CB18 FE2E             7      CP  '.'
00047A CB1A C8              11      RET Z
00047B CB1B 11C0CD          10      LD  DE,DIRHD
00047E CB1E CD2CCE          17      CALL    _SYS09      ;(BDOS)文字列出力
000481 CB21 3AB3E3          13      LD  A,(DTA_CCP+1+00BH)
000484 CB24 F5              11      PUSH    AF
000485 CB25 0F               4      RRCA
000486 CB26 9F               4      SBC A,A
000487 CB27 E60A             7      AND '*'-020H
000489 CB29 C620             7      ADD A,020H
00048B CB2B CDC6D0          17      CALL    MSG_A
00048E CB2E CD7DCB          17      CALL    PUTDRV
000491 CB31 21A8E3          10      LD  HL,DTA_CCP+1
000494 CB34 CDCECB          17      CALL    FPRNT
                                
000497 CB37 F1              10      POP AF
000498 CB38 CB67             8      BIT 4,A
00049A CB3A 2808            12      JR  Z,DIR3
00049C CB3C 11B5CD          10      LD  DE,DIRMES
00049F CB3F CD2CCE          17      CALL    _SYS09      ;(BDOS)文字列出力
0004A2 CB42 180A            12      JR  DIR6
       CB44                     DIR3:
0004A4 CB44 ED5BC6E3        20      LD  DE,(DTA_CCP+1+01EH)
0004A8 CB48 2AC4E3          16      LD  HL,(DTA_CCP+1+01CH)
0004AB CB4B CD8ECB          17      CALL    PRDEC_DEHL
       CB4E                     DIR6:
0004AE CB4E 3AB1E4          13      LD  A,(_WIDTH)
0004B1 CB51 FE29             7      CP  40+1
0004B3 CB53 D4F0CB          17      CALL    NC,PRTTMS
                                
       CB56                     LTNL:
0004B6 CB56 1E03             7      LD  E,3
0004B8 CB58 C3CDE4          10      JP  _PRINT
                                
       CB5B                     C_PATH:
0004BB CB5B CDB1D5          17      CALL    SPCUT
0004BE CB5E 2166E3          10      LD  HL,PATHD
0004C1 CB61 FE21             7      CP  021H
0004C3 CB63 300C            12      JR  NC,CPATH0
       CB65                     CPATHP:
0004C5 CB65 7E               7      LD  A,(HL)
0004C6 CB66 23               6      INC HL
0004C7 CB67 FE20             7      CP  020H
0004C9 CB69 3F               4      CCF
0004CA CB6A 30EA            12      JR  NC,LTNL
0004CC CB6C CDC6D0          17      CALL    MSG_A
0004CF CB6F 18F4            12      JR  CPATHP
       CB71                     CPATH0:
0004D1 CB71 FE3B             7      CP  ';'
0004D3 CB73 2001            12      JR  NZ,CPATH1
0004D5 CB75 13               6      INC DE
       CB76                     CPATH1:
0004D6 CB76 EB               4      EX  DE,HL
0004D7 CB77 014000          10      LD  BC,PATHX
0004DA CB7A EDB0                    LDIR
0004DC CB7C C9              10      RET
                                
       CB7D                     PUTDRV:
0004DD CB7D 3A14E4          13      LD  A,(FDRV)
0004E0 CB80 C640             7      ADD A,'A'-1
0004E2 CB82 CDC6D0          17      CALL    MSG_A
0004E5 CB85 3E3A             7      LD  A,':'
       CB87                     MSG_AR:
0004E7 CB87 C3C6D0          10      JP  MSG_A
                                
       CB8A                     PRDEC_HL:
0004EA CB8A AF               4      XOR A
       CB8B                     PRDEC_AHL:
0004EB CB8B 5F               4      LD  E,A
0004EC CB8C 1600             7      LD  D,0
       CB8E                     PRDEC_DEHL:
0004EE CB8E D5              11      PUSH    DE
0004EF CB8F 110FE4          10      LD  DE,DECBF
0004F2 CB92 0605             7      LD  B,5
0004F4 CB94 CD94CC          17      CALL    ZERO_MEMORY_DE  ;A=0
0004F7 CB97 D1              10      POP DE
                                
0004F8 CB98 0E20             7      LD  C,32
       CB9A                     DEC1:
0004FA CB9A 29              11      ADD HL,HL
0004FB CB9B EB               4      EX  DE,HL
0004FC CB9C ED6A            15      ADC HL,HL
0004FE CB9E EB               4      EX  DE,HL
0004FF CB9F E5              11      PUSH    HL
000500 CBA0 2113E4          10      LD  HL,DECBF+4
000503 CBA3 0605             7      LD  B,5
       CBA5                     DEC2:
000505 CBA5 7E               7      LD  A,(HL)
000506 CBA6 8F               4      ADC A,A
000507 CBA7 27               4      DAA
000508 CBA8 77               7      LD  (HL),A
000509 CBA9 2B               6      DEC HL
00050A CBAA 10F9            13      DJNZ    DEC2
00050C CBAC E1              10      POP HL
00050D CBAD 0D               4      DEC C
00050E CBAE 20EA            12      JR  NZ,DEC1
                                
000510 CBB0 210FE4          10      LD  HL,DECBF
000513 CBB3 3E20             7      LD  A,020H
000515 CBB5 0604             7      LD  B,4
       CBB7                     DEC3:
000517 CBB7 CDC4CB          17      CALL    DEC4
00051A CBBA CDC4CB          17      CALL    DEC4
00051D CBBD 23               6      INC HL
00051E CBBE 10F7            13      DJNZ    DEC3
       CBC0                     DECX:
000520 CBC0 CDC4CB          17      CALL    DEC4
000523 CBC3 AF               4      XOR A
       CBC4                     DEC4:
000524 CBC4 ED6F            18      RLD
000526 CBC6 FE20             7      CP  020H
000528 CBC8 2802            12      JR  Z,DEC5
00052A CBCA F630             7      OR  030H
       CBCC                     DEC5:
00052C CBCC 18B9            12      JR  MSG_AR
                                
       CBCE                     FPRNT:
00052E CBCE 0608             7      LD  B,8
000530 CBD0 CDE1CB          17      CALL    P_N1
000533 CBD3 7E               7      LD  A,(HL)
000534 CBD4 C600             7      ADD A,NBSP-020H
000536 CBD6 FE20             7      CP  NBSP
000538 CBD8 2802            12      JR  Z,FPR1
00053A CBDA 3E2E             7      LD  A,'.'
       CBDC                     FPR1:
00053C CBDC CDC6D0          17      CALL    MSG_A
00053F CBDF 0603             7      LD  B,3
                                
       CBE1                     P_N1:
000541 CBE1 C5              11      PUSH    BC
000542 CBE2 E5              11      PUSH    HL
000543 CBE3 7E               7      LD  A,(HL)
000544 CBE4 CDF2D7          17      CALL    CAP3
000547 CBE7 CDC6D0          17      CALL    MSG_A
00054A CBEA E1              10      POP HL
00054B CBEB C1              10      POP BC
00054C CBEC 23               6      INC HL
00054D CBED 10F2            13      DJNZ    P_N1
00054F CBEF C9              10      RET
                                
       CBF0                     PRTTMS:
000550 CBF0 3E20             7      LD  A,020H
000552 CBF2 CDC6D0          17      CALL    MSG_A
                                
000555 CBF5 2AC0E3          16      LD  HL,(DTA_CCP+1+24)
000558 CBF8 7D               4      LD  A,L
000559 CBF9 B7               4      OR  A
00055A CBFA C8              11      RET Z
00055B CBFB CB3C             8      SRL H
00055D CBFD 17               4      RLA
00055E CBFE 17               4      RLA
00055F CBFF 17               4      RLA
000560 CC00 17               4      RLA
000561 CC01 E60F             7      AND 00FH
000563 CC03 57               4      LD  D,A
000564 CC04 7C               4      LD  A,H
000565 CC05 C650             7      ADD A,80
000567 CC07 CD4ACC          17      CALL    PRDEC_A
00056A CC0A 3E2D             7      LD  A,'-'
00056C CC0C CDC6D0          17      CALL    MSG_A
00056F CC0F 7A               4      LD  A,D
000570 CC10 CD4ACC          17      CALL    PRDEC_A
000573 CC13 3E2D             7      LD  A,'-'
000575 CC15 CDC6D0          17      CALL    MSG_A
000578 CC18 7D               4      LD  A,L
000579 CC19 E61F             7      AND 01FH
00057B CC1B CD4ACC          17      CALL    PRDEC_A
                                
00057E CC1E 2ABEE3          16      LD  HL,(DTA_CCP+1+22)
                                
000581 CC21 3E20             7      LD  A,020H
000583 CC23 CDC6D0          17      CALL    MSG_A
000586 CC26 7C               4      LD  A,H
000587 CC27 65               4      LD  H,L
000588 CC28 0603             7      LD  B,3
       CC2A                     PRTTMS1:
00058A CC2A 1F               4      RRA
00058B CC2B CB1D             8      RR  L
00058D CC2D 10FB            13      DJNZ    PRTTMS1
00058F CC2F E61F             7      AND 01FH
000591 CC31 CD4ACC          17      CALL    PRDEC_A
000594 CC34 3E3A             7      LD  A,':'
000596 CC36 CDC6D0          17      CALL    MSG_A
000599 CC39 7D               4      LD  A,L
00059A CC3A 0F               4      RRCA
00059B CC3B 0F               4      RRCA
00059C CC3C E63F             7      AND 03FH
00059E CC3E CD4ACC          17      CALL    PRDEC_A
0005A1 CC41 3E3A             7      LD  A,':'
0005A3 CC43 CDC6D0          17      CALL    MSG_A
0005A6 CC46 7C               4      LD  A,H
0005A7 CC47 E61F             7      AND 01FH
0005A9 CC49 87               4      ADD A,A
                                
                                ;   PRINT10
                                
       CC4A                     PRDEC_A:
0005AA CC4A E5              11      PUSH    HL
0005AB CC4B 0608             7      LD  B,8
0005AD CC4D 4F               4      LD  C,A
0005AE CC4E AF               4      XOR A
       CC4F                     PRTA1:
0005AF CC4F CB01             4      RLC C
0005B1 CC51 8F               4      ADC A,A
0005B2 CC52 27               4      DAA
0005B3 CC53 10FA            13      DJNZ    PRTA1
0005B5 CC55 210FE4          10      LD  HL,DECBF
0005B8 CC58 77               7      LD  (HL),A
0005B9 CC59 AF               4      XOR A
0005BA CC5A CDC0CB          17      CALL    DECX
0005BD CC5D E1              10      POP HL
0005BE CC5E C9              10      RET
                                
       CC5F                     SETFCB:
0005BF CC5F CDB1D5          17      CALL    SPCUT
0005C2 CC62 1A               7      LD  A,(DE)
0005C3 CC63 FE20             7      CP  020H
0005C5 CC65 3801            12      JR  C,SETFCBA
0005C7 CC67 1B               6      DEC DE
       CC68                     SETFCBA:
0005C8 CC68 0624             7      LD  B,36
0005CA CC6A 215C00          10      LD  HL,FCB1
0005CD CC6D E5              11      PUSH    HL
0005CE CC6E AF               4      XOR A
0005CF CC6F CD86D5          17      CALL    FILL_MEMORY
0005D2 CC72 E1              10      POP HL
0005D3 CC73 D5              11      PUSH    DE
0005D4 CC74 CD6AD0          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
0005D7 CC77 216C00          10      LD  HL,FCB2
0005DA CC7A CD6AD0          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
0005DD CC7D E1              10      POP HL
0005DE CC7E 010050          10      LD  BC,05000H
0005E1 CC81 118100          10      LD  DE,00081H
       CC84                     SETFCB1:
0005E4 CC84 7E               7      LD  A,(HL)
0005E5 CC85 23               6      INC HL
0005E6 CC86 FE20             7      CP  020H
0005E8 CC88 3805            12      JR  C,SETFCB2
0005EA CC8A 12               7      LD  (DE),A
0005EB CC8B 13               6      INC DE
0005EC CC8C 0C               4      INC C
0005ED CC8D 10F5            13      DJNZ    SETFCB1
       CC8F                     SETFCB2:
0005EF CC8F 79               4      LD  A,C
0005F0 CC90 328000          13      LD  (DTA1),A
0005F3 CC93 04               4      INC B
       CC94                     ZERO_MEMORY_DE:
0005F4 CC94 AF               4      XOR A
       CC95                     FILL_MEMORY_DE:
0005F5 CC95 12               7      LD  (DE),A
0005F6 CC96 13               6      INC DE
0005F7 CC97 10FC            13      DJNZ    FILL_MEMORY_DE
0005F9 CC99 C9              10      RET
                                
       CC9A                     C_COPY:
0005FA CC9A CD5FCC          17      CALL    SETFCB
                                
0005FD CC9D 1161E4          10      LD  DE,ZERO
000600 CCA0 CDD2D4          17      CALL    FILEC2
000603 CCA3 216C00          10      LD  HL,FCB2
000606 CCA6 CD71D0          17      CALL    S29X1
                                
000609 CCA9 3E10             7      LD  A,010H
00060B CCAB 326900          13      LD  (FCB1+13),A
00060E CCAE 216D00          10      LD  HL,FCB2+1
000611 CCB1 CDAACD          17      CALL    CWILD1
       CCB4                     COPY0:
000614 CCB4 CDA7CD          17      CALL    CWILD
000617 CCB7 215C00          10      LD  HL,FCB1
00061A CCBA CDA1C9          17      CALL    OPEN
00061D CCBD 37               4      SCF
       CCBE                     COPY1:
00061E CCBE C0              11      RET NZ
00061F CCBF CDB4C9          17      CALL    DEFCB
                                
000622 CCC2 3AB4E3          13      LD  A,(DTA_CCP+13)
000625 CCC5 CB67             8      BIT 4,A
000627 CCC7 2821            12      JR  Z,COPY1A
                                
000629 CCC9 215D00          10      LD  HL,FCB1+1
00062C CCCC CD15D9          17      CALL    CHKWILD
00062F CCCF 3814            12      JR  C,COPY9
                                
000631 CCD1 3E20             7      LD  A,020H
000633 CCD3 325D00          13      LD  (FCB1+1),A
000636 CCD6 2AC1E3          16      LD  HL,(DTA_CCP+26)
000639 CCD9 23               6      INC HL
00063A CCDA 226A00          16      LD  (FCB1+14),HL
00063D CCDD 18D5            12      JR  COPY0
                                
       CCDF                     COPY8:
00063F CCDF CD2CCE          17      CALL    _SYS09      ;(BDOS)文字列出力
000642 CCE2 CD56CB          17      CALL    LTNL
       CCE5                     COPY9:
000645 CCE5 CDB0C9          17      CALL    OPEN2
000648 CCE8 18D4            12      JR  COPY1
                                
       CCEA                     COPY1A:
00064A CCEA 216C00          10      LD  HL,FCB2
00064D CCED 1114E4          10      LD  DE,FDRV
000650 CCF0 01A9E3          10      LD  BC,DTA_CCP+2
000653 CCF3 EDA0            16      LDI
000655 CCF5 3E0B             7      LD  A,11
       CCF7                     COPY2:
000657 CCF7 F5              11      PUSH    AF
000658 CCF8 7E               7      LD  A,(HL)
000659 CCF9 FE3F             7      CP  '?'
00065B CCFB 2001            12      JR  NZ,COPY3
00065D CCFD 0A               7      LD  A,(BC)
       CCFE                     COPY3:
00065E CCFE 12               7      LD  (DE),A
00065F CCFF 03               6      INC BC
000660 CD00 13               6      INC DE
000661 CD01 23               6      INC HL
000662 CD02 F1              10      POP AF
000663 CD03 3D               4      DEC A
000664 CD04 20F1            12      JR  NZ,COPY2
000666 CD06 010500          10      LD  BC,16-11
000669 CD09 EDB0                    LDIR
       CD0B                     PUTNAME:
00066B CD0B 215D00          10      LD  HL,FCB1+1
00066E CD0E CD15D9          17      CALL    CHKWILD
000671 CD11 300B            12      JR  NC,PUTN1
000673 CD13 2115E4          10      LD  HL,FDRV+1
000676 CD16 CDCECB          17      CALL    FPRNT
000679 CD19 3E20             7      LD  A,020H
00067B CD1B CDC6D0          17      CALL    MSG_A
       CD1E                     PUTN1:
00067E CD1E 1114E4          10      LD  DE,FDRV
000681 CD21 0E16             7      LD  C,016H      ;(BDOS)ファイルの作成
000683 CD23 CDCFC9          17      CALL    SYSTEM0
000686 CD26 2048            12      JR  NZ,COPYE2
000688 CD28 67               4      LD  H,A     ;A=0
000689 CD29 6F               4      LD  L,A
00068A CD2A 2235E4          16      LD  (FDRV+33),HL    ;(FCB)ランダムレコード
00068D CD2D 2237E4          16      LD  (FDRV+35),HL
       CD30                     COPY6:
000690 CD30 CDD8C9          17      CALL    S27BUF
000693 CD33 47               4      LD  B,A
000694 CD34 3C               4      INC A
000695 CD35 2831            12      JR  Z,COPYE
000697 CD37 7C               4      LD  A,H
000698 CD38 B5               4      OR  L
000699 CD39 280C            12      JR  Z,COPY7
00069B CD3B 1114E4          10      LD  DE,FDRV
00069E CD3E 0E26             7      LD  C,026H      ;(BDOS)ランダムブロック書き込み
0006A0 CD40 CDCFC9          17      CALL    SYSTEM0
0006A3 CD43 2023            12      JR  NZ,COPYE
0006A5 CD45 10E9            13      DJNZ    COPY6
       CD47                     COPY7:
0006A7 CD47 3AB4E3          13      LD  A,(DTA_CCP+13)  ;(FCB)属性
0006AA CD4A 3221E4          13      LD  (FDRV+13),A
0006AD CD4D 21BBE3          10      LD  HL,DTA_CCP+20   ;(FCB)タイムスタンプ
0006B0 CD50 1128E4          10      LD  DE,FDRV+20
0006B3 CD53 010400          10      LD  BC,4
0006B6 CD56 EDB0                    LDIR
                                
0006B8 CD58 1114E4          10      LD  DE,FDRV
0006BB CD5B 0E10             7      LD  C,010H      ;(BDOS)ファイルのクローズ
0006BD CD5D CDCFC9          17      CALL    SYSTEM0
0006C0 CD60 2006            12      JR  NZ,COPYE
                                
0006C2 CD62 1171E4          10      LD  DE,OK
0006C5 CD65 C3DFCC          10      JP  COPY8
                                
       CD68                     COPYE:
0006C8 CD68 1114E4          10      LD  DE,FDRV
0006CB CD6B 0E13             7      LD  C,013H      ;(BDOS)ファイルの削除
0006CD CD6D CD0500          17      CALL    SYSTEM
       CD70                     COPYE2:
0006D0 CD70 37               4      SCF
0006D1 CD71 C9              10      RET
                                
       CD72                     C_TYPE:
0006D2 CD72 CD5FCC          17      CALL    SETFCB
0006D5 CD75 215C00          10      LD  HL,FCB1
0006D8 CD78 CDA1C9          17      CALL    OPEN
0006DB CD7B 37               4      SCF
       CD7C                     TYPE1:
0006DC CD7C C0              11      RET NZ
0006DD CD7D CDB4C9          17      CALL    DEFCB
0006E0 CD80 3E06             7      LD  A,6
0006E2 CD82 CDC6D0          17      CALL    MSG_A
       CD85                     TYPE2:
0006E5 CD85 CDD8C9          17      CALL    S27BUF
0006E8 CD88 C6FE             7      ADD A,0FEH
0006EA CD8A D8              11      RET C
0006EB CD8B 7C               4      LD  A,H
0006EC CD8C B5               4      OR  L
0006ED CD8D 2813            12      JR  Z,TYPEE
0006EF CD8F 010001          10      LD  BC,00100H
       CD92                     TYPE3:
0006F2 CD92 0A               7      LD  A,(BC)
0006F3 CD93 03               6      INC BC
0006F4 CD94 FE1A             7      CP  01AH
0006F6 CD96 280A            12      JR  Z,TYPEE
0006F8 CD98 CDC6D0          17      CALL    MSG_A
0006FB CD9B 2B               6      DEC HL
0006FC CD9C 7C               4      LD  A,H
0006FD CD9D B5               4      OR  L
0006FE CD9E 20F2            12      JR  NZ,TYPE3
000700 CDA0 18E3            12      JR  TYPE2
       CDA2                     TYPEE:
000702 CDA2 CDB0C9          17      CALL    OPEN2
000705 CDA5 18D5            12      JR  TYPE1
                                
       CDA7                     CWILD:
000707 CDA7 215D00          10      LD  HL,FCB1+1
       CDAA                     CWILD1:
00070A CDAA 7E               7      LD  A,(HL)
00070B CDAB FE20             7      CP  020H
00070D CDAD C0              11      RET NZ
       CDAE                     CWILD2:
00070E CDAE 3E3F             7      LD  A,'?'
000710 CDB0 060B             7      LD  B,11
000712 CDB2 C386D5          10      JP  FILL_MEMORY
                                
000715 CDB5 20202020203C4449    DIRMES: DB  "     <DIR>$"
            523E24              
000720 CDC0 20203A24            DIRHD:  DB  "  :$"
                                
       CDC4                     COMTB:
000724 CDC4 44202020                DB  "D   "  ;1
000728 CDC8 B6CA                    DW  C_DIR
00072A CDCA 44495220                DB  "DIR "  ;2
00072E CDCE B6CA                    DW  C_DIR
000730 CDD0 434F5059                DB  "COPY"  ;3
000734 CDD4 9ACC                    DW  C_COPY
000736 CDD6 43442020                DB  "CD  "  ;4
00073A CDDA D4C9                    DW  C_CD
00073C CDDC 44454C20                DB  "DEL "  ;5
000740 CDE0 99CA                    DW  C_DEL
000742 CDE2 50415448                DB  "PATH"  ;6
000746 CDE6 5BCB                    DW  C_PATH
000748 CDE8 52454E20                DB  "REN "  ;7
00074C CDEC A3CA                    DW  C_REN
00074E CDEE 54595045                DB  "TYPE"  ;8
000752 CDF2 72CD                    DW  C_TYPE
000754 CDF4 52454D20                DB  "REM "  ;9
000758 CDF8 29CE                    DW  C_REM
[EOF:LDCCP.ASM:SHIFT_JIS]
                                    INCLUDE "LDOS.ASM"
                                
                                ;   LSX-Dodgers OS
                                
       CDFA                     BDOS0:
00075A CDFA E5              11      PUSH    HL
00075B CDFB 79               4      LD  A,C
00075C CDFC FE3C             7      CP  03CH
00075E CDFE 3802            12      JR  C,DOS1
000760 CE00 3E3C             7      LD  A,03CH
       CE02                     DOS1:
000762 CE02 87               4      ADD A,A
000763 CE03 6F               4      LD  L,A
000764 CE04 26E5             7      LD  H,STABLE/256
000766 CE06 7E               7      LD  A,(HL)
000767 CE07 2C               4      INC L
000768 CE08 66               7      LD  H,(HL)
000769 CE09 6F               4      LD  L,A
00076A CE0A E3              19      EX  (SP),HL
00076B CE0B 79               4      LD  A,C
                                ;確認用
                                ;   LD  (0050H),A
00076C CE0C C9              10      RET
       CE0D                     _DOS2:
00076D CE0D FE5A             7      CP  05AH        ;(BDOS)カレントディレクトリの変更(_CHDIR)
00076F CE0F CAACD0          10      JP  Z,_SYS5A
000772 CE12 FE5C             7      CP  05CH        ;(BDOS)ファイル名の解析(_PFILE)
000774 CE14 CA6AD0          10      JP  Z,_SYS29
000777 CE17 FE5F             7      CP  05FH        ;(BDOS)ディスクバッファのフラッシュ(_FLUSH)
000779 CE19 CA2EE2          10      JP  Z,_SYS5F
00077C CE1C FE6F             7      CP  06FH        ;(BDOS)MSX-DOS のバージョン番号の獲得(_DOSVER)
00077E CE1E 200A            12      JR  NZ,_ERROR
000780 CE20 011D00          10      LD  BC,VER_6F
000783 CE23 115701          10      LD  DE,VER
000786 CE26 210301          10      LD  HL,MACD
       CE29                     C_REM:
000789 CE29 AF               4      XOR A
       CE2A                     _ERROR:
00078A CE2A A7               4      AND A
00078B CE2B C9              10      RET
                                
       CE2C                     _SYS09:     ;文字列出力
00078C CE2C D5              11      PUSH    DE
       CE2D                     _SX09:
00078D CE2D 1A               7      LD  A,(DE)
00078E CE2E 13               6      INC DE
00078F CE2F FE24             7      CP  '$'
000791 CE31 2831            12      JR  Z,SX0E2
000793 CE33 CDC6D0          17      CALL    MSG_A
000796 CE36 18F5            12      JR  _SX09
                                
       CE38                     MSX1:
000798 CE38 CDC6D0          17      CALL    MSG_A
       CE3B                     MSX:
00079B CE3B 7E               7      LD  A,(HL)
00079C CE3C 23               6      INC HL
00079D CE3D B7               4      OR  A
00079E CE3E 20F8            12      JR  NZ,MSX1
0007A0 CE40 C9              10      RET
                                
       CE41                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0007A1 CE41 212200          10      LD  HL,00022H
0007A4 CE44 7D               4      LD  A,L
0007A5 CE45 C9              10      RET
                                
       CE46                     _SYS0D:     ;(BDOS)ディスクリセット
0007A6 CE46 CDDFE4          17      CALL    _FFLUSH
0007A9 CE49 E5              11      PUSH    HL
0007AA CE4A 218000          10      LD  HL,00080H
0007AD CE4D 228AE4          16      LD  (_DTA),HL
0007B0 CE50 E1              10      POP HL
0007B1 CE51 D5              11      PUSH    DE
0007B2 CE52 1E00             7      LD  E,0
0007B4 CE54 3E                      DB  03EH
                                
       CE55                     _SYS0E:     ;(BDOS)カレントドライブの設定
0007B5 CE55 D5              11      PUSH    DE
0007B6 CE56 7B               4      LD  A,E
0007B7 CE57 DDE5            15      PUSH    IX
0007B9 CE59 CDDCE4          17      CALL    _GETDPB
0007BC CE5C DDE1            14      POP IX
0007BE CE5E 3804            12      JR  C,SX0E2
0007C0 CE60 7B               4      LD  A,E
0007C1 CE61 3287E4          13      LD  (_DVSW),A
       CE64                     SX0E2:
0007C4 CE64 D1              10      POP DE
0007C5 CE65 C9              10      RET
                                
       CE66                     _SYS0F:     ;(BDOS)ファイルのオープン
0007C6 CE66 CDC3D5          17      CALL    SETDRV
0007C9 CE69 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
0007CC CE6C C602             7      ADD A,002H      ;Write
0007CE CE6E 2848            12      JR  Z,FEND0F
0007D0 CE70 CD11D9          17      CALL    CHKWILDX
                                
0007D3 CE73 D4E3D5          17      CALL    NC,SOPENX
       CE76                     _S16XX:
0007D6 CE76 3840            12      JR  C,FEND0F
                                                ;Directory location
0007D8 CE78 3A9FE4          13      LD  A,(_FILEN)
0007DB CE7B FD7719          19      LD  (IY+25),A   ;(FCB)ディレクトリロケーション
                                ;               _DIRF
0007DE CE7E 3AA0E4          13      LD  A,(_DIRF)
0007E1 CE81 FD771D          19      LD  (IY+29),A   ;(FCB)ディレクトリモード
                                ;               _FBPS
0007E4 CE84 FD731E          19      LD  (IY+30),E   ;(FCB)ディレクトリポジション
0007E7 CE87 FD721F          19      LD  (IY+31),D
                                ;               Open(Read)
0007EA CE8A FD361CFF        19      LD  (IY+28),0FFH    ;(FCB)オープンモード
                                ;               FILENAME
0007EE CE8E FDE5            15      PUSH    IY
0007F0 CE90 D1              10      POP DE
0007F1 CE91 13               6      INC DE
0007F2 CE92 010B00          10      LD  BC,11
0007F5 CE95 EDB0                    LDIR
                                ;               Attribute
0007F7 CE97 7E               7      LD  A,(HL)
0007F8 CE98 FD770D          19      LD  (IY+13),A   ;(FCB)属性(アトリビュート)
0007FB CE9B 110B00          10      LD  DE,11       ;Reserved
0007FE CE9E 19              11      ADD HL,DE
                                                    ;(FCB)ファイルを最後に変更した時刻
0007FF CE9F 11E4E5          10      LD  DE,SDDATA       ;(FCB)ファイルを最後に変更した日付
000802 CEA2 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       CEA4                     S16LOOP:                ;(FCB)ファイルのサイズ(バイト単位)
000804 CEA4 1A               7      LD  A,(DE)
000805 CEA5 13               6      INC DE
000806 CEA6 32ADCE          13      LD  (S16PAT+2),A
000809 CEA9 7E               7      LD  A,(HL)
00080A CEAA 23               6      INC HL
00080B CEAB FD7700          19  S16PAT: LD  (IY+0),A
00080E CEAE 10F4            13      DJNZ    S16LOOP
                                
000810 CEB0 AF               4      XOR A
000811 CEB1 FD770C          19      LD  (IY+12),A   ;(FCB)カレントブロック
000814 CEB4 FD225CCF        20      LD  (OFCB+1),IY
       CEB8                     FEND0F:
000818 CEB8 1845            12      JR  FEND10
                                
       CEBA                     _SYS10:     ;(BDOS)ファイルのクローズ
00081A CEBA CDC3D5          17      CALL    SETDRV
00081D CEBD FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
000820 CEC0 D6FE             7      SUB 0FEH
000822 CEC2 37               4      SCF
000823 CEC3 3F               4      CCF
000824 CEC4 2039            12      JR  NZ,FEND10
       CEC6                     _S10A:              ;Write
000826 CEC6 FD770E          19      LD  (IY+14),A   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
000829 CEC9 FD770F          19      LD  (IY+15),A
                                
00082C CECC FD341C          23      INC (IY+28)     ;0FEH->0FFH ;オープンモード
00082F CECF CD0DDA          17      CALL    SETTMS
                                
000832 CED2 FD7E1D          19      LD  A,(IY+29)   ;(FCB)ディレクトリモード
000835 CED5 32A0E4          13      LD  (_DIRF),A
000838 CED8 E67F             7      AND 07FH
00083A CEDA 3238DF          13      LD  (_SECPS+1),A
00083D CEDD FD5E1E          19      LD  E,(IY+30)   ;(FCB)ディレクトリポジション
000840 CEE0 FD561F          19      LD  D,(IY+31)
000843 CEE3 CD17D7          17      CALL    READ_DIR
000846 CEE6 3817            12      JR  C,FEND10
                                
000848 CEE8 3A41D6          13  SDECM1: LD  A,(SDECPAT+1)   ;1セクタ辺りのディレクトリエントリ数
00084B CEEB 3D               4      DEC A       ;1024=01FH / 512=00FH / 256=7
00084C CEEC FDA619          19      AND (IY+25)     ;(FCB)ディレクトリロケーション
00084F CEEF 6F               4      LD  L,A
000850 CEF0 2600             7      LD  H,0
000852 CEF2 29              11      ADD HL,HL       ;*2
000853 CEF3 29              11      ADD HL,HL       ;*4
000854 CEF4 29              11      ADD HL,HL       ;*8
000855 CEF5 29              11      ADD HL,HL       ;*16
000856 CEF6 29              11      ADD HL,HL       ;*32
000857 CEF7 ED4B7EE5        20      LD  BC,(_DTBUF)
00085B CEFB 09              11      ADD HL,BC
                                
00085C CEFC CD21D9          17      CALL    SDIRENT
       CEFF                     FEND10:
00085F CEFF 1842            12      JR  FEND
                                
       CF01                     _SYS11:     ;(BDOS)最初のファイルの検索
000861 CF01 CDC3D5          17      CALL    SETDRV
000864 CF04 CD10D6          17      CALL    SOPEN
       CF07                     _S12X1:
000867 CF07 383A            12      JR  C,FEND
000869 CF09 CDB0D6          17      CALL    SOPENE2
00086C CF0C ED5B8AE4        20      LD  DE,(_DTA)
000870 CF10 3A88E4          13      LD  A,(_DRV)
000873 CF13 3C               4      INC A
000874 CF14 12               7      LD  (DE),A
000875 CF15 D5              11      PUSH    DE
000876 CF16 13               6      INC DE
000877 CF17 012000          10      LD  BC,32
00087A CF1A EDB0                    LDIR
00087C CF1C FD6E0E          19      LD  L,(IY+14)   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
00087F CF1F FD660F          19      LD  H,(IY+15)
000882 CF22 22F4E5          16      LD  (SCDIR),HL
000885 CF25 2A9AE4          16      LD  HL,(_FBPS)
000888 CF28 22F6E5          16      LD  (SFBPS),HL
00088B CF2B 2A9FE4          16      LD  HL,(_FILEN)
00088E CF2E 7C               4      LD  A,H
00088F CF2F B7               4      OR  A
000890 CF30 2806            12      JR  Z,_S12DIR
000892 CF32 3A38DF          13      LD  A,(_SECPS+1)
000895 CF35 F680             7      OR  080H
000897 CF37 67               4      LD  H,A
       CF38                     _S12DIR:
000898 CF38 22F8E5          16      LD  (SFNDF),HL  ;Directory position and Flags
00089B CF3B E1              10      POP HL
00089C CF3C 1139E4          10      LD  DE,SFILE
00089F CF3F 0E21             7      LD  C,33
       CF41                     _S11B:
0008A1 CF41 EDB0                    LDIR
       CF43                     FEND:
0008A3 CF43 9F               4      SBC A,A     ;CF=0 A=0 : CF=1 A=0FFH
       CF44                     FENDE:
0008A4 CF44 FDE1            14      POP IY
0008A6 CF46 C1              10      POP BC
0008A7 CF47 D1              10      POP DE
0008A8 CF48 E1              10      POP HL
0008A9 CF49 C9              10      RET
                                
       CF4A                     _SYS12:     ;(BDOS)次のファイルの検索
0008AA CF4A E5              11      PUSH    HL
0008AB CF4B D5              11      PUSH    DE
0008AC CF4C C5              11      PUSH    BC
0008AD CF4D FDE5            15      PUSH    IY
0008AF CF4F CD74D6          17      CALL    NOPEN
0008B2 CF52 18B3            12      JR  _S12X1
                                
       CF54                     _S16K:
0008B4 CF54 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
0008B7 CF57 FEFD             7      CP  0FDH        ;Device(0FDH)
0008B9 CF59 37               4      SCF
0008BA CF5A C8              11      RET Z
                                
0008BB CF5B 110000          10  OFCB:   LD  DE,0
0008BE CF5E D5              11      PUSH    DE
0008BF CF5F 061A             7      LD  B,26        ;First cluster
       CF61                     S16K1:
0008C1 CF61 13               6      INC DE
0008C2 CF62 23               6      INC HL
0008C3 CF63 10FC            13      DJNZ    S16K1
                                
0008C5 CF65 1A               7      LD  A,(DE)
0008C6 CF66 BE               7      CP  (HL)
0008C7 CF67 2013            12      JR  NZ,S16K2
0008C9 CF69 13               6      INC DE
0008CA CF6A 23               6      INC HL
0008CB CF6B 1A               7      LD  A,(DE)
0008CC CF6C BE               7      CP  (HL)
0008CD CF6D 200D            12      JR  NZ,S16K2
                                
0008CF CF6F E1              10      POP HL
0008D0 CF70 FDE5            15      PUSH    IY
0008D2 CF72 D1              10      POP DE
0008D3 CF73 1A               7      LD  A,(DE)      ;Drive
0008D4 CF74 BE               7      CP  (HL)
0008D5 CF75 2006            12      JR  NZ,S16K3
                                                ;ここはCFが必ず0
0008D7 CF77 ED52            15      SBC HL,DE       ;CP HL,DE
0008D9 CF79 37               4      SCF
0008DA CF7A C0              11      RET NZ
0008DB CF7B E5              11      PUSH    HL
       CF7C                     S16K2:
0008DC CF7C E1              10      POP HL
       CF7D                     S16K3:
0008DD CF7D FDE5            15      PUSH    IY
0008DF CF7F D1              10      POP DE
       CF80                     _SYS13:     ;(BDOS)ファイルの削除
0008E0 CF80 CDC3D5          17      CALL    SETDRV
0008E3 CF83 CD41D8          17      CALL    KILL
       CF86                     FEND13:
0008E6 CF86 18BB            12      JR  FEND
                                
       CF88                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0008E8 CF88 CDC3D5          17      CALL    SETDRV
0008EB CF8B CD79DA          17      CALL    INIT_SEQ
       CF8E                     SREAD:
0008EE CF8E CDC1DA          17      CALL    RB_READ
                                
0008F1 CF91 C601             7      ADD A,001H
0008F3 CF93 38AE            12      JR  C,FEND
                                
0008F5 CF95 7D               4      LD  A,L
0008F6 CF96 D601             7      SUB 001H
       CF98                     FENDX:
0008F8 CF98 9F               4      SBC A,A
0008F9 CF99 E603             7      AND 3
0008FB CF9B 1F               4      RRA
0008FC CF9C 18A6            12      JR  FENDE
                                
       CF9E                     _SYS15:     ;(BDOS)シーケンシャルな書き込み
0008FE CF9E CDC3D5          17      CALL    SETDRV
000901 CFA1 CD79DA          17      CALL    INIT_SEQ
       CFA4                     SWRITE:
000904 CFA4 CDBADA          17      CALL    RB_WRITE
                                
000907 CFA7 C6FF             7      ADD A,0FFH
000909 CFA9 18ED            12      JR  FENDX
                                
       CFAB                     _SYS17:     ;(BDOS)ファイル名の変更
00090B CFAB CDC3D5          17      CALL    SETDRV
00090E CFAE CD97D8          17      CALL    NAME
000911 CFB1 18D3            12      JR  FEND13
                                
       CFB3                     _SYS16:     ;(BDOS)ファイルの作成
000913 CFB3 CDC3D5          17      CALL    SETDRV
                                
000916 CFB6 CD11D9          17      CALL    CHKWILDX
000919 CFB9 38CB            12      JR  C,FEND13
00091B CFBB FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
00091E CFBE FE05             7      CP  5
000920 CFC0 2805            12      JR  Z,_S16X2
000922 CFC2 FE21             7      CP  021H
000924 CFC4 DA86CF          10      JP  C,FEND13
       CFC7                     _S16X2:
                                ;               Clear FCB
000927 CFC7 FDE5            15      PUSH    IY
000929 CFC9 E1              10      POP HL
00092A CFCA 011000          10      LD  BC,16
00092D CFCD 09              11      ADD HL,BC
       CFCE                     _S16X1:
00092E CFCE 70               7      LD  (HL),B      ;B=0
00092F CFCF 23               6      INC HL
000930 CFD0 0D               4      DEC C
000931 CFD1 20FB            12      JR  NZ,_S16X1
                                
000933 CFD3 CD12DA          17      CALL    SETTMSX
000936 CFD6 FD360DFF        19      LD  (IY+13),0FFH    ;(FCB)Attribute
00093A CFDA CDE3D5          17      CALL    SOPENX
00093D CFDD 3F               4      CCF
00093E CFDE CC54CF          17      CALL    Z,_S16K
000941 CFE1 D4C1D6          17      CALL    NC,COPEN
000944 CFE4 D421D9          17      CALL    NC,SDIRENT
000947 CFE7 C376CE          10      JP  _S16XX
                                
       CFEA                     _SYS21:     ;(BDOS)ランダムな読み出し
00094A CFEA CDC3D5          17      CALL    SETDRV
00094D CFED CD5DDA          17      CALL    INIT_RND
000950 CFF0 189C            12      JR  SREAD
                                
       CFF2                     _SYS22:     ;(BDOS)ランダムな書き込み
       CFF2                     _SYS28:     ;(BDOS)ランダムな書き込み・その2
000952 CFF2 CDC3D5          17      CALL    SETDRV
000955 CFF5 CD5DDA          17      CALL    INIT_RND
000958 CFF8 18AA            12      JR  SWRITE
                                
       CFFA                     _SYS18:     ;(BDOS)ログインベクトルの獲得
00095A CFFA 21FF00          10      LD  HL,000FFH
00095D CFFD AF               4      XOR A
00095E CFFE C9              10      RET
                                
       CFFF                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00095F CFFF 3A87E4          13      LD  A,(_DVSW)
000962 D002 A7               4      AND A
000963 D003 C9              10      RET
                                
       D004                     _SYS1A:     ;(BDOS)DTAの設定
000964 D004 ED538AE4        20      LD  (_DTA),DE
000968 D008 AF               4      XOR A
000969 D009 C9              10      RET
                                
       D00A                     _SYS1B:     ;(BDOS)ディスク情報の獲得
00096A D00A 7B               4      LD  A,E
00096B D00B CDD6D5          17      CALL    GETDRV
00096E D00E CDDCE4          17      CALL    _GETDPB
000971 D011 D4E2E4          17      CALL    NC,_RDFATX
000974 D014 210000          10      LD  HL,0
000977 D017 D4EBD9          17      CALL    NC,DSKF
                                
00097A D01A ED5BECD9        20      LD  DE,(MAXCLP+1)   ;DPB_MAXCL-1
00097E D01E 1B               6      DEC DE      ;DE←クラスタの総数
00097F D01F FD2A7CE5        20      LD  IY,(_FATBF) ;IY←メモリ上のFATの先頭アドレス
000983 D023 9F               4      SBC A,A
000984 D024 D8              11      RET C
000985 D025 4F               4      LD  C,A     ;C=0
000986 D026 DD7E0F          19      LD  A,(IX+DPB_BPS)
000989 D029 E60F             7      AND 00FH
00098B D02B 47               4      LD  B,A
00098C D02C DD7E07          19      LD  A,(IX+DPB_SECPCL)
00098F D02F C9              10      RET
                                
       D030                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
000990 D030 AF               4      XOR A
000991 D031 67               4      LD  H,A
000992 D032 6F               4      LD  L,A
000993 D033 C9              10      RET
                                
       D034                     _SYS1F:     ;(BDOS)ディスク装置のパラメータの読み出し
000994 D034 2100E6          10      LD  HL,_DEVICE
000997 D037 7B               4      LD  A,E
000998 D038 C3DCE4          10      JP  _GETDPB
                                
       D03B                     _SYS23:     ;(BDOS)ファイルサイズの獲得
00099B D03B E5              11      PUSH    HL
00099C D03C 2A1EE5          16      LD  HL,(STABLE+2*00FH)  ;ファイルのオープン
00099F D03F CD0F00          17      CALL    JP_HL
0009A2 D042 381B            12      JR  C,_S23X1
                                
0009A4 D044 D5              11      PUSH    DE      ;EX DE,IY
0009A5 D045 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0009A7 D047 FD7E10          19      LD  A,(IY+16)   ;(FCB)ファイルのサイズ(バイト単位)
0009AA D04A FD6E11          19      LD  L,(IY+17)   ;
0009AD D04D FD6612          19      LD  H,(IY+18)   ;
0009B0 D050 C5              11      PUSH    BC      ;
0009B1 D051 FD4613          19      LD  B,(IY+19)   ;
0009B4 D054 CD4FDA          17      CALL    GET_CPM_R_SIZE
0009B7 D057 C1              10      POP BC
       D058                     _S24X1:
0009B8 D058 CD6FDA          17      CALL    SET_RR_AHL
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
0009BB D05B FDE3            23      EX  (SP),IY     ;
0009BD D05D D1              10      POP DE      ;
                                
0009BE D05E AF               4      XOR A
       D05F                     _S23X1:
0009BF D05F E1              10      POP HL
0009C0 D060 C9              10      RET
                                
       D061                     _SYS24:     ;(BDOS)ランダムレコードフィールドの設定
0009C1 D061 E5              11      PUSH    HL
0009C2 D062 D5              11      PUSH    DE      ;EX DE,IY
0009C3 D063 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0009C5 D065 CD81DA          17      CALL    GETSEQ
0009C8 D068 18EE            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       D06A                     _SYS29:     ;(BDOS)ファイル名の解析(_PPATH)
0009CA D06A C5              11      PUSH    BC
0009CB D06B E5              11      PUSH    HL
0009CC D06C CDDAD4          17      CALL    FILE
0009CF D06F E1              10      POP HL
0009D0 D070 C1              10      POP BC
       D071                     S29X1:
0009D1 D071 C5              11      PUSH    BC
0009D2 D072 D5              11      PUSH    DE
0009D3 D073 E5              11      PUSH    HL
0009D4 D074 EB               4      EX  DE,HL
0009D5 D075 AF               4      XOR A
0009D6 D076 3221E4          13      LD  (FDRV+13),A
0009D9 D079 2114E4          10      LD  HL,FDRV
0009DC D07C 011000          10      LD  BC,16
0009DF D07F EDB0                    LDIR
0009E1 D081 E1              10      POP HL
0009E2 D082 D1              10      POP DE
0009E3 D083 C1              10      POP BC
0009E4 D084 C9              10      RET
                                
       D085                     _SYS30:     ;(BDOS)論理セクタを用いた書き込み
0009E5 D085 C5              11      PUSH    BC
0009E6 D086 01D2E0          10      LD  BC,DWT24B
0009E9 D089 1804            12      JR  S2FX
       D08B                     _SYS2F:
0009EB D08B C5              11      PUSH    BC
0009EC D08C 01C2E0          10      LD  BC,DRD24B
       D08F                     S2FX:
0009EF D08F ED43A5D0        20      LD  (S2FPAT+1),BC
0009F3 D093 CDDFE4          17      CALL    _FFLUSH
                                
0009F6 D096 D5              11      PUSH    DE
0009F7 D097 E5              11      PUSH    HL
0009F8 D098 7D               4      LD  A,L     ;Drive
0009F9 D099 CDD9E4          17      CALL    _CHGDRV
0009FC D09C 3809            12      JR  C,S30X2
0009FE D09E 44               4      LD  B,H     ;Number of clusters
0009FF D09F 2A8AE4          16      LD  HL,(_DTA)
                                
000A02 D0A2 0E00             7      LD  C,0
000A04 D0A4 CDC2E0          17  S2FPAT: CALL    DRD24B
       D0A7                     S30X2:
000A07 D0A7 E1              10      POP HL
000A08 D0A8 D1              10      POP DE
000A09 D0A9 C1              10      POP BC
000A0A D0AA 9F               4      SBC A,A
000A0B D0AB C9              10      RET
                                
       D0AC                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
000A0C D0AC C5              11      PUSH    BC
000A0D D0AD D5              11      PUSH    DE
000A0E D0AE E5              11      PUSH    HL
000A0F D0AF CDCFD4          17      CALL    FILEC
000A12 D0B2 210000          10      LD  HL,0
000A15 D0B5 1114E4          10      LD  DE,FDRV
000A18 D0B8 2A4EE5          16      LD  HL,(STABLE+2*027H)  ;ランダムブロック読み込み
000A1B D0BB CD0F00          17      CALL    JP_HL
000A1E D0BE 18E7            12      JR  S30X2
[EOF:LDOS.ASM:SHIFT_JIS]
                                    INCLUDE "MSXIO.ASM"
                                
                                ;   LSX-Dodgers IO
                                ;   MSX
                                
       CE2A                     _SYS04  EQU _ERROR      ;(BDOS)外部出力
       CE2A                     _SYS05  EQU _ERROR      ;(BDOS)プリンタ出力
       CE2A                     _SYS1C  EQU _ERROR      ;(BDOS)ディスクの書き込み禁止化
       CE2A                     _SYS1E  EQU _ERROR      ;(BDOS)ファイル属性の設定
       CE2A                     _SYS20  EQU _ERROR      ;(BDOS)利用者番号の設定と読み出し
       CE2A                     _SYS2E  EQU _ERROR      ;(BDOS)ベリファイ・フラグの設定
                                
       0000                     INT EQU 0
       0000                     INTCTCE EQU 0
       0000                     INTCTC2 EQU 0
                                
       0000                     CTRL00  EQU 0
       0000                     CTRL03  EQU 0
       0000                     CTRL04  EQU 0
       0000                     CTRL05  EQU 0
       0000                     CTRL06  EQU 0
       0000                     CTRL07  EQU 0
       0000                     CTRL08  EQU 0
       0000                     CTRL09  EQU 0
       0000                     CTRL0A  EQU 0
       0000                     CTRL0B  EQU 0
       0000                     CTRL0C  EQU 0
       0000                     CTRL0D  EQU 0
       0000                     CTRL0E  EQU 0
       0000                     CTRL12  EQU 0
       0000                     CTRL1B  EQU 0
       0000                     CTRL1C  EQU 0
       0000                     CTRL1D  EQU 0
       0000                     CTRL1E  EQU 0
       0000                     CTRL1F  EQU 0
                                
       D0C0                     PRINT:
000A20 D0C0 7B               4      LD  A,E
000A21 D0C1 1803            12      JR  MSG_A
                                
       D0C3                     _SYS01:     ;(BDOS)コンソール入力
000A23 D0C3 CD09E4          17      CALL    _SYS07
       D0C6                     MSG_A:
000A26 D0C6 FE03             7      CP  3
000A28 D0C8 2814            12      JR  Z,MSG_BR
       D0CA                     MSGA1:
000A2A D0CA F5              11      PUSH    AF
000A2B D0CB C5              11      PUSH    BC
000A2C D0CC D5              11      PUSH    DE
000A2D D0CD E5              11      PUSH    HL
000A2E D0CE DDE5            15      PUSH    IX
000A30 D0D0 DD21A200        14      LD  IX,CHPUT
000A34 D0D4 CD92D2          17      CALL    CALSLT_R
000A37 D0D7 DDE1            14      POP IX
000A39 D0D9 E1              10      POP HL
000A3A D0DA D1              10      POP DE
000A3B D0DB C1              10      POP BC
       D0DC                     MSGA2:
000A3C D0DC F1              10      POP AF
000A3D D0DD C9              10      RET
       D0DE                     MSG_BR:
000A3E D0DE F5              11      PUSH    AF
000A3F D0DF 3ADDF3          13      LD  A,(CSRX)
000A42 D0E2 FE02             7      CP  2
000A44 D0E4 38F6            12      JR  C,MSGA2
000A46 D0E6 F1              10      POP AF
       D0E7                     MSG_CR:
000A47 D0E7 F5              11      PUSH    AF
000A48 D0E8 3E0D             7      LD  A,00DH
000A4A D0EA CDCAD0          17      CALL    MSGA1
000A4D D0ED 3E0A             7      LD  A,00AH
000A4F D0EF CDCAD0          17      CALL    MSGA1
000A52 D0F2 F1              10      POP AF
000A53 D0F3 C9              10      RET
                                
       D0F4                     _SYS02:     ;(BDOS)コンソール出力
000A54 D0F4 CD09D1          17      CALL    BREAK
000A57 D0F7 1805            12      JR  PRINTX
                                
       D0F9                     _SYS06:     ;(BDOS)コンソール直接入出力
000A59 D0F9 7B               4      LD  A,E
000A5A D0FA 3C               4      INC A
000A5B D0FB CACAE4          10      JP  Z,_INKEY
       D0FE                     PRINTX:
000A5E D0FE C3CDE4          10      JP  _PRINT
                                
       D101                     _SYS08:     ;(BDOS)エコーなしコンソール入力
000A61 D101 CD09E4          17      CALL    _SYS07
000A64 D104 FE03             7      CP  3
000A66 D106 CCF4E4          17      CALL    Z,_BREAK
       D109                     PAUSE:
       D109                     BREAK:
000A69 D109 F5              11      PUSH    AF
000A6A D10A C5              11      PUSH    BC
000A6B D10B D5              11      PUSH    DE
000A6C D10C E5              11      PUSH    HL
000A6D D10D DDE5            15      PUSH    IX
000A6F D10F DD21B700        14      LD  IX,BREAKX
000A73 D113 CD92D2          17      CALL    CALSLT_R
000A76 D116 DDE1            14      POP IX
000A78 D118 E1              10      POP HL
000A79 D119 D1              10      POP DE
000A7A D11A C1              10      POP BC
000A7B D11B DCF4E4          17      CALL    C,_BREAK
000A7E D11E F1              10      POP AF
000A7F D11F C9              10      RET
       D120                     FLGET:
000A80 D120 C5              11      PUSH    BC
000A81 D121 D5              11      PUSH    DE
000A82 D122 E5              11      PUSH    HL
000A83 D123 DDE5            15      PUSH    IX
000A85 D125 CDDFE4          17      CALL    _FFLUSH
                                
                                ;   CALL    GETVRAM
                                
                                ;   PUSH    HL
                                ;   LD  IX,RDVRM
                                ;   CALL    CALSLT_R
                                ;   POP HL
                                ;   LD  (SWCCHR),A
                                
                                ;   PUSH    HL
                                ;   LD  A,0FFH
                                ;   LD  IX,WRTVRM
                                ;   CALL    CALSLT_R
                                ;   POP HL
                                
                                ;   PUSH    HL
000A88 D128 DD219F00        14      LD  IX,CHGET
000A8C D12C CD92D2          17      CALL    CALSLT_R
                                ;   POP HL
                                
                                ;   PUSH    AF
                                ;   LD  A,0
                                ;SWCCHR EQU $-1
                                ;   LD  IX,WRTVRM
                                ;   CALL    CALSLT_R
                                ;   POP AF
                                
000A8F D12F DDE1            14      POP IX
000A91 D131 E1              10      POP HL
000A92 D132 D1              10      POP DE
000A93 D133 C1              10      POP BC
000A94 D134 FE03             7      CP  3
000A96 D136 C0              11      RET NZ
000A97 D137 C7              12      RST 0
                                
       D138                     INKEY:
000A98 D138 CD06E4          17      CALL    CPM_CONST
000A9B D13B C8              11      RET Z
000A9C D13C 18E2            12      JR  FLGET
                                
       D13E                     _SYS0A:     ;(BDOS)文字列入力
000A9E D13E C5              11      PUSH    BC
000A9F D13F E5              11      PUSH    HL
000AA0 D140 D5              11      PUSH    DE
000AA1 D141 CD6AD1          17      CALL    GETL
000AA4 D144 111FF4          10      LD  DE,KBUF
000AA7 D147 E1              10      POP HL
000AA8 D148 E5              11      PUSH    HL
000AA9 D149 0E00             7      LD  C,0
000AAB D14B 3004            12      JR  NC,SAX0
000AAD D14D 23               6      INC HL
000AAE D14E 23               6      INC HL
000AAF D14F 1808            12      JR  SAX4
       D151                     SAX0:
000AB1 D151 46               7      LD  B,(HL)
000AB2 D152 23               6      INC HL
       D153                     SAX1:
000AB3 D153 23               6      INC HL
000AB4 D154 1A               7      LD  A,(DE)
000AB5 D155 13               6      INC DE
000AB6 D156 B7               4      OR  A
000AB7 D157 2004            12      JR  NZ,SAX2
       D159                     SAX4:
000AB9 D159 360D            10      LD  (HL),00DH
000ABB D15B 1804            12      JR  SAX3
       D15D                     SAX2:
000ABD D15D 77               7      LD  (HL),A
000ABE D15E 0C               4      INC C
000ABF D15F 10F2            13      DJNZ    SAX1
       D161                     SAX3:
000AC1 D161 D1              10      POP DE
000AC2 D162 79               4      LD  A,C
000AC3 D163 13               6      INC DE
000AC4 D164 12               7      LD  (DE),A
000AC5 D165 1B               6      DEC DE
000AC6 D166 E1              10      POP HL
000AC7 D167 C1              10      POP BC
000AC8 D168 A7               4      AND A
000AC9 D169 C9              10      RET
       D16A                     GETL:
000ACA D16A DDE5            15      PUSH    IX
000ACC D16C FDE5            15      PUSH    IY
                                
000ACE D16E 2ADCF3          16      LD  HL,(CSRY)
000AD1 D171 22CAFB          16      LD  (FSTPOS),HL
       D174                     GETL1:
000AD4 D174 CD01D1          17      CALL    _SYS08
000AD7 D177 FE09             7      CP  9
000AD9 D179 2008            12      JR  NZ,GETL1V
000ADB D17B 211FF4          10      LD  HL,KBUF
000ADE D17E CD3BCE          17      CALL    MSX
000AE1 D181 18F1            12      JR  GETL1
       D183                     GETL1V:
000AE3 D183 5F               4      LD  E,A
000AE4 D184 FE08             7      CP  8
000AE6 D186 CC20D2          17      CALL    Z,CTRL02
000AE9 D189 FE20             7      CP  020H
000AEB D18B D44CD2          17      CALL    NC,INSERT
000AEE D18E CDCAD0          17      CALL    MSGA1
                                
000AF1 D191 7B               4      LD  A,E
000AF2 D192 FE0D             7      CP  00DH
000AF4 D194 20DE            12      JR  NZ,GETL1
                                
000AF6 D196 111FF4          10      LD  DE,KBUF
000AF9 D199 3AB0F3          13      LD  A,(LINLEN)
000AFC D19C 47               4      LD  B,A
000AFD D19D CD94CC          17      CALL    ZERO_MEMORY_DE
                                
000B00 D1A0 2ACAFB          16      LD  HL,(FSTPOS)
000B03 D1A3 3ADCF3          13      LD  A,(CSRY)
000B06 D1A6 6F               4      LD  L,A
000B07 D1A7 E5              11      PUSH    HL
000B08 D1A8 CD7DD2          17      CALL    LOC0
000B0B D1AB 4D               4      LD  C,L
000B0C D1AC 44               4      LD  B,H
000B0D D1AD E1              10      POP HL
000B0E D1AE 3AB0F3          13      LD  A,(LINLEN)
000B11 D1B1 94               4      SUB H
000B12 D1B2 3D               4      DEC A
000B13 D1B3 5F               4      LD  E,A
000B14 D1B4 211FF4          10      LD  HL,KBUF
       D1B7                     GETL2:
000B17 D1B7 CDD0E4          17      CALL    _SCRN
000B1A D1BA 03               6      INC BC
000B1B D1BB 77               7      LD  (HL),A
000B1C D1BC 23               6      INC HL
000B1D D1BD 1D               4      DEC E
000B1E D1BE 20F7            12      JR  NZ,GETL2
000B20 D1C0 CDE7D0          17      CALL    MSG_CR
                                
000B23 D1C3 FDE1            14      POP IY
000B25 D1C5 DDE1            14      POP IX
       D1C7                     GETL3:
000B27 D1C7 2B               6      DEC HL
000B28 D1C8 7E               7      LD  A,(HL)
000B29 D1C9 FE21             7      CP  021H
000B2B D1CB D0              11      RET NC
000B2C D1CC 3600            10      LD  (HL),0
000B2E D1CE 15               4      DEC D
000B2F D1CF 20F6            12      JR  NZ,GETL3
000B31 D1D1 C9              10      RET
                                
       D1D2                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       D1D2                     CONSTX:
000B32 D1D2 C5              11      PUSH    BC
000B33 D1D3 D5              11      PUSH    DE
000B34 D1D4 E5              11      PUSH    HL
000B35 D1D5 DDE5            15      PUSH    IX
000B37 D1D7 DD219C00        14      LD  IX,CHSNS
000B3B D1DB CD92D2          17      CALL    CALSLT_R
000B3E D1DE DDE1            14      POP IX
000B40 D1E0 E1              10      POP HL
000B41 D1E1 D1              10      POP DE
000B42 D1E2 C1              10      POP BC
000B43 D1E3 C9              10      RET
                                
       D1E4                     _SYS2A:     ;(BDOS)日付の獲得
000B44 D1E4 AF               4      XOR A
000B45 D1E5 57               4      LD  D,A
000B46 D1E6 5F               4      LD  E,A
000B47 D1E7 67               4      LD  H,A
000B48 D1E8 6F               4      LD  L,A
000B49 D1E9 C9              10      RET
                                
       D1EA                     _SYS2C:     ;(BDOS)時刻の獲得
000B4A D1EA AF               4      XOR A
000B4B D1EB 57               4      LD  D,A
000B4C D1EC 5F               4      LD  E,A
000B4D D1ED 67               4      LD  H,A
000B4E D1EE 6F               4      LD  L,A
000B4F D1EF C9              10      RET
                                
       D1F0                     POS:
000B50 D1F0 F5              11      PUSH    AF
000B51 D1F1 2ADCF3          16      LD  HL,(CSRY)
000B54 D1F4 7D               4      LD  A,L
000B55 D1F5 6C               4      LD  L,H
000B56 D1F6 67               4      LD  H,A
000B57 D1F7 2C               4      INC L
000B58 D1F8 24               4      INC H
000B59 D1F9 F1              10      POP AF
000B5A D1FA C9              10      RET
                                
       D1FB                     LOC:
000B5B D1FB F5              11      PUSH    AF
000B5C D1FC E5              11      PUSH    HL
000B5D D1FD 7D               4      LD  A,L
000B5E D1FE 6C               4      LD  L,H
000B5F D1FF 67               4      LD  H,A
000B60 D200 2D               4      DEC L
000B61 D201 25               4      DEC H
000B62 D202 DDE5            15      PUSH    IX
000B64 D204 DD21C600        14      LD  IX,POSIT
000B68 D208 CD92D2          17      CALL    CALSLT_R
000B6B D20B DDE1            14      POP IX
000B6D D20D E1              10      POP HL
000B6E D20E F1              10      POP AF
000B6F D20F C9              10      RET
       D210                     SCRN:
000B70 D210 E5              11      PUSH    HL
000B71 D211 DDE5            15      PUSH    IX
                                
000B73 D213 69               4      LD  L,C
000B74 D214 60               4      LD  H,B
000B75 D215 DD214A00        14      LD  IX,RDVRM
000B79 D219 CD92D2          17      CALL    CALSLT_R
                                
000B7C D21C DDE1            14      POP IX
000B7E D21E E1              10      POP HL
000B7F D21F C9              10      RET
                                
       D220                     CTRL02:
000B80 D220 F5              11      PUSH    AF
000B81 D221 D5              11      PUSH    DE
000B82 D222 2ADCF3          16      LD  HL,(CSRY)
000B85 D225 3AB0F3          13      LD  A,(LINLEN)
000B88 D228 4F               4      LD  C,A
000B89 D229 94               4      SUB H   ;CSRX
000B8A D22A C602             7      ADD A,2
000B8C D22C 47               4      LD  B,A ;カーソルより右の文字数
000B8D D22D 61               4      LD  H,C ;LINLEN
000B8E D22E C5              11      PUSH    BC
000B8F D22F CD7DD2          17      CALL    LOC0
000B92 D232 C1              10      POP BC
                                
000B93 D233 1620             7      LD  D,020H
       D235                     C8X1:
000B95 D235 DD214A00        14      LD  IX,RDVRM
000B99 D239 CD92D2          17      CALL    CALSLT_R
000B9C D23C 4F               4      LD  C,A
000B9D D23D 7A               4      LD  A,D
000B9E D23E DD214D00        14      LD  IX,WRTVRM
000BA2 D242 CD92D2          17      CALL    CALSLT_R
000BA5 D245 2B               6      DEC HL
000BA6 D246 51               4      LD  D,C
000BA7 D247 10EC            13      DJNZ    C8X1
000BA9 D249 D1              10      POP DE
000BAA D24A F1              10      POP AF
000BAB D24B C9              10      RET
                                
       D24C                     INSERT:
000BAC D24C F5              11      PUSH    AF
000BAD D24D D5              11      PUSH    DE
000BAE D24E 2ADCF3          16      LD  HL,(CSRY)
000BB1 D251 3AB0F3          13      LD  A,(LINLEN)
000BB4 D254 4F               4      LD  C,A
000BB5 D255 94               4      SUB H   ;CSRX
000BB6 D256 3C               4      INC A
000BB7 D257 47               4      LD  B,A ;カーソルより右の文字数
000BB8 D258 C5              11      PUSH    BC
000BB9 D259 CD7DD2          17      CALL    LOC0
000BBC D25C C1              10      POP BC
                                
000BBD D25D 1620             7      LD  D,020H
       D25F                     INS1:
000BBF D25F DD214A00        14      LD  IX,RDVRM
000BC3 D263 CD92D2          17      CALL    CALSLT_R
000BC6 D266 4F               4      LD  C,A
000BC7 D267 7A               4      LD  A,D
000BC8 D268 DD214D00        14      LD  IX,WRTVRM
000BCC D26C CD92D2          17      CALL    CALSLT_R
000BCF D26F 23               6      INC HL
000BD0 D270 51               4      LD  D,C
000BD1 D271 10EC            13      DJNZ    INS1
000BD3 D273 D1              10      POP DE
000BD4 D274 F1              10      POP AF
000BD5 D275 C9              10      RET
                                
       D276                     CONOUT1:
000BD6 D276 59               4      LD  E,C
000BD7 D277 C3CDE4          10      JP  _PRINT
                                
       D27A                     GETVRAM:
000BDA D27A 2ADCF3          16      LD  HL,(CSRY)
       D27D                     LOC0:
000BDD D27D 2D               4      DEC L
000BDE D27E 25               4      DEC H
000BDF D27F 4C               4      LD  C,H ;CSRX-1
000BE0 D280 5D               4      LD  E,L ;CSRY-1
       D281                     LOC1:
000BE1 D281 3AB0F3          13      LD  A,(LINLEN)
000BE4 D284 67               4      LD  H,A
000BE5 D285 1600             7      LD  D,0
000BE7 D287 6A               4      LD  L,D ;0
000BE8 D288 0608             7      LD  B,8
       D28A                     LOC2:
000BEA D28A 29              11      ADD HL,HL
000BEB D28B 3001            12      JR  NC,LOC3
000BED D28D 19              11      ADD HL,DE
       D28E                     LOC3:
000BEE D28E 10FA            13      DJNZ    LOC2
000BF0 D290 09              11      ADD HL,BC
000BF1 D291 C9              10      RET
                                
       D292                     CALSLT_R:
000BF2 D292 FDE5            15      PUSH    IY
000BF4 D294 FD2AC1FC        20      LD  IY,(EXPTBL) ;メインROMスロット
000BF8 D298 CDAED2          17      CALL    CALSLTR
000BFB D29B FDE1            14      POP IY
000BFD D29D C9              10      RET
                                
       D29E                     CALLF:
000BFE D29E 08               4      EX  AF,AF'
000BFF D29F E3              19      EX  (SP),HL
000C00 D2A0 7E               7      LD  A,(HL)
000C01 D2A1 FD67             9      LD  IYH,A
000C03 D2A3 23               6      INC HL
000C04 D2A4 7E               7      LD  A,(HL)
000C05 D2A5 DD6F             9      LD  IXL,A
000C07 D2A7 23               6      INC HL
000C08 D2A8 7E               7      LD  A,(HL)
000C09 D2A9 DD67             9      LD  IXH,A
000C0B D2AB 23               6      INC HL
000C0C D2AC E3              19      EX  (SP),HL
000C0D D2AD 08               4      EX  AF,AF'
       D2AE                     CALSLTR:
000C0E D2AE F3               4      DI
000C0F D2AF ED73E8D2        20      LD  (CSSP),SP
000C13 D2B3 F5              11      PUSH    AF
000C14 D2B4 3E1C             7      LD  A,_CALSLT
       D2B6                     SLTCALL:
000C16 D2B6 32D5D2          13      LD  (SLTCALLX),A
000C19 D2B9 3AE9D2          13      LD  A,(CSSP+1)
000C1C D2BC FE41             7      CP  040H+1
000C1E D2BE 3005            12      JR  NC,CALSLTR1
000C20 D2C0 F1              10      POP AF
000C21 D2C1 315EF5          10      LD  SP,BUF
000C24 D2C4 F5              11      PUSH    AF
       D2C5                     CALSLTR1:
000C25 D2C5 C5              11      PUSH    BC
000C26 D2C6 D5              11      PUSH    DE
000C27 D2C7 E5              11      PUSH    HL
000C28 D2C8 2600             7      LD  H,0
000C2A D2CA 3AC0FC          13      LD  A,(EXPTBL-1)    ;メインROMに切り替える
000C2D D2CD CDECD3          17      CALL    ENASLT
000C30 D2D0 E1              10      POP HL
000C31 D2D1 D1              10      POP DE
000C32 D2D2 C1              10      POP BC
000C33 D2D3 F1              10      POP AF
000C34 D2D4 CD1C00          17      CALL    _CALSLT
       D2D5                     SLTCALLX    EQU $-2
000C37 D2D7 F5              11      PUSH    AF
000C38 D2D8 C5              11      PUSH    BC
000C39 D2D9 D5              11      PUSH    DE
000C3A D2DA E5              11      PUSH    HL
000C3B D2DB 2600             7      LD  H,0
000C3D D2DD 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000C40 D2E0 CDECD3          17      CALL    ENASLT
000C43 D2E3 E1              10      POP HL
000C44 D2E4 D1              10      POP DE
000C45 D2E5 C1              10      POP BC
000C46 D2E6 F1              10      POP AF
000C47 D2E7 310000          10      LD  SP,0
       D2E8                     CSSP    EQU $-2
000C4A D2EA FB               4      EI
000C4B D2EB C9              10      RET
                                
       D2EC                     RDSLTR:
000C4C D2EC ED73E8D2        20      LD  (CSSP),SP
000C50 D2F0 F5              11      PUSH    AF
000C51 D2F1 3E0C             7      LD  A,_RDSLT
000C53 D2F3 18C1            12      JR  SLTCALL
                                
       D2F5                     WRSLTR:
000C55 D2F5 ED73E8D2        20      LD  (CSSP),SP
000C59 D2F9 F5              11      PUSH    AF
000C5A D2FA 3E14             7      LD  A,_WRSLT
000C5C D2FC 18B8            12      JR  SLTCALL
                                
       D2FE                     INT38H:
000C5E D2FE F5              11      PUSH    AF
000C5F D2FF E5              11      PUSH    HL          ;メインROMを呼び出すのでスタックが被っていないかチェック
000C60 D300 2A2AD3          16      LD  HL,(INTSP)
000C63 D303 7C               4      LD  A,H
000C64 D304 B5               4      OR  L
000C65 D305 202D            12      JR  NZ,INT38H2
000C67 D307 C5              11      PUSH    BC
000C68 D308 D5              11      PUSH    DE
000C69 D309 2100BF          10      LD  HL,010000H-04100H   ;Page1
000C6C D30C 39              11      ADD HL,SP
000C6D D30D ED732AD3        20      LD  (INTSP),SP
000C71 D311 3803            12      JR  C,INT38H1
000C73 D313 315EF5          10      LD  SP,BUF
       D316                     INT38H1:
000C76 D316 2600             7      LD  H,0
000C78 D318 3AC0FC          13      LD  A,(EXPTBL-1)    ;メインROMに切り替える
000C7B D31B CDECD3          17      CALL    ENASLT
000C7E D31E CD3800          17      CALL    00038H
000C81 D321 2600             7      LD  H,0
000C83 D323 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000C86 D326 CDECD3          17      CALL    ENASLT
000C89 D329 310000          10      LD  SP,0
       D32A                     INTSP   EQU $-2
000C8C D32C 210000          10      LD  HL,0
000C8F D32F 222AD3          16      LD  (INTSP),HL
000C92 D332 D1              10      POP DE
000C93 D333 C1              10      POP BC
       D334                     INT38H2:
000C94 D334 E1              10      POP HL
000C95 D335 F1              10      POP AF
000C96 D336 FB               4      EI
000C97 D337 C9              10      RET
                                
[EOF:MSXIO.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\slot.asm"
                                ;-------------------------------------
                                ; 000Ch RDSLT
                                ; Reads a value from an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to read
                                ; Output:  A  = value read
                                ;          Interrupts disabled.
                                ; Changes: F, C, DE
       D338                     rdslt:
000C98 D338 C5              11                  push    bc
000C99 D339 E5              11                  push    hl
000C9A D33A F5              11                  push    af
000C9B D33B 57               4                  ld      d,a             ; init D in case call is not made
000C9C D33C A7               4                  and     a               ; expanded slot?
000C9D D33D F3               4                  di
000C9E D33E FC57D4          17                  call    m,select_subslot
000CA1 D341 F1              10                  pop     af
000CA2 D342 E1              10                  pop     hl
                                
000CA3 D343 E5              11                  push    hl              ; HL = address
000CA4 D344 D5              11                  push    de              ; D = slot ID, E = saved SSL
000CA5 D345 E5              11                  push    hl              ; HL = address
000CA6 D346 F5              11                  push    af              ; A = slot ID
000CA7 D347 7C               4                  ld      a,h
000CA8 D348 07               4                  rlca
000CA9 D349 07               4                  rlca
000CAA D34A E603             7                  and     $03
000CAC D34C 6F               4                  ld      l,a             ; L = page number
                                
000CAD D34D 47               4                  ld      b,a
000CAE D34E 3EFC             7                  ld      a,$FC
000CB0 D350 CD71D3          17                  call    rdsft
000CB3 D353 5F               4                  ld      e,a             ; E = mask (shifted)
000CB4 D354 45               4                  ld      b,l             ; B = page number
000CB5 D355 F1              10                  pop     af              ; A = slot ID
000CB6 D356 E603             7                  and     $03
000CB8 D358 CD71D3          17                  call    rdsft
000CBB D35B 47               4                  ld      b,a             ; B = primary slot (shifted)
000CBC D35C DBA8            11                  in      a,(PSL_STAT)
000CBE D35E 57               4                  ld      d,a             ; D = primary slot select for restore
000CBF D35F A3               4                  and     e
000CC0 D360 B0               4                  or      b               ; A = primary slot select for read
000CC1 D361 E1              10                  pop     hl              ; HL = address
                                
000CC2 D362 CD80F3          17                  call    rdprim
000CC5 D365 7B               4                  ld      a,e
000CC6 D366 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000CC7 D367 F5              11                  push    af              ; A = value read
000CC8 D368 CB7A             8                  bit     7,d             ; expanded slot?
000CCA D36A C493D4          17                  call    nz,restore_subslot
000CCD D36D F1              10                  pop     af              ; A = value read
000CCE D36E E1              10                  pop     hl              ; HL = address
000CCF D36F C1              10                  pop     bc
000CD0 D370 C9              10                  ret
                                
       D371                     rdsft:
000CD1 D371 04               4                  inc     b
000CD2 D372 05               4                  dec     b
000CD3 D373 C8              11                  ret     z
       D374                     rdsft_lp:
000CD4 D374 07               4                  rlca
000CD5 D375 07               4                  rlca
000CD6 D376 10FC            13                  djnz    rdsft_lp
000CD8 D378 C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0014 WRSLT
                                ; Writes a value to an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to write
                                ;          E  = value to write
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, D
       D379                     wrslt:
000CD9 D379 E5              11                  push    hl
000CDA D37A 57               4                  ld      d,a             ; D = slot ID
000CDB D37B D5              11                  push    de
000CDC D37C A7               4                  and     a               ; expanded slot?
000CDD D37D F3               4                  di
000CDE D37E FC57D4          17                  call    m,select_subslot
000CE1 D381 C1              10                  pop     bc              ; B = slot ID, C = data
000CE2 D382 E1              10                  pop     hl
000CE3 D383 D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
000CE4 D384 E5              11                  push    hl              ; HL = address
000CE5 D385 7C               4                  ld      a,h
000CE6 D386 07               4                  rlca
000CE7 D387 07               4                  rlca
000CE8 D388 E603             7                  and     $03
000CEA D38A 6F               4                  ld      l,a             ; L = page number
                                
000CEB D38B 47               4                  ld      b,a             ; B = page number
000CEC D38C 3EFC             7                  ld      a,$FC
000CEE D38E CD71D3          17                  call    rdsft
000CF1 D391 5F               4                  ld      e,a             ; E = mask (shifted)
                                
000CF2 D392 45               4                  ld      b,l             ; B = page number
000CF3 D393 7A               4                  ld      a,d
000CF4 D394 E603             7                  and     $03             ; A = 000000PP
000CF6 D396 CD71D3          17                  call    rdsft
000CF9 D399 47               4                  ld      b,a             ; B = primary slot (shifted)
000CFA D39A DBA8            11                  in      a,(PSL_STAT)
000CFC D39C 57               4                  ld      d,a             ; D = primary slot select for restore
000CFD D39D A3               4                  and     e
000CFE D39E B0               4                  or      b               ; A = primary slot select for write
000CFF D39F E1              10                  pop     hl              ; HL = address
000D00 D3A0 59               4                  ld      e,c             ; E = data
000D01 D3A1 CD85F3          17                  call    wrprim
                                
000D04 D3A4 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000D05 D3A5 E5              11                  push    hl              ; HL = address
000D06 D3A6 CB7A             8                  bit     7,d             ; expanded slot?
000D08 D3A8 C493D4          17                  call    nz,restore_subslot
000D0B D3AB E1              10                  pop     hl
000D0C D3AC C9              10                  ret
                                
                                ;-------------------------------------
                                ; $001C CALSLT
                                ; Function : Executes inter-slot call.
                                ; Input    : IY - High byte with input for A in RDSLT
                                ;            IX - The address that will be called
                                ; Remark   : Variables can never be given in alternative registers
                                ;            of the Z-80 or IX and IY
                                
       D3AD                     calslt:
000D0D D3AD 08               4                  ex      af,af'
000D0E D3AE D9               4                  exx
                                
                                ; Select secondary slot of target:
                                ; Note: This approach fails if target is in page 0 of slot 0.1, 0.2 or 0.3.
                                ; TODO: Put slot 0 specific routine in page 3, on the stack if necessary.
000D0F D3AF F3               4                  di
000D10 D3B0 FDE5            15                  push    iy
000D12 D3B2 F1              10                  pop     af              ; A = slot ID: E000SSPP
000D13 D3B3 DDE5            15                  push    ix
000D15 D3B5 E1              10                  pop     hl              ; HL = address to call
000D16 D3B6 57               4                  ld      d,a             ; init D in case call is not made
000D17 D3B7 A7               4                  and     a               ; expanded slot?
000D18 D3B8 FC57D4          17                  call    m,select_subslot
000D1B D3BB D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
                                ; Calculate primary slot select value:
000D1C D3BC 7A               4                  ld      a,d             ; A = slot ID: E000SSPP
000D1D D3BD E603             7                  and     $03
000D1F D3BF 47               4                  ld      b,a             ; B = primary slot
000D20 D3C0 0EFC             7                  ld      c,$FC           ; C = mask
                                                ; Calculate page that contains call address.
000D22 D3C2 DDE5            15                  push    ix
000D24 D3C4 F1              10                  pop     af              ; A = high byte call address
000D25 D3C5 07               4                  rlca
000D26 D3C6 07               4                  rlca
000D27 D3C7 E603             7                  and     $03             ; A = page
                                                ; Shift B and C page*2 positions to the left.
000D29 D3C9 87               4                  add     a,a
000D2A D3CA 2807            12                  jr      z,calslt_sh2
       D3CC                     calslt_sh1:
000D2C D3CC CB00             4                  rlc     b
000D2E D3CE CB01             4                  rlc     c
000D30 D3D0 3D               4                  dec     a
000D31 D3D1 20F9            12                  jr      nz,calslt_sh1
       D3D3                     calslt_sh2:
                                
                                ; Select primary slot of target and perform call:
000D33 D3D3 21E0D3          10                  ld      hl,calslt_restore
000D36 D3D6 E5              11                  push    hl
000D37 D3D7 DBA8            11                  in      a,(PSL_STAT)
000D39 D3D9 F5              11                  push    af
000D3A D3DA A1               4                  and     c               ; C = mask (shifted)
000D3B D3DB B0               4                  or      b               ; B = primary slot (shifted)
000D3C D3DC D9               4                  exx
000D3D D3DD C38CF3          10                  jp      clprim
                                
       D3E0                     calslt_restore:
000D40 D3E0 08               4                  ex      af,af'
000D41 D3E1 D9               4                  exx
                                
                                ; Restore secondary slot:
000D42 D3E2 F3               4                  di
000D43 D3E3 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000D44 D3E4 CB7A             8                  bit     7,d             ; expanded slot?
000D46 D3E6 C493D4          17                  call    nz,restore_subslot
                                
                                ; Done:
000D49 D3E9 08               4                  ex      af,af'
000D4A D3EA D9               4                  exx
000D4B D3EB C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0024 ENASLT
                                ; Selects a slot in the page specified by an address.
                                ; Input:   A  = slot ID: ExxxSSPP
                                ;               E  = expanded flag
                                ;               SS = secondary slot number (only if expanded)
                                ;               PP = primary slot number
                                ;          HL = address inside the page to change
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, DE
                                
       D3EC                     enaslt:
                                
                                ; A=(A >> 6)&0x3
000D4C D3EC F3               4                  di
000D4D D3ED E5              11                  push    hl
                                
000D4E D3EE 6F               4                  ld      l,a             ; L = ExxxSSPP
                                
000D4F D3EF E603             7                  and     $03             ; A = 000000PP
000D51 D3F1 47               4                  ld      b,a
000D52 D3F2 3EAB             7                  ld      a,$AB
       D3F4                     psl_dup_lp:
000D54 D3F4 C655             7                  add     a,$55
000D56 D3F6 05               4                  dec     b
000D57 D3F7 F2F4D3          10                  jp      p,psl_dup_lp
                                
000D5A D3FA 57               4                  ld      d,a             ; D = PP PP PP PP
                                
000D5B D3FB 7C               4                  ld      a,h
000D5C D3FC 07               4                  rlca
000D5D D3FD 07               4                  rlca
000D5E D3FE E603             7                  and     $03
                                
000D60 D400 67               4                  ld      h,a             ; H = page number (0-3)
                                
000D61 D401 47               4                  ld      b,a
                                
000D62 D402 3EC0             7                  ld      a,$C0
       D404                     page_msk_lp:
000D64 D404 07               4                  rlca
000D65 D405 07               4                  rlca
000D66 D406 05               4                  dec     b
000D67 D407 F204D4          10                  jp      p,page_msk_lp
                                
000D6A D40A 5F               4                  ld      e,a             ; E = page mask (00 00 00 11 << page)
000D6B D40B 2F               4                  cpl
000D6C D40C 4F               4                  ld      c,a             ; C = page mask complement
                                
000D6D D40D 7A               4                  ld      a,d
000D6E D40E A3               4                  and     e
000D6F D40F 47               4                  ld      b,a             ; B = 00 00 00 PP << page
                                
000D70 D410 7D               4                  ld      a,l
000D71 D411 A7               4                  and     a
000D72 D412 F24FD4          10                  jp      p,chg_psl
                                
                                ;SSL-Change
000D75 D415 0F               4                  rrca
000D76 D416 0F               4                  rrca
000D77 D417 E603             7                  and     $03             ; A = 000000SS
                                
000D79 D419 E5              11                  push    hl
000D7A D41A C5              11                  push    bc
                                
000D7B D41B 47               4                  ld      b,a
000D7C D41C 3EAB             7                  ld      a,$AB
       D41E                     ssl_dup_lp:
000D7E D41E C655             7                  add     a,$55
000D80 D420 05               4                  dec     b
000D81 D421 F21ED4          10                  jp      p,ssl_dup_lp
                                
000D84 D424 A3               4                  and     e
000D85 D425 47               4                  ld      b,a             ; B = 00 00 00 SS << page
                                
000D86 D426 7A               4                  ld      a,d
000D87 D427 E6C0             7                  and     $C0
000D89 D429 67               4                  ld      h,a
                                
000D8A D42A DBA8            11                  in      a,(PSL_STAT)
000D8C D42C 6F               4                  ld      l,a
000D8D D42D E6C0             7                  and     $C0
000D8F D42F B4               4                  or      h
000D90 D430 D3A8            11                  out     (PSL_STAT),a
                                
000D92 D432 3AFFFF          13                  ld      a,(SSL_REGS)
000D95 D435 2F               4                  cpl
000D96 D436 A1               4                  and     c               ; preserve other pages
000D97 D437 B0               4                  or      b
000D98 D438 4F               4                  ld      c,a
000D99 D439 32FFFF          13                  ld      (SSL_REGS),a
                                
000D9C D43C 7D               4                  ld      a,l
000D9D D43D D3A8            11                  out     (PSL_STAT),a
                                
                                                ; (SLTTBL + PP) <- RegC
                                
000D9F D43F 21C5FC          10                  ld      hl,SLTTBL
                                
000DA2 D442 7A               4                  ld      a,d
000DA3 D443 E603             7                  and     $03             ; A = 000000PP
                                
000DA5 D445 85               4                  add     a,l
000DA6 D446 6F               4                  ld      l,a             ; L = L + A
                                
000DA7 D447 7C               4                  ld      a,h
000DA8 D448 CE00             7                  adc     a,0
000DAA D44A 67               4                  ld      h,a             ; H = H + Cy
                                
000DAB D44B 79               4                  ld      a,c
000DAC D44C 77               7                  ld      (hl),a
                                
000DAD D44D C1              10                  pop     bc
000DAE D44E E1              10                  pop     hl
                                
       D44F                     chg_psl:
000DAF D44F DBA8            11                  in      a,(PSL_STAT)
000DB1 D451 A1               4                  and     c
000DB2 D452 B0               4                  or      b
000DB3 D453 D3A8            11                  out     (PSL_STAT),a
                                
000DB5 D455 E1              10                  pop     hl
000DB6 D456 C9              10                  ret
                                
                                ;--------------------------------
                                ; Select subslot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address which specifies page to select
                                ;               (actually, only the highest 2 bits of H are relevant)
                                ; Output:  D  = slot ID (same as input)
                                ;          E  = original value of secondary slot select register
                                ;          SLTTBL[slot] = new value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D457                     select_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000DB7 D457 57               4                  ld      d,a             ; D = E000SSPP
000DB8 D458 0F               4                  rrca
000DB9 D459 0F               4                  rrca
000DBA D45A 5F               4                  ld      e,a             ; E = PPE000SS
000DBB D45B E6C0             7                  and     $C0
000DBD D45D 6F               4                  ld      l,a             ; L = PP000000
000DBE D45E DBA8            11                  in      a,(PSL_STAT)
000DC0 D460 4F               4                  ld      c,a             ; C = saved PSL
000DC1 D461 E63F             7                  and     $3F
000DC3 D463 B5               4                  or      l
000DC4 D464 D3A8            11                  out     (PSL_STAT),a
                                                ; Shift mask and subslot according to page.
000DC6 D466 7B               4                  ld      a,e             ; A = PPE000SS
000DC7 D467 E603             7                  and     $03
000DC9 D469 6F               4                  ld      l,a             ; L = subslot
000DCA D46A 7C               4                  ld      a,h             ; A = high byte of address
000DCB D46B 2603             7                  ld      h,$03           ; H = mask
000DCD D46D 1802            12                  jr      select_subslot_next
       D46F                     select_subslot_lp:
000DCF D46F 29              11                  add     hl,hl           ; Shift 2 bits to the left.
000DD0 D470 29              11                  add     hl,hl
       D471                     select_subslot_next:
000DD1 D471 D640             7                  sub     $40             ; Subtract 1 page.
000DD3 D473 30FA            12                  jr      nc,select_subslot_lp
000DD5 D475 7C               4                  ld      a,h
000DD6 D476 2F               4                  cpl
000DD7 D477 67               4                  ld      h,a
                                                ; Select secondary slot of target.
000DD8 D478 3AFFFF          13                  ld      a,(SSL_REGS)
000DDB D47B 2F               4                  cpl
000DDC D47C 5F               4                  ld      e,a             ; E = saved SSL
000DDD D47D A4               4                  and     h               ; H = mask (shifted)
000DDE D47E B5               4                  or      l               ; L = subslot (shifted)
000DDF D47F 32FFFF          13                  ld      (SSL_REGS),a
000DE2 D482 6F               4                  ld      l,a             ; L = value written to SSL_REGS
                                                ; Restore original primary slot in page 3.
000DE3 D483 79               4                  ld      a,c
000DE4 D484 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000DE6 D486 7A               4                  ld      a,d
000DE7 D487 E603             7                  and     $03             ; A = 000000SS
000DE9 D489 4F               4                  ld      c,a
000DEA D48A 0600             7                  ld      b,0
000DEC D48C 7D               4                  ld      a,l             ; A = value written to SSL_REGS
000DED D48D 21C5FC          10                  ld      hl,SLTTBL
000DF0 D490 09              11                  add     hl,bc
000DF1 D491 77               7                  ld      (hl),a
000DF2 D492 C9              10                  ret
                                
                                ;--------------------------------
                                ; Restore subslot, companion routine to select_subslot.
                                ; Input:   D  = slot ID: E000SSPP
                                ;          E  = original value of secondary slot select register
                                ; Output:  SLTTBL[slot] = original value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D493                     restore_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000DF3 D493 7A               4                  ld      a,d
000DF4 D494 0F               4                  rrca
000DF5 D495 0F               4                  rrca
000DF6 D496 E6C0             7                  and     $C0
000DF8 D498 47               4                  ld      b,a             ; B = PP000000
000DF9 D499 DBA8            11                  in      a,(PSL_STAT)
000DFB D49B 4F               4                  ld      c,a             ; C = saved PSL
000DFC D49C E63F             7                  and     $3F
000DFE D49E B0               4                  or      b
000DFF D49F D3A8            11                  out     (PSL_STAT),a
                                                ; Restore secondary slot.
000E01 D4A1 7B               4                  ld      a,e
000E02 D4A2 32FFFF          13                  ld      (SSL_REGS),a
                                                ; Restore original primary slot in page 3.
000E05 D4A5 79               4                  ld      a,c
000E06 D4A6 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000E08 D4A8 7A               4                  ld      a,d
000E09 D4A9 E603             7                  and     $03             ; A = 000000SS
000E0B D4AB 4F               4                  ld      c,a
000E0C D4AC 0600             7                  ld      b,0
000E0E D4AE 21C5FC          10                  ld      hl,SLTTBL
000E11 D4B1 09              11                  add     hl,bc
000E12 D4B2 73               7                  ld      (hl),e
000E13 D4B3 C9              10                  ret
                                
                                ;--------------------------------
                                
       D4B4                     m_rdprim:
000E14 D4B4 D3A8            11                  out     (PSL_STAT),a
000E16 D4B6 5E               7                  ld      e,(hl)
000E17 D4B7 1803            12                  jr      m_wrprm1
       D4B9                     m_wrprim:
000E19 D4B9 D3A8            11                  out     (PSL_STAT),a
000E1B D4BB 73               7                  ld      (hl),e
       D4BC                     m_wrprm1:
000E1C D4BC 7A               4                  ld      a,d
000E1D D4BD D3A8            11                  out     (PSL_STAT),a
000E1F D4BF C9              10                  ret
       D4C0                     m_clprim:
000E20 D4C0 D3A8            11                  out     (PSL_STAT),a
000E22 D4C2 08               4                  ex      af,af'
000E23 D4C3 CD98F3          17                  call    cl_jp
000E26 D4C6 08               4                  ex      af,af'
000E27 D4C7 F1              10                  pop     af
000E28 D4C8 D3A8            11                  out     (PSL_STAT),a
000E2A D4CA 08               4                  ex      af,af'
000E2B D4CB C9              10                  ret
       D4CC                     m_cl_jp:
000E2C D4CC DDE9             8                  jp      (ix)
       D4CE                     m_prim_end:
000E2E D4CE 00               4                  nop
                                
       F380                     rdprim:         equ     $F380
       F385                     wrprim:         equ     rdprim+(m_wrprim-m_rdprim)
       F38C                     clprim:         equ     rdprim+(m_clprim-m_rdprim)
       F398                     cl_jp:          equ     rdprim+(m_cl_jp-m_rdprim)
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:slot.asm:UTF_8]
                                    INCLUDE "LDFILE.ASM"
                                
                                ;   LSX-Dodgers FILE
                                
       D4CF                     FILEC:
000E2F D4CF CDDAD4          17      CALL    FILE
       D4D2                     FILEC2:
000E32 D4D2 3A15E4          13      LD  A,(FDRV+1)
000E35 D4D5 FE20             7      CP  020H
000E37 D4D7 C8              11      RET Z
000E38 D4D8 1839            12      JR  SETDIR1
                                
       D4DA                     FILE:
000E3A D4DA AF               4      XOR A
000E3B D4DB 3214E4          13      LD  (FDRV),A
000E3E D4DE 67               4      LD  H,A
000E3F D4DF 6F               4      LD  L,A
000E40 D4E0 2222E4          16      LD  (FDRV+14),HL
000E43 D4E3 CDB1D5          17      CALL    SPCUT
000E46 D4E6 CD96D5          17      CALL    CCHK3
000E49 D4E9 2812            12      JR  Z,DEVI1
000E4B D4EB 13               6      INC DE
000E4C D4EC 1A               7      LD  A,(DE)
000E4D D4ED 1B               6      DEC DE
000E4E D4EE FE3A             7      CP  ':'
000E50 D4F0 200B            12      JR  NZ,DEVI1
000E52 D4F2 1A               7      LD  A,(DE)      ;DRIVE
000E53 D4F3 CDE6D7          17      CALL    CAP
000E56 D4F6 D640             7      SUB '@'
000E58 D4F8 13               6      INC DE
000E59 D4F9 13               6      INC DE
000E5A D4FA 3214E4          13      LD  (FDRV),A
       D4FD                     DEVI1:
000E5D D4FD 1A               7      LD  A,(DE)
000E5E D4FE D65C             7      SUB 05CH        ;\
000E60 D500 2009            12      JR  NZ,NOROOT
000E62 D502 6F               4      LD  L,A     ;A=0でH=0のはずなのでHL=0
000E63 D503 222EE4          16      LD  (FDRV+26),HL
000E66 D506 2C               4      INC L
000E67 D507 2222E4          16      LD  (FDRV+14),HL
000E6A D50A 13               6      INC DE
       D50B                     NOROOT:
                                
       D50B                     SETDIR:
000E6B D50B CD37D5          17      CALL    FILED
000E6E D50E 1A               7      LD  A,(DE)
000E6F D50F FE5C             7      CP  05CH        ;\
000E71 D511 C0              11      RET NZ
000E72 D512 13               6      INC DE
       D513                     SETDIR1:
000E73 D513 3E10             7      LD  A,010H      ;Directory
000E75 D515 3221E4          13      LD  (FDRV+13),A
000E78 D518 D5              11      PUSH    DE
000E79 D519 1114E4          10      LD  DE,FDRV
000E7C D51C 2A1EE5          16      LD  HL,(STABLE+2*00FH)
000E7F D51F CD0F00          17      CALL    JP_HL
000E82 D522 D1              10      POP DE
000E83 D523 B7               4      OR  A
000E84 D524 C0              11      RET NZ
                                
000E85 D525 3A21E4          13      LD  A,(FDRV+13)
000E88 D528 CB67             8      BIT 4,A
000E8A D52A C8              11      RET Z
                                
000E8B D52B CD7ED5          17      CALL    FILEI
000E8E D52E 2A2EE4          16      LD  HL,(FDRV+26)
000E91 D531 23               6      INC HL
000E92 D532 2222E4          16      LD  (FDRV+14),HL
000E95 D535 18D4            12      JR  SETDIR
                                
       D537                     FILED:
000E97 D537 CD7ED5          17      CALL    FILEI
000E9A D53A 2115E4          10      LD  HL,FNAME
                                
000E9D D53D 0608             7      LD  B,8
       D53F                     FILE2:
000E9F D53F CD8BD5          17      CALL    CCHKF
000EA2 D542 C8              11      RET Z
000EA3 D543 FE2A             7      CP  '*'
000EA5 D545 282E            12      JR  Z,FILE9
000EA7 D547 FE2E             7      CP  '.'
000EA9 D549 280C            12      JR  Z,FILE4
000EAB D54B 77               7      LD  (HL),A
000EAC D54C 23               6      INC HL
000EAD D54D 10F0            13      DJNZ    FILE2
                                
       D54F                     FILE3:
000EAF D54F CD8BD5          17      CALL    CCHKF
000EB2 D552 C8              11      RET Z
000EB3 D553 FE2E             7      CP  '.'
000EB5 D555 20F8            12      JR  NZ,FILE3
                                
       D557                     FILE4:
000EB7 D557 211DE4          10      LD  HL,FNAME+8
000EBA D55A 0603             7      LD  B,3
                                
       D55C                     FILE4L:
000EBC D55C CD8BD5          17      CALL    CCHKF
000EBF D55F C8              11      RET Z
000EC0 D560 FE2E             7      CP  '.'
000EC2 D562 2008            12      JR  NZ,FILE12
000EC4 D564 3215E4          13      LD  (FNAME),A   ;Parent directory(..)
000EC7 D567 3216E4          13      LD  (FNAME+1),A
000ECA D56A 3E20             7      LD  A,020H
       D56C                     FILE12:
000ECC D56C FE2A             7      CP  '*'
000ECE D56E 280A            12      JR  Z,FILE10
000ED0 D570 77               7      LD  (HL),A
000ED1 D571 23               6      INC HL
000ED2 D572 10E8            13      DJNZ    FILE4L
000ED4 D574 C9              10      RET
                                
       D575                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000ED5 D575 CD7AD5          17      CALL    FILE10
000ED8 D578 18D5            12      JR  FILE3
                                
       D57A                     FILE10:
000EDA D57A 3E3F             7      LD  A,'?'
000EDC D57C 1808            12      JR  FILL_MEMORY
       D57E                     FILEI:              ;名前＋拡張子をスペースで初期化
000EDE D57E 3E20             7      LD  A,020H
000EE0 D580 01000B          10      LD  BC,11*256   ;C=0にしておく
000EE3 D583 2115E4          10      LD  HL,FNAME
       D586                     FILL_MEMORY:            ;HLからBバイトAで埋める
000EE6 D586 77               7      LD  (HL),A
000EE7 D587 23               6      INC HL
000EE8 D588 10FC            13      DJNZ    FILL_MEMORY
000EEA D58A C9              10      RET
                                
       D58B                     CCHKF:
000EEB D58B 1A               7      LD  A,(DE)
000EEC D58C CD93D5          17      CALL    CCHK2
000EEF D58F C8              11      RET Z
000EF0 D590 C3FED8          10      JP  FKAN
                                
       D593                     CCHK2:
000EF3 D593 0C               4      INC C
000EF4 D594 0D               4      DEC C
000EF5 D595 C0              11      RET NZ
       D596                     CCHK3:              ;ZF=1 で使えない文字
000EF6 D596 FE2B             7      CP  '+'
000EF8 D598 C8              11      RET Z
000EF9 D599 FE2C             7      CP  ','
000EFB D59B C8              11      RET Z
000EFC D59C FE2F             7      CP  '/'
000EFE D59E C8              11      RET Z
000EFF D59F FE3A             7      CP  ':'
000F01 D5A1 C8              11      RET Z
000F02 D5A2 FE3B             7      CP  ';'
000F04 D5A4 C8              11      RET Z
000F05 D5A5 FE3D             7      CP  '='
000F07 D5A7 C8              11      RET Z
000F08 D5A8 FE5C             7      CP  05CH    ;\
000F0A D5AA C8              11      RET Z
000F0B D5AB FE20             7      CP  020H
000F0D D5AD D0              11      RET NC
000F0E D5AE BF               4      CP  A       ;Z=1
000F0F D5AF C9              10      RET
                                
       D5B0                     SS1:
000F10 D5B0 13               6      INC DE
       D5B1                     SPCUT:              ;スペースをカット
000F11 D5B1 1A               7      LD  A,(DE)
000F12 D5B2 FE20             7      CP  020H
000F14 D5B4 28FA            12      JR  Z,SS1
000F16 D5B6 C9              10      RET
                                
       D5B7                     SETDRVF:
000F17 D5B7 1114E4          10      LD  DE,FDRV
       D5BA                     SETDRV0:
000F1A D5BA CDC3D5          17      CALL    SETDRV
000F1D D5BD FDE1            14      POP IY
000F1F D5BF C1              10      POP BC
000F20 D5C0 D1              10      POP DE
000F21 D5C1 E1              10      POP HL
000F22 D5C2 C9              10      RET
                                
       D5C3                     SETDRV:
000F23 D5C3 E3              19      EX  (SP),HL     ;HL=RETRN ADDRESS
000F24 D5C4 D5              11      PUSH    DE      ;PUSH HL/DE/BC/IY
000F25 D5C5 C5              11      PUSH    BC
000F26 D5C6 1A               7      LD  A,(DE)
000F27 D5C7 D5              11      PUSH    DE
000F28 D5C8 FDE3            23      EX  (SP),IY
                                
000F2A D5CA CDD6D5          17      CALL    GETDRV
000F2D D5CD 3C               4      INC A
000F2E D5CE FD7700          19      LD  (IY+0),A    ;(FCB)ドライブ番号
000F31 D5D1 3D               4      DEC A
000F32 D5D2 CDD9E4          17      CALL    _CHGDRV
                                
000F35 D5D5 E9               4      JP  (HL)
                                
       D5D6                     GETDRV:
000F36 D5D6 E67F             7      AND 07FH
000F38 D5D8 D601             7      SUB 001H
000F3A D5DA 3003            12      JR  NC,GETDRV1
000F3C D5DC 3A87E4          13      LD  A,(_DVSW)   ;Current Drive
       D5DF                     GETDRV1:
000F3F D5DF 3288E4          13      LD  (_DRV),A
000F42 D5E2 C9              10      RET
                                
       D5E3                     SOPENX:
000F43 D5E3 1139E4          10      LD  DE,SFILE
000F46 D5E6 1A               7      LD  A,(DE)
000F47 D5E7 FDBE00           7      CP  (IY+0)      ;(FCB)ドライブ番号
000F4A D5EA 2024            12      JR  NZ,SOPEN
000F4C D5EC 13               6      INC DE
000F4D D5ED FDE5            15      PUSH    IY
000F4F D5EF E1              10      POP HL
000F50 D5F0 23               6      INC HL
000F51 D5F1 CD7ED7          17      CALL    CPFILE
000F54 D5F4 201A            12      JR  NZ,SOPEN
                                
000F56 D5F6 2AF4E5          16      LD  HL,(SCDIR)
000F59 D5F9 FD750E          19      LD  (IY+14),L   ;(FCB)アクセスするディレクトリのクラスタ番号+1
000F5C D5FC FD740F          19      LD  (IY+15),H
                                
000F5F D5FF 2AF8E5          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
000F62 D602 229FE4          16      LD  (_FILEN),HL
                                
000F65 D605 ED5BF6E5        20      LD  DE,(SFBPS)
000F69 D609 2139E4          10      LD  HL,SFILE
000F6C D60C 36FF            10      LD  (HL),0FFH
000F6E D60E 23               6      INC HL
000F6F D60F C9              10      RET
       D610                     SOPEN:
000F70 D610 2126D7          10      LD  HL,FILESE
       D613                     SOPENC:
000F73 D613 224CD6          16      LD  (OPENPAT+1),HL
                                
000F76 D616 CDE2E4          17      CALL    _RDFATX     ;Detect Media
000F79 D619 3856            12      JR  C,RDDERR
                                
000F7B D61B AF               4      XOR A
000F7C D61C 329FE4          13      LD  (_FILEN),A
000F7F D61F CD2BD8          17      CALL    LDDIRX1     ;A=0で呼び出す
000F82 D622 2818            12      JR  Z,SDIRX1
                                
000F84 D624 CD17D7          17      CALL    READ_DIR    ;Sub Directory
000F87 D627 3808            12      JR  C,SDIRX0
000F89 D629 2A7EE5          16      LD  HL,(_DTBUF)
000F8C D62C 7E               7      LD  A,(HL)
000F8D D62D FE2E             7      CP  '.'
000F8F D62F 280F            12      JR  Z,SOPEN1
       D631                     SDIRX0:
000F91 D631 AF               4      XOR A
000F92 D632 32A0E4          13      LD  (_DIRF),A
000F95 D635 FD360E01        19      LD  (IY+14),1   ;(FCB)レコードサイズ
000F99 D639 FD770F          19      LD  (IY+15),A
       D63C                     SDIRX1:
000F9C D63C ED5BFCE5        20      LD  DE,(_DIRPS) ;Root Directory
       D640                     SOPEN1:
000FA0 D640 0E20             7  SDECPAT:LD  C,32        ;自己書き換え 1セクタ辺りのディレクトリエントリ数  1024=32 / 512=16 / 256=8
       D642                     SOPEN1X:
000FA2 D642 CD17D7          17      CALL    READ_DIR    ;FILE SEARCH
000FA5 D645 382A            12      JR  C,RDDERR
000FA7 D647 2A7EE5          16      LD  HL,(_DTBUF)
       D64A                     SOPEN2:
000FAA D64A D5              11      PUSH    DE
000FAB D64B CD26D7          17  OPENPAT:CALL    FILESE      ;(self-modifying code)
000FAE D64E D1              10      POP DE
000FAF D64F 386E            12      JR  C,SOPENE
000FB1 D651 281B            12      JR  Z,SCF_FF_RET
       D653                     SOPEN3:
000FB3 D653 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
000FB6 D656 B7               4      OR  A
000FB7 D657 200C            12      JR  NZ,SOPEN5
000FB9 D659 13               6      INC DE      ;ルートディレクトリ
000FBA D65A E5              11      PUSH    HL
000FBB D65B 210C00          10  MD_PAT: LD  HL,12       ;(self-modifying code)MAXDIR
000FBE D65E ED52            15      SBC HL,DE       ;CF=0 なので SUB HL,DE
000FC0 D660 E1              10      POP HL
000FC1 D661 20DD            12      JR  NZ,SOPEN1
000FC3 D663 1807            12      JR  SOPEN6
       D665                     SOPEN5:
000FC5 D665 CD40DF          17      CALL    GNCLX       ;END DIR
000FC8 D668 D8              11      RET C
000FC9 D669 CDDED7          17      CALL    ENDCL
       D66C                     SOPEN6:
000FCC D66C 38D2            12      JR  C,SOPEN1
       D66E                     SCF_FF_RET:
000FCE D66E 37               4      SCF         ;CF=1
000FCF D66F 9F               4      SBC A,A     ;A=0FFH
000FD0 D670 C9              10      RET
                                
       D671                     RDDERR:
000FD1 D671 BF               4      CP  A       ;READ ERR CF=1 ZF=1
000FD2 D672 37               4      SCF
000FD3 D673 C9              10      RET
                                
       D674                     NOPEN:
000FD4 D674 2126D7          10      LD  HL,FILESE
000FD7 D677 224CD6          16      LD  (OPENPAT+1),HL
000FDA D67A FD2A98E4        20      LD  IY,(_FCB)
000FDE D67E CD11D9          17      CALL    CHKWILDX
000FE1 D681 30EB            12      JR  NC,SCF_FF_RET
000FE3 D683 FD7E00          19      LD  A,(IY+0)    ;(FCB)ドライブ番号
000FE6 D686 3D               4      DEC A
000FE7 D687 3288E4          13      LD  (_DRV),A
000FEA D68A CDD9E4          17      CALL    _CHGDRV
000FED D68D D8              11      RET C
000FEE D68E 2AF8E5          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
000FF1 D691 229FE4          16      LD  (_FILEN),HL
                                
000FF4 D694 CD26D8          17      CALL    LDDIRX
000FF7 D697 ED5B9AE4        20      LD  DE,(_FBPS)
000FFB D69B CD17D7          17      CALL    READ_DIR
000FFE D69E 38D1            12      JR  C,RDDERR
001000 D6A0 3A9EE4          13      LD  A,(_FBCNT)
001003 D6A3 3D               4      DEC A
001004 D6A4 28AD            12      JR  Z,SOPEN3
       D6A6                     NOPEN2:
001006 D6A6 2A9CE4          16      LD  HL,(_FBAD)
001009 D6A9 012000          10      LD  BC,020H
00100C D6AC 09              11      ADD HL,BC
00100D D6AD 4F               4      LD  C,A
00100E D6AE 189A            12      JR  SOPEN2
                                
       D6B0                     SOPENE2:
001010 D6B0 229CE4          16      LD  (_FBAD),HL
001013 D6B3 79               4      LD  A,C
001014 D6B4 329EE4          13      LD  (_FBCNT),A
001017 D6B7 ED539AE4        20      LD  (_FBPS),DE
00101B D6BB FD2298E4        20      LD  (_FCB),IY
       D6BF                     SOPENE:
00101F D6BF AF               4      XOR A
001020 D6C0 C9              10      RET
                                
       D6C1                     COPEN:
001021 D6C1 FD360D20        19      LD  (IY+13),020H    ;(FCB)属性(アトリビュート)
                                
001025 D6C5 2143D7          10      LD  HL,NEXTSE
001028 D6C8 CD13D6          17      CALL    SOPENC
00102B D6CB D0              11      RET NC
00102C D6CC C8              11      RET Z
00102D D6CD 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
001030 D6D0 B7               4      OR  A
001031 D6D1 37               4      SCF
001032 D6D2 C8              11      RET Z       ;ルートディレクトリ
001033 D6D3 0601             7      LD  B,1
001035 D6D5 CD70D9          17      CALL    WRDF
001038 D6D8 D8              11      RET C
001039 D6D9 ED5BFEE5        20      LD  DE,(_CLPS)
00103D D6DD D5              11      PUSH    DE
00103E D6DE CDA7D7          17      CALL    DCPAT
001041 D6E1 CDCBDD          17      CALL    DRDNX
001044 D6E4 2A7EE5          16      LD  HL,(_DTBUF) ;ディレクトリエントリを0クリア
001047 D6E7 3AD5DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
00104A D6EA 47               4      LD  B,A
00104B D6EB AF               4      XOR A
00104C D6EC 4F               4      LD  C,A
       D6ED                     COPENCL:
00104D D6ED 77               7      LD  (HL),A
00104E D6EE EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
001050 D6F0 EAEDD6          10      JP  PE,COPENCL
                                
001053 D6F3 3AC5D7          13      LD  A,(SPCPAT+1)    ;1クラスタの論理セクタ数
001056 D6F6 3D               4      DEC A
001057 D6F7 2819            12      JR  Z,COPENE
001059 D6F9 3E01             7      LD  A,1     ;1セクタ辺りのセクタ数が2以上の場合
00105B D6FB 3238DF          13      LD  (_SECPS+1),A
00105E D6FE D1              10      POP DE      ;DE=(_CLPS)
00105F D6FF D5              11      PUSH    DE
       D700                     COPEN1:
001060 D700 D5              11      PUSH    DE      ;データバッファに入らないセクタもゼロクリア
001061 D701 C5              11      PUSH    BC
001062 D702 2A7EE5          16      LD  HL,(_DTBUF)
001065 D705 CDC1D7          17      CALL    CLUSTX
001068 D708 CDD0E0          17      CALL    DWT24
00106B D70B C1              10      POP BC
00106C D70C D1              10      POP DE
00106D D70D CD37DF          17      CALL    NEXTX
001070 D710 20EE            12      JR  NZ,COPEN1
       D712                     COPENE:
001072 D712 2A7EE5          16      LD  HL,(_DTBUF)
001075 D715 D1              10      POP DE
001076 D716 C9              10      RET
                                
       D717                     READ_DIR:
001077 D717 ED53FEE5        20      LD  (_CLPS),DE
00107B D71B C5              11      PUSH    BC
00107C D71C D5              11      PUSH    DE
00107D D71D CDA7D7          17      CALL    DCPAT
001080 D720 CDABDD          17      CALL    DRDX
001083 D723 D1              10      POP DE
001084 D724 C1              10      POP BC
001085 D725 C9              10      RET
                                
       D726                     FILESE:
001086 D726 7E               7      LD  A,(HL)
001087 D727 B7               4      OR  A
001088 D728 C8              11      RET Z       ;END:ZF=1 CF=0
001089 D729 FEE5             7      CP  0E5H
00108B D72B 280E            12      JR  Z,FILESE1
00108D D72D FDE5            15      PUSH    IY
00108F D72F D1              10      POP DE
001090 D730 13               6      INC DE
001091 D731 E5              11      PUSH    HL
001092 D732 CD7ED7          17      CALL    CPFILE
001095 D735 CC9FD7          17      CALL    Z,CPFILE2
001098 D738 E1              10      POP HL
001099 D739 37               4      SCF
00109A D73A C8              11      RET Z       ;!!!:(ZF=1) CF=1
       D73B                     FILESE1:
00109B D73B CD52D7          17      CALL    FNEXT
00109E D73E 20E6            12      JR  NZ,FILESE
       D740                     ZF0_CF0_AFF_RET:
0010A0 D740 F6FF             7      OR  0FFH        ;ZF=0 CF=0
0010A2 D742 C9              10      RET
                                
       D743                     NEXTSE:
0010A3 D743 7E               7      LD  A,(HL)
0010A4 D744 B7               4      OR  A
0010A5 D745 37               4      SCF
0010A6 D746 C8              11      RET Z       ;!!!:ZF=1 CF=1
0010A7 D747 FEE5             7      CP  0E5H
0010A9 D749 37               4      SCF
0010AA D74A C8              11      RET Z       ;!!!:(ZF=1) CF=1
0010AB D74B CD52D7          17      CALL    FNEXT
0010AE D74E 20F3            12      JR  NZ,NEXTSE
0010B0 D750 18EE            12      JR  ZF0_CF0_AFF_RET
                                
       D752                     FNEXT:
0010B2 D752 E5              11      PUSH    HL
0010B3 D753 219FE4          10      LD  HL,_FILEN
0010B6 D756 34              11      INC (HL)
0010B7 D757 E1              10      POP HL
0010B8 D758 112000          10      LD  DE,020H
0010BB D75B 19              11      ADD HL,DE
0010BC D75C 0D               4      DEC C
0010BD D75D C9              10      RET
                                
       D75E                     CPNAME:
0010BE D75E C5              11      PUSH    BC
0010BF D75F D5              11      PUSH    DE
0010C0 D760 E5              11      PUSH    HL
0010C1 D761 CD78D7          17      CALL    CPFILE4
0010C4 D764 E1              10      POP HL
0010C5 D765 23               6      INC HL
0010C6 D766 23               6      INC HL
0010C7 D767 23               6      INC HL
0010C8 D768 23               6      INC HL
0010C9 D769 D1              10      POP DE
0010CA D76A C1              10      POP BC
0010CB D76B 2005            12      JR  NZ,CPNAME1
0010CD D76D 7E               7      LD  A,(HL)
0010CE D76E 23               6      INC HL
0010CF D76F 66               7      LD  H,(HL)
0010D0 D770 6F               4      LD  L,A
0010D1 D771 C9              10      RET
       D772                     CPNAME1:
0010D2 D772 23               6      INC HL
0010D3 D773 23               6      INC HL
0010D4 D774 10E8            13      DJNZ    CPNAME
0010D6 D776 37               4      SCF
0010D7 D777 C9              10      RET
                                
       D778                     CPFILE4:
0010D8 D778 C5              11      PUSH    BC
0010D9 D779 010004          10      LD  BC,00400H
0010DC D77C 1804            12      JR  CPSTR1
       D77E                     CPFILE:
0010DE D77E C5              11      PUSH    BC
0010DF D77F 01000B          10      LD  BC,00B00H
       D782                     CPSTR1:
0010E2 D782 1A               7      LD  A,(DE)
0010E3 D783 FE3F             7      CP  '?'     ;Wild card
0010E5 D785 2812            12      JR  Z,CPSTR2
0010E7 D787 7E               7      LD  A,(HL)
0010E8 D788 CDF7D8          17      CALL    FKANC
0010EB D78B E5              11      PUSH    HL
0010EC D78C 67               4      LD  H,A
0010ED D78D 1A               7      LD  A,(DE)
0010EE D78E CB01             4      RLC C
0010F0 D790 CDF7D8          17      CALL    FKANC
0010F3 D793 CB09             4      RRC C
0010F5 D795 BC               4      CP  H       ;CP (HL),(DE)
0010F6 D796 E1              10      POP HL
0010F7 D797 2004            12      JR  NZ,CPSTR3
       D799                     CPSTR2:
0010F9 D799 13               6      INC DE
0010FA D79A 23               6      INC HL
0010FB D79B 10E5            13      DJNZ    CPSTR1
       D79D                     CPSTR3:
0010FD D79D C1              10      POP BC
0010FE D79E C9              10      RET
                                
       D79F                     CPFILE2:
0010FF D79F FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
001102 D7A2 F6E1             7      OR  0E1H
001104 D7A4 2F               4      CPL
001105 D7A5 A6               7      AND (HL)
001106 D7A6 C9              10      RET
                                
       D7A7                     DCPAT:
001107 D7A7 0E00             7      LD  C,0
001109 D7A9 2A7EE5          16      LD  HL,(_DTBUF)
00110C D7AC 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
00110F D7AF B7               4      OR  A
001110 D7B0 C8              11      RET Z       ;ルートディレクトリの場合はCレジスタを0にしておく(CDEがセクタ番号)
001111 D7B1 3AC5D7          13      LD  A,(SPCPAT+1)
001114 D7B4 4F               4      LD  C,A
001115 D7B5 3A38DF          13      LD  A,(_SECPS+1)
001118 D7B8 B9               4      CP  C
001119 D7B9 3801            12      JR  C,DC1
00111B D7BB AF               4      XOR A
       D7BC                     DC1:
00111C D7BC F680             7      OR  080H
00111E D7BE 32A0E4          13      LD  (_DIRF),A   ;bit0-6:セクタインデックス
       D7C1                     CLUSTX:
001121 D7C1 E5              11      PUSH    HL
001122 D7C2 EB               4      EX  DE,HL
001123 D7C3 AF               4      XOR A
001124 D7C4 0E01             7  SPCPAT: LD  C,1     ;自己書き換え（1クラスタの論理セクタ数）
       D7C6                     L_CLDBL:
001126 D7C6 CB19             8      RR  C       ;->CF
001128 D7C8 3804            12      JR  C,E_CLDBL
00112A D7CA 29              11      ADD HL,HL       ;*2
00112B D7CB 8F               4      ADC A,A
00112C D7CC 18F8            12      JR  L_CLDBL
       D7CE                     E_CLDBL:
00112E D7CE 4F               4      LD  C,A
00112F D7CF 3A38DF          13      LD  A,(_SECPS+1)
001132 D7D2 B5               4      OR  L
001133 D7D3 6F               4      LD  L,A
001134 D7D4 110800          10  CLSPAT: LD  DE,8    ;+8 (2D)  !ADDCL (self-modifying code)
001137 D7D7 AF               4      XOR A
001138 D7D8 19              11      ADD HL,DE   ;データ格納領域の先頭論理セクタ番号
001139 D7D9 89               4      ADC A,C
00113A D7DA 4F               4      LD  C,A
00113B D7DB EB               4      EX  DE,HL
00113C D7DC E1              10      POP HL
00113D D7DD C9              10      RET
                                
       D7DE                     ENDCL:
00113E D7DE 7A               4      LD  A,D ;END CLUSTER
00113F D7DF FE01             7  CLPAT1: CP  1   ;164=356    (self-modifying code)
001141 D7E1 C0              11      RET NZ
001142 D7E2 7B               4      LD  A,E
001143 D7E3 FE64             7  CLPAT2: CP  064H    ;       (self-modifying code)
001145 D7E5 C9              10      RET
                                
       D7E6                     CAP:
001146 D7E6 FE61             7      CP  'a'
001148 D7E8 D8              11      RET C
001149 D7E9 FE7B             7      CP  'z'+1
00114B D7EB D0              11      RET NC
00114C D7EC D620             7      SUB 020H
00114E D7EE C9              10      RET
       D7EF                     CAP2:
00114F D7EF CDE6D7          17      CALL    CAP
       D7F2                     CAP3:
001152 D7F2 CDFBD7          17      CALL    CAP4
001155 D7F5 FE21             7      CP  021H
001157 D7F7 D0              11      RET NC
001158 D7F8 3E20             7      LD  A,NBSP
00115A D7FA C9              10      RET
       D7FB                     CAP4:
00115B D7FB FE05             7      CP  5
00115D D7FD C0              11      RET NZ
00115E D7FE 3EE5             7      LD  A,0E5H
001160 D800 C9              10      RET
                                
       D801                     CHDIR:
001161 D801 CDFEE1          17      CALL    GETDPBD
001164 D804 381D            12      JR  C,CHDIR2
001166 D806 DD751A          19      LD  (IX+DPB_SDIR),L
001169 D809 DD741B          19      LD  (IX+DPB_SDIR+1),H
00116C D80C 1815            12      JR  CHDIR2      ;POP_IX_RET
                                
       D80E                     LDDIR:
00116E D80E CDFEE1          17      CALL    GETDPBD
001171 D811 DD5E1A          19      LD  E,(IX+DPB_SDIR)
001174 D814 DD561B          19      LD  D,(IX+DPB_SDIR+1)
001177 D817 13               6      INC DE
001178 D818 FD730E          19      LD  (IY+14),E   ;(FCB)アクセスするディレクトリのクラスタ番号+1
00117B D81B FD720F          19      LD  (IY+15),D
00117E D81E 1B               6      DEC DE
00117F D81F AF               4      XOR A
001180 D820 32A0E4          13      LD  (_DIRF),A
       D823                     CHDIR2:
001183 D823 DDE1            14      POP IX
001185 D825 C9              10      RET
                                
       D826                     LDDIRX:
001186 D826 3AA0E4          13      LD  A,(_DIRF)   ;(FCB)アクセスするディレクトリのセクタインデックス
001189 D829 E67F             7      AND 07FH
       D82B                     LDDIRX1:
00118B D82B 3238DF          13      LD  (_SECPS+1),A
00118E D82E FD5E0E          19      LD  E,(IY+14)   ;(FCB)アクセスするディレクトリのクラスタ番号+1
001191 D831 FD560F          19      LD  D,(IY+15)
001194 D834 1B               6      DEC DE
001195 D835 CDDED7          17      CALL    ENDCL
001198 D838 D40ED8          17      CALL    NC,LDDIR
       D83B                     LDDIRS:
00119B D83B 7A               4      LD  A,D
00119C D83C B3               4      OR  E
00119D D83D 32A0E4          13      LD  (_DIRF),A   ;ディレクトリか判別
0011A0 D840 C9              10      RET
                                
       D841                     KILL:
0011A1 D841 CD11D9          17      CALL    CHKWILDX
0011A4 D844 3834            12      JR  C,KILLW
0011A6 D846 CDE3D5          17      CALL    SOPENX
       D849                     KILLS:
0011A9 D849 3E1F             7      LD  A,01FH
0011AB D84B D48DD8          17      CALL    NC,CHKATT
0011AE D84E D8              11      RET C
       D84F                     KILLSX:
0011AF D84F 36E5            10      LD  (HL),0E5H   ;DIR
0011B1 D851 CDEBD8          17      CALL    WTDB
0011B4 D854 111A00          10      LD  DE,01AH
0011B7 D857 19              11      ADD HL,DE
0011B8 D858 5E               7      LD  E,(HL)
0011B9 D859 23               6      INC HL
0011BA D85A 56               7      LD  D,(HL)
       D85B                     KILLS1:
0011BB D85B CDDED7          17      CALL    ENDCL
0011BE D85E D0              11      RET NC      ;CF=0
0011BF D85F 21FEFF          10      LD  HL,0-2
0011C2 D862 19              11      ADD HL,DE
0011C3 D863 D0              11      RET NC      ;DE= 0 or 1
0011C4 D864 D5              11      PUSH    DE
0011C5 D865 CDF7E4          17      CALL    _GNCL
0011C8 D868 ED53FEE5        20      LD  (_CLPS),DE
0011CC D86C D1              10      POP DE
0011CD D86D 210000          10      LD  HL,0
0011D0 D870 D4FAE4          17      CALL    NC,_SNCL
0011D3 D873 D8              11      RET C
0011D4 D874 ED5BFEE5        20      LD  DE,(_CLPS)  ;FAT
0011D8 D878 18E1            12      JR  KILLS1
                                
       D87A                     KILLW:
0011DA D87A CD10D6          17      CALL    SOPEN
       D87D                     KILLW1:
0011DD D87D 380B            12      JR  C,KILLW2
0011DF D87F CDB0D6          17      CALL    SOPENE2
0011E2 D882 CD49D8          17      CALL    KILLS
0011E5 D885 CD74D6          17      CALL    NOPEN
0011E8 D888 18F3            12      JR  KILLW1
       D88A                     KILLW2:
0011EA D88A C8              11      RET Z
0011EB D88B 3F               4      CCF
0011EC D88C C9              10      RET
                                
       D88D                     CHKATT:
0011ED D88D E5              11      PUSH    HL
0011EE D88E 110B00          10      LD  DE,00BH
0011F1 D891 19              11      ADD HL,DE
0011F2 D892 A6               7      AND (HL)
0011F3 D893 E1              10      POP HL
0011F4 D894 C8              11      RET Z
0011F5 D895 37               4      SCF
0011F6 D896 C9              10      RET
                                
       D897                     NAME:
0011F7 D897 CD11D9          17      CALL    CHKWILDX
0011FA D89A D8              11      RET C
0011FB D89B 110400          10      LD  DE,4
0011FE D89E 19              11      ADD HL,DE
0011FF D89F 22B7D8          16      LD  (NAMEP+2),HL
001202 D8A2 23               6      INC HL
001203 D8A3 CD15D9          17      CALL    CHKWILD
001206 D8A6 D8              11      RET C
                                
001207 D8A7 CDE3D5          17      CALL    SOPENX
00120A D8AA 3E0F             7      LD  A,00FH
00120C D8AC D48DD8          17      CALL    NC,CHKATT
00120F D8AF D8              11      RET C
                                
001210 D8B0 FD7E00          19      LD  A,(IY+0)
001213 D8B3 FDE5            15      PUSH    IY
001215 D8B5 FD210000        14  NAMEP:  LD  IY,0        ;自己書き換え
001219 D8B9 FD7700          19      LD  (IY+0),A
00121C D8BC CDE3D5          17      CALL    SOPENX
00121F D8BF FDE3            23      EX  (SP),IY
001221 D8C1 3F               4      CCF
001222 D8C2 D410D6          17      CALL    NC,SOPEN
001225 D8C5 EB               4      EX  DE,HL
001226 D8C6 E1              10      POP HL
001227 D8C7 D8              11      RET C
                                
       D8C8                     SETNAME:
001228 D8C8 01000B          10      LD  BC,11*256
00122B D8CB 23               6      INC HL
00122C D8CC 7E               7      LD  A,(HL)
00122D D8CD FEE5             7      CP  0E5H
00122F D8CF 2004            12      JR  NZ,SNAME1
001231 D8D1 3E05             7      LD  A,5
001233 D8D3 180E            12      JR  SNAME3
       D8D5                     SNAME1:
001235 D8D5 7E               7      LD  A,(HL)
001236 D8D6 0C               4      INC C
001237 D8D7 0D               4      DEC C
001238 D8D8 2009            12      JR  NZ,SNAME3
00123A D8DA CDE6D7          17      CALL    CAP
00123D D8DD FEA0             7      CP  0A0H
00123F D8DF 2002            12      JR  NZ,SNAME3
001241 D8E1 3E20             7      LD  A,020H
       D8E3                     SNAME3:
001243 D8E3 12               7      LD  (DE),A
001244 D8E4 7E               7      LD  A,(HL)
001245 D8E5 23               6      INC HL
001246 D8E6 CDFED8          17      CALL    FKAN
001249 D8E9 10EA            13      DJNZ    SNAME1
       D8EB                     WTDB:
00124B D8EB 3EFF             7      LD  A,0FFH
00124D D8ED 3239E4          13      LD  (SFILE),A
       D8F0                     SWTDBF:
001250 D8F0 3E01             7      LD  A,1
001252 D8F2 32A4E4          13      LD  (_WTDBF),A
001255 D8F5 AF               4      XOR A
001256 D8F6 C9              10      RET
                                
       D8F7                     FKANC:
001257 D8F7 CB41             8      BIT 0,C
001259 D8F9 CCEFD7          17      CALL    Z,CAP2
00125C D8FC 1801            12      JR  FKANX
       D8FE                     FKAN:           ;漢字チェック
00125E D8FE 13               6      INC DE
       D8FF                     FKANX:
00125F D8FF CB41             8      BIT 0,C
001261 D901 CB81             8      RES 0,C
001263 D903 C0              11      RET NZ
001264 D904 FE80             7      CP  080H
001266 D906 D8              11      RET C
001267 D907 FEA0             7      CP  0A0H
001269 D909 3803            12      JR  C,FKAN1
00126B D90B FEE0             7      CP  0E0H
00126D D90D D8              11      RET C
       D90E                     FKAN1:
00126E D90E 0C               4      INC C
00126F D90F A7               4      AND A
001270 D910 C9              10      RET
                                
       D911                     CHKWILDX:
001271 D911 FDE5            15      PUSH    IY
001273 D913 E1              10      POP HL
001274 D914 23               6      INC HL
       D915                     CHKWILD:
001275 D915 060B             7      LD  B,11
001277 D917 3E3F             7      LD  A,'?'
       D919                     CHKWIL1:
001279 D919 BE               7      CP  (HL)
00127A D91A 23               6      INC HL
00127B D91B 37               4      SCF
00127C D91C C8              11      RET Z
00127D D91D 10FA            13      DJNZ    CHKWIL1
00127F D91F AF               4      XOR A
001280 D920 C9              10      RET
                                
       D921                     SDIRENT:        ;IY=FCB HL=DIR
001281 D921 D5              11      PUSH    DE
001282 D922 E5              11      PUSH    HL
001283 D923 FDE5            15      PUSH    IY
001285 D925 D1              10      POP DE
001286 D926 EB               4      EX  DE,HL
001287 D927 CDC8D8          17      CALL    SETNAME
                                ;               Attribute
00128A D92A FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
00128D D92D 12               7      LD  (DE),A
00128E D92E 13               6      INC DE
                                ;               Reserved
00128F D92F AF               4      XOR A
001290 D930 060A             7      LD  B,10
       D932                     SDE1:
001292 D932 12               7      LD  (DE),A
001293 D933 13               6      INC DE
001294 D934 10FC            13      DJNZ    SDE1
                                                    ;(FCB)更新時刻
001296 D936 21E4E5          10      LD  HL,SDDATA       ;(FCB)更新年月日
001299 D939 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       D93B                     SDLOOP:                 ;(FCB)ファイルのサイズ(バイト単位)
00129B D93B 7E               7      LD  A,(HL)
00129C D93C 23               6      INC HL
00129D D93D 3242D9          13      LD  (SDPAT+2),A
0012A0 D940 FD7E00          19  SDPAT:  LD  A,(IY+0)    ;LD A,(IY+A)
0012A3 D943 12               7      LD  (DE),A
0012A4 D944 13               6      INC DE
0012A5 D945 10F4            13      DJNZ    SDLOOP
                                
0012A7 D947 AF               4      XOR A
0012A8 D948 E1              10      POP HL
0012A9 D949 D1              10      POP DE
0012AA D94A C9              10      RET
                                
       D94B                     WOPEN:
0012AB D94B FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
0012AE D94E E61F             7      AND 01FH
0012B0 D950 37               4      SCF
0012B1 D951 C0              11      RET NZ
0012B2 D952 FD361CFE        19      LD  (IY+28),0FEH    ;(FCB)オープンモード
       D956                     TOPEN2:
0012B6 D956 AF               4      XOR A
       D957                     TOPEN:              ;Initializes the time stamp
0012B7 D957 FD3617FF        19      LD  (IY+23),0FFH    ;(FCB)更新時刻
0012BB D95B C9              10      RET
                                
       D95C                     WRDFX:
0012BC D95C 3AC5D7          13      LD  A,(SPCPAT+1)    ;1クラスタの論理セクタ
       D95F                     L_WRFX:
0012BF D95F 1F               4      RRA         ;->CF
0012C0 D960 3806            12      JR  C,E_WRFX
0012C2 D962 CB39             8      SRL C
0012C4 D964 CB1C             8      RR  H       ;CH=CH/2
0012C6 D966 18F7            12      JR  L_WRFX
       D968                     E_WRFX:
0012C8 D968 41               4      LD  B,C
0012C9 D969 4C               4      LD  C,H
0012CA D96A 03               6      INC BC
0012CB D96B 3E37             7      LD  A,037H      ;SCF
0012CD D96D 32C8DD          13      LD  (DRDN1),A
                                
       D970                     WRDF:               ;BCクラスタ分FATを確保する
0012D0 D970 110200          10      LD  DE,2
0012D3 D973 AF               4      XOR A
0012D4 D974 3238DF          13      LD  (_SECPS+1),A
       D977                     WRDF1:
0012D7 D977 C5              11      PUSH    BC
0012D8 D978 D5              11      PUSH    DE
0012D9 D979 CDF7E4          17      CALL    _GNCL
0012DC D97C 381C            12      JR  C,WRDF3
0012DE D97E 7A               4      LD  A,D     ;空いているかチェック
0012DF D97F B3               4      OR  E
0012E0 D980 202A            12      JR  NZ,WRDF4
0012E2 D982 E1              10      POP HL      ;HL=空いているクラスタ
0012E3 D983 E5              11      PUSH    HL
0012E4 D984 ED5BFEE5        20      LD  DE,(_CLPS)  ;DE=元の(_CLPS)
0012E8 D988 22FEE5          16      LD  (_CLPS),HL
0012EB D98B 7A               4      LD  A,D     ;元の(_CLPS)が 0 か?
0012EC D98C B3               4      OR  E
0012ED D98D 2008            12      JR  NZ,WRDF2
0012EF D98F FD751A          19      LD  (IY+26),L   ;(FCB)ファイルの先頭クラスタ
0012F2 D992 FD741B          19      LD  (IY+27),H   ;元が空の場合はFCBにクラスタをセットする
0012F5 D995 1803            12      JR  WRDF3
       D997                     WRDF2:
0012F7 D997 CDFAE4          17      CALL    _SNCL
       D99A                     WRDF3:
0012FA D99A D1              10      POP DE
0012FB D99B C1              10      POP BC
0012FC D99C D8              11      RET C
0012FD D99D 0B               6      DEC BC
0012FE D99E 78               4      LD  A,B
0012FF D99F B1               4      OR  C
001300 D9A0 200C            12      JR  NZ,WRDF5    ;ここでループカウンタチェック
001302 D9A2 ED5BFEE5        20      LD  DE,(_CLPS)
001306 D9A6 21FFFF          10      LD  HL,0FFFFH   ;FATエントリ終了(EOCマーク)
001309 D9A9 C3FAE4          10      JP  _SNCL
                                
       D9AC                     WRDF4:              ;DEクラスタが空じゃないので次に移動する
00130C D9AC D1              10      POP DE
00130D D9AD C1              10      POP BC
       D9AE                     WRDF5:
00130E D9AE 13               6      INC DE
00130F D9AF CDDED7          17      CALL    ENDCL
001312 D9B2 38C3            12      JR  C,WRDF1
001314 D9B4 37               4      SCF
001315 D9B5 C9              10      RET
                                
       D9B6                     RWXR:
001316 D9B6 3AD5DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       D9B9                     L_RWX:
001319 D9B9 1F               4      RRA     ;->CF
00131A D9BA 3808            12      JR  C,E_RWX
00131C D9BC CB38             8      SRL B   ;BCH=BCH/2
00131E D9BE CB19             8      RR  C   ;
001320 D9C0 CB1C             8      RR  H   ;
001322 D9C2 18F5            12      JR  L_RWX
       D9C4                     E_RWX:
001324 D9C4 FD5E1A          19      LD  E,(IY+26)   ;(FCB)ファイルの先頭クラスタ
001327 D9C7 FD561B          19      LD  D,(IY+27)
00132A D9CA AF               4      XOR A
00132B D9CB 3238DF          13      LD  (_SECPS+1),A
       D9CE                     RWX1:
00132E D9CE ED53FEE5        20      LD  (_CLPS),DE
001332 D9D2 7A               4      LD  A,D
001333 D9D3 B3               4      OR  E
001334 D9D4 2813            12      JR  Z,SCF_RET   ;RET DE==0 => CF=1
                                
001336 D9D6 78               4      LD  A,B
001337 D9D7 B1               4      OR  C
001338 D9D8 B4               4      OR  H
001339 D9D9 C8              11      RET Z       ;RET BCH==0 => CF=0
                                
00133A D9DA CD40DF          17      CALL    GNCLX
00133D D9DD D8              11      RET C
00133E D9DE 7C               4      LD  A,H     ;
00133F D9DF 25               4      DEC H       ;
001340 D9E0 B7               4      OR  A       ;DEC BCH
001341 D9E1 2001            12      JR  NZ,RWX2     ;
001343 D9E3 0B               6      DEC BC      ;
       D9E4                     RWX2:
001344 D9E4 CDDED7          17      CALL    ENDCL
001347 D9E7 38E5            12      JR  C,RWX1
       D9E9                     SCF_RET:
001349 D9E9 37               4      SCF
00134A D9EA C9              10      RET
                                
       D9EB                     DSKF:
00134B D9EB 110000          10  MAXCLP: LD  DE,0
00134E D9EE 2AACE4          16      LD  HL,(_FAKEFREE)
001351 D9F1 7C               4      LD  A,H
001352 D9F2 B5               4      OR  L
001353 D9F3 2803            12      JR  Z,DSKF1
001355 D9F5 110100          10      LD  DE,1
       D9F8                     DSKF1:
001358 D9F8 D5              11      PUSH    DE
001359 D9F9 CDF7E4          17      CALL    _GNCL
00135C D9FC 380C            12      JR  C,POPSCF
00135E D9FE 7A               4      LD  A,D
00135F D9FF B3               4      OR  E
001360 DA00 2001            12      JR  NZ,DSKF2
001362 DA02 23               6      INC HL
       DA03                     DSKF2:
001363 DA03 D1              10      POP DE
001364 DA04 1B               6      DEC DE
001365 DA05 7A               4      LD  A,D
001366 DA06 B3               4      OR  E
001367 DA07 20EF            12      JR  NZ,DSKF1
001369 DA09 C9              10      RET
                                
       DA0A                     POPSCF:
00136A DA0A F1              10      POP AF
00136B DA0B 37               4      SCF
00136C DA0C C9              10      RET
                                
       DA0D                     SETTMS:
00136D DA0D FD7E17          19      LD  A,(IY+23)   ;(FCB)ファイルを最後に変更した時刻
001370 DA10 3C               4      INC A
001371 DA11 C0              11      RET NZ      ;ファイルが更新されていない
       DA12                     SETTMSX:            ;FCBに日付時刻をセットする
001372 DA12 CDEAD1          17      CALL    _SYS2C      ;(BDOS)時刻の獲得
                                                ;H←時  L←分  D←秒
001375 DA15 CB25             8      SLA L       ;   *2
001377 DA17 CB25             8      SLA L       ;   *4
001379 DA19 29              11      ADD HL,HL       ;*2 *8
00137A DA1A 29              11      ADD HL,HL       ;*4 *16
00137B DA1B 29              11      ADD HL,HL       ;*8 *32
00137C DA1C 7A               4      LD  A,D
00137D DA1D 0F               4      RRCA            ;bit.0->7->->->0->C
00137E DA1E E61F             7      AND 01FH
001380 DA20 B5               4      OR  L
001381 DA21 FD7716          19      LD  (IY+22),A   ;(FCB)ファイルを最後に変更した時刻
001384 DA24 FD7417          19      LD  (IY+23),H
                                
001387 DA27 CDE4D1          17      CALL    _SYS2A      ;(BDOS)日付の獲得
                                                ;HL←年  D←月  E←日
00138A DA2A 0144F8          10      LD  BC,0-1980
00138D DA2D 09              11      ADD HL,BC
00138E DA2E 65               4      LD  H,L
                                
00138F DA2F 7A               4      LD  A,D
001390 DA30 87               4      ADD A,A     ;*2
001391 DA31 87               4      ADD A,A     ;*4
001392 DA32 87               4      ADD A,A     ;*8
001393 DA33 87               4      ADD A,A     ;*16
001394 DA34 6F               4      LD  L,A
001395 DA35 29              11      ADD HL,HL       ;*32
001396 DA36 7D               4      LD  A,L
001397 DA37 B3               4      OR  E
001398 DA38 FD7714          19      LD  (IY+20),A   ;(FCB)ファイルを最後に変更した日付
00139B DA3B FD7415          19      LD  (IY+21),H
00139E DA3E C9              10      RET
                                
       DA3F                     PUSHRR:
00139F DA3F 32D7DA          13      LD  (SETSEQ_SWC_RND),A
0013A2 DA42 22E9DA          16      LD  (SETSEQ_SWC_SEQ_RR),HL
0013A5 DA45 CD65DA          17      CALL    GET_RR_AHL
0013A8 DA48 220FE4          16      LD  (RR_BUF_HL),HL
0013AB DA4B 3211E4          13      LD  (RR_BUF_A),A
0013AE DA4E C9              10      RET
                                
       DA4F                     GET_CPM_R_SIZE:     ;バイト単位からCP/Mのレコード単位を求める（1レコード=128バイト）
0013AF DA4F 87               4      ADD A,A     ;in BHLA => out AHL
0013B0 DA50 ED6A            15      ADC HL,HL
0013B2 DA52 CB18             8      RR  B
0013B4 DA54 B7               4      OR  A
0013B5 DA55 78               4      LD  A,B     ;ここでフラグは変化しない
0013B6 DA56 C8              11      RET Z
0013B7 DA57 2C               4      INC L       ;INC AHL
0013B8 DA58 C0              11      RET NZ      ;
0013B9 DA59 24               4      INC H       ;
0013BA DA5A C0              11      RET NZ      ;
0013BB DA5B 3C               4      INC A       ;
0013BC DA5C C9              10      RET
                                
       DA5D                     INIT_RND:
0013BD DA5D 3ECD             7      LD  A,0CDH      ;CALL ????
0013BF DA5F 21ACDA          10      LD  HL,POPRR
0013C2 DA62 CD3FDA          17      CALL    PUSHRR
       DA65                     GET_RR_AHL:
0013C5 DA65 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
0013C8 DA68 FD6622          19      LD  H,(IY+34)   ;
0013CB DA6B FD7E23          19      LD  A,(IY+35)   ;
0013CE DA6E C9              10      RET
       DA6F                     SET_RR_AHL:
0013CF DA6F FD7521          19      LD  (IY+33),L   ;(FCB)Random record
0013D2 DA72 FD7422          19      LD  (IY+34),H
0013D5 DA75 FD7723          19      LD  (IY+35),A
0013D8 DA78 C9              10      RET
       DA79                     INIT_SEQ:
0013D9 DA79 3E01             7      LD  A,1     ;LD BC,????
0013DB DA7B 21A9DA          10      LD  HL,SETSEQ
0013DE DA7E CD3FDA          17      CALL    PUSHRR
       DA81                     GETSEQ:
0013E1 DA81 FD6E20          19      LD  L,(IY+32)   ;(FCB)カレントレコード
0013E4 DA84 FD660C          19      LD  H,(IY+12)   ;(FCB)カレントブロック
0013E7 DA87 AF               4      XOR A
                                
0013E8 DA88 CB25             8      SLA L   ;L=L*2
                                
0013EA DA8A CB3C             8      SRL H   ;HL=HL/2
0013EC DA8C CB1D             8      RR  L   ;
0013EE DA8E C9              10      RET
                                
       DA8F                     SETSEQ1:
0013EF DA8F F5              11      PUSH    AF
0013F0 DA90 E5              11      PUSH    HL      ;AHL=Random record
0013F1 DA91 CD65DA          17      CALL    GET_RR_AHL
0013F4 DA94 47               4      LD  B,A     ;AHL→HLA
0013F5 DA95 7D               4      LD  A,L     ;(IY+33)(FCB)ランダムレコード
0013F6 DA96 6C               4      LD  L,H     ;(IY+34)
0013F7 DA97 60               4      LD  H,B     ;(IY+35)
0013F8 DA98 0600             7      LD  B,0
                                
0013FA DA9A CD4FDA          17      CALL    GET_CPM_R_SIZE
                                
0013FD DA9D 29              11      ADD HL,HL
0013FE DA9E CB3D             8      SRL L       ;L=L/2
001400 DAA0 FD7520          19      LD  (IY+32),L   ;(FCB)カレントレコード
001403 DAA3 FD740C          19      LD  (IY+12),H   ;(FCB)カレントブロック
001406 DAA6 E1              10      POP HL
001407 DAA7 F1              10      POP AF
001408 DAA8 C9              10      RET
       DAA9                     SETSEQ:
001409 DAA9 CD8FDA          17      CALL    SETSEQ1
       DAAC                     POPRR:
00140C DAAC F5              11      PUSH    AF
00140D DAAD E5              11      PUSH    HL
00140E DAAE 2A0FE4          16      LD  HL,(RR_BUF_HL)
001411 DAB1 3A11E4          13      LD  A,(RR_BUF_A)
001414 DAB4 CD6FDA          17      CALL    SET_RR_AHL
001417 DAB7 E1              10      POP HL
001418 DAB8 F1              10      POP AF
001419 DAB9 C9              10      RET
                                
       DABA                     RB_WRITE:
00141A DABA C5              11      PUSH    BC
00141B DABB ED4B4CE5        20      LD  BC,(STABLE+2*026H)  ;(BDOS)ランダムブロック書き込み
00141F DABF 1805            12      JR  RBRW
       DAC1                     RB_READ:
001421 DAC1 C5              11      PUSH    BC
001422 DAC2 ED4B4EE5        20      LD  BC,(STABLE+2*027H)  ;(BDOS)ランダムブロック読み込み
       DAC6                     RBRW:
001426 DAC6 1F               4      RRA     ;AHL = AHL*128
001427 DAC7 7C               4      LD  A,H ;AHL = AHL0/2
001428 DAC8 1F               4      RRA     ;A
001429 DAC9 65               4      LD  H,L ;
00142A DACA CB1C             8      RR  H   ;H
00142C DACC 2E00             7      LD  L,0 ;
00142E DACE CB1D             8      RR  L   ;L
001430 DAD0 CD6FDA          17      CALL    SET_RR_AHL
001433 DAD3 218000          10      LD  HL,128
001436 DAD6 C5              11      PUSH    BC
       DAD7                     SETSEQ_SWC_RND:
001437 DAD7 CD8FDA          17      CALL    SETSEQ1
00143A DADA C1              10      POP BC
00143B DADB FDCB20FE        23      SET 7,(IY+32)   ;(FCB)カレントレコード
00143F DADF FDE5            15      PUSH    IY
001441 DAE1 D1              10      POP DE
001442 DAE2 D5              11      PUSH    DE
001443 DAE3 CDF1DA          17      CALL    JP_BC
001446 DAE6 FDE1            14      POP IY
001448 DAE8 CDA9DA          17      CALL    SETSEQ
       DAE9                     SETSEQ_SWC_SEQ_RR   EQU $-2
00144B DAEB FDCB20BE        23      RES 7,(IY+32)   ;(FCB)カレントレコード
                                
00144F DAEF C1              10      POP BC
001450 DAF0 C9              10      RET
       DAF1                     JP_BC:
001451 DAF1 C5              11      PUSH    BC
001452 DAF2 C9              10      RET
                                
       D66E                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       D66E                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       D66E                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       D66E                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       D66E                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:LDFILE.ASM:SHIFT_JIS]
                                    INCLUDE "LDFILE2.ASM"
                                
                                ;   LSX-Dodgers FILE2
                                
                                                ;Write random block
       DAF3                     _SYS26:     ;(BDOS)ランダムブロック書き込み
001453 DAF3 AF               4      XOR A
001454 DAF4 32C8DD          13      LD  (DRDN1),A   ;NOP
001457 DAF7 2218DD          16      LD  (RBSIZE),HL ;HL←書き込むレコード数
00145A DAFA 225DE4          16      LD  (LEFTX),HL
00145D DAFD CDC3D5          17      CALL    SETDRV
                                
001460 DB00 CD70DC          17      CALL    RBX0
001463 DB03 DA90DB          10      JP  C,RBWERR
001466 DB06 CD4BD9          17      CALL    WOPEN
001469 DB09 DA90DB          10      JP  C,RBWERR
00146C DB0C 7C               4      LD  A,H
00146D DB0D B5               4      OR  L
00146E DB0E CA89DB          10      JP  Z,RBW1
                                
001471 DB11 2B               6      DEC HL
                                
001472 DB12 CD2EDD          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
001475 DB15 19              11      ADD HL,DE       ;BCHL=HL+BCDE
001476 DB16 3001            12      JR  NC,S26X1    ;
001478 DB18 03               6      INC BC      ;
       DB19                     S26X1:
001479 DB19 CDB6D9          17      CALL    RWXR
00147C DB1C DC5CD9          17      CALL    C,WRDFX
00147F DB1F DA90DB          10      JP  C,RBWERR
                                
001482 DB22 CD9FDC          17      CALL    RBX2
001485 DB25 281A            12      JR  Z,RBWB      ;NZ=セクタ以下の端数がある
001487 DB27 CDBEDC          17      CALL    RBXA
00148A DB2A 3864            12      JR  C,RBWERR
00148C DB2C EB               4      EX  DE,HL
00148D DB2D C5              11      PUSH    BC
00148E DB2E EDB0                    LDIR
001490 DB30 225FE4          16      LD  (DTAX),HL
                                
001493 DB33 CDF0D8          17      CALL    SWTDBF      ;バッファデータは更新された
                                
001496 DB36 2A5DE4          16      LD  HL,(LEFTX)
001499 DB39 D1              10      POP DE
00149A DB3A ED52            15      SBC HL,DE
00149C DB3C 225DE4          16      LD  (LEFTX),HL
00149F DB3F 2831            12      JR  Z,RBWEND
                                
       DB41                     RBWB:
0014A1 DB41 CDF3DC          17      CALL    RBXB
0014A4 DB44 2814            12      JR  Z,RBWC
       DB46                     RBWB1:
0014A6 DB46 C5              11      PUSH    BC
0014A7 DB47 D5              11      PUSH    DE
0014A8 DB48 CDC1D7          17      CALL    CLUSTX
0014AB DB4B CD42DD          17      CALL    DWTC
0014AE DB4E D1              10      POP DE
0014AF DB4F C1              10      POP BC
0014B0 DB50 D440DF          17      CALL    NC,GNCLX
0014B3 DB53 383B            12      JR  C,RBWERR
0014B5 DB55 10EF            13      DJNZ    RBWB1
0014B7 DB57 CD92DD          17      CALL    DRW_FLUSH
       DB5A                     RBWC:
0014BA DB5A CD0BDD          17      CALL    RBXC
0014BD DB5D 2813            12      JR  Z,RBWEND
0014BF DB5F C5              11      PUSH    BC
0014C0 DB60 CDC1D7          17      CALL    CLUSTX
0014C3 DB63 CDC7DD          17      CALL    DRDN
0014C6 DB66 C1              10      POP BC
0014C7 DB67 3827            12      JR  C,RBWERR
0014C9 DB69 ED5B7EE5        20      LD  DE,(_DTBUF)
0014CD DB6D EDB0                    LDIR
0014CF DB6F CDF0D8          17      CALL    SWTDBF      ;バッファデータは更新された
       DB72                     RBWEND:
0014D2 DB72 CD17DD          17      CALL    RBXEND
                                
0014D5 DB75 CD7FDC          17      CALL    RBX1
0014D8 DB78 300F            12      JR  NC,RBW1     ;ランダムレコードの方が大きい場合はサイズを合わせる
0014DA DB7A CD2EDD          17      CALL    GET_RR_BCDE ;BCDE=Random record
0014DD DB7D FD7310          19      LD  (IY+16),E   ;ファイルのサイズ(バイト単位)
0014E0 DB80 FD7211          19      LD  (IY+17),D   ;
0014E3 DB83 FD7112          19      LD  (IY+18),C   ;
0014E6 DB86 FD7013          19      LD  (IY+19),B   ;
       DB89                     RBW1:
0014E9 DB89 FDE1            14      POP IY
0014EB DB8B C1              10      POP BC
0014EC DB8C D1              10      POP DE
0014ED DB8D E1              10      POP HL
       DB8E                     DD_NUL:
0014EE DB8E AF               4      XOR A
       DB8F                     DRDF0:
       DB8F                     DWTF0:
0014EF DB8F C9              10      RET
                                
       DB90                     RBWERR:
0014F0 DB90 FDE5            15      PUSH    IY
0014F2 DB92 D1              10      POP DE
0014F3 DB93 2A20E5          16      LD  HL,(STABLE+2*010H)
0014F6 DB96 CD0F00          17      CALL    JP_HL
       DB99                     RBRERR1:
0014F9 DB99 3E01             7      LD  A,001H
       DB9B                     RBRERR2:
0014FB DB9B FDE1            14      POP IY
0014FD DB9D C1              10      POP BC
0014FE DB9E D1              10      POP DE
0014FF DB9F E1              10      POP HL
001500 DBA0 37               4      SCF
001501 DBA1 210000          10      LD  HL,0
001504 DBA4 C9              10      RET
                                
       DBA5                     RBRERR:
001505 DBA5 3EFF             7      LD  A,0FFH
001507 DBA7 18F2            12      JR  RBRERR2
                                
       DBA9                     RBRFL:
001509 DBA9 3E00             7  RBRFLP: LD  A,000H
00150B DBAB FE0D             7      CP  00DH
00150D DBAD 2005            12      JR  NZ,RBRFL1
00150F DBAF D5              11      PUSH    DE
001510 DBB0 1E0A             7      LD  E,00AH
001512 DBB2 1805            12      JR  RBRFL2
       DBB4                     RBRFL1:
001514 DBB4 D5              11      PUSH    DE
001515 DBB5 CD09E4          17      CALL    _SYS07
001518 DBB8 5F               4      LD  E,A
       DBB9                     RBRFL2:
001519 DBB9 CDCDE4          17      CALL    _PRINT
00151C DBBC 7B               4      LD  A,E
00151D DBBD D1              10      POP DE
00151E DBBE 32AADB          13      LD  (RBRFLP+1),A
001521 DBC1 C9              10      RET
       DBC2                     DDX:
001522 DBC2 FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
001525 DBC5 CDE6D7          17      CALL    CAP
001528 DBC8 FE41             7      CP  'A'
00152A DBCA C9              10      RET
                                
                                                ;Read random block
       DBCB                     _SYS27:     ;(BDOS)ランダムブロック読み込み
00152B DBCB 225DE4          16      LD  (LEFTX),HL
00152E DBCE CDC3D5          17      CALL    SETDRV
                                
001531 DBD1 FDCB0D66        20      BIT 4,(IY+13)   ;(FCB)属性(アトリビュート)
001535 DBD5 C25EDC          10      JP  NZ,RBRDIR   ;ディレクトリ
001538 DBD8 CD70DC          17      CALL    RBX0
00153B DBDB DAA5DB          10      JP  C,RBRERR
00153E DBDE CD7FDC          17      CALL    RBX1
001541 DBE1 D497DC          17      CALL    NC,RBX1R
001544 DBE4 DA99DB          10      JP  C,RBRERR1
001547 DBE7 EB               4      EX  DE,HL
001548 DBE8 ED52            15      SBC HL,DE       ;CP 00HL,BCDE
00154A DBEA 19              11      ADD HL,DE
00154B DBEB 79               4      LD  A,C
00154C DBEC DE00             7      SBC A,0
00154E DBEE 78               4      LD  A,B
00154F DBEF DE00             7      SBC A,0
001551 DBF1 3801            12      JR  C,RBR1
001553 DBF3 EB               4      EX  DE,HL
       DBF4                     RBR1:
001554 DBF4 9F               4      SBC A,A
001555 DBF5 E601             7      AND 1
001557 DBF7 325CDC          13      LD  (RBRAP+1),A
                                
00155A DBFA 7C               4      LD  A,H
00155B DBFB B5               4      OR  L
00155C DBFC 2857            12      JR  Z,RBREND0
                                
00155E DBFE 2218DD          16      LD  (RBSIZE),HL ;HL←読み込むレコード数
001561 DC01 225DE4          16      LD  (LEFTX),HL
                                
001564 DC04 CD9FDC          17      CALL    RBX2
001567 DC07 2819            12      JR  Z,RBRB
001569 DC09 CDBEDC          17      CALL    RBXA
00156C DC0C DAA5DB          10      JP  C,RBRERR
00156F DC0F C5              11      PUSH    BC
001570 DC10 EDB0                    LDIR
001572 DC12 ED535FE4        20      LD  (DTAX),DE
001576 DC16 2A5DE4          16      LD  HL,(LEFTX)
001579 DC19 D1              10      POP DE
00157A DC1A A7               4      AND A
00157B DC1B ED52            15      SBC HL,DE
00157D DC1D 225DE4          16      LD  (LEFTX),HL
001580 DC20 2830            12      JR  Z,RBREND
                                
       DC22                     RBRB:
001582 DC22 CDF3DC          17      CALL    RBXB
001585 DC25 2815            12      JR  Z,RBRC
       DC27                     RBRB1:
001587 DC27 C5              11      PUSH    BC
001588 DC28 D5              11      PUSH    DE
001589 DC29 CDC1D7          17      CALL    CLUSTX
00158C DC2C CD48DD          17      CALL    DRDC
00158F DC2F D1              10      POP DE
001590 DC30 C1              10      POP BC
001591 DC31 D440DF          17      CALL    NC,GNCLX
001594 DC34 DAA5DB          10      JP  C,RBRERR
001597 DC37 10EE            13      DJNZ    RBRB1
001599 DC39 CD92DD          17      CALL    DRW_FLUSH
       DC3C                     RBRC:
00159C DC3C CD0BDD          17      CALL    RBXC
00159F DC3F 2811            12      JR  Z,RBREND
0015A1 DC41 C5              11      PUSH    BC
0015A2 DC42 CDC1D7          17      CALL    CLUSTX
0015A5 DC45 CDABDD          17      CALL    DRDX
0015A8 DC48 C1              10      POP BC
0015A9 DC49 DAA5DB          10      JP  C,RBRERR
0015AC DC4C EB               4      EX  DE,HL
0015AD DC4D 2A7EE5          16      LD  HL,(_DTBUF)
0015B0 DC50 EDB0                    LDIR
       DC52                     RBREND:
0015B2 DC52 CD17DD          17      CALL    RBXEND
       DC55                     RBREND0:
0015B5 DC55 FDE1            14      POP IY
0015B7 DC57 C1              10      POP BC
0015B8 DC58 D1              10      POP DE
0015B9 DC59 F1              10      POP AF  ;(HL)
0015BA DC5A AF               4      XOR A
0015BB DC5B 3E00             7  RBRAP:  LD  A,000H
0015BD DC5D C9              10      RET
                                
       DC5E                     RBRDIR:
0015BE DC5E FD6E1A          19      LD  L,(IY+26)   ;(FCB)ファイルの先頭クラスタ
0015C1 DC61 FD661B          19      LD  H,(IY+27)
0015C4 DC64 CD01D8          17      CALL    CHDIR
0015C7 DC67 AF               4      XOR A
0015C8 DC68 67               4      LD  H,A
0015C9 DC69 6F               4      LD  L,A
0015CA DC6A 3C               4      INC A
0015CB DC6B 325CDC          13      LD  (RBRAP+1),A
0015CE DC6E 18E5            12      JR  RBREND0
                                
       DC70                     RBX0:
0015D0 DC70 2A8AE4          16      LD  HL,(_DTA)
0015D3 DC73 225FE4          16      LD  (DTAX),HL
0015D6 DC76 2A5DE4          16      LD  HL,(LEFTX)
0015D9 DC79 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
0015DC DC7C D6FD             7      SUB 0FDH
0015DE DC7E C9              10      RET
                                
       DC7F                     RBX1:               ;ファイルサイズとランダムレコードを比べる
0015DF DC7F E5              11      PUSH    HL      ;Record byte
                                                ;AHL=File size
0015E0 DC80 FD6E10          19      LD  L,(IY+16)   ;ファイルのサイズ(バイト単位)
0015E3 DC83 FD6611          19      LD  H,(IY+17)   ;
0015E6 DC86 FD7E12          19      LD  A,(IY+18)   ;
                                
0015E9 DC89 CD2EDD          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
0015EC DC8C A7               4      AND A
0015ED DC8D ED52            15      SBC HL,DE
0015EF DC8F 99               4      SBC A,C
0015F0 DC90 4F               4      LD  C,A
0015F1 DC91 FD7E13          19      LD  A,(IY+19)   ;ファイルのサイズ
0015F4 DC94 98               4      SBC A,B
0015F5 DC95 D1              10      POP DE
0015F6 DC96 C9              10      RET
       DC97                     RBX1R:
0015F7 DC97 47               4      LD  B,A
0015F8 DC98 B1               4      OR  C
0015F9 DC99 EB               4      EX  DE,HL   ;BCDE=File byte HL=Record byte
0015FA DC9A B2               4      OR  D
0015FB DC9B B3               4      OR  E
0015FC DC9C C0              11      RET NZ
0015FD DC9D 37               4      SCF
0015FE DC9E C9              10      RET
                                
       DC9F                     RBX2:               ;Cluster settings
0015FF DC9F FD6622          19      LD  H,(IY+34)   ;(+33)(FCB)ランダムレコード
001602 DCA2 FD4E23          19      LD  C,(IY+35)
001605 DCA5 0600             7      LD  B,0
001607 DCA7 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
00160B DCAB 2003            12      JR  NZ,RBX3
00160D DCAD FD4624          19      LD  B,(IY+36)
       DCB0                     RBX3:
001610 DCB0 CDB6D9          17      CALL    RWXR
001613 DCB3 3AD5DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
001616 DCB6 3D               4      DEC A
001617 DCB7 FDA622          19      AND (IY+34)
00161A DCBA FDB621          19      OR  (IY+33)
00161D DCBD C9              10      RET
                                
       DCBE                     RBXA:
00161E DCBE C5              11      PUSH    BC
00161F DCBF D5              11      PUSH    DE
001620 DCC0 CDC1D7          17      CALL    CLUSTX
001623 DCC3 CDABDD          17      CALL    DRDX
001626 DCC6 D1              10      POP DE
001627 DCC7 C1              10      POP BC
001628 DCC8 D440DF          17      CALL    NC,GNCLX
00162B DCCB D8              11      RET C
00162C DCCC ED53FEE5        20      LD  (_CLPS),DE
                                
001630 DCD0 FD4E21          19      LD  C,(IY+33)   ;(FCB)ランダムレコード
001633 DCD3 210004          10  SECSZ:  LD  HL,0400H    ;自己書き換え 1024=0400H / 512=0200H ここに1セクタのサイズが格納される
001636 DCD6 7C               4      LD  A,H
001637 DCD7 3D               4      DEC A       ;1024=3 / 512=1
001638 DCD8 FDA622          19      AND (IY+34)     ;(FCB)ランダムレコード
00163B DCDB 47               4      LD  B,A     ;BCに1セクタ以下の端数が入る
00163C DCDC ED42            15      SBC HL,BC       ;残りを計算
                                
00163E DCDE ED5B5DE4        20      LD  DE,(LEFTX)
001642 DCE2 ED52            15      SBC HL,DE       ;CP HL,DE
001644 DCE4 19              11      ADD HL,DE       ;
001645 DCE5 3801            12      JR  C,RBXA1     ;DEとHLを比較して大きい方をHLに
001647 DCE7 EB               4      EX  DE,HL
       DCE8                     RBXA1:
001648 DCE8 E5              11      PUSH    HL
001649 DCE9 2A7EE5          16      LD  HL,(_DTBUF)
00164C DCEC 09              11      ADD HL,BC
00164D DCED ED5B5FE4        20      LD  DE,(DTAX)
001651 DCF1 C1              10      POP BC
001652 DCF2 C9              10      RET
                                
       DCF3                     RBXB:
001653 DCF3 2A5FE4          16      LD  HL,(DTAX)
001656 DCF6 ED5BFEE5        20      LD  DE,(_CLPS)
00165A DCFA 3A5EE4          13      LD  A,(LEFTX+1)
00165D DCFD 47               4      LD  B,A
00165E DCFE 3AD5DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       DD01                     RBXB1:
001661 DD01 1F               4      RRA     ;->CF
001662 DD02 3804            12      JR  C,RBXB2
001664 DD04 CB38             8      SRL B   ;B=B/2
001666 DD06 18F9            12      JR  RBXB1
       DD08                     RBXB2:
001668 DD08 78               4      LD  A,B
001669 DD09 B7               4      OR  A
00166A DD0A C9              10      RET
                                
       DD0B                     RBXC:
00166B DD0B ED4B5DE4        20      LD  BC,(LEFTX)
00166F DD0F 3AD5DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
001672 DD12 3D               4      DEC A
001673 DD13 A0               4      AND B
001674 DD14 47               4      LD  B,A     ;1セクタ以下の端数がない場合はZ
001675 DD15 B1               4      OR  C
001676 DD16 C9              10      RET
                                
       DD17                     RBXEND:             ;レコード数だけランダムレコードを進める
001677 DD17 110000          10      LD  DE,0        ;進めるレコード数(RBSIZE)
       DD18                     RBSIZE  EQU $-2
00167A DD1A CD65DA          17      CALL    GET_RR_AHL
00167D DD1D 19              11      ADD HL,DE
00167E DD1E CE00             7      ADC A,0
001680 DD20 CD6FDA          17      CALL    SET_RR_AHL
001683 DD23 EB               4      EX  DE,HL       ;HL=進めるレコード数
001684 DD24 D0              11      RET NC
001685 DD25 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
001689 DD29 C0              11      RET NZ
00168A DD2A FD3424          23      INC (IY+36)
00168D DD2D C9              10      RET
                                
       DD2E                     GET_RR_BCDE:            ;BCDE=Random record
00168E DD2E FD5E21          19      LD  E,(IY+33)   ;(FCB)ランダムレコード
001691 DD31 FD5622          19      LD  D,(IY+34)
001694 DD34 FD4E23          19      LD  C,(IY+35)
001697 DD37 0600             7      LD  B,0     ;CP/M互換のアクセスの場合はFCBは36バイト
001699 DD39 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
00169D DD3D C0              11      RET NZ
00169E DD3E FD4624          19      LD  B,(IY+36)
0016A1 DD41 C9              10      RET
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめる
                                
       DD42                     DWTC:
0016A2 DD42 E5              11      PUSH    HL
0016A3 DD43 21D2E0          10      LD  HL,DWT24B
0016A6 DD46 1804            12      JR  DWTC1
       DD48                     DRDC:
0016A8 DD48 E5              11      PUSH    HL
0016A9 DD49 21C2E0          10      LD  HL,DRD24B
       DD4C                     DWTC1:
0016AC DD4C 22A6DD          16      LD  (DRWF_MODE),HL
0016AF DD4F E1              10      POP HL
0016B0 DD50 3A96DD          13      LD  A,(DRWF_B)
0016B3 DD53 B7               4      OR  A
0016B4 DD54 200F            12      JR  NZ,DRDC1
       DD56                     SAVE_DRWC:
0016B6 DD56 0601             7      LD  B,1
0016B8 DD58 ED4395DD        20      LD  (DRWF_C),BC
0016BC DD5C ED539CDD        20      LD  (DRWF_E),DE
0016C0 DD60 229FDD          16      LD  (DRWF_HL),HL
0016C3 DD63 1820            12      JR  INC_HL_DRWC
       DD65                     DRDC1:
0016C5 DD65 E5              11      PUSH    HL
0016C6 DD66 219CDD          10      LD  HL,DRWF_E
0016C9 DD69 86               7      ADD A,(HL)
0016CA DD6A F5              11      PUSH    AF
0016CB DD6B BB               4      CP  E
0016CC DD6C 201D            12      JR  NZ,DRDC2
0016CE DD6E F1              10      POP AF
0016CF DD6F 23               6      INC HL
0016D0 DD70 7E               7      LD  A,(HL)
0016D1 DD71 CE00             7      ADC A,0
0016D3 DD73 F5              11      PUSH    AF
0016D4 DD74 BA               4      CP  D
0016D5 DD75 2014            12      JR  NZ,DRDC2
0016D7 DD77 F1              10      POP AF
0016D8 DD78 3A95DD          13      LD  A,(DRWF_C)
0016DB DD7B CE00             7      ADC A,0
0016DD DD7D B9               4      CP  C
0016DE DD7E 200C            12      JR  NZ,DRDC3
0016E0 DD80 2196DD          10      LD  HL,DRWF_B
0016E3 DD83 34              11      INC (HL)
0016E4 DD84 E1              10      POP HL
       DD85                     INC_HL_DRWC:
0016E5 DD85 3AD5DC          13      LD  A,(SECSZ+2)     ;1セクタのサイズの上位1バイト
0016E8 DD88 84               4      ADD A,H
0016E9 DD89 67               4      LD  H,A
0016EA DD8A C9              10      RET
       DD8B                     DRDC2:
0016EB DD8B F1              10      POP AF
       DD8C                     DRDC3:
0016EC DD8C CD92DD          17      CALL    DRW_FLUSH
0016EF DD8F E1              10      POP HL
0016F0 DD90 18C4            12      JR  SAVE_DRWC
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめたものをフラッシュする
       DD92                     DRW_FLUSH:
0016F2 DD92 C5              11      PUSH    BC
0016F3 DD93 D5              11      PUSH    DE
0016F4 DD94 010000          10      LD  BC,0
       DD95                     DRWF_C  EQU $-2
       DD96                     DRWF_B  EQU $-1
0016F7 DD97 78               4      LD  A,B
0016F8 DD98 B7               4      OR  A
0016F9 DD99 280D            12      JR  Z,DRDF1
0016FB DD9B 110000          10      LD  DE,0
       DD9C                     DRWF_E  EQU $-2
       DD9D                     DRWF_D  EQU $-1
0016FE DD9E 210000          10      LD  HL,0
       DD9F                     DRWF_HL EQU $-2
001701 DDA1 AF               4      XOR A
001702 DDA2 3296DD          13      LD  (DRWF_B),A
001705 DDA5 CDC2E0          17      CALL    DRD24B
       DDA6                     DRWF_MODE   EQU $-2
       DDA8                     DRDF1:
001708 DDA8 D1              10      POP DE
001709 DDA9 C1              10      POP BC
00170A DDAA C9              10      RET
[EOF:LDFILE2.ASM:SHIFT_JIS]
                                    INCLUDE "LDDIO.ASM"
                                
                                ;   LSX-Dodgers DIO
                                
       DDAB                     DRDX:
00170B DDAB CDE9DD          17      CALL    DRDY
00170E DDAE C8              11      RET Z
00170F DDAF CDCFDD          17      CALL    DRDX1       ;データバッファの情報を保存
001712 DDB2 D8              11      RET C
001713 DDB3 E5              11      PUSH    HL
001714 DDB4 C5              11      PUSH    BC
001715 DDB5 D5              11      PUSH    DE
001716 DDB6 2A7EE5          16      LD  HL,(_DTBUF)
001719 DDB9 3A12DE          13      LD  A,(_DBS24+1)
00171C DDBC 4F               4      LD  C,A
00171D DDBD CDC0E0          17      CALL    DRD24
001720 DDC0 DCE4DD          17      CALL    C,DRDNE
       DDC3                     POP_DE_BC_HL_RET:
001723 DDC3 D1              10      POP DE
001724 DDC4 C1              10      POP BC
001725 DDC5 E1              10      POP HL
001726 DDC6 C9              10      RET
                                
                                ;   CDE:セクタ番号
       DDC7                     DRDN:
001727 DDC7 AF               4      XOR A
001728 DDC8 00               4  DRDN1:  NOP         ;自己書き換え NOP / SCF
001729 DDC9 30E0            12      JR  NC,DRDX
       DDCB                     DRDNX:
00172B DDCB CDE9DD          17      CALL    DRDY
00172E DDCE C8              11      RET Z
       DDCF                     DRDX1:
00172F DDCF CDFFDD          17      CALL    DWTX
                                                ;データバッファの読み込んだドライブ・セクタ情報を保存
001732 DDD2 ED53A6E4        20      LD  (_DBSEC),DE
001736 DDD6 79               4      LD  A,C
001737 DDD7 3212DE          13      LD  (_DBS24+1),A
                                
00173A DDDA 3A88E4          13      LD  A,(_DRV)
00173D DDDD 32A5E4          13      LD  (_DBDRV),A
001740 DDE0 CDD9E4          17      CALL    _CHGDRV
001743 DDE3 D0              11      RET NC
       DDE4                     DRDNE:
001744 DDE4 9F               4      SBC A,A     ;CF=1ならばA=0FFH
001745 DDE5 32A5E4          13      LD  (_DBDRV),A
001748 DDE8 C9              10      RET
                                
                                ;   CDE:セクタ番号
       DDE9                     DRDY:
001749 DDE9 3A12DE          13      LD  A,(_DBS24+1)
00174C DDEC B9               4      CP  C
00174D DDED C0              11      RET NZ
                                
00174E DDEE E5              11      PUSH    HL
00174F DDEF 3A88E4          13      LD  A,(_DRV)
001752 DDF2 21A5E4          10      LD  HL,_DBDRV
001755 DDF5 AE               7      XOR (HL)
001756 DDF6 2005            12      JR  NZ,POP_HL_RET
                                
001758 DDF8 2AA6E4          16      LD  HL,(_DBSEC)
00175B DDFB ED52            15      SBC HL,DE       ;CF=0
       DDFD                     POP_HL_RET:
00175D DDFD E1              10      POP HL
00175E DDFE C9              10      RET
                                
       DDFF                     DWTX:
00175F DDFF 3AA4E4          13      LD  A,(_WTDBF)
001762 DE02 B7               4      OR  A
001763 DE03 C8              11      RET Z
001764 DE04 AF               4      XOR A
001765 DE05 32A4E4          13      LD  (_WTDBF),A
                                
001768 DE08 E5              11      PUSH    HL
001769 DE09 C5              11      PUSH    BC
00176A DE0A D5              11      PUSH    DE
00176B DE0B 3AA5E4          13      LD  A,(_DBDRV)
00176E DE0E CDD9E4          17      CALL    _CHGDRV
001771 DE11 0E00             7  _DBS24: LD  C,0
001773 DE13 ED5BA6E4        20      LD  DE,(_DBSEC)
001777 DE17 2A7EE5          16      LD  HL,(_DTBUF)
00177A DE1A D4D0E0          17      CALL    NC,DWT24
       DE1D                     POP_DE_BC_HL_RET2:
00177D DE1D 18A4            12      JR  POP_DE_BC_HL_RET
                                
       DE1F                     RDFATX:
00177F DE1F E5              11      PUSH    HL
001780 DE20 3A88E4          13      LD  A,(_DRV)
001783 DE23 21AAE4          10      LD  HL,_FATDRV
001786 DE26 AE               7      XOR (HL)
001787 DE27 28D4            12      JR  Z,POP_HL_RET
                                
001789 DE29 C5              11      PUSH    BC
00178A DE2A D5              11      PUSH    DE
00178B DE2B DDE5            15      PUSH    IX
00178D DE2D CD49DE          17      CALL    WTFATX
001790 DE30 3813            12      JR  C,POP_IX_DE_BC_HL_RET
                                
001792 DE32 AF               4      XOR A
001793 DE33 32ABE4          13      LD  (_FATIX),A
001796 DE36 3A88E4          13      LD  A,(_DRV)
001799 DE39 32AAE4          13      LD  (_FATDRV),A
00179C DE3C CDE5E4          17      CALL    _RDFAT
       DE3F                     RDFATE2:
00179F DE3F 3004            12      JR  NC,POP_IX_DE_BC_HL_RET
0017A1 DE41 9F               4      SBC A,A     ;A=0xFF
0017A2 DE42 32AAE4          13      LD  (_FATDRV),A
       DE45                     POP_IX_DE_BC_HL_RET:
0017A5 DE45 DDE1            14      POP IX
0017A7 DE47 18D4            12      JR  POP_DE_BC_HL_RET2
                                
       DE49                     WTFATX:
0017A9 DE49 3AA2E4          13      LD  A,(_WTFATF)
0017AC DE4C B7               4      OR  A
0017AD DE4D C8              11      RET Z
0017AE DE4E E5              11      PUSH    HL
0017AF DE4F 3AAAE4          13      LD  A,(_FATDRV)
0017B2 DE52 21A5E4          10      LD  HL,_DBDRV
0017B5 DE55 AE               7      XOR (HL)
0017B6 DE56 CCFFDD          17      CALL    Z,DWTX
0017B9 DE59 38A2            12      JR  C,POP_HL_RET
0017BB DE5B C5              11      PUSH    BC
0017BC DE5C D5              11      PUSH    DE
0017BD DE5D DDE5            15      PUSH    IX
0017BF DE5F CDDDE0          17      CALL    WTFAT
0017C2 DE62 AF               4      XOR A
0017C3 DE63 32A2E4          13      LD  (_WTFATF),A
0017C6 DE66 18DD            12      JR  POP_IX_DE_BC_HL_RET
                                
       DE68                     NCL1:
0017C8 DE68 7A               4      LD  A,D
0017C9 DE69 B3               4      OR  E
0017CA DE6A 37               4      SCF
0017CB DE6B C8              11      RET Z
                                
0017CC DE6C 7A               4      LD  A,D
0017CD DE6D CB3F             8      SRL A   ;/2
0017CF DE6F CB3F             8      SRL A   ;/2
                                
0017D1 DE71 E5              11      PUSH    HL
0017D2 DE72 3291DE          13      LD  (NCLPAT+2),A    ;_FATIX
0017D5 DE75 2AAAE4          16      LD  HL,(_FATDRV)    ;L=_FATDRV H=_FATIX
0017D8 DE78 BC               4      CP  H
0017D9 DE79 3A88E4          13      LD  A,(_DRV)    ;この間でフラグは変化しない
0017DC DE7C 3290DE          13      LD  (NCLPAT+1),A    ;_FATDRV
0017DF DE7F 2005            12      JR  NZ,NCL2     ;FATIXが違う
0017E1 DE81 BD               4      CP  L
0017E2 DE82 2002            12      JR  NZ,NCL2     ;ドライブが違う
0017E4 DE84 E1              10      POP HL
0017E5 DE85 C9              10      RET
       DE86                     NCL2:
0017E6 DE86 C5              11      PUSH    BC
0017E7 DE87 D5              11      PUSH    DE
0017E8 DE88 DDE5            15      PUSH    IX
0017EA DE8A CD49DE          17      CALL    WTFATX
0017ED DE8D 38B6            12      JR  C,POP_IX_DE_BC_HL_RET
0017EF DE8F 010000          10  NCLPAT: LD  BC,0        ;自己書き換え C=_FATDRV B=_FATIX
0017F2 DE92 ED43AAE4        20      LD  (_FATDRV),BC
0017F6 DE96 CDB2E0          17      CALL    RDFATS
0017F9 DE99 18A4            12      JR  RDFATE2
                                
       DE9B                     NCL3:
0017FB DE9B CB9A             8      RES 3,D
0017FD DE9D CB92             8      RES 2,D
0017FF DE9F 6B               4      LD  L,E
001800 DEA0 62               4      LD  H,D
001801 DEA1 CB3C             8      SRL H   ;
001803 DEA3 CB1D             8      RR  L   ;HLA=HLA/2
001805 DEA5 1F               4      RRA     ;
001806 DEA6 F5              11      PUSH    AF
001807 DEA7 3AABE4          13      LD  A,(_FATIX)
00180A DEAA 0F               4      RRCA
00180B DEAB 300B            12      JR  NC,NCL3X1
00180D DEAD 3AD5DC          13      LD  A,(SECSZ+2)
001810 DEB0 FE04             7      CP  4       ;1セクタ1024バイトの場合は奇数インデックスの場合に先頭を512バイトずらす
001812 DEB2 2004            12      JR  NZ,NCL3X1
001814 DEB4 010002          10      LD  BC,512
001817 DEB7 09              11      ADD HL,BC
       DEB8                     NCL3X1:
001818 DEB8 F1              10      POP AF
001819 DEB9 ED4B7CE5        20      LD  BC,(_FATBF)
00181D DEBD 19              11      ADD HL,DE
00181E DEBE 09              11      ADD HL,BC
00181F DEBF 17               4      RLA
001820 DEC0 C9              10      RET
                                
       DEC1                     GNCL:
001821 DEC1 CD68DE          17      CALL    NCL1        ;GET NEXT CLUSTER
001824 DEC4 D8              11      RET C
001825 DEC5 C5              11      PUSH    BC
001826 DEC6 E5              11      PUSH    HL
001827 DEC7 CD9BDE          17      CALL    NCL3
00182A DECA 3809            12      JR  C,GNC1
00182C DECC 5E               7      LD  E,(HL)
00182D DECD 23               6      INC HL
00182E DECE 7E               7      LD  A,(HL)
00182F DECF E60F             7      AND 00FH
001831 DED1 57               4      LD  D,A
001832 DED2 E1              10      POP HL
001833 DED3 C1              10      POP BC
001834 DED4 C9              10      RET
       DED5                     GNC1:
001835 DED5 7E               7      LD  A,(HL)
001836 DED6 23               6      INC HL
001837 DED7 56               7      LD  D,(HL)
001838 DED8 0604             7      LD  B,4
       DEDA                     GNC1L:
00183A DEDA CB3A             8      SRL D   ;DA=DA/2
00183C DEDC 1F               4      RRA     ;
00183D DEDD 10FB            13      DJNZ    GNC1L
                                
00183F DEDF 5F               4      LD  E,A
001840 DEE0 E1              10      POP HL
001841 DEE1 C1              10      POP BC
001842 DEE2 A7               4      AND A
001843 DEE3 C9              10      RET
                                
       DEE4                     SNCL:
001844 DEE4 CD68DE          17      CALL    NCL1
001847 DEE7 D8              11      RET C
                                ;               SET NEXT CLUSTER
001848 DEE8 E5              11      PUSH    HL
001849 DEE9 C5              11      PUSH    BC
00184A DEEA D5              11      PUSH    DE
00184B DEEB E5              11      PUSH    HL
00184C DEEC CD9BDE          17      CALL    NCL3
00184F DEEF D1              10      POP DE
                                ;CF=ODD
001850 DEF0 7E               7      LD  A,(HL)
001851 DEF1 73               7      LD  (HL),E
001852 DEF2 3806            12      JR  C,SNC1
                                ;EVEN
                                ;M[0] = E
                                ;M[1] = (M[1] & 0xF0) | (D & 0x0F)
001854 DEF4 23               6      INC HL
001855 DEF5 ED67            18      RRD     ;M={A[3:0],E[3:0]}
001857 DEF7 7A               4      LD  A,D
001858 DEF8 1804            12      JR  SNC11
       DEFA                     SNC1:
                                ;ODD
                                ;HL[0] = (HL[0]&0x0F) | (E<<4)
                                ;HL[1] = DE>>4
00185A DEFA ED6F            18      RLD     ;M={D[3:0],E[7:4]}
00185C DEFC 23               6      INC HL
00185D DEFD 72               7      LD  (HL),D  ;M={D[3:0],E[7:4]}
       DEFE                     SNC11:
00185E DEFE ED6F            18      RLD     ;M={M[7:4],D[3:0]}
001860 DF00 B7               4      OR  A
001861 DF01 D1              10      POP DE
001862 DF02 C1              10      POP BC
001863 DF03 E1              10      POP HL
       DF04                     FAT_CHANGED:
001864 DF04 3E01             7      LD  A,1
001866 DF06 32A2E4          13      LD  (_WTFATF),A
001869 DF09 C9              10      RET
                                
       DF0A                     N16CL3:
00186A DF0A C5              11      PUSH    BC
00186B DF0B 6B               4      LD  L,E
00186C DF0C 7A               4      LD  A,D
00186D DF0D E603             7      AND 3
00186F DF0F 67               4      LD  H,A
001870 DF10 29              11      ADD HL,HL
001871 DF11 ED4B7CE5        20      LD  BC,(_FATBF)
001875 DF15 09              11      ADD HL,BC
001876 DF16 C1              10      POP BC
001877 DF17 C9              10      RET
                                
       DF18                     GNCL16:
001878 DF18 CD68DE          17      CALL    NCL1        ;GET NEXT CLUSTER for FAT16
00187B DF1B D8              11      RET C
00187C DF1C E5              11      PUSH    HL
00187D DF1D CD0ADF          17      CALL    N16CL3
001880 DF20 5E               7      LD  E,(HL)
001881 DF21 23               6      INC HL
001882 DF22 56               7      LD  D,(HL)
001883 DF23 E1              10      POP HL
001884 DF24 C9              10      RET
                                
       DF25                     SNCL16:
001885 DF25 CD68DE          17      CALL    NCL1        ;GET NEXT CLUSTER for FAT16
001888 DF28 D8              11      RET C
001889 DF29 D5              11      PUSH    DE
00188A DF2A E5              11      PUSH    HL
00188B DF2B CD0ADF          17      CALL    N16CL3
00188E DF2E D1              10      POP DE      ;HL
00188F DF2F 73               7      LD  (HL),E
001890 DF30 23               6      INC HL
001891 DF31 72               7      LD  (HL),D
001892 DF32 6B               4      LD  L,E
001893 DF33 62               4      LD  H,D
001894 DF34 D1              10      POP DE
001895 DF35 18CD            12      JR  FAT_CHANGED
                                
                                ;------------------------
                                ;次のセクタを探す際に_SECPSの値をチェック
                                ;in
                                ;   DE : セクタ番号
                                ;out
                                ;   DE : 次のセクタ番号
                                ;note
                                ;
                                ;------------------------
       DF37                     NEXTX:
001897 DF37 3E00             7  _SECPS: LD  A,0 ;自己書き換え
001899 DF39 3C               4      INC A
00189A DF3A E600             7  NCPAT:  AND 0   ;自己書き換え　1クラスタの論理セクタ数-1
00189C DF3C 3238DF          13      LD  (_SECPS+1),A
00189F DF3F C9              10      RET
                                
       DF40                     GNCLX:
0018A0 DF40 CD37DF          17      CALL    NEXTX
0018A3 DF43 C0              11      RET NZ  ;1クラスタのセクタ未満の場合は戻る
0018A4 DF44 C3F7E4          10      JP  _GNCL   ;次のクラスタを探す
                                
       DF47                     RDFAT:
0018A7 DF47 3E80             7      LD  A,080H
0018A9 DF49 3270E4          13      LD  (CHECK),A
       DF4C                     RDFAT1:
0018AC DF4C 3A88E4          13      LD  A,(_DRV)
0018AF DF4F CD07E2          17      CALL    CHGDRVR
0018B2 DF52 D8              11      RET C
0018B3 DF53 DD7E12          19      LD  A,(IX+DPB_DEVICE)
0018B6 DF56 CB6F             8      BIT 5,A
0018B8 DF58 286B            12      JR  Z,RDFAT0X
0018BA DF5A 2170E4          10      LD  HL,CHECK
0018BD DF5D A6               7      AND (HL)
0018BE DF5E 77               7      LD  (HL),A
0018BF DF5F 110000          10      LD  DE,0        ;BPB
0018C2 DF62 2A7CE5          16      LD  HL,(_FATBF)
0018C5 DF65 CDBEE0          17      CALL    DRD16
0018C8 DF68 3024            12      JR  NC,GETBPB
0018CA DF6A 2170E4          10      LD  HL,CHECK
0018CD DF6D CB06            15      RLC (HL)
0018CF DF6F 3F               4      CCF
0018D0 DF70 D8              11      RET C
0018D1 DF71 DDCB0A1E        23      RR  (IX+DPB_FDMODE)
0018D5 DF75 3F               4      CCF         ;フロッピーディスクのFDモードを切り替える
0018D6 DF76 DDCB0A16        23      RL  (IX+DPB_FDMODE)
0018DA DF7A 3EFF             7      LD  A,0FFH
0018DC DF7C 3289E4          13      LD  (_DSK),A
0018DF DF7F 3A84E4          13      LD  A,(_DRIVE)
0018E2 DF82 E603             7      AND 3
0018E4 DF84 F680             7      OR  080H
0018E6 DF86 6F               4      LD  L,A
0018E7 DF87 26E4             7      LD  H,_CYL0/256
0018E9 DF89 3EFF             7      LD  A,0FFH
0018EB DF8B 77               7      LD  (HL),A
0018EC DF8C 18BE            12      JR  RDFAT1
       DF8E                     GETBPB:
0018EE DF8E FDE5            15      PUSH    IY
0018F0 DF90 FD2A7CE5        20      LD  IY,(_FATBF) ;BPB
0018F4 DF94 CDF1E4          17      CALL    _BPB2DPB
0018F7 DF97 FDE1            14      POP IY
0018F9 DF99 DD7E12          19      LD  A,(IX+DPB_DEVICE)
0018FC DF9C 3021            12      JR  NC,GETBPBOK
0018FE DF9E E60F             7      AND 00FH
001900 DFA0 FE07             7      CP  7
001902 DFA2 37               4      SCF
001903 DFA3 C0              11      RET NZ
001904 DFA4 DDCB0A46        20      BIT 0,(IX+DPB_FDMODE)
001908 DFA8 21C0E5          10      LD  HL,M2D
00190B DFAB 2002            12      JR  NZ,SETFDMODE
00190D DFAD 2ED2             7      LD  L,M2HD-STABLE
       DFAF                     SETFDMODE:
00190F DFAF DDE5            15      PUSH    IX
001911 DFB1 D1              10      POP DE
001912 DFB2 EDA0            16      LDI
001914 DFB4 EDA0            16      LDI
001916 DFB6 13               6      INC DE
001917 DFB7 13               6      INC DE
001918 DFB8 13               6      INC DE
001919 DFB9 13               6      INC DE
00191A DFBA 010C00          10      LD  BC,12
00191D DFBD EDB0                    LDIR
       DFBF                     GETBPBOK:
00191F DFBF 32CEDF          13      LD  (DEVSWC),A
001922 DFC2 CD66E1          17      CALL    CHGDRV2
       DFC5                     RDFAT0X:
001925 DFC5 CDB2E0          17      CALL    RDFATS
001928 DFC8 D8              11      RET C
001929 DFC9 DDAE06          19      XOR (IX+DPB_FATID)
00192C DFCC C8              11      RET Z
00192D DFCD 3E00             7      LD  A,0     ;DPB_DEVICE
       DFCE                     DEVSWC  EQU $-1
00192F DFCF CB6F             8      BIT 5,A
001931 DFD1 C0              11      RET NZ      ;BPBを取得している場合はFATIDをチェックしない
001932 DFD2 37               4      SCF
001933 DFD3 C9              10      RET
                                
       DFD4                     BPB2DPB:
001934 DFD4 FD7E0B          19      LD  A,(IY+11)   ;BPB_BytsPerSec
001937 DFD7 B7               4      OR  A
001938 DFD8 37               4      SCF
001939 DFD9 C0              11      RET NZ
       DFDA                     BPBOK:
00193A DFDA FD7E0D          19      LD  A,(IY+13)   ;BPB_SecPerClus
00193D DFDD DD7707          19      LD  (IX+DPB_SECPCL),A
                                
001940 DFE0 FD7E16          19      LD  A,(IY+22)   ;BPB_FATSz16
001943 DFE3 DD7700          19      LD  (IX+DPB_FATLN),A
001946 DFE6 FD7E17          19      LD  A,(IY+23)   ;BPB_FATSz16
001949 DFE9 DD7701          19      LD  (IX+DPB_FATLN+1),A
                                
00194C DFEC FD6E0E          19      LD  L,(IY+14)   ;BPB_RsvdSecCnt
00194F DFEF FD660F          19      LD  H,(IY+15)
001952 DFF2 DD750E          19      LD  (IX+DPB_FATPS),L
001955 DFF5 FD5E16          19      LD  E,(IY+22)   ;BPB_FATSz16
001958 DFF8 FD5617          19      LD  D,(IY+23)
00195B DFFB FD4610          19      LD  B,(IY+16)   ;BPB_NumFATs
       DFFE                     BPBDP1:             ;BPB_FATSz16 * BPB_NumFATs
00195E DFFE 19              11      ADD HL,DE
00195F DFFF 10FD            13      DJNZ    BPBDP1
       E001                     BPBDP2:
001961 E001 DD7510          19      LD  (IX+DPB_DIRPS),L
001964 E004 DD7411          19      LD  (IX+DPB_DIRPS+1),H
001967 E007 E5              11      PUSH    HL
                                
001968 E008 FD6E11          19      LD  L,(IY+17)   ;BPB_RootEntCnt
00196B E00B FD6612          19      LD  H,(IY+18)
00196E E00E FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
001971 E011 B7               4      OR  A
001972 E012 37               4      SCF
001973 E013 C8              11      RET Z
001974 E014 0606             7      LD  B,6
       E016                     BPBBPS1:
001976 E016 05               4      DEC B
001977 E017 0F               4      RRCA
001978 E018 30FC            12      JR  NC,BPBBPS1
       E01A                     BPBDE1:
00197A E01A 29              11      ADD HL,HL
00197B E01B 10FD            13      DJNZ    BPBDE1
                                
00197D E01D 7C               4      LD  A,H
00197E E01E DD770B          19      LD  (IX+DPB_DIRSCNT),A  ;
                                
001981 E021 D1              10      POP DE      ;DPB_DIRPS
001982 E022 6C               4      LD  L,H
001983 E023 2600             7      LD  H,0
001985 E025 19              11      ADD HL,DE       ;MAXDIR
001986 E026 E5              11      PUSH    HL
001987 E027 FD4E0D          19      LD  C,(IY+13)   ;BPB_SecPerClus
00198A E02A CB21             8      SLA C       ;*2
00198C E02C AF               4      XOR A
00198D E02D 47               4      LD  B,A
00198E E02E ED42            15      SBC HL,BC
001990 E030 DD7514          19      LD  (IX+DPB_ADDCL),L
001993 E033 DD7415          19      LD  (IX+DPB_ADDCL+1),H
                                
001996 E036 D1              10      POP DE      ;DE=DPB_MAXDIR
001997 E037 FD6E13          19      LD  L,(IY+19)   ;BPB_TotSec16
00199A E03A FD6614          19      LD  H,(IY+20)
                                
00199D E03D DD7E12          19      LD  A,(IX+DPB_DEVICE)
0019A0 E040 E60F             7      AND 00FH
0019A2 E042 FE07             7      CP  7       ;フロッピー
0019A4 E044 2019            12      JR  NZ,NOT_FD
0019A6 E046 E5              11      PUSH    HL
0019A7 E047 FD4E18          19      LD  C,(IY+24)   ;BPB_SecPerTr
0019AA E04A DD710D          19      LD  (IX+DPB_MAXSEC),C
0019AD E04D AF               4      XOR A
0019AE E04E CB21             8      SLA C       ;両面なのでセクタ数を２倍
0019B0 E050 0610             7      LD  B,16
       E052                     DIVSEC:             ;MAXCYL = BPB_TotSec16 / (BPB_SecPerTr * 2)
0019B2 E052 29              11      ADD HL,HL
0019B3 E053 17               4      RLA
0019B4 E054 B9               4      CP  C
0019B5 E055 3802            12      JR  C,DIVSEC1
0019B7 E057 91               4      SUB C
0019B8 E058 2C               4      INC L
       E059                     DIVSEC1:
0019B9 E059 10F7            13      DJNZ    DIVSEC
0019BB E05B DD750C          19      LD  (IX+DPB_MAXCYL),L
0019BE E05E E1              10      POP HL  ;ここまでフロッピー専用
       E05F                     NOT_FD:
0019BF E05F 7C               4      LD  A,H
0019C0 E060 B5               4      OR  L
0019C1 E061 3E00             7      LD  A,0     ;LDでフラグは変化しない。BPB_TotSec16を AHL で扱う為、Aに0を入れる
0019C3 E063 2010            12      JR  NZ,BPB16BIT ;BPB_TotSec16が「0」の場合はBPB_TotSec32で計算
0019C5 E065 FD7E23          19      LD  A,(IY+35)   ;念のために総セクタ数が24ビットを超える場合はエラーを返す
0019C8 E068 B7               4      OR  A
0019C9 E069 37               4      SCF
0019CA E06A C0              11      RET NZ
0019CB E06B FD6E20          19      LD  L,(IY+32)   ;BPB_TotSec32 は AHL の24ビットで扱う
0019CE E06E FD6621          19      LD  H,(IY+33)   ;1クラスタの論理セクタ数(DPB_SECPCL)が最大128なので
0019D1 E071 FD7E22          19      LD  A,(IY+34)   ;24ビットを超えると必ずクラスタ数が16ビットを超えてしまうのでこれで十分
0019D4 E074 A7               4      AND A       ;CF=0
       E075                     BPB16BIT:
0019D5 E075 ED52            15      SBC HL,DE
0019D7 E077 DE00             7      SBC A,0
0019D9 E079 FD460D          19      LD  B,(IY+13)   ;BPB_SecPerClus
       E07C                     BPBTC1:             ;総クラスタ数(AHL) = 総セクタ数(AHL) / セクタサイズ(B)
0019DC E07C CB18             8      RR  B       ;->CY
0019DE E07E 3808            12      JR  C,BPBTC2
0019E0 E080 CB3F             8      SRL A
0019E2 E082 CB1C             8      RR  H       ;AHL=AHL/2
0019E4 E084 CB1D             8      RR  L
0019E6 E086 18F4            12      JR  BPBTC1
       E088                     BPBTC2:
0019E8 E088 B7               4      OR  A
0019E9 E089 37               4      SCF
0019EA E08A C0              11      RET NZ      ;念のため(クラスタ数が16ビットを超える場合)
0019EB E08B 23               6      INC HL
0019EC E08C 23               6      INC HL
0019ED E08D DD7508          19      LD  (IX+DPB_MAXCL),L
0019F0 E090 DD7409          19      LD  (IX+DPB_MAXCL+1),H
                                
0019F3 E093 FD7E15          19      LD  A,(IY+21)   ;BPB_Media
0019F6 E096 DD7706          19      LD  (IX+DPB_FATID),A
                                
0019F9 E099 FD7E10          19      LD  A,(IY+16)   ;BPB_NumFATs
0019FC E09C C6FE             7      ADD A,0-2       ;>2:CF=1
0019FE E09E FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
001A01 E0A1 6F               4      LD  L,A
001A02 E0A2 3002            12      JR  NC,BPBFAT1
001A04 E0A4 F680             7      OR  080H
       E0A6                     BPBFAT1:            ;ここではCF=0
001A06 E0A6 DD770F          19      LD  (IX+DPB_BPS),A
001A09 E0A9 2D               4      DEC L       ;以下のセクタサイズに合致しない場合はCF=1でエラーにする
001A0A E0AA C8              11      RET Z       ;1セクタ256バイト
001A0B E0AB 2D               4      DEC L
001A0C E0AC C8              11      RET Z       ;1セクタ512バイト
001A0D E0AD 2D               4      DEC L
001A0E E0AE 2D               4      DEC L
001A0F E0AF C8              11      RET Z       ;1セクタ1024バイト
001A10 E0B0 37               4      SCF
001A11 E0B1 C9              10      RET
                                
       E0B2                     RDFATS:
001A12 E0B2 CDF8E0          17      CALL    FATSETUP
001A15 E0B5 D8              11      RET C
001A16 E0B6 CDC2E0          17      CALL    DRD24B
001A19 E0B9 2A7CE5          16      LD  HL,(_FATBF)
001A1C E0BC 7E               7      LD  A,(HL)
001A1D E0BD C9              10      RET
                                
       E0BE                     DRD16:
001A1E E0BE 0E00             7      LD  C,0
       E0C0                     DRD24:
001A20 E0C0 0601             7      LD  B,1
       E0C2                     DRD24B:
001A22 E0C2 DDE5            15      PUSH    IX
001A24 E0C4 DD2AA8E4        20      LD  IX,(_DPB)
001A28 E0C8 CD4CE2          17  DRDPAT: CALL    FDRD        ;自己書き換え（ディスク読み込み）
       E0CB                     POP_IX_RET:
001A2B E0CB DDE1            14      POP IX
001A2D E0CD C9              10      RET
                                
       E0CE                     DWT16:
001A2E E0CE 0E00             7      LD  C,0
       E0D0                     DWT24:
001A30 E0D0 0601             7      LD  B,1
       E0D2                     DWT24B:
001A32 E0D2 DDE5            15      PUSH    IX
001A34 E0D4 DD2AA8E4        20      LD  IX,(_DPB)
001A38 E0D8 CD4AE2          17  DWTPAT: CALL    FDWT        ;自己書き換え（ディスク書き込み）
001A3B E0DB 18EE            12      JR  POP_IX_RET
                                
       E0DD                     WTFAT:
001A3D E0DD CDF8E0          17      CALL    FATSETUP
001A40 E0E0 D4D2E0          17      CALL    NC,DWT24B
001A43 E0E3 D8              11      RET C
001A44 E0E4 DDCB0F7E        20      BIT 7,(IX+DPB_BPS)
001A48 E0E8 C8              11      RET Z       ;予備FATが無い
001A49 E0E9 CDFFE0          17      CALL    FATS2
001A4C E0EC E5              11      PUSH    HL      ;予備FAT
001A4D E0ED DD6E00          19      LD  L,(IX+DPB_FATLN)
001A50 E0F0 DD6601          19      LD  H,(IX+DPB_FATLN+1)
001A53 E0F3 19              11      ADD HL,DE
001A54 E0F4 EB               4      EX  DE,HL
001A55 E0F5 E1              10      POP HL
001A56 E0F6 18DA            12      JR  DWT24B
                                ;------------------------
                                ;FATのセットアップ
                                ;out
                                ;   B  : FATセクタ数
                                ;   DE : FAT先頭セクタ番号
                                ;   HL : FATバッファポインタ
                                ;   CF : 1=ドライブ切り替えエラー
                                ;note
                                ;   FATサイズがFATバッファを超える場合は
                                ;   対象クラスタ領域==(_FATIX)によって
                                ;   FAT12:対象クラスタ1024毎に1.5KBを切り替える
                                ;   FAT16:対象クラスタ1024毎に2KBを切り替える
                                ;------------------------
       E0F8                     FATSETUP:
001A58 E0F8 3AAAE4          13      LD  A,(_FATDRV)
001A5B E0FB CD07E2          17      CALL    CHGDRVR     ;ドライブ切り替え
001A5E E0FE D8              11      RET C
       E0FF                     FATS2:
001A5F E0FF DD7E0F          19      LD  A,(IX+DPB_BPS)  ;512=2 1024=4
001A62 E102 0F               4      RRCA
001A63 E103 CD2CE1          17  FATSX:  CALL    FATSETUP12  ;自己書き換え
001A66 E106 210000          10      LD  HL,0
001A69 E109 4A               4      LD  C,D
001A6A E10A 54               4      LD  D,H
001A6B E10B 3AABE4          13      LD  A,(_FATIX)  ;範囲FAT12:0-3/FAT16:0-63(0-03FH):65535*2/2048
001A6E E10E 47               4      LD  B,A
001A6F E10F 04               4      INC B
001A70 E110 DD7E00          19      LD  A,(IX+DPB_FATLN)
       E113                     FAT_SKP:
001A73 E113 05               4      DEC B
001A74 E114 2805            12      JR  Z,FAT1
001A76 E116 19              11      ADD HL,DE
001A77 E117 93               4      SUB E
001A78 E118 30F9            12      JR  NC,FAT_SKP
001A7A E11A C9              10      RET
       E11B                     FAT1:
001A7B E11B EB               4      EX  DE,HL
001A7C E11C B9               4      CP  C       ;C=FATバッファに読み込めるセクタ数
001A7D E11D 3801            12      JR  C,FAT2
001A7F E11F 79               4      LD  A,C
       E120                     FAT2:
001A80 E120 47               4      LD  B,A
                                
001A81 E121 2AFAE5          16      LD  HL,(_FATPS) ;fat sector pos
001A84 E124 19              11      ADD HL,DE
001A85 E125 EB               4      EX  DE,HL
001A86 E126 2A7CE5          16      LD  HL,(_FATBF)
001A89 E129 AF               4      XOR A       ;CF=0
001A8A E12A 4F               4      LD  C,A
001A8B E12B C9              10      RET
                                ;
                                ;   FATバッファに読み込める最大のセクタ数と_FATIXで進めるセクタ数
                                ;   FATSETUP* (FAT12/FAT16)
                                ;out
                                ;   D : FATバッファに読み込める最大のセクタ数
                                ;   E : _FATIXで進めるセクタ数
       E12C                     FATSETUP12:
001A8C E12C 110606          10      LD  DE,0606H    ;256
001A8F E12F D8              11      RET C
001A90 E130 110303          10      LD  DE,0303H    ;512
001A93 E133 0F               4      RRCA
001A94 E134 D8              11      RET C
001A95 E135 110102          10      LD  DE,0201H    ;1024
001A98 E138 C9              10      RET
                                
       E139                     FATSETUP16:
001A99 E139 110808          10      LD  DE,0808H    ;256
001A9C E13C D8              11      RET C
001A9D E13D 110404          10      LD  DE,0404H
001AA0 E140 0F               4      RRCA            ;512
001AA1 E141 D8              11      RET C
001AA2 E142 110202          10      LD  DE,0202H    ;1024
001AA5 E145 C9              10      RET
                                
       E146                     CHGDRV:
001AA6 E146 E5              11      PUSH    HL
001AA7 E147 2189E4          10      LD  HL,_DSK
001AAA E14A BE               7      CP  (HL)
001AAB E14B 280A            12      JR  Z,CHGDRVE
       E14D                     CHGDRV1:
001AAD E14D DDE5            15      PUSH    IX
001AAF E14F CD59E1          17      CALL    CHGDRV0
001AB2 E152 3A89E4          13      LD  A,(_DSK)
001AB5 E155 DDE1            14      POP IX
       E157                     CHGDRVE:
001AB7 E157 E1              10      POP HL
001AB8 E158 C9              10      RET
                                
       E159                     CHGDRV0:
001AB9 E159 6F               4      LD  L,A
001ABA E15A CDDCE4          17      CALL    _GETDPB
001ABD E15D D8              11      RET C
001ABE E15E DD22A8E4        20      LD  (_DPB),IX
001AC2 E162 7D               4      LD  A,L
001AC3 E163 3289E4          13      LD  (_DSK),A
       E166                     CHGDRV2:
001AC6 E166 C5              11      PUSH    BC
001AC7 E167 D5              11      PUSH    DE
001AC8 E168 ED73BDE1        20      LD  (SPPAT2+1),SP
001ACC E16C F3               4      DI
001ACD E16D DDF9            10      LD  SP,IX
                                
001ACF E16F E1              10      POP HL      ;00:DPB_FATLN
001AD0 E170 E1              10      POP HL      ;02:DPB_DRD
001AD1 E171 22C9E0          16      LD  (DRDPAT+1),HL
                                
001AD4 E174 E1              10      POP HL
001AD5 E175 22D9E0          16      LD  (DWTPAT+1),HL   ;04:DPB_DWT
                                
001AD8 E178 E1              10      POP HL      ;L=06:DPB_FATID H=07:DPB_SECPCL
001AD9 E179 7C               4      LD  A,H
001ADA E17A 32C5D7          13      LD  (SPCPAT+1),A    ;1クラスタの論理セクタ数
001ADD E17D 3D               4      DEC A
001ADE E17E 323BDF          13      LD  (NCPAT+1),A
                                
001AE1 E181 E1              10      POP HL      ;08:DPB_MAXCL
001AE2 E182 7D               4      LD  A,L
001AE3 E183 32E4D7          13      LD  (CLPAT2+1),A
001AE6 E186 7C               4      LD  A,H
001AE7 E187 32E0D7          13      LD  (CLPAT1+1),A
001AEA E18A 2B               6      DEC HL
001AEB E18B 22ECD9          16      LD  (MAXCLP+1),HL
                                
001AEE E18E E1              10      POP HL      ;L=0A:DPB_FDMODE H=0B:DPB_DIRSCNT
001AEF E18F 7D               4      LD  A,L
001AF0 E190 F6FE             7      OR  0FEH
001AF2 E192 32B3E4          13      LD  (FDMODE+1),A
001AF5 E195 07               4      RLCA
001AF6 E196 E603             7      AND 3
001AF8 E198 326BE4          13      LD  (FSPAT+1),A
001AFB E19B 4C               4      LD  C,H
                                
001AFC E19C E1              10      POP HL      ;L=0C:DPB_MAXCYL H=0D:DPB_MAXSEC
                                
001AFD E19D E1              10      POP HL      ;L=0E:DPB_FATPS H=0F:DPB_BPS
001AFE E19E 7C               4      LD  A,H     ;DPB_BPS
001AFF E19F E607             7      AND 7
001B01 E1A1 32D5DC          13      LD  (SECSZ+2),A ;1セクタのサイズの上位1バイト 0x400 - 0x200 - 0x100
                                                ;1セクタ512 2D/2DD/2HC/2HQ(2HD1.44MB)/EMM/BRAM/EMEM等
                                                ;1セクタ1024 2HD/2HDE98
                                                ;1セクタ256 GRAM/RAMF/CMOS/等
                                                ;1024   512 256
                                                ;4  2   1
001B04 E1A4 87               4      ADD A,A     ;8  4   2
001B05 E1A5 87               4      ADD A,A     ;010H   8   4
001B06 E1A6 87               4      ADD A,A     ;020H   010H    8
001B07 E1A7 3241D6          13      LD  (SDECPAT+1),A   ;1セクタ辺りのディレクトリエントリ数
                                
001B0A E1AA 2600             7      LD  H,0
001B0C E1AC 22FAE5          16      LD  (_FATPS),HL
                                
001B0F E1AF E1              10      POP HL      ;10:DPB_DIRPS
001B10 E1B0 22FCE5          16      LD  (_DIRPS),HL
                                
001B13 E1B3 E1              10      POP HL      ;L=12:DPB_DEVICE H=13:DPB_UNITNO
001B14 E1B4 7C               4      LD  A,H
001B15 E1B5 3284E4          13      LD  (_DRIVE),A
                                
001B18 E1B8 E1              10      POP HL      ;14:DPB_ADDCL
001B19 E1B9 22D5D7          16      LD  (CLSPAT+1),HL
                                
001B1C E1BC 310000          10  SPPAT2: LD  SP,0        ;元のSPを復元
001B1F E1BF FB               4      EI
001B20 E1C0 2AFCE5          16      LD  HL,(_DIRPS)
001B23 E1C3 0600             7      LD  B,0
001B25 E1C5 09              11      ADD HL,BC       ;C=DPB_DIRSCNT
001B26 E1C6 225CD6          16      LD  (MD_PAT+1),HL
                                
001B29 E1C9 2AECD9          16      LD  HL,(MAXCLP+1);
001B2C E1CC 11F60F          10      LD  DE,4086     ;クラスタ数が4086未満:FAT12 4086以上:FAT16
001B2F E1CF ED52            15      SBC HL,DE       ;CF=0のはず
001B31 E1D1 300F            12      JR  NC,SETFAT16
001B33 E1D3 21C1DE          10      LD  HL,GNCL     ;FAT12
001B36 E1D6 11E4DE          10      LD  DE,SNCL
001B39 E1D9 012CE1          10      LD  BC,FATSETUP12
001B3C E1DC DDCB0FAE        23      RES 5,(IX+DPB_BPS)  ;DPB_BPS(FAT12)
001B40 E1E0 180D            12      JR  EXTRA1
       E1E2                     SETFAT16:
001B42 E1E2 2118DF          10      LD  HL,GNCL16   ;FAT16
001B45 E1E5 1125DF          10      LD  DE,SNCL16
001B48 E1E8 0139E1          10      LD  BC,FATSETUP16
001B4B E1EB DDCB0FEE        23      SET 5,(IX+DPB_BPS)  ;DPB_BPS(FAT16)
       E1EF                     EXTRA1:
001B4F E1EF 22F8E4          16      LD  (GNCPAT+1),HL
001B52 E1F2 ED53FBE4        20      LD  (SNCPAT+1),DE
001B56 E1F6 ED4304E1        20      LD  (FATSX+1),BC
001B5A E1FA D1              10      POP DE
001B5B E1FB C1              10      POP BC
001B5C E1FC AF               4      XOR A
001B5D E1FD C9              10      RET
                                
       E1FE                     GETDPBD:
001B5E E1FE DDE3            23      EX  (SP),IX
001B60 E200 DDE5            15      PUSH    IX
001B62 E202 3A88E4          13      LD  A,(_DRV)
001B65 E205 1807            12      JR  GETDPB1
                                
       E207                     CHGDRVR:
001B67 E207 CDD9E4          17      CALL    _CHGDRV
001B6A E20A D8              11      RET C
001B6B E20B 3A89E4          13      LD  A,(_DSK)
       E20E                     GETDPB1:
001B6E E20E C3DCE4          10      JP  _GETDPB
                                
       E211                     GETDPB:
001B71 E211 FE08             7      CP  8
001B73 E213 3F               4      CCF
001B74 E214 D8              11      RET C
001B75 E215 0F               4      RRCA
001B76 E216 0F               4      RRCA
001B77 E217 0F               4      RRCA
001B78 E218 DD                      DB  0DDH        ;Z80未定義命令
001B79 E219 6F               4      LD  L,A     ;LD IXL,A
001B7A E21A DD                      DB  0DDH        ;Z80未定義命令
001B7B E21B 26E6             7      LD  H,_DEVICE/256   ;LD IXH,_DEVICE/256
001B7D E21D DD7E00          19      LD  A,(IX+DPB_FATLN)
001B80 E220 A7               4      AND A       ;CF=0の為
001B81 E221 DDCB0F6E        20      BIT 5,(IX+DPB_BPS)
001B85 E225 C0              11      RET NZ      ;FAT16
001B86 E226 DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
001B8A E22A C0              11      RET NZ      ;BPB
001B8B E22B FE01             7      CP  001H        ;A=0 THEN CF=1
001B8D E22D C9              10      RET
                                
       E22E                     _SYS5F:
001B8E E22E AF               4      XOR A
       E22F                     FFLUSH:
001B8F E22F F5              11      PUSH    AF
001B90 E230 CD49DE          17      CALL    WTFATX
001B93 E233 AF               4      XOR A
001B94 E234 32ABE4          13      LD  (_FATIX),A
001B97 E237 2F               4      CPL         ;0FFH
001B98 E238 32AAE4          13      LD  (_FATDRV),A
001B9B E23B 3E                      DB  03EH        ;次のPUSH AFをスキップ
       E23C                     FFLUSHBUF:
001B9C E23C F5              11      PUSH    AF
001B9D E23D CDFFDD          17      CALL    DWTX
001BA0 E240 3EFF             7      LD  A,0FFH
001BA2 E242 3239E4          13      LD  (SFILE),A
001BA5 E245 32A5E4          13      LD  (_DBDRV),A
001BA8 E248 F1              10      POP AF
001BA9 E249 C9              10      RET
                                
[EOF:LDDIO.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDISK.ASM"
                                
                                ;   LSX-Dodgers DISK
                                ;   MSX
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ可変(256/512/1024)
                                
       E24A                     WTTRK:
       E24A                     FDWT:
001BAA E24A 37               4      SCF
001BAB E24B C9              10      RET
       E24C                     FDRD:
001BAC E24C ED73DDE2        20      LD  (DRDSP),SP
001BB0 E250 3ADEE2          13      LD  A,(DRDSPH)  ;スタックがカートリッジと被っていないかチェック
001BB3 E253 FE7F             7      CP  07FH
001BB5 E255 3807            12      JR  C,FDRD1
001BB7 E257 FEC1             7      CP  0C1H
001BB9 E259 3003            12      JR  NC,FDRD1
001BBB E25B 315EF5          10      LD  SP,BUF
       E25E                     FDRD1:
001BBE E25E C5              11      PUSH    BC
001BBF E25F D5              11      PUSH    DE
                                
001BC0 E260 E5              11      PUSH    HL
001BC1 E261 EB               4      EX  DE,HL
001BC2 E262 DD460F          19      LD  B,(IX+DPB_BPS)
       E265                     EADR1:
001BC5 E265 CB18             8      RR  B
001BC7 E267 3803            12      JR  C,EADR2
001BC9 E269 29              11      ADD HL,HL
001BCA E26A 18F9            12      JR  EADR1
       E26C                     EADR2:
001BCC E26C E5              11      PUSH    HL  ;あとでDEで受け取る
001BCD E26D 29              11      ADD HL,HL   ;64KB→32KB
001BCE E26E 29              11      ADD HL,HL   ;32KB→16KB
       E26F                     ASCII16K1:
001BCF E26F 29              11      ADD HL,HL   ;16KB→8KB  ;ASCII-16Kの場合はここがNOPに置き換えられる
                                
001BD0 E270 DD7E0C          19      LD  A,(IX+DPB_MAXCYL)   ;16KB単位でカートリッジ内のディスクが存在する位置を指定
       E273                     ASCII16K2:
001BD3 E273 87               4      ADD A,A         ;ASCII-16Kの場合はここがNOPに置き換えられる
001BD4 E274 84               4      ADD A,H
001BD5 E275 5F               4      LD  E,A
001BD6 E276 3A62E4          13      LD  A,(ROM_SLT)
001BD9 E279 210070          10      LD  HL,BANK2_SEL
       E27A                     ROM8000H    EQU $-2
001BDC E27C CD79D3          17      CALL    WRSLT
                                
001BDF E27F 2680             7      LD  H,080H
001BE1 E281 3A62E4          13      LD  A,(ROM_SLT) ;カートリッジROMに切り替える
001BE4 E284 CDECD3          17      CALL    ENASLT
                                
001BE7 E287 D1              10      POP DE
001BE8 E288 E1              10      POP HL      ;HLは読み出し先のメモリアドレス
                                
001BE9 E289 7B               4      LD  A,E
001BEA E28A E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F/16K:3F)
       E28B                     ASCII16K3   EQU $-1
001BEC E28C 1E00             7      LD  E,0     ;DEはROMディスクから読み出すアドレス
001BEE E28E C680             7      ADD A,080H
001BF0 E290 57               4      LD  D,A
                                
001BF1 E291 3E                      DB  03EH
001BF2 E292 A7               4      AND A
001BF3 E293 32C0E2          13      LD  (DRD_SWC3),A
001BF6 E296 7C               4      LD  A,H     ;読み出し先がカートリッジと被っていないかチェック
001BF7 E297 FE7B             7      CP  07BH
001BF9 E299 3812            12      JR  C,DRD2
001BFB E29B FEC1             7      CP  0C1H
001BFD E29D 300E            12      JR  NC,DRD2
001BFF E29F 22C7E2          16      LD  (DRD_SWC1),HL   ;被っている場合はデータバッファをフラッシュして一時的に使う
001C02 E2A2 2100EF          10      LD  HL,DTBUF
001C05 E2A5 3E                      DB  03EH
001C06 E2A6 37               4      SCF
001C07 E2A7 32C0E2          13      LD  (DRD_SWC3),A
001C0A E2AA CD3CE2          17      CALL    FFLUSHBUF
       E2AD                     DRD2:
001C0D E2AD DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001C10 E2B0 E607             7      AND 7
001C12 E2B2 47               4      LD  B,A
001C13 E2B3 4B               4      LD  C,E ;E=0
                                
001C14 E2B4 EB               4      EX  DE,HL
001C15 E2B5 EDB0                    LDIR
001C17 E2B7 D5              11      PUSH    DE
001C18 E2B8 2680             7      LD  H,080H
001C1A E2BA 3A43F3          13      LD  A,(0F341H+2)    ;メインRAMに戻す
001C1D E2BD CDECD3          17      CALL    ENASLT
       E2C0                     DRD_SWC3:
001C20 E2C0 A7               4      AND A       ;自己書き換え)被っている場合はSCFになる
001C21 E2C1 3012            12      JR  NC,DRD3
                                
001C23 E2C3 2100EF          10      LD  HL,DTBUF
001C26 E2C6 110000          10      LD  DE,0
       E2C7                     DRD_SWC1    EQU $-2
001C29 E2C9 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001C2C E2CC E607             7      AND 7
001C2E E2CE 47               4      LD  B,A
001C2F E2CF 0E00             7      LD  C,0
001C31 E2D1 EDB0                    LDIR
001C33 E2D3 E1              10      POP HL
001C34 E2D4 D5              11      PUSH    DE
       E2D5                     DRD3:
001C35 E2D5 E1              10      POP HL
001C36 E2D6 D1              10      POP DE
001C37 E2D7 13               6      INC DE
001C38 E2D8 C1              10      POP BC
001C39 E2D9 1083            13      DJNZ    FDRD1
001C3B E2DB AF               4      XOR A
001C3C E2DC 310000          10      LD  SP,0
       E2DD                     DRDSP   EQU $-2
       E2DE                     DRDSPH  EQU $-1
001C3F E2DF FB               4      EI
001C40 E2E0 C9              10      RET
                                
       E2E1                     PDWT:
001C41 E2E1 37               4      SCF
001C42 E2E2 CB7C             8      BIT 7,H
001C44 E2E4 2056            12      JR  NZ,PDWX
001C46 E2E6 CD3CE2          17      CALL    FFLUSHBUF
       E2E9                     PDWT1:
001C49 E2E9 C5              11      PUSH    BC
001C4A E2EA D5              11      PUSH    DE
001C4B E2EB 1100EF          10      LD  DE,DTBUF
001C4E E2EE DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001C51 E2F1 E607             7      AND 7
001C53 E2F3 47               4      LD  B,A
001C54 E2F4 0E00             7      LD  C,0
001C56 E2F6 EDB0                    LDIR
001C58 E2F8 E5              11      PUSH    HL
001C59 E2F9 2100EF          10      LD  HL,DTBUF
001C5C E2FC 0601             7      LD  B,1
001C5E E2FE 37               4      SCF
001C5F E2FF CD3CE3          17      CALL    PDWX
001C62 E302 3834            12      JR  C,PDRWERR
001C64 E304 E1              10      POP HL
001C65 E305 D1              10      POP DE
001C66 E306 13               6      INC DE
001C67 E307 C1              10      POP BC
001C68 E308 10D7            13      DJNZ    PDWT
001C6A E30A AF               4      XOR A
001C6B E30B C9              10      RET
       E30C                     PDRD:
001C6C E30C A7               4      AND A
001C6D E30D CB7C             8      BIT 7,H
001C6F E30F 202B            12      JR  NZ,PDWX
001C71 E311 CD3CE2          17      CALL    FFLUSHBUF
       E314                     PDRD1:
001C74 E314 C5              11      PUSH    BC
001C75 E315 D5              11      PUSH    DE
001C76 E316 E5              11      PUSH    HL
001C77 E317 2100EF          10      LD  HL,DTBUF
001C7A E31A 0601             7      LD  B,1
001C7C E31C A7               4      AND A
001C7D E31D CD3CE3          17      CALL    PDWX
001C80 E320 3816            12      JR  C,PDRWERR
001C82 E322 D1              10      POP DE
001C83 E323 2100EF          10      LD  HL,DTBUF
001C86 E326 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001C89 E329 E607             7      AND 7
001C8B E32B 47               4      LD  B,A
001C8C E32C 0E00             7      LD  C,0
001C8E E32E EDB0                    LDIR
001C90 E330 EB               4      EX  DE,HL
001C91 E331 D1              10      POP DE
001C92 E332 13               6      INC DE
001C93 E333 C1              10      POP BC
001C94 E334 10D6            13      DJNZ    PDRD
001C96 E336 AF               4      XOR A
001C97 E337 C9              10      RET
       E338                     PDRWERR:
001C98 E338 E1              10      POP HL
001C99 E339 D1              10      POP DE
001C9A E33A C1              10      POP BC
001C9B E33B C9              10      RET
       E33C                     PDWX:                   ;CF=0 READ CF=1 WRITE
001C9C E33C DDCB1266        20      BIT 4,(IX+DPB_DEVICE)   ;デバイス情報
001CA0 E340 2003            12      JR  NZ,PDWX1
001CA2 E342 DD4E06          19      LD  C,(IX+DPB_FATID)    ;メディアバイト
       E345                     PDWX1:
001CA5 E345 DD7E13          19      LD  A,(IX+DPB_UNITNO)   ;デバイスドライバ内におけるユニット番号
001CA8 E348 C5              11      PUSH    BC
001CA9 E349 D5              11      PUSH    DE
001CAA E34A E5              11      PUSH    HL
001CAB E34B DDE5            15      PUSH    IX
001CAD E34D FDE5            15      PUSH    IY
001CAF E34F CDA7FF          17      CALL    H_PHYD
001CB2 E352 FDE1            14      POP IY
001CB4 E354 DDE1            14      POP IX
001CB6 E356 E1              10      POP HL
001CB7 E357 D1              10      POP DE
001CB8 E358 C1              10      POP BC
001CB9 E359 D8              11      RET C
       E35A                     PDWX2:
001CBA E35A 13               6      INC DE
001CBB E35B DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001CBE E35E E607             7      AND 7
001CC0 E360 84               4      ADD A,H
001CC1 E361 67               4      LD  H,A
001CC2 E362 10F6            13      DJNZ    PDWX2
001CC4 E364 AF               4      XOR A
001CC5 E365 C9              10      RET
                                
       E4B2                     FDMODE  EQU TVRAMTOP
       E46A                     FSPAT   EQU BEEPD+9
[EOF:MSXDISK.ASM:UTF_8]
                                    INCLUDE "LDCCPWK.ASM"
                                
                                ;   LSX-Dodgers CCP WORK
                                
       0040                     PATHX   EQU 64
001CC6 E366                     PATHD:  DS  PATHX
001D06 E3A6 00                  PATHE:  DB  0
                                
       E3A7                     DTA_CCP:
001D07 E3A7                         DS  37
                                
       E3CC                     FCB_BAT:
001D2C E3CC                         DS  37
                                
                                
001D51 E3F1 2062797465732066    FREE:   DB  " bytes free",9,'$'
            7265650924          
[EOF:LDCCPWK.ASM:UTF_8]
                                    INCLUDE "LDWORK.ASM"
                                
                                ;   LSX-Dodgers WORK0
                                ;
                                ;   CP/M互換BIOS
                                ;   BOOT:アドレス下位1バイトが0になるように
       E3FE                     AT_WORK:
001D5E E3FE                         DS  WORKAD-AT_WORK
                                
       E400                     CPM_BOOT:
001D60 E400 C30000          10      JP  0
       E403                     _SYS00:     ;(BDOS)プログラム終了
       E403                     CPM_WBOOT:
001D63 E403 C309C9          10      JP  WBOOT1
       E406                     CPM_CONST:
001D66 E406 C3D2D1          10      JP  CONSTX
       E409                     _SYS07:     ;(BDOS)コンソール直接入力
       E409                     CPM_CONIN:
001D69 E409 C320D1          10      JP  FLGET
       E40C                     CPM_CONOUT:
001D6C E40C C376D2          10      JP  CONOUT1
                                
       E40F                     DECBF:              ;10進数表示時のバッファ(5バイト)
001D6F E40F                         DS  5
       E40F                     RR_BUF_HL   EQU DECBF   ;CP/M互換ファイルアクセスの際のランダムレコードの一時的な保管場所
       E411                     RR_BUF_A    EQU DECBF+2 ;計3バイト
                                
001D74 E414 00                  FDRV:   DB  0
001D75 E415                     FNAME:  DS  36
001D99 E439                     SFILE:  DS  33      ;DRV FILENAME
                                
001DBA E45A                         DS  3
                                
001DBD E45D 0000                LEFTX:  DW  0
001DBF E45F 0000                DTAX:   DW  0
                                
       E461                     ZERO:
       E461                     BEEPD:
001DC1 E461 008E01000B000C10        DB  0,08EH,1,0,00BH,0,00CH,010H
001DC9 E469 073E08100D00FF          DB  007H,03EH,008H,010H,00DH,0,0FFH
       E462                     RTC_YY  EQU BEEPD+1
       E463                     RTC_MW  EQU BEEPD+2
       E464                     RTC_DD  EQU BEEPD+3
       E465                     RTC_TT  EQU BEEPD+4
       E466                     RTC_MM  EQU BEEPD+5
       E467                     RTC_SS  EQU BEEPD+6
       E462                     ROM_SLT EQU BEEPD+1
                                
001DD0 E470 00                  CHECK:  DB  0
                                
001DD1 E471 4F4B24              OK: DB  "OK$"
001DD4 E474                         DS  5
001DD9 E479 4572726F722124      COMERM: DB  "Error!$"
                                ;   システムワークエリア
                                ;   _CYL0:アドレス下位1バイトが080Hになるように
001DE0 E480 FF                  _CYL0:  DB  0FFH    ;Cylinder
001DE1 E481 FF                  _CYL1:  DB  0FFH    ;Cylinder
001DE2 E482 FF                  _CYL2:  DB  0FFH    ;Cylinder
001DE3 E483 FF                  _CYL3:  DB  0FFH    ;Cylinder
001DE4 E484 00                  _DRIVE: DB  0   ;unit number
001DE5 E485 00                  _SEEKSP:DB  0   ;Seek speed
001DE6 E486 FF                  _ISEEK: DB  0FFH    ;
001DE7 E487 00                  _DVSW:  DB  0
001DE8 E488 00                  _DRV:   DB  0
001DE9 E489 FF                  _DSK:   DB  0FFH
001DEA E48A 8000                _DTA:   DW  00080H
001DEC E48C 0000                _CTC:   DW  0
001DEE E48E 0000                _TXADR: DW  0
001DF0 E490 0000                _KEYPS: DW  0
001DF2 E492 00FF                _KEYD:  DW  0FF00H  ;キーデータ
001DF4 E494 0000                _KEYSP: DB  KEYSP_L,KEYSP_H ;オートリピートの速度
001DF6 E496 00                  _COLORF:DB  COLORF  ;色
001DF7 E497 19                  _LINE:  DB  LINE
                                
001DF8 E498 0000                _FCB:   DW  0   ;SEARCH FILES
001DFA E49A 0000                _FBPS:  DW  0   ;    //
001DFC E49C 0000                _FBAD:  DW  0   ;    //
001DFE E49E 00                  _FBCNT: DB  0   ;    //
001DFF E49F 00                  _FILEN: DB  0   ;    //
001E00 E4A0 00                  _DIRF:  DB  0   ;bit7:ディレクトリ bit0-6:セクタインデックス
001E01 E4A1                         DS  1
001E02 E4A2 00                  _WTFATF:DB  0   ;FATバッファの更新フラグ
001E03 E4A3                         DS  1
001E04 E4A4 00                  _WTDBF: DB  0   ;データバッファの更新フラグ
001E05 E4A5 FF                  _DBDRV: DB  0FFH    ;データバッファにあるデータを読み込んだドライブ
001E06 E4A6 0000                _DBSEC: DW  0   ;データバッファにあるデータを読み込んだセクタ番号
001E08 E4A8 0000                _DPB:   DW  0
       E4AA                     _FATDRV:
001E0A E4AA FF                      DB  0FFH    ;FATバッファに読み込んでいるドライブ
001E0B E4AB 00                  _FATIX: DB  0   ;FATバッファに読み込んでいるインデックス
       E4AC                     _FAKEFREE:
001E0C E4AC 0000                    DW  0   ;偽の残量（FATサイズが大きくなると重くなるのでその対策）
                                
001E0E E4AE                         DS  2
                                
       E4B0                     CRTCD:
001E10 E4B0 6F                      DB  06FH
       E4B1                     _WIDTH:
001E11 E4B1 28                      DB  WIDTH
       E4B2                     TVRAMTOP:
001E12 E4B2 5938                    DB  059H,038H
001E14 E4B4 1F02                    DB  01FH,002H
       E4B6                     _LINE2:
001E16 E4B6 19                      DB  019H
       E4B7                     WKE4:
001E17 E4B7 1C                      DB  01CH
       E4B8                     WKE6:
001E18 E4B8 00                      DB  000H
       E4B9                     WK40:
001E19 E4B9 07                      DB  007H
       E4BA                     _PAGE_MINUS:
001E1A E4BA 18FC                    DW  0-WIDTH*LINE
       E4BC                     _WIDTH_MINUS:
001E1C E4BC D8FF                    DW  0-WIDTH
       E4BE                     WK30:
001E1E E4BE 0C                      DB  00CH
       E4BF                     WK31:
       E4BF                     WK1FD0:
001E1F E4BF 20                      DB  020H
                                
001E20 E4C0 0000                CTC0:   DW  INTCTCE
001E22 E4C2 0000                CTC1:   DW  INTCTCE
001E24 E4C4 0000                CTC2:   DW  INTCTC2
001E26 E4C6 0000                CTC3:   DW  INTCTCE
001E28 E4C8 0000                INTVEC: DW  INT
                                
                                ;   LSX-Dodgers 独自BIOS
                                
001E2A E4CA C338D1          10  _INKEY: JP  INKEY
001E2D E4CD C3C0D0          10  _PRINT: JP  PRINT
001E30 E4D0 C310D2          10  _SCRN:  JP  SCRN
001E33 E4D3 C3F0D1          10  _POS:   JP  POS
001E36 E4D6 C3FBD1          10  _LOC:   JP  LOC
       E4D9                     _CHGDRV:
001E39 E4D9 C346E1          10      JP  CHGDRV
       E4DC                     _GETDPB:
001E3C E4DC C311E2          10      JP  GETDPB
       E4DF                     _FFLUSH:
001E3F E4DF C32FE2          10      JP  FFLUSH
       E4E2                     _RDFATX:
001E42 E4E2 C31FDE          10      JP  RDFATX
001E45 E4E5 C347DF          10  _RDFAT: JP  RDFAT
001E48 E4E8 C34AE2          10  _WTTRK: JP  WTTRK
001E4B E4EB C34CE2          10  _FDRD:  JP  FDRD
001E4E E4EE C34AE2          10  _FDWT:  JP  FDWT
       E4F1                     _BPB2DPB:
001E51 E4F1 C3D4DF          10      JP  BPB2DPB
       E4F4                     _BREAK:
001E54 E4F4 C383CA          10      JP  END_BATCH
       E4F7                     _GNCL:
001E57 E4F7 C3C1DE          10  GNCPAT: JP  GNCL        ; self-modifying code
       E4FA                     _SNCL:
001E5A E4FA C3E4DE          10  SNCPAT: JP  SNCL        ; self-modifying code
001E5D E4FD C33DC9          10  _COMANL:JP  COMANL
                                
       E500                     _WE:
[EOF:LDWORK.ASM:SHIFT_JIS]
                                    INCLUDE "LDCALL.ASM"
                                
                                ;   LSX-Dodgers システムコール(BDOS)
                                ;
                                ;   LSX-Dodgers SYSTEM CALL
                                ;   STABLE:アドレス下位1バイトが0になるように
                                
       E500                     STABLE:
                                ;0
001E60 E500 03E4C3D0F4D06ED6        DW  _SYS00,_SYS01,_SYS02,_SYS03
001E68 E508 2ACE2ACEF9D009E4        DW  _SYS04,_SYS05,_SYS06,_SYS07
001E70 E510 01D12CCE3ED1D2D1        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001E78 E518 41CE46CE55CE66CE        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001E80 E520 BACE01CF4ACF80CF        DW  _SYS10,_SYS11,_SYS12,_SYS13
001E88 E528 88CF9ECFB3CFABCF        DW  _SYS14,_SYS15,_SYS16,_SYS17
001E90 E530 FACFFFCF04D00AD0        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001E98 E538 2ACE30D02ACE34D0        DW  _SYS1C,_SYS1D,_SYS1E,_SYS1F
                                ;2
001EA0 E540 2ACEEACFF2CF3BD0        DW  _SYS20,_SYS21,_SYS22,_SYS23
001EA8 E548 61D02ACEF3DACBDB        DW  _SYS24,_ERROR,_SYS26,_SYS27
001EB0 E550 F2CF6AD0E4D16ED6        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001EB8 E558 EAD16ED62ACE8BD0        DW  _SYS2C,_SYS2D,_SYS2E,_SYS2F
                                ;3
001EC0 E560 85D02ACE2ACE2ACE        DW  _SYS30,_ERROR,_ERROR,_ERROR
001EC8 E568 2ACE2ACE2ACE2ACE        DW  _ERROR,_ERROR,_ERROR,_ERROR
001ED0 E570 2ACE6ED66ED6ACD0        DW  _ERROR,_SYS39,_SYS3A,_SYS5A
                                ;DOS2
001ED8 E578 0DCE                    DW  _DOS2
                                
001EDA E57A                         DS  2
001EDC E57C 00E7                _FATBF: DW  FATBF
001EDE E57E 00EF                _DTBUF: DW  DTBUF
                                
                                ;   コントロールコードテーブル
                                ;   CTRLTB:アドレス下位1バイトが080Hになるように
                                
       E580                     CTRLTB:
001EE0 E580 0000000020D20000        DW  CTRL00,CTRL00,CTRL02,CTRL03 ;  A,B,C
001EE8 E588 0000000000000000        DW  CTRL04,CTRL05,CTRL06,CTRL07 ;D,E,F,G
001EF0 E590 0000000000000000        DW  CTRL08,CTRL09,CTRL0A,CTRL0B ;H,I,J,K
001EF8 E598 0000000000000000        DW  CTRL0C,CTRL0D,CTRL0E,CTRL00 ;L,M,N,O
001F00 E5A0 0000000000000000        DW  CTRL00,CTRL00,CTRL12,CTRL00 ;P,Q,R,S
001F08 E5A8 0000000000000000        DW  CTRL00,CTRL00,CTRL00,CTRL00 ;T,U,V,W
001F10 E5B0 0000000000000000        DW  CTRL00,CTRL00,CTRL0C,CTRL1B ;X,Y,Z,ESC
001F18 E5B8 0000000000000000        DW  CTRL1C,CTRL1D,CTRL1E,CTRL1F ;→,←,↑,↓
                                
001F20 E5C0 0200                M2D:    DW  2
001F22 E5C2 FD02                    DB  0FDH,2
001F24 E5C4 6401                    DW  356
001F26 E5C6 FF0728090182            DB  0FFH,7,40,9,1,082H
001F2C E5CC 0500A7000800            DW  5,0A7H,8
                                
001F32 E5D2 0200                M2HD:   DW  2
001F34 E5D4 FE01                    DB  0FEH,1
001F36 E5D6 C704                    DW  1223
001F38 E5D8 FE064D080184            DB  0FEH,6,77,8,1,084H
001F3E E5DE 0500A7000900            DW  5,0A7H,9
                                
001F44 E5E4 1617                SDDATA: DB  22,23       ;(FCB)ファイルを最後に変更した時刻
001F46 E5E6 1415                    DB  20,21       ;(FCB)ファイルを最後に変更した日付
001F48 E5E8 1A1B                    DB  26,27       ;(FCB)ファイルの先頭クラスタ
001F4A E5EA 10111213                DB  16,17,18,19 ;(FCB)ファイルのサイズ(バイト単位)
       E5EE                     SDDATAE:
                                
001F4E E5EE                         DS  2
       E5F0                     _FCB_BAT:
001F50 E5F0 CCE3                    DW  FCB_BAT
       E5F2                     _PATH:
001F52 E5F2 66E3                    DW  PATHD
                                
001F54 E5F4                     SCDIR:  DS  2       ;+14 +15
001F56 E5F6                     SFBPS:  DS  2       ;FBPS
001F58 E5F8                     SFNDF:  DS  2       ;FILEN DIRF
                                
001F5A E5FA 0000                _FATPS: DW  0
001F5C E5FC 0000                _DIRPS: DW  0
001F5E E5FE 0000                _CLPS:  DW  0
                                
       E600                     _PE:
[EOF:LDCALL.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDPB.ASM"
                                
                                ;   LSX-Dodgers DPB
                                ;   MSX
                                
       E600                     _DEVICE:
                                
                                ;   A:
                                
001F60 E600 0300                    DW  3   ;DPB_FATLN
001F62 E602 EBE4                    DW  _FDRD   ;DPB_DRD
001F64 E604 EEE4                    DW  _FDWT   ;DPB_DWT
001F66 E606 F9                      DB  0F9H    ;DPB_FATID
001F67 E607 03                      DB  3   ;DPB_SECPCL
001F68 E608 CB02                    DW  715 ;DPB_MAXCL
001F6A E60A 00                      DB  0   ;DPB_FDMODE
001F6B E60B 07                      DB  7   ;DPB_DIRSCNT
001F6C E60C 01                      DB  1   ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001F6D E60D 00                      DB  0   ;DPB_MAXSEC
001F6E E60E 01                      DB  1   ;DPB_FATPS
001F6F E60F 82                      DB  082H    ;DPB_BPS
001F70 E610 0700                    DW  7   ;DPB_DIRPS
001F72 E612 2C                      DB  02CH    ;DPB_DEVICE
001F73 E613 00                      DB  0   ;DPB_UNITNO
001F74 E614 0A00                    DW  10  ;DPB_ADDCL
001F76 E616 0000                    DW  0   ;DPB_16
001F78 E618 0000                    DW  0   ;DPB_18
001F7A E61A 0000                    DW  0   ;DPB_SDIR
001F7C E61C 524F4D30                DB  "ROM0"  ;DPB_NAME
                                
                                ;   B:
                                
001F80 E620 0300                    DW  3   ;DPB_FATLN
001F82 E622 EBE4                    DW  _FDRD   ;DPB_DRD
001F84 E624 EEE4                    DW  _FDWT   ;DPB_DWT
001F86 E626 F9                      DB  0F9H    ;DPB_FATID
001F87 E627 03                      DB  3   ;DPB_SECPCL
001F88 E628 CB02                    DW  715 ;DPB_MAXCL
001F8A E62A 00                      DB  0   ;DPB_FDMODE
001F8B E62B 07                      DB  7   ;DPB_DIRSCNT
001F8C E62C 2E                      DB  46  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001F8D E62D 00                      DB  0   ;DPB_MAXSEC
001F8E E62E 01                      DB  1   ;DPB_FATPS
001F8F E62F 82                      DB  082H    ;DPB_BPS
001F90 E630 0700                    DW  7   ;DPB_DIRPS
001F92 E632 2C                      DB  02CH    ;DPB_DEVICE
001F93 E633 01                      DB  1   ;DPB_UNITNO
001F94 E634 0A00                    DW  10  ;DPB_ADDCL
001F96 E636 0000                    DW  0   ;DPB_16
001F98 E638 0000                    DW  0   ;DPB_18
001F9A E63A 0000                    DW  0   ;DPB_SDIR
001F9C E63C 524F4D31                DB  "ROM1"  ;DPB_NAME
                                
                                ;   C:
                                
001FA0 E640                         DS  32
                                
                                ;   D:
                                
001FC0 E660                         DS  32
                                
                                ;   E:
                                
001FE0 E680 0300                    DW  3   ;DPB_FATLN
001FE2 E682 0CE3                    DW  PDRD    ;DPB_DRD
001FE4 E684 E1E2                    DW  PDWT    ;DPB_DWT
001FE6 E686 F9                      DB  0F9H    ;DPB_FATID
001FE7 E687 03                      DB  3   ;DPB_SECPCL
001FE8 E688 CB02                    DW  715 ;DPB_MAXCL
001FEA E68A FF                      DB  0FFH    ;DPB_FDMODE
001FEB E68B 07                      DB  7   ;DPB_DIRSCNT
001FEC E68C 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001FED E68D 09                      DB  9   ;DPB_MAXSEC
001FEE E68E 01                      DB  1   ;DPB_FATPS
001FEF E68F 82                      DB  082H    ;DPB_BPS
001FF0 E690 0700                    DW  7   ;DPB_DIRPS
001FF2 E692 2C                      DB  02CH    ;DPB_DEVICE
001FF3 E693 00                      DB  0   ;DPB_UNITNO
001FF4 E694 0A00                    DW  10  ;DPB_ADDCL
001FF6 E696 0000                    DW  0   ;DPB_16
001FF8 E698 0000                    DW  0   ;DPB_18
001FFA E69A 0000                    DW  0   ;DPB_SDIR
001FFC E69C 44534B30                DB  "DSK0"  ;DPB_NAME
                                
                                ;   F:
                                
002000 E6A0 0300                    DW  3   ;DPB_FATLN
002002 E6A2 0CE3                    DW  PDRD    ;DPB_DRD
002004 E6A4 E1E2                    DW  PDWT    ;DPB_DWT
002006 E6A6 F9                      DB  0F9H    ;DPB_FATID
002007 E6A7 03                      DB  3   ;DPB_SECPCL
002008 E6A8 CB02                    DW  715 ;DPB_MAXCL
00200A E6AA FF                      DB  0FFH    ;DPB_FDMODE
00200B E6AB 07                      DB  7   ;DPB_DIRSCNT
00200C E6AC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00200D E6AD 09                      DB  9   ;DPB_MAXSEC
00200E E6AE 01                      DB  1   ;DPB_FATPS
00200F E6AF 82                      DB  082H    ;DPB_BPS
002010 E6B0 0700                    DW  7   ;DPB_DIRPS
002012 E6B2 2C                      DB  02CH    ;DPB_DEVICE
002013 E6B3 01                      DB  1   ;DPB_UNITNO
002014 E6B4 0A00                    DW  10  ;DPB_ADDCL
002016 E6B6 0000                    DW  0   ;DPB_16
002018 E6B8 0000                    DW  0   ;DPB_18
00201A E6BA 0000                    DW  0   ;DPB_SDIR
00201C E6BC 44534B31                DB  "DSK1"  ;DPB_NAME
                                
                                ;   G:
                                
002020 E6C0 0300                    DW  3   ;DPB_FATLN
002022 E6C2 0CE3                    DW  PDRD    ;DPB_DRD
002024 E6C4 E1E2                    DW  PDWT    ;DPB_DWT
002026 E6C6 F9                      DB  0F9H    ;DPB_FATID
002027 E6C7 03                      DB  3   ;DPB_SECPCL
002028 E6C8 CB02                    DW  715 ;DPB_MAXCL
00202A E6CA FF                      DB  0FFH    ;DPB_FDMODE
00202B E6CB 07                      DB  7   ;DPB_DIRSCNT
00202C E6CC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00202D E6CD 09                      DB  9   ;DPB_MAXSEC
00202E E6CE 01                      DB  1   ;DPB_FATPS
00202F E6CF 82                      DB  082H    ;DPB_BPS
002030 E6D0 0700                    DW  7   ;DPB_DIRPS
002032 E6D2 2C                      DB  02CH    ;DPB_DEVICE
002033 E6D3 02                      DB  2   ;DPB_UNITNO
002034 E6D4 0A00                    DW  10  ;DPB_ADDCL
002036 E6D6 0000                    DW  0   ;DPB_16
002038 E6D8 0000                    DW  0   ;DPB_18
00203A E6DA 0000                    DW  0   ;DPB_SDIR
00203C E6DC 44534B32                DB  "DSK2"  ;DPB_NAME
                                
                                ;   H:
002040 E6E0 0300                    DW  3   ;DPB_FATLN
002042 E6E2 0CE3                    DW  PDRD    ;DPB_DRD
002044 E6E4 E1E2                    DW  PDWT    ;DPB_DWT
002046 E6E6 F9                      DB  0F9H    ;DPB_FATID
002047 E6E7 03                      DB  3   ;DPB_SECPCL
002048 E6E8 CB02                    DW  715 ;DPB_MAXCL
00204A E6EA FF                      DB  0FFH    ;DPB_FDMODE
00204B E6EB 07                      DB  7   ;DPB_DIRSCNT
00204C E6EC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00204D E6ED 09                      DB  9   ;DPB_MAXSEC
00204E E6EE 01                      DB  1   ;DPB_FATPS
00204F E6EF 82                      DB  082H    ;DPB_BPS
002050 E6F0 0700                    DW  7   ;DPB_DIRPS
002052 E6F2 2C                      DB  02CH    ;DPB_DEVICE
002053 E6F3 07                      DB  7   ;DPB_UNITNO
002054 E6F4 0A00                    DW  10  ;DPB_ADDCL
002056 E6F6 0000                    DW  0   ;DPB_16
002058 E6F8 0000                    DW  0   ;DPB_18
00205A E6FA 0000                    DW  0   ;DPB_SDIR
00205C E6FC 44534B37                DB  "DSK7"  ;DPB_NAME
       E700                     MSX_E:
[EOF:MSXDPB.ASM:UTF_8]
                                
002060 E700                         DS  03FFFH - $$
003FFF 069F 00                      DB  0
       06A0                     LAST_ADR:
                                
                                    END
[EOF:MSX.ASM:UTF_8]
