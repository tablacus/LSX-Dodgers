                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.0.0, LST:Full:4
                                ;   LSX-Dodgers for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "MSXDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       0003                     MAC EQU 3   ;MSX
       0001                     DEV EQU 1
                                
       001D                     VER_6F  EQU 0001DH
                                
       4000                     RUN EQU 04000H
                                
       C600                     START2  EQU 0C600H
       C906                     BDOS    EQU 0C906H
       E400                     WORKAD  EQU 0E400H
       E700                     FATBF   EQU 0E700H
       EF00                     DTBUF   EQU 0EF00H
       0028                     WIDTH   EQU 40
       0019                     LINE    EQU 25
       0000                     COLORF  EQU 0
       0000                     KEYSP_H EQU 0
       0000                     KEYSP_L EQU 0
       0008                     COMS    EQU 8
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
                                
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PINLIN  EQU 000AEH
       00B1                     INLIN   EQU 000B1H
       00B4                     QINLIN  EQU 000B4H
       00B7                     BREAKX  EQU 000B7H
       00C0                     BEEP    EQU 000C0H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0144                     PHYDIO  EQU 00144H  ;MAIN:BIOS:
       0156                     KILBUF  EQU 00156H
                                
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
                                
       FEDA                     H_STKE  EQU 0FEDAH
       FFA7                     H_PHYD  EQU 0FFA7H
                                
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU 06000H
       6800                     BANK1_SEL EQU 06800H
       7000                     BANK2_SEL EQU 07000H
       7800                     BANK3_SEL EQU 07800H
                                            ;ASCII-16K
                                ;BANK0_SEL EQU 06000H
                                ;BANK1_SEL EQU 07000H
                                            ;KONAMI-8K
       8000                     KONAMI_BANK2_SEL EQU 08000H
       A000                     KONAMI_BANK3_SEL EQU 0A000H
[EOF:MSXDEF.ASM:UTF_8]
                                    INCLUDE "LDDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                
       0001                     VER_1   EQU 1
       0006                     VER_2   EQU 6
       0000                     VER_3   EQU 0
       1D03                     MACW    EQU MAC + 01D00H    ;機種フラグとLD判別フラグ
       0103                     MACD    EQU MAC + DEV * 256 ;機種フラグとデバイスフラグ
       0160                     VER EQU VER_1 * 256 + VER_2 * 16 + VER_3
                                
       0005                     SYSTEM  EQU 00005H
       000F                     JP_HL   EQU 0000FH
       005C                     FCB1    EQU 0005CH
       006C                     FCB2    EQU 0006CH
       005D                     FCB1FN  EQU FCB1+1
       006D                     FCB2FN  EQU FCB2+1
       0080                     DTA1    EQU 00080H
                                
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       0000                     DPB_FATLN   EQU 00H
       0002                     DPB_DRD     EQU 02H
       0004                     DPB_DWT     EQU 04H
       0006                     DPB_FATID   EQU 06H
       0007                     DPB_SECPCL  EQU 07H
       0008                     DPB_MAXCL   EQU 08H
       000A                     DPB_FDMODE  EQU 0AH
       000B                     DPB_DIRSCNT EQU 0BH
       000C                     DPB_MAXCYL  EQU 0CH
       000D                     DPB_MAXSEC  EQU 0DH
       000E                     DPB_FATPS   EQU 0EH
       000F                     DPB_BPS     EQU 0FH
       0010                     DPB_DIRPS   EQU 10H
       0012                     DPB_DEVICE  EQU 12H
       0013                     DPB_UNITNO  EQU 13H
       0014                     DPB_ADDCL   EQU 14H
                                
       001A                     DPB_SDIR    EQU 1AH
       001C                     DPB_NAME    EQU 1CH
                                
[EOF:LDDEF.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\hardware.asm"
                                ; C-BIOS hardware related declarations
                                ;
                                ; Copyright (c) 2002-2005 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2004-2005 Joost Yervante Damad.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                ;---------------------------------------------------
                                ; I/O ports
                                
       002E                     DBG_CTRL:       equ     $2E             ; openMSX debugdevice control (mode)
       002F                     DBG_DATA:       equ     $2F             ; openMSX debugdevice data
                                
       0090                     PRN_STAT:       equ     $90             ; printer status
       0091                     PRN_DATA:       equ     $91             ; printer data
                                
       0098                     VDP_DATA:       equ     $98             ; VDP data port (VRAM read/write)
       0099                     VDP_ADDR:       equ     $99             ; VDP address (write only)
       0099                     VDP_STAT:       equ     $99             ; VDP status (read only)
       009A                     VDP_PALT:       equ     $9A             ; VDP palette latch (write only)
       009B                     VDP_REGS:       equ     $9B             ; VDP register access (write only)
                                
       00A0                     PSG_REGS:       equ     $A0             ; PSG register write port
       00A1                     PSG_DATA:       equ     $A1             ; PSG value write port
       00A2                     PSG_STAT:       equ     $A2             ; PSG value read port
                                
       00A8                     PSL_STAT:       equ     $A8             ; slot status
       00A9                     KBD_STAT:       equ     $A9             ; keyboard status
       00AA                     GIO_REGS:       equ     $AA             ; General IO Register
       00AB                     PPI_REGS:       equ     $AB             ; PPI register
                                
       00B4                     RTC_ADDR:       equ     $B4             ; RTC address
       00B5                     RTC_DATA:       equ     $B5             ; RTC data
                                
       00F4                     SYSFLAGS:       equ     $F4             ; MSX2+ System flags,
                                                                        ; preserved after reset
                                                                        ; bit 5: CPU boot mode (1=R800)
                                                                        ; bit 7: Boot method
                                                                        ;        (1=soft boot, no logo)
                                
       00FC                     MAP_REG1:       equ     $FC             ; memory mapper: bank in $0000-$3FFF
       00FD                     MAP_REG2:       equ     $FD             ; memory mapper: bank in $4000-$7FFF
       00FE                     MAP_REG3:       equ     $FE             ; memory mapper: bank in $8000-$BFFF
       00FF                     MAP_REG4:       equ     $FF             ; memory mapper: bank in $C000-$FFFF
                                
                                ;---------------------------------------------------
                                ; memory mapped I/O
                                
       FFFF                     SSL_REGS:       equ     $FFFF           ; secondary slot select registers
                                
                                ;---------------------------------------------------
                                ; Constants used to define which hardware the BIOS will run on.
                                ; Used by the main_<model>.asm sources.
                                
                                ; VDP models:
       9918                     TMS99X8:        equ     $9918
       9938                     V9938:          equ     $9938
       9958                     V9958:          equ     $9958
                                
                                ; MSX models:
       0000                     MODEL_MSX1:     equ     0
       0001                     MODEL_MSX2:     equ     1
       0002                     MODEL_MSX2P:    equ     2
       0003                     MODEL_MSXTR:    equ     3
                                
       0004                     MODEL_SUBROM:   equ     4
                                
                                ; Locales:
                                ; -- ID byte 0
       0000                     LOCAL_CHSET_JP  equ     $00
       0001                     LOCAL_CHSET_US  equ     $01
       0002                     LOCAL_CHSET_KO  equ     $02
                                
                                ; There are charsets which pretend to be INT, but are not... For now only BR:
       0000                     LOCAL_CHSET_VAR_NONE equ  $00
       0001                     LOCAL_CHSET_VAR_BR   equ  $01
                                
       0000                     LOCAL_DATE_YMD  equ     $00
       0010                     LOCAL_DATE_MDY  equ     $10
       0020                     LOCAL_DATE_DMY  equ     $20
                                
       0000                     LOCAL_INT_60HZ  equ     $00
       0080                     LOCAL_INT_50HZ  equ     $80
                                
                                ; -- ID byte 1
       0000                     LOCAL_KBD_JP    equ     $00
       0001                     LOCAL_KBD_US    equ     $01
       0002                     LOCAL_KBD_FR    equ     $02
       0003                     LOCAL_KBD_UK    equ     $03
       0004                     LOCAL_KBD_DE    equ     $04
                                
       0000                     LOCAL_BASIC_JP  equ     $00
       0001                     LOCAL_BASIC_US  equ     $01
                                
                                
                                ; BOOLEAN VALUES
       0001                     YES:            equ     1
       0000                     NO:             equ     0
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:hardware.asm:UTF_8]
                                    INCLUDE "msx_cbios\\systemvars.asm"
                                ;
                                ; C-BIOS system variable declarations
                                ;
                                ; Copyright (c) 2002-2003 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Joost Yervante Damad.  All rights reserved.
                                ; Copyright (c) 2004-2005 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2005 Jussi Pitkänen.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                
                                ;-------------------
                                ; help function area
                                ;-------------------
                                ; Note: Functions defined in "main.asm" are disabled here.
                                
                                ; F380-F384: interslot read
                                ;RDPRIM:         equ     $F380
                                
                                ; F385-F38B: interslot read
                                ;WRPRIM:         equ     $F385
                                
                                ; F38C-F399: interslot call
                                ;CLPRIM:         equ     $F38C
                                
                                ; F39A-F3AD: workarea for the DEF USR statement
                                ; this area is initialized with the 10 times the value $475A, which gives
                                ; the error 'Syntax Error'
       F39A                     USRTAB:         equ     $F39A
                                
                                ;----------------------
                                ; screen parameter area
                                ;----------------------
                                
                                ; F3AE: # of positions on a line in SCREEN 0 (ini:39)
       F3AE                     LINL40:         equ     $F3AE
                                
                                ; F3AF: # of positions on a line in SCREEN 1 (ini:29)
       F3AF                     LINL32:         equ     $F3AF
                                
                                ; F3B0: # of actually used positions in the current screenmodus (ini:39)
       F3B0                     LINLEN:         equ     $F3B0
                                
                                ; F3B1: # of used lines on screen (ini:24)
       F3B1                     CRTCNT:         equ     $F3B1
                                
                                ; F3B2: # of positions within a tabulator-column (ini:14)
       F3B2                     CLMLST:         equ     $F3B2
                                
                                ; F3B3-F3B4: BASE(0): name table address for SCREEN 0 (ini:$0000)
                                ; used to initialize NAMBAS when SCREEN 0 is activated
       F3B3                     TXTNAM:         equ     $F3B3
                                
                                ; F3B5-F3B6: BASE(1): color table address for SCREEN 0, unused? (ini:$0000)
       F3B5                     TXTCOL:         equ     $F3B5
                                
                                ; F3B7-F3B8: BASE(2): pattern table address for SCREEN 0 (ini:$0800)
                                ; used to initialize CGPBAS when SCREEN 0 is activated
       F3B7                     TXTCGP:         equ     $F3B7
                                
                                ; F3B9-F3BA: BASE(3): sprite attribute table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize ATRBAS when SCREEN 0 is activated
       F3B9                     TXTATR:         equ     $F3B9
                                
                                ; F3BB-F3BC: BASE(4): sprite pattern table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize PATBAS when SCREEN 0 is activated
       F3BB                     TXTPAT:         equ     $F3BB
                                
                                ; F3BD-F3BE: BASE(5): nametable address for SCREEN 1 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 1 is activated
       F3BD                     T32NAM:         equ     $F3BD
                                
                                ; F3BF-F3C0: BASE(6): color table address for SCREEN 1 (ini:$2000)
       F3BF                     T32COL:         equ     $F3BF
                                
                                ; F3C1-F3C2: BASE(7): pattern table address for SCREEN 1 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 1 is activated
       F3C1                     T32CGP:         equ     $F3C1
                                
                                ; F3C3-F3C4: BASE(8): sprite attribute table address for SCREEN 1 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 1 is activated
       F3C3                     T32ATR:         equ     $F3C3
                                
                                ; F3C5-F3C6: BASE(9): sprite pattern table address for SCREEN 1 (ini:$0800)
                                ; used to initialize PATBAS when SCREEN 1 is activated
       F3C5                     T32PAT:         equ     $F3C5
                                
                                ; F3C7-F3C8: BASE(10): name table address for SCREEN 2 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 2 is activated
       F3C7                     GRPNAM:         equ     $F3C7
                                
                                ; F3C9-F3CA: BASE(11): color table address for SCREEN 2 (ini:$2000)
       F3C9                     GRPCOL:         equ     $F3C9           ; Screen2 Color
                                
                                ; F3CB-F3CC: BASE(12): pattern table address for SCREEN 2 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 2 is activated
       F3CB                     GRPCGP:         equ     $F3CB
                                
                                ; F3CD-F3CE: BASE(13): sprite attribute table address for SCREEN 2 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 2 is activated
       F3CD                     GRPATR:         equ     $F3CD
                                
                                ; F3CF-F3D0: BASE(14): sprite pattern table address for SCREEN 2 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 2 is activated
       F3CF                     GRPPAT:         equ     $F3CF
                                
                                ; F3D1-F3D2: BASE(15): name table address for SCREEN 3 (ini:$0800)
                                ; used to initialize NAMBAS when SCREEN 3 is activated
       F3D1                     MLTNAM:         equ     $F3D1
                                
                                ; F3D3-F3D4: BASE(16): color table address for SCREEN 3 (ini:$0000)
                                ; the color table is unused in SCREEN 3
       F3D3                     MLTCOL:         equ     $F3D3
                                
                                ; F3D5-F3D6: BASE(17): pattern table address for SCREEN 3 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 3 is activated
       F3D5                     MLTCGP:         equ     $F3D5
                                
                                ; F3D7-F3D8: BASE(18): sprite attribute table address for SCREEN 3 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 3 is activated
       F3D7                     MLTATR:         equ     $F3D7
                                
                                ; F3D9-F3DA: BASE(19): sprite pattern table address for SCREEN 3 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 3 is activated
       F3D9                     MLTPAT:         equ     $F3D9
                                
                                ; F3DB: keyclick when a key is pressed: 0: no, 1: yes (ini: 1)
                                ; SCREEN ,,n will write to this address
       F3DB                     CLIKSW:         equ     $F3DB
                                
                                ; F3DC: line where the cursor is located
                                ; starts to count at 1 for the topmost line
       F3DC                     CSRY:           equ     $F3DC
                                
                                ; F3DD: column where the cursor is located
                                ; starts to count at 1 for the leftmost column
       F3DD                     CSRX:           equ     $F3DD
                                
                                ; F3DE: function key definition shown: 0: no, -1: yes
                                ; Note: MSX BIOS will mess up end-of-screen if this variable contains
                                ;       something other than $00 or $FF.
       F3DE                     CNSDFG:         equ     $F3DE
                                
                                ; F3DF-D3E6: storage for the last written value towards VDP registers 0 till 7
                                ; this is needed because these registers are write only
       F3DF                     RG0SAV:         equ     $F3DF
       F3E0                     RG1SAV:         equ     $F3E0
       F3E1                     RG2SAV:         equ     $F3E1
       F3E2                     RG3SAV:         equ     $F3E2
       F3E3                     RG4SAV:         equ     $F3E3
       F3E4                     RG5SAV:         equ     $F3E4
       F3E5                     RG6SAV:         equ     $F3E5
       F3E6                     RG7SAV:         equ     $F3E6
                                ; F3E7: last read value of VDP register 8
       F3E7                     STATFL:         equ     $F3E7
                                
                                ; F3E8: information about the joystick and space bar
                                ; 7 6 5 4 3 2 1 0
                                ; | | | |       +-- Space bar, trig(0) (0 = pressed)
                                ; | | | +---------- Stick 1, Trigger 1 (0 = pressed)
                                ; | | +------------ Stick 1, Trigger 2 (0 = pressed)
                                ; | +-------------- Stick 2, Trigger 1 (0 = pressed)
                                ; +---------------- Stick 2, Trigger 2 (0 = pressed)
       F3E8                     TRGFLG:         equ     $F3E8
                                
                                ; F3E9: code for the standard foreground color (ini:15)
       F3E9                     FORCLR:         equ     $F3E9
                                
                                ; F3EA: code for the standard background color (ini:4)
       F3EA                     BAKCLR:         equ     $F3EA
                                
                                ; F3EB: code for the standard border color (ini:7)
       F3EB                     BDRCLR:         equ     $F3EB
                                
                                ; F3EC-F3EE: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EC                     MAXUPD:         equ     $F3EC
                                
                                ; F3EF-F3F1: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EF                     MINUPD:         equ     $F3EF
                                
                                ; F3F2: working color, as used for graphical operations
                                ; normally equals to the foreground color (ini:15)
       F3F2                     ATRBYT:         equ     $F3F2
                                
                                ; F3F3-F3F4: starting value of the address of the queue-table
                                ; the queue-table contains 4 queue's: 3 for sound and one for RS232
                                ; (ini: QUETAB ($F959))
       F3F3                     QUEUES:         equ     $F3F3
                                
                                ; F3F5: CLOAD flag =0 when CLOAD =255 when CLOAD?
       F3F5                     FRCNEW:         equ     $F3F5
                                
                                ; F3F6: VDP-interupt counter that counts from 3 to 0, when it reaches zero, the
                                ; keyboard matrix is scanned, and the counters is reset at 3
       F3F6                     SCNCNT:         equ     $F3F6
                                
                                ; F3F7: key repeat counter. Runs from 13 to 0, and is changed when SCNCNT is changed
                                ; if the key remained the same. If it reaches 0, keyrepetition starts. If another key
                                ; is pressed the value is reset at 13.
       F3F7                     REPCNT:         equ     $F3F7
                                
                                ; F3F8-F3F9: first free space in the inputbuffer of the keyboard
                                ; everytime a key is added to the inputbuffer, this address is incremented,
                                ; when it equals to GETPNT, the buffer is full
                                ; the buffer is located at KEYBUF
       F3F8                     PUTPNT:         equ     $F3F8
                                
                                ; F3FA-F3FB: address in inputbuffer of first character that is not yet read
                                ; everytime a key is read from the buffer it is incremented
                                ; the buffer is located at KEYBUF
       F3FA                     GETPNT:         equ     $F3FA
                                
                                ; F3FC-F400: memory area for tape system parameters for 1200 baud
                                ; F3FC: length of  low signal for 0     (ini:83)
                                ; F3FD: length of high signal for 0     (ini:92)
                                ; F3FE: length of  low signal for 1     (ini:38)
                                ; F3FF: length of high signal for 1     (ini:45)
                                ; F400: length of synchronization block (ini:15)
       F3FC                     CS120:          equ     $F3FC
                                
                                ; F401-F405: memory area for tape system parameters for 1200 baud
                                ; F401: length of  low signal for 0     (ini:37)
                                ; F402: length of high signal for 0     (ini:45)
                                ; F403: length of  low signal for 1     (ini:14)
                                ; F404: length of high signal for 1     (ini:22)
                                ; F405: length of synchronization block (ini:31)
       F401                     CS240:          equ     $F401
                                
                                ; F406-F407: lenghts of signal for 0 for the current speed of the tape system
                                ; either equal to the content of F3FC-F3FD or the content of F401-F402
                                ; (ini: 83, 92)
       F406                     LOW_:           equ     $F406 ; real name: LOW, but doesn't compile?
                                
                                ; F408-F409: lenghts of signal for 1 for the current speed of the tape system
                                ; either equal to the content of F3FE-F3FF or the content of F403-F404
                                ; (ini: 38, 45)
       F408                     HIGH_:          equ     $F408 ; real name: HIGH, but doesn't compile?
                                
                                ; F40A: lenghts of synchronization block for the current speed of the tape system
                                ; either equal to the content of F400 or the content of F405 (ini: 15)
       F40A                     HEADER:         equ     $F40A
                                
                                ; F40B-F40C: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; only the byte in F40B is actually used
                                ; If ASPECT2 is larger then 255, the value of F40B is the number of horizontal
                                ; dots per 256 verical dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40B                     ASPCT1:         equ     $F40B
                                
                                ; F40D-F40E: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; If ASPCT2 is smaller then 512, then ASPCT2 is the
                                ; number of vertical dots per 256 horizontal dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40D                     ASPCT2:         equ     $F40D
                                
                                ; F40F-F413: work area for the BASIC statement RESUME NEXT
                                ; contains a fake end of basic program
                                ; (ini: 58, 0, 0, 0, 0)
       F40F                     ENDPRG:         equ     $F40F
                                
                                ; F414: errornumber of last error that happened while executing a BASIC program
                                ; (ini:0)
       F414                     ERRFLG:         equ     $F414
                                
                                ; F415: number of characters in the writebuffer of the printer that still
                                ; need printing
       F415                     LPTPOS:         equ     $F415
                                
                                ; F416: switch indicating if output should be screen or printer
                                ; (think LIST vs LLIST) (ini:0) values: 0: screen, 1: printer
       F416                     PRTFLG:         equ     $F416
                                
                                ; F417: switch indicating if hooked up printer is an MSX printer or not
                                ; values: 0: MSX-Printer, 1: no MSX-Printer
                                ; if the printer is no MSX-Printer, non-ASCII (>=128) characters are replaced
                                ; by spaces before sending them to the printer (ini: 0)
       F417                     NTMSXP:         equ     $F417
                                
                                ; F418: switch indicating of printing routines should use raw-mode or
                                ; should convert:
                                ; =0 to convert tabs and unknown characters to spaces and remove graphical headers
                                ; =1 to send data just like it gets it (ini: 0)
                                ; if RAWPRT is 1, the value if NTMSXP is ignored
       F418                     RAWPRT:         equ     $F418
                                
                                ; ---------------------------
                                ; basic interpreter work area
                                ; ---------------------------
                                
                                ; F419-F41A: work area for the BASIC command VAL: contains address of character that
                                ; has temporarely been replaced by O by VAL
       F419                     VLZADR:         equ     $F419
                                
                                ; F41B: work area for the BASIC command VAL: contains the character originally at
                                ; the location of VLZADR
       F41B                     VLZDAT:         equ     $F41B
                                
                                ; F41C-F41D: line number of current BASIC line being executed, in direct modus this
                                ; contains $FFFF (ini:$FFFF)
       F41C                     CURLIN:         equ     $F41C
                                
                                ; F41E: error detection prefix for KBUF, always contains ":"
                                ; originally undocumented :)
       F41E                     KBFMIN:         equ     $F41E
                                
                                ; F41F-F55C: workarea for coding basic rules that have been typed in direct modus
                                ; this are contains the code for the line interpreted in direct modus
       F41F                     KBUF:           equ     $F41F
                                
                                ; F55D: byte used as first byte of BUF for input statements, giving them always
                                ; an extra ',' (ini:44 == ',')
       F55D                     BUFMIN:         equ     $F55D
                                
                                ; F55E-F65F: used in direct modus to store the ASCII codes of the line, or simulary
                                ; for INPUT or LINE INPUT BASIC statements
       F55E                     BUF:            equ     $F55E
                                
                                ; F562-F570: used by bitblit routines to store the register data
       F562                     SX:             equ     $F562
       F564                     SY:             equ     $F564
       F566                     DX:             equ     $F566
       F568                     DY:             equ     $F568
       F56A                     NX:             equ     $F56A
       F56C                     NY:             equ     $F56C
       F56E                     CDUMMY:         equ     $F56E
       F56F                     ARG_:           equ     $F56F
       F570                     L_OP:           equ     $F570
                                
                                ; F660: last usable byte of BUF
       F660                     ENDBUF:         equ     $F660
                                
                                ; F661: number of column of last written character on the screen
       F661                     TTYPOS:         equ     $F661
                                
                                ; F662: switch indicating during variable lookup for arrays, if this has not already
                                ; been done for a DIM BASIC statement
       F662                     DIMFLG:         equ     $F662
                                
                                ; F663: workarea for evaluation of expressions; contains type of last evaluated
                                ; expression; the value of the expression is in DAC, possible values of VALTYP:
                                ; 2: integer
                                ; 3: string
                                ; 4: normal real
                                ; 8: double real
       F663                     VALTYP:         equ     $F663
                                
                                ; F664: workarea for coding of BASIC statements. switch indicating if keywords have
                                ; to be encoded or not. E.g. in DATA fields they should not be encoded
                                ; 0: encoding on, 1: encoding off
       F664                     DORES:          equ     $F664
                                
                                ; F665: workarea for coding of BASIC statements. swithc indication of numbers have to be
                                ; encoded; values: $0: encode as const, $1: encode as line number, $FF: do not encode
       F665                     DONUM:          equ     $F665
                                
                                ; F666-F667: work area for evaluation of expressions: contains address of first character
                                ; after the code of the last evaluated expression
       F666                     CONTXT:         equ     $F666
                                
                                ; F668: work area for evaluation of expressions: contains information byte about the
                                ; encoding of the last evaluated constant number; value of this constant is in CONLO
                                ; values:
                                ; $0B: octal (2 bytes)
                                ; $0C: hexadecimal (2 bytes)
                                ; $0F: decimal 0<=value<256 (1 byte)
                                ; $11-$1B: short encoding for 0->10
                                ; $1C: decimal (2bytes, 2s-compliment)
                                ; $26: $42 binary as ASCII
                                ; $0E: line number
                                ; $0D: line pointer
                                ; $1D: normal real (1 byte exp, 3 bytes BCD)
                                ; $1F: double real (1 byte exp, 7 bytes BCD)
       F668                     CONSAV:         equ     $F668
                                
                                ; F669: work area for evaluation of expressions: contains type of last evaluated number
                                ; constant; the value is in CONLO, for values of CONTYP, see VALTYP
                                ; Strings are never contant in BASIC!
       F669                     CONTYP:         equ     $F669
                                
                                ; F66A-F671: work area for evaluation of expressions: contains the value of the last
                                ; evaluated number contant; value starts at F66A, and takes bytes as needed for the type
       F66A                     CONLO:          equ     $F66A
                                
                                ; F672-F673: upper limit of memory area reserved for strings, contains the upper address
                                ; that is allowed to be used
       F672                     MEMSIZ:         equ     $F672
                                
                                ; F674-F675: top of stack; also first byte below string area
       F674                     STKTOP:         equ     $F674
                                
                                ; F676-F677: start address of current basic program, set at initialization, and
                                ; not changed by OS (ini:$8001)
       F676                     TXTTAB:         equ     $F676
                                
                                ; F678-F679: address of first unused string-descriptor in TEMPST
                                ; (ini:value of TEMPST)
       F678                     TEMPPT:         equ     $F678
                                
                                ; F67A-F697: work area for evaluation of string expressions; this area has space
                                ; for 10 string descriptors of 3 bytes; these can be used for temporarely results
                                ; of string arythmetics
       F67A                     TEMPST:         equ     $F67A
                                
                                ; F698-F69A: work area for evaluation of string expressions; this contains the
                                ; string descriptor of the intermediate result
       F698                     DSCTMP:         equ     $F698
                                
                                ; F69B-F69C: first address within the string memory area that is still free
                                ; the string area is filled backwards, soo the lower the value, the less space
                                ; remains (ini: value of MEMSIZ)
       F69B                     FRETOP:         equ     $F69B
                                
                                ; F69D-F69E: temporarely storage for adminstration of the basic interpreter
       F69D                     TEMP3:          equ     $F69D
                                
                                ; F69F-F6A0: temporarely storage for garbage collection
       F69F                     TEMP8:          equ     $F69F
                                
                                ; F6A1-F6A2: address of first byte in BASIC-code after last FOR statement
       F6A1                     ENDFOR:         equ     $F6A1
                                
                                ; F6A3-F6A4: line number of last used line of DATA statements
       F6A3                     DATLIN:         equ     $F6A3
                                
                                ; F6A5: switch indicating if a variable is allowed to be an array variable.
                                ; This is e.g. not allowed for the loop variable of a FOR statement
                                ; 0 = allowed, 1 = not allowed
       F6A5                     SUBFLG:         equ     $F6A5
                                
                                ; F6A6: switch indicating if currently a READ or INPUT statement is being executed
       F6A6                     FLKINP:         equ     $F6A6
                                
                                ; F6A7-F6A8: temporarely storage for adminstration of the basic interpreter
       F6A7                     TEMP:           equ     $F6A7
                                
                                ; F6A9: switch indicating if there are still linenumber constants in the BASIC code
                                ; that are encoded as pointers?
       F6A9                     PTRFLG:         equ     $F6A9
                                
                                ; F6AA: switch indication if currently an AUTO statement is active
                                ; 0 = no auto, 1 = auto
       F6AA                     AUTFLG:         equ     $F6AA
                                
                                ; F6AB-F6AC: last generated AUTO line number
       F6AB                     AUTLIN:         equ     $F6AB
                                
                                ; F6AD-F6AE: last used AUTO increment
       F6AD                     AUTINC:         equ     $F6AD
                                
                                ; F6AF-F6B0: work area of the error system; contains address of first byte
                                ; of statement currently being executed
       F6AF                     SAVTXT:         equ     $F6AF
                                
                                ; F6B1-F6B2: work area of the error system; contains address of the stack
                                ; before executing of the current statement started
       F6B1                     SAVSTK:         equ     $F6B1
                                
                                ; F6B3-F6B4: line number of last failed line
       F6B3                     ERRLIN:         equ     $F6B3
                                
                                ; F6B5-F6B6: line number of last used (changed, listed, added) line
       F6B5                     DOT:            equ     $F6B5
                                
                                ; F6B7-F5B8: work area of the error system; contains the address of the first
                                ; byte of the statement that last failed; on failure it is stored with the
                                ; content of SAVTXT
       F6B7                     ERRTXT:         equ     $F6B7
                                
                                ; F6B9-F6BA: work area of the error system; contains the line number where
                                ; execution should go to on error (as in basic: ON ERROR GOTO x)
       F6B9                     ONELIN:         equ     $F6B9
                                
                                ; F6BB-F6BC: work area of the error system; indication if the interpreter is
                                ; currently executing an error catch routine
                                ; 0 = no, FF = yes
       F6BB                     ONEFLG:         equ     $F6BB
                                
                                ; F6BC-F6BD: temporarely storage for the interpreter
       F6BC                     TEMP2:          equ     $F6BC
                                
                                ; F6BE-F6BF: line number of last program break, reset at 0 at any program change
       F6BE                     OLDLIN:         equ     $F6BE
                                
                                ; F6C0-F6C1: address of first statement that is not executed due to a break
       F6C0                     OLDTXT:         equ     $F6C0
                                
                                ; F6C2-F6C3: begin address of storage of basic variables and function descriptors;
                                ; possibly adjusted when program changes in size
       F6C2                     VARTAB:         equ     $F6C2
                                
                                ; F6C4-F6C5: begin address of array variables; possibly adjusted when program
                                ; changes size or more variables are allocated
       F6C4                     ARYTAB:         equ     $F6C4
                                
                                ; F6C6-F6C7: address of first free byte not used for storage of code or variables
                                ; (ini: $8003)
       F6C6                     STREND:         equ     $F6C6
                                
                                ; F6C8-F6C9: address where data needs to be searched at next READ statement
       F6C8                     DATPTR:         equ     $F6C8
                                
                                ; F6CA-F6E3: table with variable types, one for each letter in the alphabet
                                ; possible values:
                                ;       2 = integer     3 = string      4 = single      8 = double
       F6CA                     DEFTBL:         equ     $F6CA
                                
                                ; F6E4-F7B4: work area for execution of self defined functions
                                
                                ; F6E4-F6E5: contains address ; of previous parameter block on the stack;
                                ; needed for garbage collection
       F6E4                     PRMSTK:         equ     $F6E4
                                
                                ; F6E6-F6E7:  amount of valid bytes in PARM1
       F6E6                     PRMLEN:         equ     $F6E6
                                
                                ; F6E8-F74B: contains definitions of the variables in the parameter lists
                                ; of self defined functions
       F6E8                     PARM1:          equ     $F6E8
                                
                                ; F74C-F74D: previous value of PRMSTK
       F74C                     PRMDRV:         equ     $F74C
                                
                                ; F74E-F74F: number of valid bytes in PARM2
       F74E                     PRMLN2:         equ     $F74E
                                
                                ; F750-F7B3: area used for calculation of values that end up in PARM1
       F750                     PARM2:          equ     $F750
                                
                                ; F7B4: switch indicating of while searching a variable name PARM1 has
                                ; been looked at; 0 = no, 1 = yes
       F7B4                     PRMFLG:         equ     $F7B4
                                
                                ; F7B5-F7B6: address of first byte where it is no longer needed to search
                                ; for a variable name; it is equal to ARYTAB when the normal variable area
                                ; is searched, and equal to PARM1+PRMLEN when PARM1 is searched
       F7B5                     ARYTA2:         equ     $F7B5
                                
                                ; F7B7-F7B8: switch indicating iif PARM1 contains a valid parameter block
                                ; 0 = no, 1 = yes
       F7B7                     NOFUNS:         equ     $F7B7
                                
                                ; F7B8-F7B9: temporarely memory used while searching parameter blocks on
                                ; the stack
       F7B8                     TEMP9:          equ     $F7B8
                                
                                ; F7BA-F7BB: counter of the nesting-dept of the function being evaluated
       F7BA                     FUNACT:         equ     $F7BA
                                
                                ; F7BC-F7C3: work area when executing the SWAP statement; the first variable
                                ; is stored here
       F7BC                     SWPTMP:         equ     $F7BC
                                
                                ; F7C4: switch indicating if TRON is on; 0 = off, >0 = on
       F7C4                     TRCFLG:         equ     $F7C4
                                
                                ; F7C5-F7F4: workarea when executing numeric operators
       F7C5                     FBUFFR:         equ     $F7C5
       F7F0                     DECTMP:         equ     $F7F0
       F7F2                     DECTM2:         equ     $F7F2
       F7F4                     DECCNT:         equ     $F7F4
                                
                                ; F7F6-F805: workarea when executing numeric operators; intermediate
                                ; results are stored here; also used for parameter transfer when using
                                ; the USR functions; VALTYPE then contains the type, and the value is
                                ; stored like this:
                                ; typename  type  where
                                ; integer   2     F7F8-F7F9
                                ; string    3     F7F8-F7F9 (address descriptor)
                                ; single    4     F7F6-F7F9
                                ; double    8     F7F6-F7FD
       F7F6                     DAC:            equ     $F7F6
                                
                                ; F806-F856: workarea when executing numeric operators
       F806                     HOLD8:          equ     $F806
       F836                     HOLD2:          equ     $F836
       F83E                     HOLD:           equ     $F83E
       F847                     ARG:            equ     $F847
                                
                                ; F857-F85E: last calculated random double
       F857                     RNDX:           equ     $F857
                                
                                ; --------------------
                                ; filesystem work area
                                ; --------------------
                                
                                ; F85F: # of filedescriptors reserved minus 1
                                ; this is also the maximum number of open files possible
       F85F                     MAXFIL:         equ     $F85F
                                
                                ; F860-F861: start address of the file information table
       F860                     FILTAB:         equ     $F860
                                
                                ; F862-F863: start address of the first file-buffer
       F862                     NULBUF:         equ     $F862
                                
                                ; F864-F865: during file I/O the start address of the active file-buffer
       F864                     PTRFIL:         equ     $F864
                                
                                ; F866: flag indicating if the file that is being loaded have to be started
                                ; immediately; 0 = no, FF = yes
       F866                     RUNFLG:         equ     $F866
                                
                                ; note that RUNFLG and FILNAM overlap!
                                
                                ; F866-F870: filename of last file that has been active;
                                ; first 8 chars are name, last 3 are extension
       F866                     FILNAM:         equ     $F866
                                
                                ; F871-F87B: second filename if needed, e.g. the NAME command
       F871                     FILNM2:         equ     $F871
                                
                                ; F87C: switch indicating if currently a BASIC program is being loaded
                                ; 0 = no, 1 = yes
       F87C                     NLONLY:         equ     $F87C
                                
                                ; F87D-F87E: workarea for BLOAD and BSAVE; when a part of normal memory
                                ; is written, it contains the end address of the written memory region
                                ; if video memory is written it contains $4BE5 + start address of the
                                ; written memory region ??
       F87D                     SAVEND:         equ     $F87D
                                
                                ; F87F-F91E: storage area for the text of the function keys 10x16 bytes,
                                ; but strings need to be zero-terminated, soo maximum length of command is
                                ; 15 characters
       F87F                     FNKSTR:         equ     $F87F
                                
                                ; ------------------------
                                ; screen routine work area
                                ; ------------------------
                                
                                ; F91F-F921: start address of the standard ASCII pattern table
                                ; at every change towards a text mode it is copied in the pattern table
                                ; of the VDP
                                ;   F91F: slot indication (ini: 0)
                                ;   F920-F921: address (ini: 1BBF)
                                ; TODO: make CBIOS use this value instead of hardcoded value
       F91F                     CGPNT:          equ     $F91F
                                
                                ; F922-F923: start address of the nametable in the VRAM
       F922                     NAMBAS:         equ     $F922
                                
                                ; F924-F925: start address of the pattern table in the VRAM
       F924                     CGPBAS:         equ     $F924
                                
                                ; F926-F927: start address of the sprite pattern table in the VRAM
       F926                     PATBAS:         equ     $F926
                                
                                ; F928-F929: start address of the sprite location table in the VRAM
       F928                     ATRBAS:         equ     $F928
                                
                                ; F92A-F92B: address in VRAM of the pattern of the current position
                                ; on screen
       F92A                     CLOC:           equ     $F92A
                                
                                ; F92C: mask for CLOC selecting the right bits that correspond with
                                ; the current position
       F92C                     CMASK:          equ     $F92C
                                
                                ; F92D-F930: work area for graphical calculations
       F92D                     MINDEL:         equ     $F92D
       F92F                     MAXDEL:         equ     $F92F
                                
                                ; ----------------------------------------------
                                ; F931-F941: work area for calculation of CIRCLE
                                ; ----------------------------------------------
                                
                                ; F931-F932: ratio of # of dots in the horizontal and vertical direction
                                ; if = $0100 then ASPCT1 and ASPCT2 are used
                                ; if < $0100 then it is the # of dots in one direction for each
                                ; $0100 # of dots in the other direction; the direction is indicated
                                ; by CSCLXY
       F931                     ASPECT:         equ     $F931
                                
                                ; F933:F934: ; distance, in # of dots from the center of the most
                                ; distant point of the circle
       F933                     CENCNT:         equ     $F933
                                
                                ; F935: switch indication if the start and/or end point need to be
                                ; connected to the center
                                ;  bit 7: connect end point; 1 = yes
                                ;  bit 0: connect start point; 1 = yes
       F935                     CLINEF:         equ     $F935
                                
                                ; F936-F937: used during calculation of CIRCLE
       F936                     CNPNTS:         equ     $F936
                                
                                ; F938: direction of drawing of circle:
                                ;  00 = from CSTCNT towards CENCNT
                                ;  FF = from CENCNT towards CSTCNT
       F938                     CPLOTF:         equ     $F938
                                
                                ; F939-F93A: used during calculation of CIRCLE
       F939                     CPCNT:          equ     $F939
                                
                                ; F93B-F93C: ; contains the total # of dots of the full circle,
                                ; even when only a part is drawn
       F93B                     CPCNT8:         equ     $F93B
                                
                                ; F93D-F93E: used during calculation of CIRCLE
       F93D                     CRCSUM:         equ     $F93D
                                
                                ; F93F-F940: ; distance in dots from the center towards the closest
                                ; circle point
       F93F                     CSTCNT:         equ     $F93F
                                
                                ; F941: switch indicating if the X or Y direction needs to be streched:
                                ; 0 = X, 1 = Y
       F941                     CSCLXY:         equ     $F941
                                
                                ; F942-F943: store of CLOC, also used for PAINT
       F942                     CSAVEA:         equ     $F942
                                
                                ; F944: storage of CMASK; also used for PAINT
       F944                     CSAVEM:         equ     $F944
                                
                                ; F945-F946: horizontal distance towards the center
       F945                     CXOFF:          equ     $F945
                                
                                ; F947-F948: vertical distance towards the center
       F947                     CYOFF:          equ     $F947
                                
                                ; -------------------------------------------
                                ; work area for executing the PAINT statement
                                ; -------------------------------------------
                                
                                ; F949: leftmost position of protrusion towards the left
       F949                     LOHMSK:         equ     $F949
                                
                                ; F94A: new workdirection for protrusion towards the left
       F94A                     LOHDIR:         equ     $F94A
                                
                                ;F94B-F94C: leftmost position of protrusion towards the left
       F94B                     LOHADR:         equ     $F94B
                                
                                ; F94D: size of protrusion towards the left
       F94D                     LOHCNT:         equ     $F94D
                                
                                ; F94F-F950: # of pixels that may be skipped
       F94F                     SKPCNT:         equ     $F94F
                                
                                ; F951-F952: # of movements
       F951                     MOVCNT:         equ     $F951
                                
                                ; F953: current direction; $40 = \/, $C0 = /\, $00 = stop
       F953                     PDIREC:         equ     $F953
                                
                                ; F954: indicate if paint towards the left worked
       F954                     LFPROG:         equ     $F954
                                
                                ; F955: indicate of a paint towards the right worked
       F955                     RTPROG:         equ     $F955
                                
                                ; F956-F957: start address of a jumptable for subcommands
                                ; contained in a string variable, used for both PLAY and DRAW
                                ; where this systemvar points to either the PLAY or the DRAW
                                ; table
       F956                     MCLTAB:         equ     $F956
                                
                                ; F958: switch indication if MCLTAB is for PLAY or DRAW
                                ; $0 = DRAW, $FF = PLAY
       F958                     MCLFLG:         equ     $F958
                                
                                ; ------------------------------------------
                                ; work area for sound and queueing and RS232
                                ; ------------------------------------------
                                
                                ; F959-F971: Variables for three music queues and one RS232 queue
                                ; F959: VOICAQ put position
                                ; F95A: VOICAQ get position
                                ; F95B: VOICAQ putback flag
                                ; F95C: VOICAQ size
                                ; F95D: VOICAQ address
                                ; F95F-F964: VOICBQ
                                ; F965-F96A: VOICCQ
                                ; F96B-F970: RS2IQ
       F959                     QUETAB:         equ     $F959
                                
                                ; Putback characters for queues. TODO: what purpose do these have exactly?
       F971                     QUEBAK:         equ     $F971
                                
                                ; Buffers for queues.
       F975                     VOICAQ:         equ     $F975           ; Voice A queue
       F9F5                     VOICBQ:         equ     $F9F5           ; Voice B queue
       FA75                     VOICCQ:         equ     $FA75           ; Voice C queue
       FAF5                     RS2IQ:          equ     $FAF5           ; RS232   queue
                                
                                ; in MSX2 the content of RS2IQ is used differently:
       FAF5                     DPPAGE:         equ     $FAF5           ; Display page (SCR5+)
       FAF6                     ACPAGE:         equ     $FAF6           ; Active page (SCR5+)
                                
                                ; FAF7: AV control port value storage
       FAF7                     AVCSAV:         equ     $FAF7
                                
                                ; FAF8: extended BASIC ROM slot address
       FAF8                     EXBRSA:         equ     $FAF8
                                
                                ; FAF9: character count for ROMA-KANA
       FAF9                     CHRCNT:         equ     $FAF9
                                
                                ; FAFA-FAFB: character save for ROMA-KANA
       FAFA                     ROMA:           equ     $FAFA
                                
                                ; ROMA-KANA extension mode switch or VRAM size??
       FAFC                     MODE:           equ     $FAFC
                                ;Reserved       equ     $FAFD
                                
                                ; FAFE-FAFF: x position for mouse or lightpen
       FAFE                     XSAVE:          equ     $FAFE
                                
                                ; FB00-FB01: y position for mouse or lightpen
       FB00                     YSAVE:          equ     $FB00
       FB02                     LOGOPR:         equ     $FB02
                                ; FB21-FB28: Table which contains info for up to 4 disk ROMs, 2 bytes each:
                                ; - first byte: number of drives connected to this interface
                                ; - second byte: slot ID of the disk ROM
       FB21                     DRVINF:         equ     $FB21
                                ; end of MSX2 only usage of RS2IQ
                                
                                ; --------------------------------
                                ; work area for the PLAY statement
                                ; --------------------------------
                                
                                ; FB35: status about the parsing of a PLAY string
                                ;  bit 7: only one time parsed; 1 = yes
                                ;  bit 1-0: number of parsed strings (0-3)
       FB35                     PRSCNT:         equ     $FB35
                                
                                ; FB36-FB37: storage of stack
       FB36                     SAVSP:          equ     $FB36
                                
                                ; FB38: # of voice currently being parsed (0-2)
       FB38                     VOICEN:         equ     $FB38
                                
                                ; FB39-FB3A: storage of volume of a muted voice
       FB39                     SAVVOL:         equ     $FB39
                                
                                ; FB3B: size of string being parsed (also used by DRAW)
       FB3B                     MCLLEN:         equ     $FB3B
                                
                                ; FB3C-FB3D: address of string being parsed (also used by DRAW)
       FB3C                     MCLPTR:         equ     $FB3C
                                
                                ; FB3E: temporarely storage of active queue # (0-2)
       FB3E                     QUEUEN:         equ     $FB3E
                                
                                ; FB3F: flag indicating which queues are active
                                ; bit 2 = queue 2; 1 = active
                                ; bit 1 = queue 1; 1 = active
                                ; bit 0 = queue 0; 1 = active
       FB3F                     MUSICF:         equ     $FB3F
                                
                                ; FB40: count of the # of PLAY statements parsed, but not executed yet
       FB40                     PLYCNT:         equ     $FB40
                                
                                ; FB41-FB65: Voice Control Block for voice A (queue 0)
       FB41                     VCBA:           equ     $FB41
                                ; FB66-FB8A: Voice Control Block for voice B (queue 1)
       FB66                     VCBB:           equ     $FB66
                                ; FB8B-FBAF: Voice Control Block for voice C (queue 2)
       FB8B                     VCBC:           equ     $FB8B
                                
                                ; each VCB has the following structure:
                                
                                ; name                  offset  length  purpose
       0000                     METREX:         equ     0 ;     2       interrupt counter
       0002                     VCXLEN:         equ     2 ;     1       MCLLEN for voice
       0003                     VCXPTR:         equ     3 ;     2       MCLPTR for voice
       0005                     VCXSTP:         equ     5 ;     2       stack pointer
       0007                     QLENGX:         equ     7 ;     1       # bytes in queue
       0008                     NTICSX:         equ     8 ;     2       new counter ?
       000A                     TONPRX:         equ     10;     2       pitch
       000C                     AMPLTX:         equ     12;     1       amplitude
       000D                     ENVPRX:         equ     13;     2       envelope speed
       000F                     OCTAVX:         equ     15;     1       octave
       0010                     NOTELX:         equ     16;     1       tone length
       0011                     TEMPOX:         equ     17;     1       tempo
       0012                     VOLUMX:         equ     18;     1       volume
       0013                     ENVLPX:         equ     19;     1       envelope shape
       0021                     MCLSTX:         equ     33;             space for stack storage
       0024                     MCLSEX:         equ     36;             start of stack
                                ; the stack mentioned above is used to store bytevalues
                                ; that are readied to be put on the voice queue
                                
                                ; -----------------------------------------------
                                ; settings for screen editor and interrupt system
                                ; -----------------------------------------------
                                
                                ; FBB0: switch indicating if software reset is enabled
                                ; 0 = n, 1 = yes; can be used to reset BASIC by pressing
                                ; SHIFT-CODE-GRAPH; does not erase the existing program
                                ; (ini: 0)
       FBB0                     ENSTOP:         equ     $FBB0
                                
                                ; FBB1: switch indicating if the current BASIC program is in a ROM
                                ; 0 = no; 1 = yes
       FBB1                     BASROM:         equ     $FBB1
                                
                                ; FBB2-FBC9: table containing for each line if it continues on the
                                ; next line; 0 = yes, >0 = no
       FBB2                     LINTTB:         equ     $FBB2
                                
                                ; FBCA-FBCB storage of location of cursor for INLIN and QINLIN
                                ;  FBCA: CSRY , FBCB: CSRX
       FBCA                     FSTPOS:         equ     $FBCA
                                
                                ; ASCII code of the character currently covered by the cursor
                                ; TODO: is the name CURSAV or CODSAV ?
       FBCC                     CURSAV:         equ     $FBCC
                                
                                ; FBCD: switch indicating which function keys are to be displayed
                                ; on the screen; 0 = F6-F10, 1 = F1-F5
       FBCD                     FNKSWI:         equ     $FBCD
                                
                                ; FBCE-FBD7: for each function key, a flag indicating if it has
                                ; interrupt facility enabled; 0 = disabled, 1 = enabled
       FBCE                     FNKFLG:         equ     $FBCE
                                
                                ; FBD8: counter of # of interrupts that still have a pending ON .. GOSUB
       FBD8                     ONGSBF:         equ     $FBD8
                                
                                ; FBD9: flag indicating if a keyclick has already been generated, to avoid
                                ; keyclicks for a key that generates two ASCII codes
                                ; $00 = no click, $0F = click
       FBD9                     CLIKFL:         equ     $FBD9
                                
                                ; FBDA-FBE4: storage of keyboard matrix, used for detection key repetition
       FBDA                     OLDKEY:         equ     $FBDA
                                
                                ; FBE5-FBEF: current state of the keyboard matrix
       FBE5                     NEWKEY:         equ     $FBE5
                                
                                ; keyboard buffer; each char entered via the keyboard ends up here
       FBF0                     KEYBUF:         equ     $FBF0
                                ; LIMPNT: something about "key buffer pointer"
       FC17                     LIMPNT:         equ     $FC17
                                
                                ; FC18-FC3F: work area for processing the last typed line
       FC18                     LINWRK:         equ     $FC18
                                
                                ; FC40-FC47: storage for the patter of an ASCII character
                                ; used when writing an ASCII character in a graphical mode
       FC40                     PATWRK:         equ     $FC40
                                
                                ; FC48-FC49: lowest address of the RAM memory; initialized at startup
                                ; and not changed normally
       FC48                     BOTTOM:         equ     $FC48
                                
                                ; FC4A-FC4B: highest address of the RAM memory that is not reserved by
                                ; the OS; string area, filebuffers and stack are below this address
                                ; initialized at startup and not changed normally
       FC4A                     HIMEM:          equ     $FC4A
                                
                                ; FC4C-FC99: table for interrupt facilities of MSX BASIC
                                ; each 3 bytes are used like this:
                                ; byte 1 is a flag:
                                ;  bit 2: interrupt happened; 1 = yes
                                ;  bit 1: interrupt stop; 1 = yes
                                ;  bit 0: interrupt off; 1 = no
                                ; byte 2-3 is the adress of the line in BASIC where should be
                                ; jumped too
                                ; the offsets in the table are:
                                ;  offset  address interrupt
                                ;       0  FC4C    F1
                                ;       3  FC4F    F2
                                ;       6  FC52    F3
                                ;       9  FC55    F4
                                ;      12  FC58    F5
                                ;      15  FC5B    F6
                                ;      18  FC5E    F7
                                ;      21  FC61    F8
                                ;      24  FC64    F9
                                ;      27  FC67    F10
                                ;      30  FC6A    STOP
                                ;      33  FC6D    sprite collision
                                ;      36  FC70    SPACE (trigger 0)
                                ;      39  FC73    joystick 1 button 1 (trigger 1)
                                ;      39  FC76    joystick 2 button 1 (trigger 2)
                                ;      39  FC79    joystick 1 button 2 (trigger 3)
                                ;      39  FC7C    joystick 2 button 2 (trigger 4)
                                ;      39  FC7F    interval
       FC4C                     TRPTBL:         equ     $FC4C
                                
                                ; FC9A: usage unknown
       FC9A                     RTYCNT:         equ     $FC9A
                                
                                ; FC9B: STOP indication
                                ; 0 = nothing; 3 = CTRL+STOP, 4 = STOP
       FC9B                     INTFLG:         equ     $FC9B
                                
                                ; FC9C: last read Y-position of a touchpad
       FC9C                     PADY:           equ     $FC9C
                                
                                ; FC9D: last read X-position of a touchpad
       FC9D                     PADX:           equ     $FC9D
                                
                                ; FC9E-FC9F: software clock, updated at each VDP interrupt
       FC9E                     JIFFY:          equ     $FC9E           ; timer counter
                                
                                ; FCA0-FCA1: initial value of INTCNT, used when INTCNT
                                ; reaches 0; used for ON INTERVAL GOSUB
       FCA0                     INTVAL:         equ     $FCA0
                                
                                ; FCA2-FCA3: interrupt counter; lowered at each VDP interrupt;
                                ; reset with value of INTVAL when it reaches zero; if interval
                                ; interrupt is needed, it is generated
       FCA2                     INTCNT:         equ     $FCA2
                                
                                ; FCA4-FCA5: parameter used at tap input, given a value during
                                ; reading of a headerblock from tape
       FCA4                     LOWLIM:         equ     $FCA4
       FCA5                     WINWID:         equ     $FCA5
                                
                                ; FCA6: flag indicating if the previous character written
                                ; to the screen was an extension character for graphical signs
                                ; (ASCII 1); 0 = no, 1 = yes
       FCA6                     GRPHED:         equ     $FCA6
                                
                                ; FCA7 ESCCNT State of a state machine that handles the printing of escape
                                ; sequences. A subset of the VT52 escape sequences is supported.
                                ; values:
                                ; $00: not inside an escape sequence
                                ; $01: seen <ESC>x
                                ; $02: seen <ESC>y
                                ; $03: seen <ESC>Y<row>
                                ; $04: seen <ESC>Y
                                ; $FF: seen <ESC>
       FCA7                     ESCCNT:         equ     $FCA7
                                
                                ; FCA8: switch indicating insert or overwrite mode
                                ; $00 = overwrite; $FF = insert
                                ; the value of INSFLG is changed each time the INS key is pressed
       FCA8                     INSFLG:         equ     $FCA8
                                
                                ; FCA9: show cursor; 0 = no, 1 = yes
                                ; can be changed with escape sequences x5 and y5
       FCA9                     CSRSW:          equ     $FCA9
                                
                                ; FCAA: shape of cursor; 0 = block; 1 = insert
                                ; pressing the INS key changes the value of CSTYLE
                                ; can be changed with escape sequences x4 and y4
       FCAA                     CSTYLE:         equ     $FCAA
                                
                                ; switch indicating if the CAPS-LOCK is on
                                ; $00 = off, $FF = on (unofficial: $80 = perma-on)
       FCAB                     CAPST:          equ     $FCAB
                                
                                ; FCAC: dead key control in non-japanese MSX models
                                ; adds a mark on the next char pressed, if applicable
                                ;  0 = no dead key
                                ;  1 = dead key                => accent grave
                                ;  2 = SHIFT + dead key        => accent aigu
                                ;  3 = CODE + dead key         => accent circumflex
                                ;  4 = SHIFT + CODE + dead key => trema
                                ; in japanese models it controls the charset used
       FCAC                     KANAST:         equ     $FCAC
                                
                                ; FCAD: only used in japanese MSX models; it defines
                                ; the used typeset (ini: $40)
       FCAD                     KANAMD:         equ     $FCAD
                                
                                ; ----
                                ; misc
                                ; ----
                                
       FCAE                     FLBMEM:         equ     $FCAE
       FCAF                     SCRMOD:         equ     $FCAF
       FCB0                     OLDSCR:         equ     $FCB0
       FCB1                     CASPRV:         equ     $FCB1
       FCB2                     BRDATR:         equ     $FCB2
       FCB3                     GXPOS:          equ     $FCB3
       FCB5                     GYPOS:          equ     $FCB5
       FCB7                     GRPACX:         equ     $FCB7
       FCB9                     GRPACY:         equ     $FCB9
       FCBB                     DRWFLG:         equ     $FCBB
       FCBD                     DRWANG:         equ     $FCBD
       FCBE                     RUNBNF:         equ     $FCBE
       FCBF                     SAVENT:         equ     $FCBF
                                
                                ; ---------------------------
                                ; storage of slot information
                                ; ---------------------------
                                
                                ; FCC1-FCC4: Information for each primary slot. The most significant bit is
                                ; set if the primary slot is found to be expanded.
       FCC1                     EXPTBL:         equ     $FCC1
                                
                                ; FCC5-FCC8: Duplicate the contents of the four possible secondary slot
                                ; registers.
       FCC5                     SLTTBL:         equ     $FCC5
                                
                                ; FCC9-FD08: Information for any extension ROMs found during the power-up
                                ; ROM search.
                                ; FCC9-FCCC: primary slot 0, secondary slot 0
                                ; FCCD-FCD0: primary slot 0, secondary slot 1
                                ; FCD1-FCD4: primary slot 0, secondary slot 2
                                ; FCD5-FCD8: primary slot 0, secondary slot 3
                                ; FCD9-FCE8: primary slot 1
                                ; FCE9-FCF8: primary slot 2
                                ; FCF9-FD08: primary slot 3
                                ; The information is stored as below.
                                ; bit 7 (set): BASIC program
                                ; bit 6 (set): device handler
                                ; bit 5 (set): statement handler
       FCC9                     SLTATR:         equ     $FCC9
                                
       FD09                     SLTWRK:         equ     $FD09
                                
                                ; ------------------------------
                                ; storage of ROM-page parameters
                                ; ------------------------------
                                
       FD89                     PROCNM:         equ     $FD89
       FD99                     DEVICE:         equ     $FD99
                                ; ------------
                                ; system hooks
                                ; ------------
                                
                                ; system hooks are defined in hooks.asm
                                
                                ; ------------------
                                ; storage of VDP8-23
                                ; ------------------
                                
                                ; FFE7-FFF6: storage of VDP 8-23
       FFE7                     RG8SAV:         equ     $FFE7
                                
                                ; ----------------------
                                ; extra slot information
                                ; ----------------------
                                
                                ; FFF7: slot address of main-rom
                                ;?????:         equ     $FFF7
                                
                                ; ------------------
                                ; storage of VDP25-27
                                ; ------------------
                                
                                ; FFFA-FFFC: storage of VDP 25-27
       FFFA                     RG25SAV:         equ     $FFFA
                                
                                ; ---------------------------
                                ; subslot switching addresses
                                ; ---------------------------
                                
                                ; FFFF: subslot switching address
                                ; This is not actually a system variable, it is a hardware register:
                                ;   SSL_REGS (see hardware.asm).
                                
                                ; -------
                                ; the end
                                ; -------
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:systemvars.asm:UTF_8]
                                
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"   ; ID for auto-executable ROM
000002 4002 1040                    DW  INIT_ROM   ; Main program execution address.
000004 4004 0000                    DW  0      ; STATEMENT
000006 4006 0000                    DW  0      ; DEVICE
000008 4008 0000                    DW  0      ; TEXT
00000A 400A 000000000000            DW  0,0,0  ; Reserved
                                    INCLUDE "MSXINIT.ASM"
                                
                                ;   LSX-Dodgers INIT
                                ;   MSX
                                
       4010                     INIT_ROM:
000010 4010 3E                      DB  03EH    ;LD A,??
000011 4011 F7              12      RST 30H
000012 4012 F3               4      DI
000013 4013 32DAFE          13      LD  (H_STKE),A
000016 4016 CD5940          17      CALL    GTSL1_
000019 4019 21DBFE          10      LD  HL,H_STKE+1
00001C 401C 77               7      LD  (HL),A
00001D 401D 117540          10      LD  DE,START
000020 4020 23               6      INC HL
000021 4021 73               7      LD  (HL),E
000022 4022 23               6      INC HL
000023 4023 72               7      LD  (HL),D
                                
000024 4024 CD3801          17      CALL    RSLREG      ;read primary slot #
000027 4027 07               4      RLCA
000028 4028 07               4      RLCA
000029 4029 F5              11      PUSH    AF
00002A 402A CD5E40          17      CALL    GTSL2_
00002D 402D 3244F3          13      LD  (RAMAD3),A
000030 4030 3A42F3          13      LD  A,(RAMAD1)
000033 4033 CD4B40          17      CALL    FIXRAMAD
000036 4036 3242F3          13      LD  (RAMAD1),A
000039 4039 3A41F3          13      LD  A,(RAMAD0)
00003C 403C CD4B40          17      CALL    FIXRAMAD
00003F 403F 3241F3          13      LD  (RAMAD0),A
000042 4042 F1              10      POP AF
000043 4043 CD5E40          17      CALL    GTSL2_
000046 4046 3243F3          13      LD  (RAMAD2),A
                                
000049 4049 FB               4      EI
00004A 404A C9              10      RET
                                
       404B                     FIXRAMAD:
00004B 404B B7               4      OR  A
00004C 404C 2807            12      JR  Z,FIXRAMAD1
00004E 404E FEC9             7      CP  0C9H
000050 4050 2803            12      JR  Z,FIXRAMAD1
000052 4052 FEFF             7      CP  0FFH
000054 4054 C0              11      RET NZ
       4055                     FIXRAMAD1:
000055 4055 3A44F3          13      LD  A,(RAMAD3)
000058 4058 C9              10      RET
                                
       4059                     GTSL1_:             ;自分のいるスロットを知る
000059 4059 CD3801          17      CALL    RSLREG      ;read primary slot #
00005C 405C 0F               4      RRCA
00005D 405D 0F               4      RRCA
       405E                     GTSL2_:
00005E 405E E603             7      AND 3       ;[A]=000000PP
000060 4060 5F               4      LD  E,A     ;[E]=000000PP
000061 4061 21C1FC          10      LD  HL,EXPTBL
000064 4064 85               4      ADD A,L     ;桁上りは無い
000065 4065 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
000066 4066 7B               4      LD  A,E     ;[A]=000000PP
000067 4067 CB7E            13      BIT 7,(HL)
000069 4069 C8              11      RET Z
00006A 406A 7D               4      LD  A,L     ;point to SLTTBL entry
00006B 406B C604             7      ADD A,4     ;桁上りは無い
00006D 406D 6F               4      LD  L,A
00006E 406E 7E               7      LD  A,(HL)      ;get currently expansion slot register
00006F 406F E60C             7      AND 00CH        ;[A] = 0000SS00
000071 4071 B3               4      OR  E       ;[A] = 0000SSPP
000072 4072 F680             7      OR  080H        ;[A] = 1000SSPP
000074 4074 C9              10      RET
       4075                     GTSL1_E:
                                
       4075                     START:
000075 4075 F3               4      DI
000076 4076 ED56             8      IM  1
000078 4078 3E01             7      LD  A,1
00007A 407A 320068          13      LD  (BANK1_SEL),A
00007D 407D 218B40          10      LD  HL,AT_START2
000080 4080 1100C6          10      LD  DE,START2
000083 4083 010021          10      LD  BC,MSX_E-START2
000086 4086 EDB0                    LDIR
000088 4088 C300C6          10      JP  START2
                                
       408B                     AT_START2:
00008B C600                         ORG START2,AT_START2-RUN
                                
00008B C600 3100C6          10      LD  SP,START2
00008E C603 CD11C6          17      CALL    INIT        ;NZならAUTOEXECを実行
000091 C606 210000          10      LD  HL,0
000094 C609 E5              11      PUSH    HL
000095 C60A C8              11      RET Z
000096 C60B 1105C8          10      LD  DE,AUTOD
000099 C60E C3FDE4          10      JP  _COMANL
                                
       C611                     INIT:
00009C C611 DD21900D        14      LD  IX,0D90H
0000A0 C615 0600             7      LD  B,0
       C617                     CHECK_CBIOS1:
0000A2 C617 DD7E00          19      LD  A,(IX+0)
0000A5 C61A FE43             7      CP  'C'
0000A7 C61C 202B            12      JR  NZ,CHECK_CBIOS2
0000A9 C61E DD7E01          19      LD  A,(IX+1)
0000AC C621 FE2D             7      CP  '-'
0000AE C623 2024            12      JR  NZ,CHECK_CBIOS2
0000B0 C625 DD7E02          19      LD  A,(IX+2)
0000B3 C628 FE42             7      CP  'B'
0000B5 C62A 201D            12      JR  NZ,CHECK_CBIOS2
0000B7 C62C DD7E03          19      LD  A,(IX+3)
0000BA C62F FE49             7      CP  'I'
0000BC C631 2016            12      JR  NZ,CHECK_CBIOS2
0000BE C633 DD7E04          19      LD  A,(IX+4)
0000C1 C636 FE4F             7      CP  'O'
0000C3 C638 200F            12      JR  NZ,CHECK_CBIOS2
0000C5 C63A DD7E05          19      LD  A,(IX+5)
0000C8 C63D EE53             7      XOR 'S'
0000CA C63F 2008            12      JR  NZ,CHECK_CBIOS2
                                
0000CC C641 327ED0          13      LD  (CBIOS_SWC1),A
0000CF C644 32A2D0          13      LD  (CBIOS_SWC2),A
                                
0000D2 C647 1804            12      JR  CHECK_CBIOS3
       C649                     CHECK_CBIOS2:
0000D4 C649 DD23            10      INC IX
0000D6 C64B 10CA            13      DJNZ    CHECK_CBIOS1
       C64D                     CHECK_CBIOS3:
0000D8 C64D 3ADBFE          13      LD  A,(H_STKE+1)
0000DB C650 3262E4          13      LD  (ROM_SLT),A
                                
       C653                     RAMCHK2:
0000DE C653 3A42F3          13      LD  A,(RAMAD1)
0000E1 C656 2640             7      LD  H,040H
0000E3 C658 CD69C7          17      CALL    CHK_RAM
0000E6 C65B 3242F3          13      LD  (RAMAD1),A
       C65E                     RAMCHK1:
0000E9 C65E 3A41F3          13      LD  A,(RAMAD0)
0000EC C661 2600             7      LD  H,00H
0000EE C663 CD69C7          17      CALL    CHK_RAM
0000F1 C666 3241F3          13      LD  (RAMAD0),A
       C669                     RAMCHK0:
0000F4 C669 3A42F3          13      LD  A,(RAMAD1)
0000F7 C66C 2640             7      LD  H,040H
0000F9 C66E CD6ED3          17      CALL    ENASLT
                                
0000FC C671 3A41F3          13      LD  A,(RAMAD0)
0000FF C674 2600             7      LD  H,000H
000101 C676 CD6ED3          17      CALL    ENASLT
                                
000104 C679 210000          10      LD  HL,0
000107 C67C 065C             7      LD  B,05CH
000109 C67E 3E                      DB  03EH    ;LD A,??
00010A C67F EF              12      RST 28H
00010B C680 CD08D5          17      CALL    FILL_MEMORY
00010E C683 06A4             7      LD  B,0A4H
000110 C685 AF               4      XOR A
000111 C686 CD08D5          17      CALL    FILL_MEMORY
                                
000114 C689 3EC3             7      LD  A,0C3H      ;JP
000116 C68B 2103E4          10      LD  HL,CPM_WBOOT
000119 C68E 320000          13      LD  (00000H),A
00011C C691 220100          16      LD  (00001H),HL ;IPL
                                
00011F C694 21031D          10      LD  HL,MACW     ;3 bit7  DPB Compatible LA(1)
000122 C697 220300          16      LD  (00003H),HL ;  bit6-0 Machine
                                ;               ;4 LSX-Dodgers(01DH)
000125 C69A 2106C9          10      LD  HL,BDOS
000128 C69D 320500          13      LD  (00005H),A
00012B C6A0 220600          16      LD  (00006H),HL ;BDOS
                                
00012E C6A3 210000          10      LD  HL,0
000131 C6A6 322800          13      LD  (00028H),A
000134 C6A9 222900          16      LD  (00029H),HL ;BDOS
                                                ;インタースロットコール
000137 C6AC 216ED2          10      LD  HL,RDSLTR
00013A C6AF 320C00          13      LD  (_RDSLT),A
00013D C6B2 220D00          16      LD  (_RDSLT+1),HL
                                
000140 C6B5 2177D2          10      LD  HL,WRSLTR
000143 C6B8 321400          13      LD  (_WRSLT),A
000146 C6BB 221500          16      LD  (_WRSLT+1),HL
                                
000149 C6BE 2130D2          10      LD  HL,CALSLTR
00014C C6C1 321C00          13      LD  (_CALSLT),A
00014F C6C4 221D00          16      LD  (_CALSLT+1),HL
                                
000152 C6C7 216ED3          10      LD  HL,ENASLT
000155 C6CA 322400          13      LD  (_ENASLT),A
000158 C6CD 222500          16      LD  (_ENASLT+1),HL
                                
00015B C6D0 2120D2          10      LD  HL,CALLF
00015E C6D3 323000          13      LD  (_CALLF),A
000161 C6D6 223100          16      LD  (_CALLF+1),HL
                                
000164 C6D9 2180D2          10      LD  HL,INT38H
000167 C6DC 323800          13      LD  (00038H),A
00016A C6DF 223900          16      LD  (00038H+1),HL
                                                ;LSX-Dodgers
00016D C6E2 3EE4             7      LD  A,CPM_BOOT/256
00016F C6E4 320B00          13      LD  (0000BH),A
                                
000172 C6E7 3E                      DB  03EH    ;LD A,??
000173 C6E8 E9               4      JP  (HL)
000174 C6E9 320F00          13      LD  (0000FH),A
                                                ;MSXワークエリア
000177 C6EC 3E03             7      LD  A,3
000179 C6EE 329BFC          13      LD  (INTFLG),A
                                
                                                ;ROMタイプ判別(ASCII-8K/ASCII-16K)
00017C C6F1 1E00             7      LD  E,0
00017E C6F3 3A62E4          13      LD  A,(ROM_SLT)
000181 C6F6 210068          10      LD  HL,BANK1_SEL
000184 C6F9 CDFBD2          17      CALL    WRSLT
                                
000187 C6FC 210060          10      LD  HL,06000H
00018A C6FF 3A62E4          13      LD  A,(ROM_SLT)
00018D C702 CDBAD2          17      CALL    RDSLT
000190 C705 FE41             7      CP  'A'
000192 C707 280F            12      JR  Z,ROM8K
                                                ;ASCII-8K/Konami-8Kではない(ASCII-16K)
000194 C709 3E                      DB  03EH    ;LD A,??
000195 C70A 00               4      NOP
000196 C70B 32E5E1          13      LD  (ASCII16K1),A
000199 C70E 32E9E1          13      LD  (ASCII16K2),A
00019C C711 3E3F             7      LD  A,03FH
00019E C713 3201E2          13      LD  (ASCII16K3),A
0001A1 C716 1829            12      JR  ROMCHECKED
       C718                     ROM8K:              ;Konami-8Kチェック
0001A3 C718 1E01             7      LD  E,1
0001A5 C71A 3A62E4          13      LD  A,(ROM_SLT)
0001A8 C71D 210070          10      LD  HL,BANK2_SEL
0001AB C720 CDFBD2          17      CALL    WRSLT
                                
0001AE C723 1E00             7      LD  E,0
0001B0 C725 3A62E4          13      LD  A,(ROM_SLT)
0001B3 C728 210080          10      LD  HL,KONAMI_BANK2_SEL
0001B6 C72B CDFBD2          17      CALL    WRSLT
                                
0001B9 C72E 210080          10      LD  HL,08000H
0001BC C731 3A62E4          13      LD  A,(ROM_SLT)
0001BF C734 CDBAD2          17      CALL    RDSLT
0001C2 C737 FE41             7      CP  'A'
0001C4 C739 2006            12      JR  NZ,ROMCHECKED
                                                ;Konami-8K
0001C6 C73B 210080          10      LD  HL,KONAMI_BANK2_SEL
0001C9 C73E 22F0E1          16      LD  (ROM8000H),HL
       C741                     ROMCHECKED:
                                                ;MSX2判別
0001CC C741 3AF8FA          13      LD  A,(EXBRSA)
0001CF C744 B7               4      OR  A
0001D0 C745 3E28             7      LD  A,40
0001D2 C747 2802            12      JR  Z,ISMSX1
0001D4 C749 3E50             7      LD  A,80        ;MSX2以降は80桁で起動
       C74B                     ISMSX1:
0001D6 C74B 32AEF3          13      LD  (LINL40),A
0001D9 C74E 32B1E4          13      LD  (_WIDTH),A
0001DC C751 DD216C00        14      LD  IX,INITXT
0001E0 C755 CD14D2          17      CALL    CALSLT_R
0001E3 C758 DD217800        14      LD  IX,SETTXT
0001E7 C75C CD14D2          17      CALL    CALSLT_R
                                
0001EA C75F 2111C8          10      LD  HL,INIMES
0001ED C762 CD7BCD          17      CALL    MSX
       C765                     INIT1:
0001F0 C765 AF               4      XOR A
0001F1 C766 FE03             7      CP  3
0001F3 C768 C9              10      RET
                                
       C769                     CHK_RAM:
0001F4 C769 E5              11      PUSH    HL
0001F5 C76A CDBEC7          17      CALL    CHK_RAM0
0001F8 C76D E1              10      POP HL
0001F9 C76E C8              11      RET Z
0001FA C76F 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0001FD C772 E680             7      AND 080H
0001FF C774 CD95C7          17      CALL    CHK_RAM_SLT
000202 C777 C8              11      RET Z
000203 C778 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000206 C77B E680             7      AND 080H
000208 C77D C601             7      ADD A,1
00020A C77F CD95C7          17      CALL    CHK_RAM_SLT
00020D C782 C8              11      RET Z
00020E C783 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000211 C786 E680             7      AND 080H
000213 C788 C602             7      ADD A,2
000215 C78A CD95C7          17      CALL    CHK_RAM_SLT
000218 C78D C8              11      RET Z
000219 C78E 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
00021C C791 E680             7      AND 080H
00021E C793 C603             7      ADD A,3
       C795                     CHK_RAM_SLT:
000220 C795 E5              11      PUSH    HL
000221 C796 CDBEC7          17      CALL    CHK_RAM0        ;スロット#X or X-0
000224 C799 E1              10      POP HL
000225 C79A C8              11      RET Z
000226 C79B CB79             8      BIT 7,C
000228 C79D 281A            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
00022A C79F 79               4      LD  A,C
00022B C7A0 C604             7      ADD A,4         ;スロット#X-1
00022D C7A2 E5              11      PUSH    HL
00022E C7A3 CDBEC7          17      CALL    CHK_RAM0
000231 C7A6 E1              10      POP HL
000232 C7A7 C8              11      RET Z
000233 C7A8 79               4      LD  A,C
000234 C7A9 C604             7      ADD A,4         ;スロット#X-2
000236 C7AB E5              11      PUSH    HL
000237 C7AC CDBEC7          17      CALL    CHK_RAM0
00023A C7AF E1              10      POP HL
00023B C7B0 C8              11      RET Z
00023C C7B1 79               4      LD  A,C
00023D C7B2 C604             7      ADD A,4         ;スロット#X-3
00023F C7B4 E5              11      PUSH    HL
000240 C7B5 CDBEC7          17      CALL    CHK_RAM0
000243 C7B8 E1              10      POP HL
       C7B9                     CHK_RAM_E:
000244 C7B9 AF               4      XOR A
000245 C7BA 3C               4      INC A           ;ZF=0にする
000246 C7BB 3E00             7      LD  A,0
000248 C7BD C9              10      RET
                                
       C7BE                     CHK_RAM0:
000249 C7BE 4F               4      LD  C,A
00024A C7BF 3A62E4          13      LD  A,(ROM_SLT)
00024D C7C2 B9               4      CP  C
00024E C7C3 28F4            12      JR  Z,CHK_RAM_E
000250 C7C5 2E00             7      LD  L,0
       C7C7                     CHK_RAM1:
000252 C7C7 79               4      LD  A,C
000253 C7C8 DD210C00        14      LD  IX,_RDSLT
000257 C7CC CDF9C7          17      CALL    CALSLT_RAM
00025A C7CF C6E5             7      ADD A,0E5H
00025C C7D1 47               4      LD  B,A
00025D C7D2 5F               4      LD  E,A
00025E C7D3 79               4      LD  A,C
00025F C7D4 DD211400        14      LD  IX,_WRSLT
000263 C7D8 CDF9C7          17      CALL    CALSLT_RAM
000266 C7DB 79               4      LD  A,C
000267 C7DC DD210C00        14      LD  IX,_RDSLT
00026B C7E0 CDF9C7          17      CALL    CALSLT_RAM
00026E C7E3 B8               4      CP  B
00026F C7E4 C0              11      RET NZ
000270 C7E5 D6E5             7      SUB 0E5H
000272 C7E7 79               4      LD  A,C
000273 C7E8 5F               4      LD  E,A
000274 C7E9 DD211400        14      LD  IX,_WRSLT
000278 C7ED CDF9C7          17      CALL    CALSLT_RAM
00027B C7F0 24               4      INC H
00027C C7F1 7D               4      LD  A,L
00027D C7F2 C604             7      ADD A,4
00027F C7F4 6F               4      LD  L,A
000280 C7F5 20D0            12      JR  NZ,CHK_RAM1
000282 C7F7 79               4      LD  A,C     ;ZF=1のハズ
000283 C7F8 C9              10      RET
                                
       C7F9                     CALSLT_RAM:
000284 C7F9 C5              11      PUSH    BC
000285 C7FA E5              11      PUSH    HL
000286 C7FB FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00028A C7FF CD1C00          17      CALL    _CALSLT
00028D C802 E1              10      POP HL
00028E C803 C1              10      POP BC
00028F C804 C9              10      RET
                                
000290 C805 4155544F45584543    AUTOD:  DB  "AUTOEXEC "
            20                  
000299 C80E 413A00              AUTODV: DB  "A:",0
                                
00029C C811 0C4C53582D446F64    INIMES: DB  00CH,"LSX-Dodgers for MSX v"
            6765727320666F72    
            204D53582076        
0002B2 C827 312E                    DB  030H + VER_1, '.'
0002B4 C829 3630                    DB  030H + VER_2 ,030H + VER_3
0002B6 C82B 43                      DB  "C"
0002B7 C82C 2047616B750D0A          DB  ' Gaku',0DH,0AH
0002BE C833 00                      DB  0
                                
0002BF C834 0300                M2DD:   DW  3
0002C1 C836 F902                    DB  0F9H,2
0002C3 C838 CB02                    DW  715
0002C5 C83A FF0750090182            DB  0FFH,7,80,9,1,082H
0002CB C840 0700A7000A00            DW  7,0A7H,10
       C846                     M2DDE:
[EOF:MSXINIT.ASM:SHIFT_JIS]
                                    INCLUDE "MSXCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                ;   MSX
                                
       C846                     INITE:
0002D1 C846                         DS  BDOS-INITE
000391 C906 C33ACD          10      JP  BDOS0
                                
       C909                     WBOOT1:
000394 C909 ED7B0600        20      LD  SP,(SYSTEM+1)
000398 C90D 3E03             7      LD  A,3
00039A C90F CD01D0          17      CALL    MSG_A
       C912                     WBOOT2:
[EOF:MSXCCP.ASM:UTF_8]
                                    INCLUDE "LDCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                
       C912                     COMMAND:
00039D C912 3A3DE3          13      LD  A,(FCB_BAT)
0003A0 C915 B7               4      OR  A
0003A1 C916 C258CA          10      JP  NZ,C_BAT1
0003A4 C919 CDCCC9          17      CALL    SETDTA1
0003A7 C91C 3A87E4          13      LD  A,(_DVSW)
0003AA C91F C641             7      ADD A,'A'
0003AC C921 CD01D0          17      CALL    MSG_A
0003AF C924 3E3E             7      LD  A,'>'
0003B1 C926 CD01D0          17      CALL    MSG_A
0003B4 C929 3E50             7      LD  A,80
0003B6 C92B 12               7      LD  (DE),A
0003B7 C92C CDC0D0          17      CALL    _SYS0A      ;(BDOS)文字列入力
0003BA C92F CD4DCB          17      CALL    LTNL
       C932                     COMMAND2:
0003BD C932 118200          10      LD  DE,DTA1+2
0003C0 C935 CDFDE4          17      CALL    _COMANL
0003C3 C938 30D8            12      JR  NC,COMMAND
0003C5 C93A 1179E4          10      LD  DE,COMERM
0003C8 C93D CD6CCD          17      CALL    _SYS09      ;(BDOS)文字列出力
0003CB C940 C7              12      RST 0
                                
       C941                     COMANL:
0003CC C941 CD5CD4          17      CALL    FILE
0003CF C944 3A19E4          13      LD  A,(FNAME+4)
0003D2 C947 FE20             7      CP  020H
0003D4 C949 201C            12      JR  NZ,COMB2
0003D6 C94B D5              11      PUSH    DE
0003D7 C94C 1115E4          10      LD  DE,FNAME
0003DA C94F 1A               7      LD  A,(DE)
0003DB C950 FE20             7      CP  020H
0003DD C952 2844            12      JR  Z,SDVSW
0003DF C954 1B               6      DEC DE
0003E0 C955 1A               7      LD  A,(DE)
0003E1 C956 C6FF             7      ADD A,0FFH
0003E3 C958 3809            12      JR  C,COMB
0003E5 C95A 13               6      INC DE
                                
0003E6 C95B 210ACD          10      LD  HL,COMTB
0003E9 C95E 0608             7      LD  B,COMS
0003EB C960 CDEBD6          17      CALL    CPNAME
       C963                     COMB:
0003EE C963 D1              10      POP DE
0003EF C964 D20F00          10      JP  NC,JP_HL
       C967                     COMB2:
0003F2 C967 EB               4      EX  DE,HL
0003F3 C968 2235CA          16      LD  (COMSWC),HL
0003F6 C96B F5              11      PUSH    AF
0003F7 C96C CDEDC9          17      CALL    CEXE4
0003FA C96F F1              10      POP AF
0003FB C970 2115E4          10      LD  HL,FNAME
0003FE C973 116D00          10      LD  DE,FCB2+1   ;COMMAND NAME
000401 C976 010B00          10      LD  BC,11
000404 C979 EDB0                    LDIR
000406 C97B 11DCE2          10      LD  DE,PATHD
       C97E                     CEX1:
000409 C97E 1A               7      LD  A,(DE)
00040A C97F FE20             7      CP  020H
00040C C981 D8              11      RET C
00040D C982 CD51D4          17      CALL    FILEC
000410 C985 D5              11      PUSH    DE
000411 C986 216D00          10      LD  HL,FCB2+1   ;COMMAND NAME
000414 C989 1115E4          10      LD  DE,FNAME
000417 C98C 010B00          10      LD  BC,11
00041A C98F EDB0                    LDIR
00041C C991 CDEDC9          17      CALL    CEXE4
00041F C994 D1              10      POP DE
000420 C995 13               6      INC DE
000421 C996 18E6            12      JR  CEX1
                                
       C998                     SDVSW:
000423 C998 F1              10      POP AF
000424 C999 3A14E4          13      LD  A,(FDRV)
000427 C99C 3D               4      DEC A
000428 C99D 5F               4      LD  E,A
000429 C99E 0E0E             7      LD  C,00EH      ;(BDOS)カレントドライブの設定
00042B C9A0 1831            12      JR  SYSTEM0
                                
       C9A2                     OPEN1:
00042D C9A2 2114E4          10      LD  HL,FDRV
       C9A5                     OPEN:
000430 C9A5 0E11             7      LD  C,011H      ;(BDOS)ファイルの検索
       C9A7                     OPEN3:
000432 C9A7 D5              11      PUSH    DE
000433 C9A8 1118E3          10      LD  DE,DTA_CCP
000436 C9AB CDC9C9          17      CALL    SETDTA
000439 C9AE EB               4      EX  DE,HL
00043A C9AF CDD3C9          17      CALL    SYSTEM0
00043D C9B2 D1              10      POP DE
00043E C9B3 C9              10      RET
                                
       C9B4                     OPEN2:
00043F C9B4 0E12             7      LD  C,012H
000441 C9B6 18EF            12      JR  OPEN3
                                
       C9B8                     DEFCB:              ;Z=Ok NZ=Error
000443 C9B8 1118E3          10      LD  DE,DTA_CCP
000446 C9BB CDD1C9          17      CALL    SYSC0F
                                
000449 C9BE 1139E3          10      LD  DE,DTA_CCP+33   ;(FCB)ランダムレコード
00044C C9C1 0604             7      LD  B,4
00044E C9C3 CD1ECC          17      CALL    ZERO_MEMORY_DE
       C9C6                     SETDTA100:
000451 C9C6 110001          10      LD  DE,00100H
       C9C9                     SETDTA:
000454 C9C9 C33FCF          10      JP  _SYS1A      ;(BDOS)DTAの設定
                                
       C9CC                     SETDTA1:
000457 C9CC 118000          10      LD  DE,DTA1
00045A C9CF 18F8            12      JR  SETDTA
                                
       C9D1                     SYSC0F:
00045C C9D1 0E0F             7      LD  C,00FH      ;(BDOS)ファイルのオープン
       C9D3                     SYSTEM0:
00045E C9D3 CD0500          17      CALL    SYSTEM
000461 C9D6 B7               4      OR  A
000462 C9D7 C9              10      RET
                                
       C9D8                     C_CD:
000463 C9D8 0E5A             7      LD  C,05AH
000465 C9DA 18F7            12      JR  SYSTEM0
                                
       C9DC                     S27BUF:
000467 C9DC 2100FE          10      LD  HL,-00200H  ;スクラッチエリア(0100H)+スタック予備(0100H)
00046A C9DF 39              11      ADD HL,SP
00046B C9E0 2E00             7      LD  L,0
00046D C9E2 7C               4      LD  A,H
00046E C9E3 E6F8             7      AND 0F8H
000470 C9E5 67               4      LD  H,A
       C9E6                     S27DTA:
000471 C9E6 1118E3          10      LD  DE,DTA_CCP
       C9E9                     S27:
000474 C9E9 0E27             7      LD  C,027H      ;(BDOS)ランダムブロック読み込み
000476 C9EB 18E6            12      JR  SYSTEM0
                                
       C9ED                     CEXE4:
000478 C9ED 211DE4          10      LD  HL,FNAME+8
00047B C9F0 7E               7      LD  A,(HL)
00047C C9F1 FE20             7      CP  020H
00047E C9F3 2007            12      JR  NZ,CEXE7
000480 C9F5 3E3F             7      LD  A,'?'
000482 C9F7 77               7      LD  (HL),A
000483 C9F8 23               6      INC HL
000484 C9F9 77               7      LD  (HL),A
000485 C9FA 23               6      INC HL
000486 C9FB 77               7      LD  (HL),A
       C9FC                     CEXE7:
000487 C9FC CDA2C9          17      CALL    OPEN1
       C9FF                     CEXE5:
00048A C9FF C0              11      RET NZ
00048B CA00 2A22E3          16      LD  HL,(DTA_CCP+1+9)
00048E CA03 7C               4      LD  A,H
00048F CA04 CD73D7          17      CALL    CAP
000492 CA07 67               4      LD  H,A
000493 CA08 7D               4      LD  A,L
000494 CA09 CD73D7          17      CALL    CAP
000497 CA0C 6F               4      LD  L,A
000498 CA0D 3A21E3          13      LD  A,(DTA_CCP+1+8)
00049B CA10 CD73D7          17      CALL    CAP
00049E CA13 D642             7      SUB 'B'
0004A0 CA15 282C            12      JR  Z,C_BAT
0004A2 CA17 3D               4      DEC A       ;'C'
0004A3 CA18 2805            12      JR  Z,C_EXE
       CA1A                     CEXE6:
0004A5 CA1A CDB4C9          17      CALL    OPEN2
0004A8 CA1D 18E0            12      JR  CEXE5
                                
       CA1F                     C_EXE:
0004AA CA1F 7C               4      LD  A,H
0004AB CA20 FE4D             7      CP  'M'
0004AD CA22 20F6            12      JR  NZ,CEXE6
                                
0004AF CA24 CDB8C9          17      CALL    DEFCB
0004B2 CA27 CDDCC9          17      CALL    S27BUF
0004B5 CA2A 3D               4      DEC A
0004B6 CA2B 37               4      SCF
0004B7 CA2C C0              11      RET NZ
0004B8 CA2D 7C               4      LD  A,H
0004B9 CA2E B5               4      OR  L
0004BA CA2F 37               4      SCF
0004BB CA30 C8              11      RET Z
0004BC CA31 CDCCC9          17      CALL    SETDTA1
0004BF CA34 110000          10      LD  DE,0                ; self-modifying code
       CA35                     COMSWC  EQU $-2
0004C2 CA37 ED7B0600        20      LD  SP,(SYSTEM+1)
0004C6 CA3B 67               4      LD  H,A             ; A=0 in SETDTA1(_SYS1A)
0004C7 CA3C 6F               4      LD  L,A
0004C8 CA3D E5              11      PUSH    HL              ; push $0000 (reboot address)
0004C9 CA3E 24               4      INC H
0004CA CA3F E5              11      PUSH    HL              ; push $0100 (TPA address)
0004CB CA40 C3E9CB          10      JP  SETFCB              ; and JP $0100
                                
       CA43                     C_BAT:
0004CE CA43 114154          10      LD  DE,'A'+'T'*256
0004D1 CA46 ED52            15      SBC HL,DE
0004D3 CA48 20D0            12      JR  NZ,CEXE6
                                
0004D5 CA4A CDB8C9          17      CALL    DEFCB
                                
0004D8 CA4D 2118E3          10      LD  HL,DTA_CCP
0004DB CA50 113DE3          10      LD  DE,FCB_BAT
0004DE CA53 012500          10      LD  BC,37
0004E1 CA56 EDB0                    LDIR
       CA58                     C_BAT1:
0004E3 CA58 CDC6C9          17      CALL    SETDTA100
0004E6 CA5B CD8FCA          17      CALL    FGETC_BAT
0004E9 CA5E 218100          10      LD  HL,DTA1+1
0004EC CA61 2025            12      JR  NZ,END_BATCH
0004EE CA63 FE21             7      CP  021H        ;スペースや改行など制御文字を飛ばす
0004F0 CA65 38F1            12      JR  C,C_BAT1
0004F2 CA67 3620            10      LD  (HL),' '
0004F4 CA69 23               6      INC HL
       CA6A                     C_BAT2:
0004F5 CA6A 77               7      LD  (HL),A
0004F6 CA6B 23               6      INC HL
0004F7 CA6C 7D               4      LD  A,L
0004F8 CA6D 3C               4      INC A       ;L==0FFH
0004F9 CA6E 2809            12      JR  Z,RUN_BATCH
0004FB CA70 CD8FCA          17      CALL    FGETC_BAT
0004FE CA73 2004            12      JR  NZ,RUN_BATCH
000500 CA75 FE20             7      CP  020H
000502 CA77 30F1            12      JR  NC,C_BAT2
       CA79                     RUN_BATCH:
000504 CA79 7D               4      LD  A,L
000505 CA7A D67F             7      SUB DTA1-1
000507 CA7C 328000          13      LD  (DTA1),A
00050A CA7F FE04             7      CP  4
00050C CA81 3805            12      JR  C,END_BATCH
00050E CA83 3600            10      LD  (HL),0
000510 CA85 C332C9          10      JP  COMMAND2
       CA88                     END_BATCH:
000513 CA88 AF               4      XOR A       ;バッチファイルを閉じる
000514 CA89 323DE3          13      LD  (FCB_BAT),A
000517 CA8C C300E4          10      JP  CPM_BOOT
                                
       CA8F                     FGETC_BAT:
00051A CA8F 113DE3          10      LD  DE,FCB_BAT
       CA92                     FGETC:              ;1文字ずつ読み込む
00051D CA92 E5              11      PUSH    HL      ;Z:成功
00051E CA93 210100          10      LD  HL,1
000521 CA96 CDE9C9          17      CALL    S27
000524 CA99 E1              10      POP HL
000525 CA9A 3A0001          13      LD  A,(00100H)
000528 CA9D C9              10      RET
                                
       CA9E                     C_DEL:
000529 CA9E CDE9CB          17      CALL    SETFCB
00052C CAA1 CD3CD0          17      CALL    _SYS08      ;(BDOS)エコーなしコンソール入力
                                
00052F CAA4 0E13             7      LD  C,013H
000531 CAA6 180A            12      JR  CDEL1       ;(BDOS)ファイルの削除
                                
       CAA8                     C_REN:
000533 CAA8 CDE9CB          17      CALL    SETFCB
000536 CAAB 3E10             7      LD  A,010H      ;ディレクトリも対象にする
000538 CAAD 326900          13      LD  (FCB1+13),A ;属性
00053B CAB0 0E17             7      LD  C,017H      ;(BDOS)ファイル名の変更
       CAB2                     CDEL1:
00053D CAB2 115C00          10      LD  DE,FCB1
000540 CAB5 CD0500          17      CALL    SYSTEM
000543 CAB8 C6FF             7      ADD A,0FFH
000545 CABA C9              10      RET
                                
       CABB                     C_DIR:
000546 CABB CD51D4          17      CALL    FILEC
000549 CABE 2115E4          10      LD  HL,FDRV+1
00054C CAC1 CDFFCC          17      CALL    CWILD1
00054F CAC4 3EF1             7      LD  A,0F1H
000551 CAC6 3221E4          13      LD  (FDRV+13),A
000554 CAC9 CDA2C9          17      CALL    OPEN1
       CACC                     CDIR1:
000557 CACC B7               4      OR  A
000558 CACD 2008            12      JR  NZ,PDSKF
00055A CACF CD1ACB          17      CALL    P_NAME
00055D CAD2 CDB4C9          17      CALL    OPEN2
000560 CAD5 18F5            12      JR  CDIR1
       CAD7                     PDSKF:
000562 CAD7 3A14E4          13      LD  A,(FDRV)
000565 CADA 5F               4      LD  E,A
000566 CADB 0E1B             7      LD  C,01BH      ;(BDOS)ディスク情報の獲得
000568 CADD CD0500          17      CALL    SYSTEM
00056B CAE0 4F               4      LD  C,A     ;C←1クラスタ辺りの論理セクタ数
00056C CAE1 C601             7      ADD A,001H
00056E CAE3 D8              11      RET C       ;Aが0FFHだった場合
00056F CAE4 3E06             7      LD  A,8-2
       CAE6                     PDS1:               ;HL=未使用クラスタの総数
000571 CAE6 3C               4      INC A
000572 CAE7 CB19             8      RR  C
000574 CAE9 30FB            12      JR  NC,PDS1
       CAEB                     PDS2:               ;B←論理セクタのサイズの上位8ビット
000576 CAEB 3C               4      INC A
000577 CAEC CB18             8      RR  B
000579 CAEE 30FB            12      JR  NC,PDS2
00057B CAF0 47               4      LD  B,A
                                
00057C CAF1 110000          10      LD  DE,0
       CAF4                     PDS3:
00057F CAF4 29              11      ADD HL,HL
000580 CAF5 EB               4      EX  DE,HL
000581 CAF6 ED6A            15      ADC HL,HL
000583 CAF8 EB               4      EX  DE,HL
000584 CAF9 10F9            13      DJNZ    PDS3
       CAFB                     PDSKF1:
000586 CAFB CD87CB          17      CALL    PRDEC_DEHL
000589 CAFE 116DE3          10      LD  DE,FREE
00058C CB01 CD6CCD          17      CALL    _SYS09      ;(BDOS)文字列出力
00058F CB04 CD74CB          17      CALL    PUTDRV
000592 CB07 3E5C             7      LD  A,05CH      ;\
000594 CB09 CD01D0          17      CALL    MSG_A
000597 CB0C 2A22E4          16      LD  HL,(FDRV+14)    ;ディレクトリのクラスタ番号
00059A CB0F AF               4      XOR A
00059B CB10 11FEFF          10      LD  DE,0-2
00059E CB13 19              11      ADD HL,DE
00059F CB14 23               6      INC HL
0005A0 CB15 DC84CB          17      CALL    C,PRDEC_HL
0005A3 CB18 1833            12      JR  LTNL
                                
       CB1A                     P_NAME:
0005A5 CB1A 3A19E3          13      LD  A,(DTA_CCP+1)
0005A8 CB1D FE2E             7      CP  '.'
0005AA CB1F C8              11      RET Z
                                
0005AB CB20 3A24E3          13      LD  A,(DTA_CCP+1+00BH)
0005AE CB23 F5              11      PUSH    AF
0005AF CB24 CB67             8      BIT 4,A
0005B1 CB26 2808            12      JR  Z,DIR3
0005B3 CB28 1162E3          10      LD  DE,DIRMES
0005B6 CB2B CD6CCD          17      CALL    _SYS09      ;(BDOS)文字列出力
0005B9 CB2E 180A            12      JR  DIR6
       CB30                     DIR3:
0005BB CB30 ED5B37E3        20      LD  DE,(DTA_CCP+1+01EH)
0005BF CB34 2A35E3          16      LD  HL,(DTA_CCP+1+01CH)
0005C2 CB37 CD87CB          17      CALL    PRDEC_DEHL
       CB3A                     DIR6:
0005C5 CB3A F1              10      POP AF
0005C6 CB3B 0F               4      RRCA
0005C7 CB3C 9F               4      SBC A,A
0005C8 CB3D E60A             7      AND '*'-020H
0005CA CB3F C620             7      ADD A,020H
0005CC CB41 CD01D0          17      CALL    MSG_A
0005CF CB44 CD74CB          17      CALL    PUTDRV
0005D2 CB47 2119E3          10      LD  HL,DTA_CCP+1
0005D5 CB4A CDC7CB          17      CALL    FPRNT
                                
       CB4D                     LTNL:
0005D8 CB4D 1E03             7      LD  E,3
0005DA CB4F C3CDE4          10      JP  _PRINT
                                
       CB52                     C_PATH:
0005DD CB52 CD33D5          17      CALL    SPCUT
0005E0 CB55 21DCE2          10      LD  HL,PATHD
0005E3 CB58 FE21             7      CP  021H
0005E5 CB5A 300C            12      JR  NC,CPATH0
       CB5C                     CPATHP:
0005E7 CB5C 7E               7      LD  A,(HL)
0005E8 CB5D 23               6      INC HL
0005E9 CB5E FE20             7      CP  020H
0005EB CB60 3F               4      CCF
0005EC CB61 30EA            12      JR  NC,LTNL
0005EE CB63 CD01D0          17      CALL    MSG_A
0005F1 CB66 18F4            12      JR  CPATHP
       CB68                     CPATH0:
0005F3 CB68 FE3B             7      CP  ';'
0005F5 CB6A 2001            12      JR  NZ,CPATH1
0005F7 CB6C 13               6      INC DE
       CB6D                     CPATH1:
0005F8 CB6D EB               4      EX  DE,HL
0005F9 CB6E 013B00          10      LD  BC,PATHX
0005FC CB71 EDB0                    LDIR
0005FE CB73 C9              10      RET
                                
       CB74                     PUTDRV:
0005FF CB74 3A14E4          13      LD  A,(FDRV)
000602 CB77 CD66D5          17      CALL    GETDRV1
000605 CB7A C641             7      ADD A,'A'
000607 CB7C CD01D0          17      CALL    MSG_A
00060A CB7F 3E3A             7      LD  A,':'
       CB81                     MSG_AR:
00060C CB81 C301D0          10      JP  MSG_A
                                
       CB84                     PRDEC_HL:
00060F CB84 AF               4      XOR A
000610 CB85 5F               4      LD  E,A
000611 CB86 57               4      LD  D,A
       CB87                     PRDEC_DEHL:
000612 CB87 D5              11      PUSH    DE
000613 CB88 110FE4          10      LD  DE,DECBF
000616 CB8B 0605             7      LD  B,5
000618 CB8D CD1ECC          17      CALL    ZERO_MEMORY_DE  ;A=0
00061B CB90 D1              10      POP DE
                                
00061C CB91 0E20             7      LD  C,32
       CB93                     DEC1:
00061E CB93 29              11      ADD HL,HL
00061F CB94 EB               4      EX  DE,HL
000620 CB95 ED6A            15      ADC HL,HL
000622 CB97 EB               4      EX  DE,HL
000623 CB98 E5              11      PUSH    HL
000624 CB99 2113E4          10      LD  HL,DECBF+4
000627 CB9C 0605             7      LD  B,5
       CB9E                     DEC2:
000629 CB9E 7E               7      LD  A,(HL)
00062A CB9F 8F               4      ADC A,A
00062B CBA0 27               4      DAA
00062C CBA1 77               7      LD  (HL),A
00062D CBA2 2B               6      DEC HL
00062E CBA3 10F9            13      DJNZ    DEC2
000630 CBA5 E1              10      POP HL
000631 CBA6 0D               4      DEC C
000632 CBA7 20EA            12      JR  NZ,DEC1
                                
000634 CBA9 210FE4          10      LD  HL,DECBF
000637 CBAC 3E20             7      LD  A,020H
000639 CBAE 0604             7      LD  B,4
       CBB0                     DEC3:
00063B CBB0 CDBDCB          17      CALL    DEC4
00063E CBB3 CDBDCB          17      CALL    DEC4
000641 CBB6 23               6      INC HL
000642 CBB7 10F7            13      DJNZ    DEC3
       CBB9                     DECX:
000644 CBB9 CDBDCB          17      CALL    DEC4
000647 CBBC AF               4      XOR A
       CBBD                     DEC4:
000648 CBBD ED6F            18      RLD
00064A CBBF FE20             7      CP  020H
00064C CBC1 2802            12      JR  Z,DEC5
00064E CBC3 F630             7      OR  030H
       CBC5                     DEC5:
000650 CBC5 18BA            12      JR  MSG_AR
                                
       CBC7                     FPRNT:
000652 CBC7 0608             7      LD  B,8 ;ファイル名を表示
000654 CBC9 CDD8CB          17      CALL    P_N1
000657 CBCC 7E               7      LD  A,(HL)
000658 CBCD CD7FD7          17      CALL    CAP3
00065B CBD0 D8              11      RET C   ;拡張子が無い
                                
00065C CBD1 3E2E             7      LD  A,'.'
00065E CBD3 CD01D0          17      CALL    MSG_A
000661 CBD6 0603             7      LD  B,3 ;拡張子を表示
       CBD8                     P_N1:
000663 CBD8 7E               7      LD  A,(HL)
000664 CBD9 CD7FD7          17      CALL    CAP3
000667 CBDC 3807            12      JR  C,P_N2
000669 CBDE CD01D0          17      CALL    MSG_A
00066C CBE1 23               6      INC HL
00066D CBE2 10F4            13      DJNZ    P_N1
00066F CBE4 C9              10      RET
       CBE5                     P_N2:
000670 CBE5 23               6      INC HL
000671 CBE6 10FD            13      DJNZ    P_N2
000673 CBE8 C9              10      RET
                                
       CBE9                     SETFCB:
000674 CBE9 CD33D5          17      CALL    SPCUT
000677 CBEC 1A               7      LD  A,(DE)
000678 CBED FE20             7      CP  020H
00067A CBEF 3801            12      JR  C,SETFCBA
00067C CBF1 1B               6      DEC DE
       CBF2                     SETFCBA:
00067D CBF2 0624             7      LD  B,36
00067F CBF4 215C00          10      LD  HL,FCB1
000682 CBF7 E5              11      PUSH    HL
000683 CBF8 AF               4      XOR A
000684 CBF9 CD08D5          17      CALL    FILL_MEMORY
000687 CBFC E1              10      POP HL
000688 CBFD D5              11      PUSH    DE
000689 CBFE CDA5CF          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
00068C CC01 216C00          10      LD  HL,FCB2
00068F CC04 CDA5CF          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
000692 CC07 E1              10      POP HL
000693 CC08 010050          10      LD  BC,05000H
000696 CC0B 118100          10      LD  DE,00081H
       CC0E                     SETFCB1:
000699 CC0E 7E               7      LD  A,(HL)
00069A CC0F 23               6      INC HL
00069B CC10 FE20             7      CP  020H
00069D CC12 3805            12      JR  C,SETFCB2
00069F CC14 12               7      LD  (DE),A
0006A0 CC15 13               6      INC DE
0006A1 CC16 0C               4      INC C
0006A2 CC17 10F5            13      DJNZ    SETFCB1
       CC19                     SETFCB2:
0006A4 CC19 79               4      LD  A,C
0006A5 CC1A 328000          13      LD  (DTA1),A
0006A8 CC1D 04               4      INC B
       CC1E                     ZERO_MEMORY_DE:
0006A9 CC1E AF               4      XOR A
       CC1F                     FILL_MEMORY_DE:
0006AA CC1F 12               7      LD  (DE),A
0006AB CC20 13               6      INC DE
0006AC CC21 10FC            13      DJNZ    FILL_MEMORY_DE
0006AE CC23 C9              10      RET
                                
       CC24                     C_COPY:
0006AF CC24 CDE9CB          17      CALL    SETFCB
                                
0006B2 CC27 1161E4          10      LD  DE,ZERO
0006B5 CC2A CD54D4          17      CALL    FILEC2
0006B8 CC2D 216C00          10      LD  HL,FCB2
0006BB CC30 CDACCF          17      CALL    S29X1
                                
0006BE CC33 3E10             7      LD  A,010H
0006C0 CC35 326900          13      LD  (FCB1+13),A
0006C3 CC38 216D00          10      LD  HL,FCB2+1
0006C6 CC3B CDFFCC          17      CALL    CWILD1
       CC3E                     COPY0:
0006C9 CC3E CDFCCC          17      CALL    CWILD
0006CC CC41 215C00          10      LD  HL,FCB1
0006CF CC44 CDA5C9          17      CALL    OPEN
0006D2 CC47 37               4      SCF
       CC48                     COPY1:
0006D3 CC48 C0              11      RET NZ
0006D4 CC49 CDB8C9          17      CALL    DEFCB
                                
0006D7 CC4C 3A25E3          13      LD  A,(DTA_CCP+13)
0006DA CC4F CB67             8      BIT 4,A
0006DC CC51 2821            12      JR  Z,COPY1A
                                
0006DE CC53 215D00          10      LD  HL,FCB1+1
0006E1 CC56 CD97D8          17      CALL    CHKWILD
0006E4 CC59 3814            12      JR  C,COPY9
                                
0006E6 CC5B 3E20             7      LD  A,020H
0006E8 CC5D 325D00          13      LD  (FCB1+1),A
0006EB CC60 2A32E3          16      LD  HL,(DTA_CCP+26)
0006EE CC63 23               6      INC HL
0006EF CC64 226A00          16      LD  (FCB1+14),HL
0006F2 CC67 18D5            12      JR  COPY0
                                
       CC69                     COPY8:
0006F4 CC69 CD6CCD          17      CALL    _SYS09      ;(BDOS)文字列出力
0006F7 CC6C CD4DCB          17      CALL    LTNL
       CC6F                     COPY9:
0006FA CC6F CDB4C9          17      CALL    OPEN2
0006FD CC72 18D4            12      JR  COPY1
                                
       CC74                     COPY1A:
0006FF CC74 216C00          10      LD  HL,FCB2
000702 CC77 1114E4          10      LD  DE,FDRV
000705 CC7A 011AE3          10      LD  BC,DTA_CCP+2
000708 CC7D EDA0            16      LDI
00070A CC7F 3E0B             7      LD  A,11
       CC81                     COPY2:
00070C CC81 F5              11      PUSH    AF
00070D CC82 7E               7      LD  A,(HL)
00070E CC83 FE3F             7      CP  '?'
000710 CC85 2001            12      JR  NZ,COPY3
000712 CC87 0A               7      LD  A,(BC)
       CC88                     COPY3:
000713 CC88 12               7      LD  (DE),A
000714 CC89 03               6      INC BC
000715 CC8A 13               6      INC DE
000716 CC8B 23               6      INC HL
000717 CC8C F1              10      POP AF
000718 CC8D 3D               4      DEC A
000719 CC8E 20F1            12      JR  NZ,COPY2
00071B CC90 010500          10      LD  BC,16-11
00071E CC93 EDB0                    LDIR
       CC95                     PUTNAME:
000720 CC95 215D00          10      LD  HL,FCB1+1
000723 CC98 CD97D8          17      CALL    CHKWILD
000726 CC9B 300B            12      JR  NC,PUTN1
000728 CC9D 2115E4          10      LD  HL,FDRV+1
00072B CCA0 CDC7CB          17      CALL    FPRNT
00072E CCA3 3E20             7      LD  A,020H
000730 CCA5 CD01D0          17      CALL    MSG_A
       CCA8                     PUTN1:
000733 CCA8 1114E4          10      LD  DE,FDRV
000736 CCAB 0E16             7      LD  C,016H      ;(BDOS)ファイルの作成
000738 CCAD CDD3C9          17      CALL    SYSTEM0
00073B CCB0 2048            12      JR  NZ,COPYE2
00073D CCB2 67               4      LD  H,A     ;A=0
00073E CCB3 6F               4      LD  L,A
00073F CCB4 2235E4          16      LD  (FDRV+33),HL    ;(FCB)ランダムレコード
000742 CCB7 2237E4          16      LD  (FDRV+35),HL
       CCBA                     COPY6:
000745 CCBA CDDCC9          17      CALL    S27BUF
000748 CCBD 47               4      LD  B,A
000749 CCBE 3C               4      INC A
00074A CCBF 2831            12      JR  Z,COPYE
00074C CCC1 7C               4      LD  A,H
00074D CCC2 B5               4      OR  L
00074E CCC3 280C            12      JR  Z,COPY7
000750 CCC5 1114E4          10      LD  DE,FDRV
000753 CCC8 0E26             7      LD  C,026H      ;(BDOS)ランダムブロック書き込み
000755 CCCA CDD3C9          17      CALL    SYSTEM0
000758 CCCD 2023            12      JR  NZ,COPYE
00075A CCCF 10E9            13      DJNZ    COPY6
       CCD1                     COPY7:
00075C CCD1 3A25E3          13      LD  A,(DTA_CCP+13)  ;(FCB)属性
00075F CCD4 3221E4          13      LD  (FDRV+13),A
000762 CCD7 212CE3          10      LD  HL,DTA_CCP+20   ;(FCB)タイムスタンプ
000765 CCDA 1128E4          10      LD  DE,FDRV+20
000768 CCDD 010400          10      LD  BC,4
00076B CCE0 EDB0                    LDIR
                                
00076D CCE2 1114E4          10      LD  DE,FDRV
000770 CCE5 0E10             7      LD  C,010H      ;(BDOS)ファイルのクローズ
000772 CCE7 CDD3C9          17      CALL    SYSTEM0
000775 CCEA 2006            12      JR  NZ,COPYE
                                
000777 CCEC 1171E4          10      LD  DE,OK
00077A CCEF C369CC          10      JP  COPY8
                                
       CCF2                     COPYE:
00077D CCF2 1114E4          10      LD  DE,FDRV
000780 CCF5 0E13             7      LD  C,013H      ;(BDOS)ファイルの削除
000782 CCF7 CD0500          17      CALL    SYSTEM
       CCFA                     COPYE2:
000785 CCFA 37               4      SCF
000786 CCFB C9              10      RET
                                
       CCFC                     CWILD:
000787 CCFC 215D00          10      LD  HL,FCB1+1
       CCFF                     CWILD1:
00078A CCFF 7E               7      LD  A,(HL)
00078B CD00 FE20             7      CP  020H
00078D CD02 C0              11      RET NZ
       CD03                     CWILD2:
00078E CD03 3E3F             7      LD  A,'?'
000790 CD05 060B             7      LD  B,11
000792 CD07 C308D5          10      JP  FILL_MEMORY
                                
       CD0A                     COMTB:
000795 CD0A 44202020                DB  "D   "  ;1
000799 CD0E BBCA                    DW  C_DIR
00079B CD10 44495220                DB  "DIR "  ;2
00079F CD14 BBCA                    DW  C_DIR
0007A1 CD16 434F5059                DB  "COPY"  ;3
0007A5 CD1A 24CC                    DW  C_COPY
0007A7 CD1C 43442020                DB  "CD  "  ;4
0007AB CD20 D8C9                    DW  C_CD
0007AD CD22 44454C20                DB  "DEL "  ;5
0007B1 CD26 9ECA                    DW  C_DEL
0007B3 CD28 50415448                DB  "PATH"  ;6
0007B7 CD2C 52CB                    DW  C_PATH
0007B9 CD2E 52454E20                DB  "REN "  ;7
0007BD CD32 A8CA                    DW  C_REN
0007BF CD34 52454D20                DB  "REM "  ;8
0007C3 CD38 69CD                    DW  C_REM
[EOF:LDCCP.ASM:SHIFT_JIS]
                                    INCLUDE "LDOS.ASM"
                                
                                ;   LSX-Dodgers OS
                                
       CD3A                     BDOS0:
0007C5 CD3A E5              11      PUSH    HL
0007C6 CD3B 79               4      LD  A,C
0007C7 CD3C FE3C             7      CP  03CH
0007C9 CD3E 3802            12      JR  C,DOS1
0007CB CD40 3E3C             7      LD  A,03CH
       CD42                     DOS1:
0007CD CD42 87               4      ADD A,A
0007CE CD43 6F               4      LD  L,A
0007CF CD44 26E5             7      LD  H,STABLE/256
0007D1 CD46 7E               7      LD  A,(HL)
0007D2 CD47 2C               4      INC L
0007D3 CD48 66               7      LD  H,(HL)
0007D4 CD49 6F               4      LD  L,A
0007D5 CD4A E3              19      EX  (SP),HL
0007D6 CD4B 79               4      LD  A,C
                                ;確認用
                                ;   LD  (0050H),A
0007D7 CD4C C9              10      RET
       CD4D                     _DOS2:
0007D8 CD4D FE5A             7      CP  05AH        ;(BDOS)カレントディレクトリの変更(_CHDIR)
0007DA CD4F CAE7CF          10      JP  Z,_SYS5A
0007DD CD52 FE5C             7      CP  05CH        ;(BDOS)ファイル名の解析(_PFILE)
0007DF CD54 CAA5CF          10      JP  Z,_SYS29
0007E2 CD57 FE5F             7      CP  05FH        ;(BDOS)ディスクバッファのフラッシュ(_FLUSH)
0007E4 CD59 CAA4E1          10      JP  Z,_SYS5F
0007E7 CD5C FE6F             7      CP  06FH        ;(BDOS)MSX-DOS のバージョン番号の獲得(_DOSVER)
0007E9 CD5E 200A            12      JR  NZ,_ERROR
0007EB CD60 011D00          10      LD  BC,VER_6F
0007EE CD63 116001          10      LD  DE,VER
0007F1 CD66 210301          10      LD  HL,MACD
       CD69                     C_REM:
0007F4 CD69 AF               4      XOR A
       CD6A                     _ERROR:
0007F5 CD6A A7               4      AND A
0007F6 CD6B C9              10      RET
                                
       CD6C                     _SYS09:     ;文字列出力
0007F7 CD6C D5              11      PUSH    DE
       CD6D                     _SX09:
0007F8 CD6D 1A               7      LD  A,(DE)
0007F9 CD6E 13               6      INC DE
0007FA CD6F FE24             7      CP  '$'
0007FC CD71 2831            12      JR  Z,SX0E2
0007FE CD73 CD01D0          17      CALL    MSG_A
000801 CD76 18F5            12      JR  _SX09
                                
       CD78                     MSX1:
000803 CD78 CD01D0          17      CALL    MSG_A
       CD7B                     MSX:
000806 CD7B 7E               7      LD  A,(HL)
000807 CD7C 23               6      INC HL
000808 CD7D B7               4      OR  A
000809 CD7E 20F8            12      JR  NZ,MSX1
00080B CD80 C9              10      RET
                                
       CD81                     _SYS0C:     ;(BDOS)バージョン番号の獲得
00080C CD81 212200          10      LD  HL,00022H
00080F CD84 7D               4      LD  A,L
000810 CD85 C9              10      RET
                                
       CD86                     _SYS0D:     ;(BDOS)ディスクリセット
000811 CD86 CDDFE4          17      CALL    _FFLUSH
000814 CD89 E5              11      PUSH    HL
000815 CD8A 218000          10      LD  HL,00080H
000818 CD8D 228AE4          16      LD  (_DTA),HL
00081B CD90 E1              10      POP HL
00081C CD91 D5              11      PUSH    DE
00081D CD92 1E00             7      LD  E,0
00081F CD94 3E                      DB  03EH    ;次の PUSH DE をスキップ
                                
       CD95                     _SYS0E:     ;(BDOS)カレントドライブの設定
000820 CD95 D5              11      PUSH    DE
000821 CD96 7B               4      LD  A,E
000822 CD97 DDE5            15      PUSH    IX
000824 CD99 CDDCE4          17      CALL    _GETDPB
000827 CD9C DDE1            14      POP IX
000829 CD9E 3804            12      JR  C,SX0E2
00082B CDA0 7B               4      LD  A,E
00082C CDA1 3287E4          13      LD  (_DVSW),A
       CDA4                     SX0E2:
00082F CDA4 D1              10      POP DE
000830 CDA5 C9              10      RET
                                
       CDA6                     _SYS0F:     ;(BDOS)ファイルのオープン
000831 CDA6 CD45D5          17      CALL    SETDRV
000834 CDA9 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
000837 CDAC C602             7      ADD A,002H      ;Write
000839 CDAE 2848            12      JR  Z,FEND0F
00083B CDB0 CD93D8          17      CALL    CHKWILDX
                                
00083E CDB3 D46FD5          17      CALL    NC,SOPENX
       CDB6                     _S16XX:
000841 CDB6 3840            12      JR  C,FEND0F
                                                ;Directory location
000843 CDB8 3A9FE4          13      LD  A,(_FILEN)
000846 CDBB FD7719          19      LD  (IY+25),A   ;(FCB)ディレクトリロケーション
                                ;               _DIRF
000849 CDBE 3AA0E4          13      LD  A,(_DIRF)
00084C CDC1 FD771D          19      LD  (IY+29),A   ;(FCB)ディレクトリモード
                                ;               _FBPS
00084F CDC4 FD731E          19      LD  (IY+30),E   ;(FCB)ディレクトリポジション
000852 CDC7 FD721F          19      LD  (IY+31),D
                                ;               Open(Read)
000855 CDCA FD361CFF        19      LD  (IY+28),0FFH    ;(FCB)オープンモード
                                ;               FILENAME
000859 CDCE FDE5            15      PUSH    IY
00085B CDD0 D1              10      POP DE
00085C CDD1 13               6      INC DE
00085D CDD2 010B00          10      LD  BC,11
000860 CDD5 EDB0                    LDIR
                                ;               Attribute
000862 CDD7 7E               7      LD  A,(HL)
000863 CDD8 FD770D          19      LD  (IY+13),A   ;(FCB)属性(アトリビュート)
000866 CDDB 110B00          10      LD  DE,11       ;Reserved
000869 CDDE 19              11      ADD HL,DE
                                                    ;(FCB)ファイルを最後に変更した時刻
00086A CDDF 11E4E5          10      LD  DE,SDDATA       ;(FCB)ファイルを最後に変更した日付
00086D CDE2 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       CDE4                     S16LOOP:                ;(FCB)ファイルのサイズ(バイト単位)
00086F CDE4 1A               7      LD  A,(DE)
000870 CDE5 13               6      INC DE
000871 CDE6 32EDCD          13      LD  (S16PAT),A
000874 CDE9 7E               7      LD  A,(HL)
000875 CDEA 23               6      INC HL
000876 CDEB FD7700          19      LD  (IY+0),A
       CDED                     S16PAT  EQU $-1
000879 CDEE 10F4            13      DJNZ    S16LOOP
                                
00087B CDF0 AF               4      XOR A
00087C CDF1 FD770C          19      LD  (IY+12),A   ;(FCB)カレントブロック
00087F CDF4 FD2295CE        20      LD  (OFCB_SWC),IY
       CDF8                     FEND0F:
000883 CDF8 1845            12      JR  FEND10
                                
       CDFA                     _SYS10:     ;(BDOS)ファイルのクローズ
000885 CDFA CD45D5          17      CALL    SETDRV
000888 CDFD FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
00088B CE00 D6FE             7      SUB 0FEH
00088D CE02 37               4      SCF
00088E CE03 3F               4      CCF
00088F CE04 2039            12      JR  NZ,FEND10
       CE06                     _S10A:              ;Write
000891 CE06 FD770E          19      LD  (IY+14),A   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
000894 CE09 FD770F          19      LD  (IY+15),A
                                
000897 CE0C FD341C          23      INC (IY+28)     ;(FCB)オープンモード 0FEH->0FFH
00089A CE0F CD8FD9          17      CALL    SETTMS
                                
00089D CE12 FD7E1D          19      LD  A,(IY+29)   ;(FCB)ディレクトリモード
0008A0 CE15 32A0E4          13      LD  (_DIRF),A
0008A3 CE18 E67F             7      AND 07FH
0008A5 CE1A 32BADE          13      LD  (_SECPS),A
0008A8 CE1D FD5E1E          19      LD  E,(IY+30)   ;(FCB)ディレクトリポジション
0008AB CE20 FD561F          19      LD  D,(IY+31)
0008AE CE23 CDA4D6          17      CALL    READ_DIR
0008B1 CE26 3817            12      JR  C,FEND10
                                
0008B3 CE28 3ACFD5          13  SDECM1: LD  A,(SDECPAT) ;1セクタ辺りのディレクトリエントリ数
0008B6 CE2B 3D               4      DEC A       ;1024=01FH / 512=00FH / 256=7
0008B7 CE2C FDA619          19      AND (IY+25)     ;(FCB)ディレクトリロケーション
0008BA CE2F 6F               4      LD  L,A
0008BB CE30 2600             7      LD  H,0
0008BD CE32 29              11      ADD HL,HL       ;*2
0008BE CE33 29              11      ADD HL,HL       ;*4
0008BF CE34 29              11      ADD HL,HL       ;*8
0008C0 CE35 29              11      ADD HL,HL       ;*16
0008C1 CE36 29              11      ADD HL,HL       ;*32
0008C2 CE37 ED4B7EE5        20      LD  BC,(_DTBUF)
0008C6 CE3B 09              11      ADD HL,BC
                                
0008C7 CE3C CDA3D8          17      CALL    SDIRENT
       CE3F                     FEND10:
0008CA CE3F 1842            12      JR  FEND
                                
       CE41                     _SYS11:     ;(BDOS)最初のファイルの検索
0008CC CE41 CD45D5          17      CALL    SETDRV
0008CF CE44 CD9ED5          17      CALL    SOPEN
       CE47                     _S12X1:
0008D2 CE47 383A            12      JR  C,FEND
0008D4 CE49 CD3DD6          17      CALL    SOPENE2
0008D7 CE4C ED5B8AE4        20      LD  DE,(_DTA)
0008DB CE50 3A88E4          13      LD  A,(_DRV)
0008DE CE53 3C               4      INC A
0008DF CE54 12               7      LD  (DE),A
0008E0 CE55 D5              11      PUSH    DE
0008E1 CE56 13               6      INC DE
0008E2 CE57 012000          10      LD  BC,32
0008E5 CE5A EDB0                    LDIR
0008E7 CE5C FD6E0E          19      LD  L,(IY+14)   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
0008EA CE5F FD660F          19      LD  H,(IY+15)
0008ED CE62 22F4E5          16      LD  (SCDIR),HL
0008F0 CE65 2A9AE4          16      LD  HL,(_FBPS)
0008F3 CE68 22F6E5          16      LD  (SFBPS),HL
0008F6 CE6B 2A9FE4          16      LD  HL,(_FILEN)
0008F9 CE6E 7C               4      LD  A,H
0008FA CE6F B7               4      OR  A
0008FB CE70 2806            12      JR  Z,_S12DIR
0008FD CE72 3ABADE          13      LD  A,(_SECPS)
000900 CE75 F680             7      OR  080H
000902 CE77 67               4      LD  H,A
       CE78                     _S12DIR:
000903 CE78 22F8E5          16      LD  (SFNDF),HL  ;Directory position and Flags
000906 CE7B E1              10      POP HL
000907 CE7C 1139E4          10      LD  DE,SFILE
00090A CE7F 0E21             7      LD  C,33
       CE81                     _S11B:
00090C CE81 EDB0                    LDIR
       CE83                     FEND:
00090E CE83 9F               4      SBC A,A     ;CF=0 A=0 : CF=1 A=0FFH
       CE84                     FENDE:
00090F CE84 FDE1            14      POP IY
000911 CE86 C1              10      POP BC
000912 CE87 D1              10      POP DE
000913 CE88 E1              10      POP HL
000914 CE89 C9              10      RET
                                
       CE8A                     _SYS12:     ;(BDOS)次のファイルの検索
000915 CE8A E5              11      PUSH    HL
000916 CE8B D5              11      PUSH    DE
000917 CE8C C5              11      PUSH    BC
000918 CE8D FDE5            15      PUSH    IY
00091A CE8F CD02D6          17      CALL    NOPEN
00091D CE92 18B3            12      JR  _S12X1
                                
       CE94                     _S16K:
00091F CE94 110000          10      LD  DE,0
       CE95                     OFCB_SWC    EQU $-2
000922 CE97 D5              11      PUSH    DE
000923 CE98 061A             7      LD  B,26        ;First cluster
       CE9A                     S16K1:
000925 CE9A 13               6      INC DE
000926 CE9B 23               6      INC HL
000927 CE9C 10FC            13      DJNZ    S16K1
                                
000929 CE9E 1A               7      LD  A,(DE)
00092A CE9F BE               7      CP  (HL)
00092B CEA0 2015            12      JR  NZ,S16K2
00092D CEA2 13               6      INC DE
00092E CEA3 23               6      INC HL
00092F CEA4 1A               7      LD  A,(DE)
000930 CEA5 BE               7      CP  (HL)
000931 CEA6 200F            12      JR  NZ,S16K2
                                
000933 CEA8 E1              10      POP HL
000934 CEA9 FDE5            15      PUSH    IY
000936 CEAB D1              10      POP DE
000937 CEAC 7E               7      LD  A,(HL)
000938 CEAD CD5AD5          17      CALL    IS_SAME_DRV_A_DE
00093B CEB0 2006            12      JR  NZ,S16K3
                                                ;ここはCFが必ず0
00093D CEB2 ED52            15      SBC HL,DE       ;CP HL,DE
00093F CEB4 37               4      SCF
000940 CEB5 C0              11      RET NZ
000941 CEB6 E5              11      PUSH    HL
       CEB7                     S16K2:
000942 CEB7 E1              10      POP HL
       CEB8                     S16K3:
000943 CEB8 FDE5            15      PUSH    IY
000945 CEBA D1              10      POP DE
       CEBB                     _SYS13:     ;(BDOS)ファイルの削除
000946 CEBB CD45D5          17      CALL    SETDRV
000949 CEBE CDC9D7          17      CALL    KILL
       CEC1                     FEND13:
00094C CEC1 18C0            12      JR  FEND
                                
       CEC3                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00094E CEC3 CD45D5          17      CALL    SETDRV
000951 CEC6 CDFBD9          17      CALL    INIT_SEQ
       CEC9                     SREAD:
000954 CEC9 CD43DA          17      CALL    RB_READ
                                
000957 CECC C601             7      ADD A,001H
000959 CECE 38B3            12      JR  C,FEND
                                
00095B CED0 7D               4      LD  A,L
00095C CED1 D601             7      SUB 001H
       CED3                     FENDX:
00095E CED3 9F               4      SBC A,A
00095F CED4 E603             7      AND 3
000961 CED6 1F               4      RRA
000962 CED7 18AB            12      JR  FENDE
                                
       CED9                     _SYS15:     ;(BDOS)シーケンシャルな書き込み
000964 CED9 CD45D5          17      CALL    SETDRV
000967 CEDC CDFBD9          17      CALL    INIT_SEQ
       CEDF                     SWRITE:
00096A CEDF CD3CDA          17      CALL    RB_WRITE
                                
00096D CEE2 C6FF             7      ADD A,0FFH
00096F CEE4 18ED            12      JR  FENDX
                                
       CEE6                     _SYS17:     ;(BDOS)ファイル名の変更
000971 CEE6 CD45D5          17      CALL    SETDRV
000974 CEE9 CD1FD8          17      CALL    NAME
000977 CEEC 18D3            12      JR  FEND13
                                
       CEEE                     _SYS16:     ;(BDOS)ファイルの作成
000979 CEEE CD45D5          17      CALL    SETDRV
                                
00097C CEF1 CD93D8          17      CALL    CHKWILDX
00097F CEF4 38CB            12      JR  C,FEND13
000981 CEF6 FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
000984 CEF9 FE05             7      CP  5
000986 CEFB 2805            12      JR  Z,_S16X2
000988 CEFD FE21             7      CP  021H
00098A CEFF DAC1CE          10      JP  C,FEND13
       CF02                     _S16X2:
                                ;               Clear FCB
00098D CF02 FDE5            15      PUSH    IY
00098F CF04 E1              10      POP HL
000990 CF05 011000          10      LD  BC,16
000993 CF08 09              11      ADD HL,BC
       CF09                     _S16X1:
000994 CF09 70               7      LD  (HL),B      ;B=0
000995 CF0A 23               6      INC HL
000996 CF0B 0D               4      DEC C
000997 CF0C 20FB            12      JR  NZ,_S16X1
                                
000999 CF0E CD94D9          17      CALL    SETTMSX
00099C CF11 FD360DFF        19      LD  (IY+13),0FFH    ;(FCB)Attribute
0009A0 CF15 CD6FD5          17      CALL    SOPENX
0009A3 CF18 3F               4      CCF
0009A4 CF19 CC94CE          17      CALL    Z,_S16K
0009A7 CF1C D44ED6          17      CALL    NC,COPEN
0009AA CF1F D4A3D8          17      CALL    NC,SDIRENT
0009AD CF22 C3B6CD          10      JP  _S16XX
                                
       CF25                     _SYS21:     ;(BDOS)ランダムな読み出し
0009B0 CF25 CD45D5          17      CALL    SETDRV
0009B3 CF28 CDDFD9          17      CALL    INIT_RND
0009B6 CF2B 189C            12      JR  SREAD
                                
       CF2D                     _SYS22:     ;(BDOS)ランダムな書き込み
       CF2D                     _SYS28:     ;(BDOS)ランダムな書き込み・その2
0009B8 CF2D CD45D5          17      CALL    SETDRV
0009BB CF30 CDDFD9          17      CALL    INIT_RND
0009BE CF33 18AA            12      JR  SWRITE
                                
       CF35                     _SYS18:     ;(BDOS)ログインベクトルの獲得
0009C0 CF35 21FF00          10      LD  HL,000FFH
0009C3 CF38 AF               4      XOR A
0009C4 CF39 C9              10      RET
                                
       CF3A                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
0009C5 CF3A 3A87E4          13      LD  A,(_DVSW)
0009C8 CF3D A7               4      AND A
0009C9 CF3E C9              10      RET
                                
       CF3F                     _SYS1A:     ;(BDOS)DTAの設定
0009CA CF3F ED538AE4        20      LD  (_DTA),DE
0009CE CF43 AF               4      XOR A
0009CF CF44 C9              10      RET
                                
       CF45                     _SYS1B:     ;(BDOS)ディスク情報の獲得
0009D0 CF45 7B               4      LD  A,E
0009D1 CF46 CD53D5          17      CALL    GETDRV
0009D4 CF49 CDDCE4          17      CALL    _GETDPB
0009D7 CF4C D4E2E4          17      CALL    NC,_RDFATX
0009DA CF4F 210000          10      LD  HL,0
0009DD CF52 D46DD9          17      CALL    NC,DSKF
                                
0009E0 CF55 ED5B6ED9        20      LD  DE,(MAXCLP) ;DPB_MAXCL-1
0009E4 CF59 1B               6      DEC DE      ;DE←クラスタの総数
0009E5 CF5A FD2A7CE5        20      LD  IY,(_FATBF) ;IY←メモリ上のFATの先頭アドレス
0009E9 CF5E 9F               4      SBC A,A
0009EA CF5F D8              11      RET C
0009EB CF60 4F               4      LD  C,A     ;C=0
0009EC CF61 DD7E0F          19      LD  A,(IX+DPB_BPS)
0009EF CF64 E607             7      AND 7
0009F1 CF66 47               4      LD  B,A
0009F2 CF67 DD7E07          19      LD  A,(IX+DPB_SECPCL)
0009F5 CF6A C9              10      RET
                                
       CF6B                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
0009F6 CF6B AF               4      XOR A
0009F7 CF6C 67               4      LD  H,A
0009F8 CF6D 6F               4      LD  L,A
0009F9 CF6E C9              10      RET
                                
       CF6F                     _SYS1F:     ;(BDOS)ディスク装置のパラメータの読み出し
0009FA CF6F 2100E6          10      LD  HL,_DEVICE
0009FD CF72 7B               4      LD  A,E
0009FE CF73 C3DCE4          10      JP  _GETDPB
                                
       CF76                     _SYS23:     ;(BDOS)ファイルサイズの獲得
000A01 CF76 E5              11      PUSH    HL
000A02 CF77 2A1EE5          16      LD  HL,(STABLE+2*00FH)  ;ファイルのオープン
000A05 CF7A CD0F00          17      CALL    JP_HL
000A08 CF7D 381B            12      JR  C,_S23X1
                                
000A0A CF7F D5              11      PUSH    DE      ;EX DE,IY
000A0B CF80 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
000A0D CF82 FD7E10          19      LD  A,(IY+16)   ;(FCB)ファイルのサイズ(バイト単位)
000A10 CF85 FD6E11          19      LD  L,(IY+17)   ;
000A13 CF88 FD6612          19      LD  H,(IY+18)   ;
000A16 CF8B C5              11      PUSH    BC      ;
000A17 CF8C FD4613          19      LD  B,(IY+19)   ;
000A1A CF8F CDD1D9          17      CALL    GET_CPM_R_SIZE
000A1D CF92 C1              10      POP BC
       CF93                     _S24X1:
000A1E CF93 CDF1D9          17      CALL    SET_RR_AHL
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
000A21 CF96 FDE3            23      EX  (SP),IY     ;
000A23 CF98 D1              10      POP DE      ;
                                
000A24 CF99 AF               4      XOR A
       CF9A                     _S23X1:
000A25 CF9A E1              10      POP HL
000A26 CF9B C9              10      RET
                                
       CF9C                     _SYS24:     ;(BDOS)ランダムレコードフィールドの設定
000A27 CF9C E5              11      PUSH    HL
000A28 CF9D D5              11      PUSH    DE      ;EX DE,IY
000A29 CF9E FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
000A2B CFA0 CD03DA          17      CALL    GETSEQ
000A2E CFA3 18EE            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       CFA5                     _SYS29:     ;(BDOS)ファイル名の解析(_PPATH)
000A30 CFA5 C5              11      PUSH    BC
000A31 CFA6 E5              11      PUSH    HL
000A32 CFA7 CD5CD4          17      CALL    FILE
000A35 CFAA E1              10      POP HL
000A36 CFAB C1              10      POP BC
       CFAC                     S29X1:
000A37 CFAC C5              11      PUSH    BC
000A38 CFAD D5              11      PUSH    DE
000A39 CFAE E5              11      PUSH    HL
000A3A CFAF EB               4      EX  DE,HL
000A3B CFB0 AF               4      XOR A
000A3C CFB1 3221E4          13      LD  (FDRV+13),A
000A3F CFB4 2114E4          10      LD  HL,FDRV
000A42 CFB7 011000          10      LD  BC,16
000A45 CFBA EDB0                    LDIR
000A47 CFBC E1              10      POP HL
000A48 CFBD D1              10      POP DE
000A49 CFBE C1              10      POP BC
000A4A CFBF C9              10      RET
                                
       CFC0                     _SYS30:     ;(BDOS)論理セクタを用いた書き込み
000A4B CFC0 C5              11      PUSH    BC
000A4C CFC1 0154E0          10      LD  BC,DWT24B
000A4F CFC4 1804            12      JR  S2FX
       CFC6                     _SYS2F:
000A51 CFC6 C5              11      PUSH    BC
000A52 CFC7 0144E0          10      LD  BC,DRD24B
       CFCA                     S2FX:
000A55 CFCA ED43E0CF        20      LD  (S2FPAT+1),BC
000A59 CFCE CDDFE4          17      CALL    _FFLUSH
                                
000A5C CFD1 D5              11      PUSH    DE
000A5D CFD2 E5              11      PUSH    HL
000A5E CFD3 7D               4      LD  A,L     ;Drive
000A5F CFD4 CDD9E4          17      CALL    _CHGDRV
000A62 CFD7 3809            12      JR  C,S30X2
000A64 CFD9 44               4      LD  B,H     ;Number of clusters
000A65 CFDA 2A8AE4          16      LD  HL,(_DTA)
                                
000A68 CFDD 0E00             7      LD  C,0
000A6A CFDF CD44E0          17  S2FPAT: CALL    DRD24B
       CFE2                     S30X2:
000A6D CFE2 E1              10      POP HL
000A6E CFE3 D1              10      POP DE
000A6F CFE4 C1              10      POP BC
000A70 CFE5 9F               4      SBC A,A
000A71 CFE6 C9              10      RET
                                
       CFE7                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
000A72 CFE7 C5              11      PUSH    BC
000A73 CFE8 D5              11      PUSH    DE
000A74 CFE9 E5              11      PUSH    HL
000A75 CFEA CD51D4          17      CALL    FILEC
000A78 CFED 210000          10      LD  HL,0
000A7B CFF0 1114E4          10      LD  DE,FDRV
000A7E CFF3 2A4EE5          16      LD  HL,(STABLE+2*027H)  ;ランダムブロック読み込み
000A81 CFF6 CD0F00          17      CALL    JP_HL
000A84 CFF9 18E7            12      JR  S30X2
[EOF:LDOS.ASM:SHIFT_JIS]
                                    INCLUDE "MSXIO.ASM"
                                
                                ;   LSX-Dodgers IO
                                ;   MSX
                                
       CD6A                     _SYS04  EQU _ERROR      ;(BDOS)外部出力
       CD6A                     _SYS05  EQU _ERROR      ;(BDOS)プリンタ出力
       CD6A                     _SYS1C  EQU _ERROR      ;(BDOS)ディスクの書き込み禁止化
       CD6A                     _SYS1E  EQU _ERROR      ;(BDOS)ファイル属性の設定
       CD6A                     _SYS20  EQU _ERROR      ;(BDOS)利用者番号の設定と読み出し
       CD6A                     _SYS2E  EQU _ERROR      ;(BDOS)ベリファイ・フラグの設定
                                
       0000                     INT EQU 0
       0000                     INTCTCE EQU 0
       0000                     INTCTC2 EQU 0
                                
       0000                     CTRL00  EQU 0
       0000                     CTRL03  EQU 0
       0000                     CTRL04  EQU 0
       0000                     CTRL05  EQU 0
       0000                     CTRL06  EQU 0
       0000                     CTRL07  EQU 0
       0000                     CTRL08  EQU 0
       0000                     CTRL09  EQU 0
       0000                     CTRL0A  EQU 0
       0000                     CTRL0B  EQU 0
       0000                     CTRL0C  EQU 0
       0000                     CTRL0D  EQU 0
       0000                     CTRL0E  EQU 0
       0000                     CTRL12  EQU 0
       0000                     CTRL1B  EQU 0
       0000                     CTRL1C  EQU 0
       0000                     CTRL1D  EQU 0
       0000                     CTRL1E  EQU 0
       0000                     CTRL1F  EQU 0
                                
       CFFB                     PRINT:
000A86 CFFB 7B               4      LD  A,E
000A87 CFFC 1803            12      JR  MSG_A
                                
       CFFE                     _SYS01:     ;(BDOS)コンソール入力
000A89 CFFE CD09E4          17      CALL    _SYS07
       D001                     MSG_A:
000A8C D001 FE03             7      CP  3
000A8E D003 2814            12      JR  Z,MSG_BR
       D005                     MSGA1:
000A90 D005 F5              11      PUSH    AF
000A91 D006 C5              11      PUSH    BC
000A92 D007 D5              11      PUSH    DE
000A93 D008 E5              11      PUSH    HL
000A94 D009 DDE5            15      PUSH    IX
000A96 D00B DD21A200        14      LD  IX,CHPUT
000A9A D00F CD14D2          17      CALL    CALSLT_R
000A9D D012 DDE1            14      POP IX
000A9F D014 E1              10      POP HL
000AA0 D015 D1              10      POP DE
000AA1 D016 C1              10      POP BC
       D017                     MSGA2:
000AA2 D017 F1              10      POP AF
000AA3 D018 C9              10      RET
       D019                     MSG_BR:
000AA4 D019 F5              11      PUSH    AF
000AA5 D01A 3ADDF3          13      LD  A,(CSRX)
000AA8 D01D FE02             7      CP  2
000AAA D01F 38F6            12      JR  C,MSGA2
000AAC D021 F1              10      POP AF
       D022                     MSG_CR:
000AAD D022 F5              11      PUSH    AF
000AAE D023 3E0D             7      LD  A,00DH
000AB0 D025 CD05D0          17      CALL    MSGA1
000AB3 D028 3E0A             7      LD  A,00AH
000AB5 D02A CD05D0          17      CALL    MSGA1
000AB8 D02D F1              10      POP AF
000AB9 D02E C9              10      RET
                                
       D02F                     _SYS02:     ;(BDOS)コンソール出力
000ABA D02F CD4AD0          17      CALL    BREAK
000ABD D032 1805            12      JR  PRINTX
                                
       D034                     _SYS06:     ;(BDOS)コンソール直接入出力
000ABF D034 7B               4      LD  A,E
000AC0 D035 3C               4      INC A
000AC1 D036 CACAE4          10      JP  Z,_INKEY
       D039                     PRINTX:
000AC4 D039 C3CDE4          10      JP  _PRINT
                                
       D03C                     _SYS08:     ;(BDOS)エコーなしコンソール入力
000AC7 D03C CD09E4          17      CALL    _SYS07
000ACA D03F FE03             7      CP  3
000ACC D041 CCF4E4          17      CALL    Z,_BREAK
000ACF D044 FE13             7      CP  013H        ;CTRL+S
000AD1 D046 C0              11      RET NZ
       D047                     PAUSE:
000AD2 D047 CD61D0          17      CALL    KEYBC
                                
       D04A                     BREAK:
000AD5 D04A F5              11      PUSH    AF
000AD6 D04B C5              11      PUSH    BC
000AD7 D04C D5              11      PUSH    DE
000AD8 D04D E5              11      PUSH    HL
000AD9 D04E DDE5            15      PUSH    IX
000ADB D050 DD21B700        14      LD  IX,BREAKX
000ADF D054 CD14D2          17      CALL    CALSLT_R
000AE2 D057 DDE1            14      POP IX
000AE4 D059 E1              10      POP HL
000AE5 D05A D1              10      POP DE
000AE6 D05B C1              10      POP BC
000AE7 D05C DCF4E4          17      CALL    C,_BREAK
000AEA D05F F1              10      POP AF
000AEB D060 C9              10      RET
       D061                     KEYBC:
000AEC D061 F5              11      PUSH    AF
000AED D062 C5              11      PUSH    BC
000AEE D063 D5              11      PUSH    DE
000AEF D064 E5              11      PUSH    HL
000AF0 D065 DDE5            15      PUSH    IX
000AF2 D067 DD215601        14      LD  IX,KILBUF
000AF6 D06B CD14D2          17      CALL    CALSLT_R
000AF9 D06E DDE1            14      POP IX
000AFB D070 E1              10      POP HL
000AFC D071 D1              10      POP DE
000AFD D072 C1              10      POP BC
000AFE D073 F1              10      POP AF
000AFF D074 C9              10      RET
       D075                     FLGET:
000B00 D075 C5              11      PUSH    BC
000B01 D076 D5              11      PUSH    DE
000B02 D077 E5              11      PUSH    HL
000B03 D078 DDE5            15      PUSH    IX
000B05 D07A CDDFE4          17      CALL    _FFLUSH
000B08 D07D 181B            12      JR  FLGET1
       D07E                     CBIOS_SWC1  EQU $-1
000B0A D07F CDFCD1          17      CALL    GETVRAM
                                
000B0D D082 E5              11      PUSH    HL
000B0E D083 DD214A00        14      LD  IX,RDVRM
000B12 D087 CD14D2          17      CALL    CALSLT_R
000B15 D08A E1              10      POP HL
000B16 D08B 32A6D0          13      LD  (SWCCHR),A
                                
000B19 D08E E5              11      PUSH    HL
000B1A D08F 3EFF             7      LD  A,0FFH
000B1C D091 DD214D00        14      LD  IX,WRTVRM
000B20 D095 CD14D2          17      CALL    CALSLT_R
000B23 D098 E1              10      POP HL
                                
000B24 D099 E5              11      PUSH    HL
       D09A                     FLGET1:
000B25 D09A DD219F00        14      LD  IX,CHGET
000B29 D09E CD14D2          17      CALL    CALSLT_R
000B2C D0A1 180C            12      JR  FLGET2
       D0A2                     CBIOS_SWC2  EQU $-1
000B2E D0A3 E1              10      POP HL
                                
000B2F D0A4 F5              11      PUSH    AF
000B30 D0A5 3E00             7      LD  A,0
       D0A6                     SWCCHR  EQU $-1
000B32 D0A7 DD214D00        14      LD  IX,WRTVRM
000B36 D0AB CD14D2          17      CALL    CALSLT_R
000B39 D0AE F1              10      POP AF
       D0AF                     FLGET2:
000B3A D0AF DDE1            14      POP IX
000B3C D0B1 E1              10      POP HL
000B3D D0B2 D1              10      POP DE
000B3E D0B3 C1              10      POP BC
000B3F D0B4 FE03             7      CP  3
000B41 D0B6 C0              11      RET NZ
000B42 D0B7 C300E4          10      JP  CPM_BOOT
                                
       D0BA                     INKEY:
000B45 D0BA CD06E4          17      CALL    CPM_CONST
000B48 D0BD C8              11      RET Z
000B49 D0BE 18B5            12      JR  FLGET
                                
       D0C0                     _SYS0A:     ;(BDOS)文字列入力
000B4B D0C0 C5              11      PUSH    BC
000B4C D0C1 E5              11      PUSH    HL
000B4D D0C2 D5              11      PUSH    DE
000B4E D0C3 CDECD0          17      CALL    GETL
000B51 D0C6 111FF4          10      LD  DE,KBUF
000B54 D0C9 E1              10      POP HL
000B55 D0CA E5              11      PUSH    HL
000B56 D0CB 0E00             7      LD  C,0
000B58 D0CD 3004            12      JR  NC,SAX0
000B5A D0CF 23               6      INC HL
000B5B D0D0 23               6      INC HL
000B5C D0D1 1808            12      JR  SAX4
       D0D3                     SAX0:
000B5E D0D3 46               7      LD  B,(HL)
000B5F D0D4 23               6      INC HL
       D0D5                     SAX1:
000B60 D0D5 23               6      INC HL
000B61 D0D6 1A               7      LD  A,(DE)
000B62 D0D7 13               6      INC DE
000B63 D0D8 B7               4      OR  A
000B64 D0D9 2004            12      JR  NZ,SAX2
       D0DB                     SAX4:
000B66 D0DB 360D            10      LD  (HL),00DH
000B68 D0DD 1804            12      JR  SAX3
       D0DF                     SAX2:
000B6A D0DF 77               7      LD  (HL),A
000B6B D0E0 0C               4      INC C
000B6C D0E1 10F2            13      DJNZ    SAX1
       D0E3                     SAX3:
000B6E D0E3 D1              10      POP DE
000B6F D0E4 79               4      LD  A,C
000B70 D0E5 13               6      INC DE
000B71 D0E6 12               7      LD  (DE),A
000B72 D0E7 1B               6      DEC DE
000B73 D0E8 E1              10      POP HL
000B74 D0E9 C1              10      POP BC
000B75 D0EA A7               4      AND A
000B76 D0EB C9              10      RET
       D0EC                     GETL:
000B77 D0EC DDE5            15      PUSH    IX
000B79 D0EE FDE5            15      PUSH    IY
                                
000B7B D0F0 2ADCF3          16      LD  HL,(CSRY)
000B7E D0F3 22CAFB          16      LD  (FSTPOS),HL
       D0F6                     GETL1:
000B81 D0F6 CD3CD0          17      CALL    _SYS08
000B84 D0F9 FE09             7      CP  9
000B86 D0FB 2008            12      JR  NZ,GETL1V
000B88 D0FD 211FF4          10      LD  HL,KBUF
000B8B D100 CD7BCD          17      CALL    MSX
000B8E D103 18F1            12      JR  GETL1
       D105                     GETL1V:
000B90 D105 5F               4      LD  E,A
000B91 D106 FE08             7      CP  8
000B93 D108 CCA2D1          17      CALL    Z,CTRL02
000B96 D10B FE20             7      CP  020H
000B98 D10D D4CED1          17      CALL    NC,INSERT
000B9B D110 CD05D0          17      CALL    MSGA1
                                
000B9E D113 7B               4      LD  A,E
000B9F D114 FE0D             7      CP  00DH
000BA1 D116 20DE            12      JR  NZ,GETL1
                                
000BA3 D118 111FF4          10      LD  DE,KBUF
000BA6 D11B 3AB0F3          13      LD  A,(LINLEN)
000BA9 D11E 47               4      LD  B,A
000BAA D11F CD1ECC          17      CALL    ZERO_MEMORY_DE
                                
000BAD D122 2ACAFB          16      LD  HL,(FSTPOS)
000BB0 D125 3ADCF3          13      LD  A,(CSRY)
000BB3 D128 6F               4      LD  L,A
000BB4 D129 E5              11      PUSH    HL
000BB5 D12A CDFFD1          17      CALL    LOC0
000BB8 D12D 4D               4      LD  C,L
000BB9 D12E 44               4      LD  B,H
000BBA D12F E1              10      POP HL
000BBB D130 3AB0F3          13      LD  A,(LINLEN)
000BBE D133 94               4      SUB H
000BBF D134 3D               4      DEC A
000BC0 D135 5F               4      LD  E,A
000BC1 D136 211FF4          10      LD  HL,KBUF
       D139                     GETL2:
000BC4 D139 CDD0E4          17      CALL    _SCRN
000BC7 D13C 03               6      INC BC
000BC8 D13D 77               7      LD  (HL),A
000BC9 D13E 23               6      INC HL
000BCA D13F 1D               4      DEC E
000BCB D140 20F7            12      JR  NZ,GETL2
000BCD D142 CD22D0          17      CALL    MSG_CR
                                
000BD0 D145 FDE1            14      POP IY
000BD2 D147 DDE1            14      POP IX
       D149                     GETL3:
000BD4 D149 2B               6      DEC HL
000BD5 D14A 7E               7      LD  A,(HL)
000BD6 D14B FE21             7      CP  021H
000BD8 D14D D0              11      RET NC
000BD9 D14E 3600            10      LD  (HL),0
000BDB D150 15               4      DEC D
000BDC D151 20F6            12      JR  NZ,GETL3
000BDE D153 C9              10      RET
                                
       D154                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       D154                     CONSTX:
000BDF D154 C5              11      PUSH    BC
000BE0 D155 D5              11      PUSH    DE
000BE1 D156 E5              11      PUSH    HL
000BE2 D157 DDE5            15      PUSH    IX
000BE4 D159 DD219C00        14      LD  IX,CHSNS
000BE8 D15D CD14D2          17      CALL    CALSLT_R
000BEB D160 DDE1            14      POP IX
000BED D162 E1              10      POP HL
000BEE D163 D1              10      POP DE
000BEF D164 C1              10      POP BC
000BF0 D165 C9              10      RET
                                
       D166                     _SYS2A:     ;(BDOS)日付の獲得
000BF1 D166 AF               4      XOR A
000BF2 D167 57               4      LD  D,A
000BF3 D168 5F               4      LD  E,A
000BF4 D169 67               4      LD  H,A
000BF5 D16A 6F               4      LD  L,A
000BF6 D16B C9              10      RET
                                
       D16C                     _SYS2C:     ;(BDOS)時刻の獲得
000BF7 D16C AF               4      XOR A
000BF8 D16D 57               4      LD  D,A
000BF9 D16E 5F               4      LD  E,A
000BFA D16F 67               4      LD  H,A
000BFB D170 6F               4      LD  L,A
000BFC D171 C9              10      RET
                                
       D172                     POS:
000BFD D172 F5              11      PUSH    AF
000BFE D173 2ADCF3          16      LD  HL,(CSRY)
000C01 D176 7D               4      LD  A,L
000C02 D177 6C               4      LD  L,H
000C03 D178 67               4      LD  H,A
000C04 D179 2C               4      INC L
000C05 D17A 24               4      INC H
000C06 D17B F1              10      POP AF
000C07 D17C C9              10      RET
                                
       D17D                     LOC:
000C08 D17D F5              11      PUSH    AF
000C09 D17E E5              11      PUSH    HL
000C0A D17F 7D               4      LD  A,L
000C0B D180 6C               4      LD  L,H
000C0C D181 67               4      LD  H,A
000C0D D182 2D               4      DEC L
000C0E D183 25               4      DEC H
000C0F D184 DDE5            15      PUSH    IX
000C11 D186 DD21C600        14      LD  IX,POSIT
000C15 D18A CD14D2          17      CALL    CALSLT_R
000C18 D18D DDE1            14      POP IX
000C1A D18F E1              10      POP HL
000C1B D190 F1              10      POP AF
000C1C D191 C9              10      RET
       D192                     SCRN:
000C1D D192 E5              11      PUSH    HL
000C1E D193 DDE5            15      PUSH    IX
                                
000C20 D195 69               4      LD  L,C
000C21 D196 60               4      LD  H,B
000C22 D197 DD214A00        14      LD  IX,RDVRM
000C26 D19B CD14D2          17      CALL    CALSLT_R
                                
000C29 D19E DDE1            14      POP IX
000C2B D1A0 E1              10      POP HL
000C2C D1A1 C9              10      RET
                                
       D1A2                     CTRL02:
000C2D D1A2 F5              11      PUSH    AF
000C2E D1A3 D5              11      PUSH    DE
000C2F D1A4 2ADCF3          16      LD  HL,(CSRY)
000C32 D1A7 3AB0F3          13      LD  A,(LINLEN)
000C35 D1AA 4F               4      LD  C,A
000C36 D1AB 94               4      SUB H   ;CSRX
000C37 D1AC C602             7      ADD A,2
000C39 D1AE 47               4      LD  B,A ;カーソルより右の文字数
000C3A D1AF 61               4      LD  H,C ;LINLEN
000C3B D1B0 C5              11      PUSH    BC
000C3C D1B1 CDFFD1          17      CALL    LOC0
000C3F D1B4 C1              10      POP BC
                                
000C40 D1B5 1620             7      LD  D,020H
       D1B7                     C8X1:
000C42 D1B7 DD214A00        14      LD  IX,RDVRM
000C46 D1BB CD14D2          17      CALL    CALSLT_R
000C49 D1BE 4F               4      LD  C,A
000C4A D1BF 7A               4      LD  A,D
000C4B D1C0 DD214D00        14      LD  IX,WRTVRM
000C4F D1C4 CD14D2          17      CALL    CALSLT_R
000C52 D1C7 2B               6      DEC HL
000C53 D1C8 51               4      LD  D,C
000C54 D1C9 10EC            13      DJNZ    C8X1
000C56 D1CB D1              10      POP DE
000C57 D1CC F1              10      POP AF
000C58 D1CD C9              10      RET
                                
       D1CE                     INSERT:
000C59 D1CE F5              11      PUSH    AF
000C5A D1CF D5              11      PUSH    DE
000C5B D1D0 2ADCF3          16      LD  HL,(CSRY)
000C5E D1D3 3AB0F3          13      LD  A,(LINLEN)
000C61 D1D6 4F               4      LD  C,A
000C62 D1D7 94               4      SUB H   ;CSRX
000C63 D1D8 3C               4      INC A
000C64 D1D9 47               4      LD  B,A ;カーソルより右の文字数
000C65 D1DA C5              11      PUSH    BC
000C66 D1DB CDFFD1          17      CALL    LOC0
000C69 D1DE C1              10      POP BC
                                
000C6A D1DF 1620             7      LD  D,020H
       D1E1                     INS1:
000C6C D1E1 DD214A00        14      LD  IX,RDVRM
000C70 D1E5 CD14D2          17      CALL    CALSLT_R
000C73 D1E8 4F               4      LD  C,A
000C74 D1E9 7A               4      LD  A,D
000C75 D1EA DD214D00        14      LD  IX,WRTVRM
000C79 D1EE CD14D2          17      CALL    CALSLT_R
000C7C D1F1 23               6      INC HL
000C7D D1F2 51               4      LD  D,C
000C7E D1F3 10EC            13      DJNZ    INS1
000C80 D1F5 D1              10      POP DE
000C81 D1F6 F1              10      POP AF
000C82 D1F7 C9              10      RET
                                
       D1F8                     CONOUT1:
000C83 D1F8 59               4      LD  E,C
000C84 D1F9 C3CDE4          10      JP  _PRINT
                                
       D1FC                     GETVRAM:
000C87 D1FC 2ADCF3          16      LD  HL,(CSRY)
       D1FF                     LOC0:
000C8A D1FF 2D               4      DEC L
000C8B D200 25               4      DEC H
000C8C D201 4C               4      LD  C,H ;CSRX-1
000C8D D202 5D               4      LD  E,L ;CSRY-1
       D203                     LOC1:
000C8E D203 3AB0F3          13      LD  A,(LINLEN)
000C91 D206 67               4      LD  H,A
000C92 D207 1600             7      LD  D,0
000C94 D209 6A               4      LD  L,D ;0
000C95 D20A 0608             7      LD  B,8
       D20C                     LOC2:
000C97 D20C 29              11      ADD HL,HL
000C98 D20D 3001            12      JR  NC,LOC3
000C9A D20F 19              11      ADD HL,DE
       D210                     LOC3:
000C9B D210 10FA            13      DJNZ    LOC2
000C9D D212 09              11      ADD HL,BC
000C9E D213 C9              10      RET
                                
       D214                     CALSLT_R:
000C9F D214 FDE5            15      PUSH    IY
000CA1 D216 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000CA5 D21A CD30D2          17      CALL    CALSLTR
000CA8 D21D FDE1            14      POP IY
000CAA D21F C9              10      RET
                                
       D220                     CALLF:
000CAB D220 08               4      EX  AF,AF'
000CAC D221 E3              19      EX  (SP),HL
000CAD D222 7E               7      LD  A,(HL)
000CAE D223 FD67             9      LD  IYH,A
000CB0 D225 23               6      INC HL
000CB1 D226 7E               7      LD  A,(HL)
000CB2 D227 DD6F             9      LD  IXL,A
000CB4 D229 23               6      INC HL
000CB5 D22A 7E               7      LD  A,(HL)
000CB6 D22B DD67             9      LD  IXH,A
000CB8 D22D 23               6      INC HL
000CB9 D22E E3              19      EX  (SP),HL
000CBA D22F 08               4      EX  AF,AF'
       D230                     CALSLTR:
000CBB D230 F3               4      DI
000CBC D231 ED736AD2        20      LD  (CSSP),SP
000CC0 D235 F5              11      PUSH    AF
000CC1 D236 3E1C             7      LD  A,_CALSLT
       D238                     SLTCALL:
000CC3 D238 3257D2          13      LD  (SLTCALLX),A
000CC6 D23B 3A6BD2          13      LD  A,(CSSP+1)
000CC9 D23E FE41             7      CP  040H+1
000CCB D240 3005            12      JR  NC,CALSLTR1
000CCD D242 F1              10      POP AF
000CCE D243 315EF5          10      LD  SP,BUF
000CD1 D246 F5              11      PUSH    AF
       D247                     CALSLTR1:
000CD2 D247 C5              11      PUSH    BC
000CD3 D248 D5              11      PUSH    DE
000CD4 D249 E5              11      PUSH    HL
000CD5 D24A 2600             7      LD  H,0
000CD7 D24C 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
000CDA D24F CD6ED3          17      CALL    ENASLT
000CDD D252 E1              10      POP HL
000CDE D253 D1              10      POP DE
000CDF D254 C1              10      POP BC
000CE0 D255 F1              10      POP AF
000CE1 D256 CD1C00          17      CALL    _CALSLT
       D257                     SLTCALLX    EQU $-2
000CE4 D259 F5              11      PUSH    AF
000CE5 D25A C5              11      PUSH    BC
000CE6 D25B D5              11      PUSH    DE
000CE7 D25C E5              11      PUSH    HL
000CE8 D25D 2600             7      LD  H,0
000CEA D25F 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000CED D262 CD6ED3          17      CALL    ENASLT
000CF0 D265 E1              10      POP HL
000CF1 D266 D1              10      POP DE
000CF2 D267 C1              10      POP BC
000CF3 D268 F1              10      POP AF
000CF4 D269 310000          10      LD  SP,0
       D26A                     CSSP    EQU $-2
000CF7 D26C FB               4      EI
000CF8 D26D C9              10      RET
                                
       D26E                     RDSLTR:
000CF9 D26E ED736AD2        20      LD  (CSSP),SP
000CFD D272 F5              11      PUSH    AF
000CFE D273 3E0C             7      LD  A,_RDSLT
000D00 D275 18C1            12      JR  SLTCALL
                                
       D277                     WRSLTR:
000D02 D277 ED736AD2        20      LD  (CSSP),SP
000D06 D27B F5              11      PUSH    AF
000D07 D27C 3E14             7      LD  A,_WRSLT
000D09 D27E 18B8            12      JR  SLTCALL
                                
       D280                     INT38H:
000D0B D280 F5              11      PUSH    AF
000D0C D281 E5              11      PUSH    HL          ;メインROMを呼び出すのでスタックが被っていないかチェック
000D0D D282 2AACD2          16      LD  HL,(INTSP)
000D10 D285 7C               4      LD  A,H
000D11 D286 B5               4      OR  L
000D12 D287 202D            12      JR  NZ,INT38H2
000D14 D289 C5              11      PUSH    BC
000D15 D28A D5              11      PUSH    DE
000D16 D28B 2100BF          10      LD  HL,010000H-04100H   ;Page1
000D19 D28E 39              11      ADD HL,SP
000D1A D28F ED73ACD2        20      LD  (INTSP),SP
000D1E D293 3803            12      JR  C,INT38H1
000D20 D295 315EF5          10      LD  SP,BUF
       D298                     INT38H1:
000D23 D298 2600             7      LD  H,0
000D25 D29A 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
000D28 D29D CD6ED3          17      CALL    ENASLT
000D2B D2A0 CD3800          17      CALL    00038H
000D2E D2A3 2600             7      LD  H,0
000D30 D2A5 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000D33 D2A8 CD6ED3          17      CALL    ENASLT
000D36 D2AB 310000          10      LD  SP,0
       D2AC                     INTSP   EQU $-2
000D39 D2AE 210000          10      LD  HL,0
000D3C D2B1 22ACD2          16      LD  (INTSP),HL
000D3F D2B4 D1              10      POP DE
000D40 D2B5 C1              10      POP BC
       D2B6                     INT38H2:
000D41 D2B6 E1              10      POP HL
000D42 D2B7 F1              10      POP AF
000D43 D2B8 FB               4      EI
000D44 D2B9 C9              10      RET
                                
[EOF:MSXIO.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\slot.asm"
                                ;-------------------------------------
                                ; 000Ch RDSLT
                                ; Reads a value from an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to read
                                ; Output:  A  = value read
                                ;          Interrupts disabled.
                                ; Changes: F, C, DE
       D2BA                     rdslt:
000D45 D2BA C5              11                  push    bc
000D46 D2BB E5              11                  push    hl
000D47 D2BC F5              11                  push    af
000D48 D2BD 57               4                  ld      d,a             ; init D in case call is not made
000D49 D2BE A7               4                  and     a               ; expanded slot?
000D4A D2BF F3               4                  di
000D4B D2C0 FCD9D3          17                  call    m,select_subslot
000D4E D2C3 F1              10                  pop     af
000D4F D2C4 E1              10                  pop     hl
                                
000D50 D2C5 E5              11                  push    hl              ; HL = address
000D51 D2C6 D5              11                  push    de              ; D = slot ID, E = saved SSL
000D52 D2C7 E5              11                  push    hl              ; HL = address
000D53 D2C8 F5              11                  push    af              ; A = slot ID
000D54 D2C9 7C               4                  ld      a,h
000D55 D2CA 07               4                  rlca
000D56 D2CB 07               4                  rlca
000D57 D2CC E603             7                  and     $03
000D59 D2CE 6F               4                  ld      l,a             ; L = page number
                                
000D5A D2CF 47               4                  ld      b,a
000D5B D2D0 3EFC             7                  ld      a,$FC
000D5D D2D2 CDF3D2          17                  call    rdsft
000D60 D2D5 5F               4                  ld      e,a             ; E = mask (shifted)
000D61 D2D6 45               4                  ld      b,l             ; B = page number
000D62 D2D7 F1              10                  pop     af              ; A = slot ID
000D63 D2D8 E603             7                  and     $03
000D65 D2DA CDF3D2          17                  call    rdsft
000D68 D2DD 47               4                  ld      b,a             ; B = primary slot (shifted)
000D69 D2DE DBA8            11                  in      a,(PSL_STAT)
000D6B D2E0 57               4                  ld      d,a             ; D = primary slot select for restore
000D6C D2E1 A3               4                  and     e
000D6D D2E2 B0               4                  or      b               ; A = primary slot select for read
000D6E D2E3 E1              10                  pop     hl              ; HL = address
                                
000D6F D2E4 CD80F3          17                  call    rdprim
000D72 D2E7 7B               4                  ld      a,e
000D73 D2E8 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000D74 D2E9 F5              11                  push    af              ; A = value read
000D75 D2EA CB7A             8                  bit     7,d             ; expanded slot?
000D77 D2EC C415D4          17                  call    nz,restore_subslot
000D7A D2EF F1              10                  pop     af              ; A = value read
000D7B D2F0 E1              10                  pop     hl              ; HL = address
000D7C D2F1 C1              10                  pop     bc
000D7D D2F2 C9              10                  ret
                                
       D2F3                     rdsft:
000D7E D2F3 04               4                  inc     b
000D7F D2F4 05               4                  dec     b
000D80 D2F5 C8              11                  ret     z
       D2F6                     rdsft_lp:
000D81 D2F6 07               4                  rlca
000D82 D2F7 07               4                  rlca
000D83 D2F8 10FC            13                  djnz    rdsft_lp
000D85 D2FA C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0014 WRSLT
                                ; Writes a value to an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to write
                                ;          E  = value to write
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, D
       D2FB                     wrslt:
000D86 D2FB E5              11                  push    hl
000D87 D2FC 57               4                  ld      d,a             ; D = slot ID
000D88 D2FD D5              11                  push    de
000D89 D2FE A7               4                  and     a               ; expanded slot?
000D8A D2FF F3               4                  di
000D8B D300 FCD9D3          17                  call    m,select_subslot
000D8E D303 C1              10                  pop     bc              ; B = slot ID, C = data
000D8F D304 E1              10                  pop     hl
000D90 D305 D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
000D91 D306 E5              11                  push    hl              ; HL = address
000D92 D307 7C               4                  ld      a,h
000D93 D308 07               4                  rlca
000D94 D309 07               4                  rlca
000D95 D30A E603             7                  and     $03
000D97 D30C 6F               4                  ld      l,a             ; L = page number
                                
000D98 D30D 47               4                  ld      b,a             ; B = page number
000D99 D30E 3EFC             7                  ld      a,$FC
000D9B D310 CDF3D2          17                  call    rdsft
000D9E D313 5F               4                  ld      e,a             ; E = mask (shifted)
                                
000D9F D314 45               4                  ld      b,l             ; B = page number
000DA0 D315 7A               4                  ld      a,d
000DA1 D316 E603             7                  and     $03             ; A = 000000PP
000DA3 D318 CDF3D2          17                  call    rdsft
000DA6 D31B 47               4                  ld      b,a             ; B = primary slot (shifted)
000DA7 D31C DBA8            11                  in      a,(PSL_STAT)
000DA9 D31E 57               4                  ld      d,a             ; D = primary slot select for restore
000DAA D31F A3               4                  and     e
000DAB D320 B0               4                  or      b               ; A = primary slot select for write
000DAC D321 E1              10                  pop     hl              ; HL = address
000DAD D322 59               4                  ld      e,c             ; E = data
000DAE D323 CD85F3          17                  call    wrprim
                                
000DB1 D326 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000DB2 D327 E5              11                  push    hl              ; HL = address
000DB3 D328 CB7A             8                  bit     7,d             ; expanded slot?
000DB5 D32A C415D4          17                  call    nz,restore_subslot
000DB8 D32D E1              10                  pop     hl
000DB9 D32E C9              10                  ret
                                
                                ;-------------------------------------
                                ; $001C CALSLT
                                ; Function : Executes inter-slot call.
                                ; Input    : IY - High byte with input for A in RDSLT
                                ;            IX - The address that will be called
                                ; Remark   : Variables can never be given in alternative registers
                                ;            of the Z-80 or IX and IY
                                
       D32F                     calslt:
000DBA D32F 08               4                  ex      af,af'
000DBB D330 D9               4                  exx
                                
                                ; Select secondary slot of target:
                                ; Note: This approach fails if target is in page 0 of slot 0.1, 0.2 or 0.3.
                                ; TODO: Put slot 0 specific routine in page 3, on the stack if necessary.
000DBC D331 F3               4                  di
000DBD D332 FDE5            15                  push    iy
000DBF D334 F1              10                  pop     af              ; A = slot ID: E000SSPP
000DC0 D335 DDE5            15                  push    ix
000DC2 D337 E1              10                  pop     hl              ; HL = address to call
000DC3 D338 57               4                  ld      d,a             ; init D in case call is not made
000DC4 D339 A7               4                  and     a               ; expanded slot?
000DC5 D33A FCD9D3          17                  call    m,select_subslot
000DC8 D33D D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
                                ; Calculate primary slot select value:
000DC9 D33E 7A               4                  ld      a,d             ; A = slot ID: E000SSPP
000DCA D33F E603             7                  and     $03
000DCC D341 47               4                  ld      b,a             ; B = primary slot
000DCD D342 0EFC             7                  ld      c,$FC           ; C = mask
                                                ; Calculate page that contains call address.
000DCF D344 DDE5            15                  push    ix
000DD1 D346 F1              10                  pop     af              ; A = high byte call address
000DD2 D347 07               4                  rlca
000DD3 D348 07               4                  rlca
000DD4 D349 E603             7                  and     $03             ; A = page
                                                ; Shift B and C page*2 positions to the left.
000DD6 D34B 87               4                  add     a,a
000DD7 D34C 2807            12                  jr      z,calslt_sh2
       D34E                     calslt_sh1:
000DD9 D34E CB00             4                  rlc     b
000DDB D350 CB01             4                  rlc     c
000DDD D352 3D               4                  dec     a
000DDE D353 20F9            12                  jr      nz,calslt_sh1
       D355                     calslt_sh2:
                                
                                ; Select primary slot of target and perform call:
000DE0 D355 2162D3          10                  ld      hl,calslt_restore
000DE3 D358 E5              11                  push    hl
000DE4 D359 DBA8            11                  in      a,(PSL_STAT)
000DE6 D35B F5              11                  push    af
000DE7 D35C A1               4                  and     c               ; C = mask (shifted)
000DE8 D35D B0               4                  or      b               ; B = primary slot (shifted)
000DE9 D35E D9               4                  exx
000DEA D35F C38CF3          10                  jp      clprim
                                
       D362                     calslt_restore:
000DED D362 08               4                  ex      af,af'
000DEE D363 D9               4                  exx
                                
                                ; Restore secondary slot:
000DEF D364 F3               4                  di
000DF0 D365 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000DF1 D366 CB7A             8                  bit     7,d             ; expanded slot?
000DF3 D368 C415D4          17                  call    nz,restore_subslot
                                
                                ; Done:
000DF6 D36B 08               4                  ex      af,af'
000DF7 D36C D9               4                  exx
000DF8 D36D C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0024 ENASLT
                                ; Selects a slot in the page specified by an address.
                                ; Input:   A  = slot ID: ExxxSSPP
                                ;               E  = expanded flag
                                ;               SS = secondary slot number (only if expanded)
                                ;               PP = primary slot number
                                ;          HL = address inside the page to change
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, DE
                                
       D36E                     enaslt:
                                
                                ; A=(A >> 6)&0x3
000DF9 D36E F3               4                  di
000DFA D36F E5              11                  push    hl
                                
000DFB D370 6F               4                  ld      l,a             ; L = ExxxSSPP
                                
000DFC D371 E603             7                  and     $03             ; A = 000000PP
000DFE D373 47               4                  ld      b,a
000DFF D374 3EAB             7                  ld      a,$AB
       D376                     psl_dup_lp:
000E01 D376 C655             7                  add     a,$55
000E03 D378 05               4                  dec     b
000E04 D379 F276D3          10                  jp      p,psl_dup_lp
                                
000E07 D37C 57               4                  ld      d,a             ; D = PP PP PP PP
                                
000E08 D37D 7C               4                  ld      a,h
000E09 D37E 07               4                  rlca
000E0A D37F 07               4                  rlca
000E0B D380 E603             7                  and     $03
                                
000E0D D382 67               4                  ld      h,a             ; H = page number (0-3)
                                
000E0E D383 47               4                  ld      b,a
                                
000E0F D384 3EC0             7                  ld      a,$C0
       D386                     page_msk_lp:
000E11 D386 07               4                  rlca
000E12 D387 07               4                  rlca
000E13 D388 05               4                  dec     b
000E14 D389 F286D3          10                  jp      p,page_msk_lp
                                
000E17 D38C 5F               4                  ld      e,a             ; E = page mask (00 00 00 11 << page)
000E18 D38D 2F               4                  cpl
000E19 D38E 4F               4                  ld      c,a             ; C = page mask complement
                                
000E1A D38F 7A               4                  ld      a,d
000E1B D390 A3               4                  and     e
000E1C D391 47               4                  ld      b,a             ; B = 00 00 00 PP << page
                                
000E1D D392 7D               4                  ld      a,l
000E1E D393 A7               4                  and     a
000E1F D394 F2D1D3          10                  jp      p,chg_psl
                                
                                ;SSL-Change
000E22 D397 0F               4                  rrca
000E23 D398 0F               4                  rrca
000E24 D399 E603             7                  and     $03             ; A = 000000SS
                                
000E26 D39B E5              11                  push    hl
000E27 D39C C5              11                  push    bc
                                
000E28 D39D 47               4                  ld      b,a
000E29 D39E 3EAB             7                  ld      a,$AB
       D3A0                     ssl_dup_lp:
000E2B D3A0 C655             7                  add     a,$55
000E2D D3A2 05               4                  dec     b
000E2E D3A3 F2A0D3          10                  jp      p,ssl_dup_lp
                                
000E31 D3A6 A3               4                  and     e
000E32 D3A7 47               4                  ld      b,a             ; B = 00 00 00 SS << page
                                
000E33 D3A8 7A               4                  ld      a,d
000E34 D3A9 E6C0             7                  and     $C0
000E36 D3AB 67               4                  ld      h,a
                                
000E37 D3AC DBA8            11                  in      a,(PSL_STAT)
000E39 D3AE 6F               4                  ld      l,a
000E3A D3AF E6C0             7                  and     $C0
000E3C D3B1 B4               4                  or      h
000E3D D3B2 D3A8            11                  out     (PSL_STAT),a
                                
000E3F D3B4 3AFFFF          13                  ld      a,(SSL_REGS)
000E42 D3B7 2F               4                  cpl
000E43 D3B8 A1               4                  and     c               ; preserve other pages
000E44 D3B9 B0               4                  or      b
000E45 D3BA 4F               4                  ld      c,a
000E46 D3BB 32FFFF          13                  ld      (SSL_REGS),a
                                
000E49 D3BE 7D               4                  ld      a,l
000E4A D3BF D3A8            11                  out     (PSL_STAT),a
                                
                                                ; (SLTTBL + PP) <- RegC
                                
000E4C D3C1 21C5FC          10                  ld      hl,SLTTBL
                                
000E4F D3C4 7A               4                  ld      a,d
000E50 D3C5 E603             7                  and     $03             ; A = 000000PP
                                
000E52 D3C7 85               4                  add     a,l
000E53 D3C8 6F               4                  ld      l,a             ; L = L + A
                                
000E54 D3C9 7C               4                  ld      a,h
000E55 D3CA CE00             7                  adc     a,0
000E57 D3CC 67               4                  ld      h,a             ; H = H + Cy
                                
000E58 D3CD 79               4                  ld      a,c
000E59 D3CE 77               7                  ld      (hl),a
                                
000E5A D3CF C1              10                  pop     bc
000E5B D3D0 E1              10                  pop     hl
                                
       D3D1                     chg_psl:
000E5C D3D1 DBA8            11                  in      a,(PSL_STAT)
000E5E D3D3 A1               4                  and     c
000E5F D3D4 B0               4                  or      b
000E60 D3D5 D3A8            11                  out     (PSL_STAT),a
                                
000E62 D3D7 E1              10                  pop     hl
000E63 D3D8 C9              10                  ret
                                
                                ;--------------------------------
                                ; Select subslot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address which specifies page to select
                                ;               (actually, only the highest 2 bits of H are relevant)
                                ; Output:  D  = slot ID (same as input)
                                ;          E  = original value of secondary slot select register
                                ;          SLTTBL[slot] = new value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D3D9                     select_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000E64 D3D9 57               4                  ld      d,a             ; D = E000SSPP
000E65 D3DA 0F               4                  rrca
000E66 D3DB 0F               4                  rrca
000E67 D3DC 5F               4                  ld      e,a             ; E = PPE000SS
000E68 D3DD E6C0             7                  and     $C0
000E6A D3DF 6F               4                  ld      l,a             ; L = PP000000
000E6B D3E0 DBA8            11                  in      a,(PSL_STAT)
000E6D D3E2 4F               4                  ld      c,a             ; C = saved PSL
000E6E D3E3 E63F             7                  and     $3F
000E70 D3E5 B5               4                  or      l
000E71 D3E6 D3A8            11                  out     (PSL_STAT),a
                                                ; Shift mask and subslot according to page.
000E73 D3E8 7B               4                  ld      a,e             ; A = PPE000SS
000E74 D3E9 E603             7                  and     $03
000E76 D3EB 6F               4                  ld      l,a             ; L = subslot
000E77 D3EC 7C               4                  ld      a,h             ; A = high byte of address
000E78 D3ED 2603             7                  ld      h,$03           ; H = mask
000E7A D3EF 1802            12                  jr      select_subslot_next
       D3F1                     select_subslot_lp:
000E7C D3F1 29              11                  add     hl,hl           ; Shift 2 bits to the left.
000E7D D3F2 29              11                  add     hl,hl
       D3F3                     select_subslot_next:
000E7E D3F3 D640             7                  sub     $40             ; Subtract 1 page.
000E80 D3F5 30FA            12                  jr      nc,select_subslot_lp
000E82 D3F7 7C               4                  ld      a,h
000E83 D3F8 2F               4                  cpl
000E84 D3F9 67               4                  ld      h,a
                                                ; Select secondary slot of target.
000E85 D3FA 3AFFFF          13                  ld      a,(SSL_REGS)
000E88 D3FD 2F               4                  cpl
000E89 D3FE 5F               4                  ld      e,a             ; E = saved SSL
000E8A D3FF A4               4                  and     h               ; H = mask (shifted)
000E8B D400 B5               4                  or      l               ; L = subslot (shifted)
000E8C D401 32FFFF          13                  ld      (SSL_REGS),a
000E8F D404 6F               4                  ld      l,a             ; L = value written to SSL_REGS
                                                ; Restore original primary slot in page 3.
000E90 D405 79               4                  ld      a,c
000E91 D406 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000E93 D408 7A               4                  ld      a,d
000E94 D409 E603             7                  and     $03             ; A = 000000SS
000E96 D40B 4F               4                  ld      c,a
000E97 D40C 0600             7                  ld      b,0
000E99 D40E 7D               4                  ld      a,l             ; A = value written to SSL_REGS
000E9A D40F 21C5FC          10                  ld      hl,SLTTBL
000E9D D412 09              11                  add     hl,bc
000E9E D413 77               7                  ld      (hl),a
000E9F D414 C9              10                  ret
                                
                                ;--------------------------------
                                ; Restore subslot, companion routine to select_subslot.
                                ; Input:   D  = slot ID: E000SSPP
                                ;          E  = original value of secondary slot select register
                                ; Output:  SLTTBL[slot] = original value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D415                     restore_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000EA0 D415 7A               4                  ld      a,d
000EA1 D416 0F               4                  rrca
000EA2 D417 0F               4                  rrca
000EA3 D418 E6C0             7                  and     $C0
000EA5 D41A 47               4                  ld      b,a             ; B = PP000000
000EA6 D41B DBA8            11                  in      a,(PSL_STAT)
000EA8 D41D 4F               4                  ld      c,a             ; C = saved PSL
000EA9 D41E E63F             7                  and     $3F
000EAB D420 B0               4                  or      b
000EAC D421 D3A8            11                  out     (PSL_STAT),a
                                                ; Restore secondary slot.
000EAE D423 7B               4                  ld      a,e
000EAF D424 32FFFF          13                  ld      (SSL_REGS),a
                                                ; Restore original primary slot in page 3.
000EB2 D427 79               4                  ld      a,c
000EB3 D428 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000EB5 D42A 7A               4                  ld      a,d
000EB6 D42B E603             7                  and     $03             ; A = 000000SS
000EB8 D42D 4F               4                  ld      c,a
000EB9 D42E 0600             7                  ld      b,0
000EBB D430 21C5FC          10                  ld      hl,SLTTBL
000EBE D433 09              11                  add     hl,bc
000EBF D434 73               7                  ld      (hl),e
000EC0 D435 C9              10                  ret
                                
                                ;--------------------------------
                                
       D436                     m_rdprim:
000EC1 D436 D3A8            11                  out     (PSL_STAT),a
000EC3 D438 5E               7                  ld      e,(hl)
000EC4 D439 1803            12                  jr      m_wrprm1
       D43B                     m_wrprim:
000EC6 D43B D3A8            11                  out     (PSL_STAT),a
000EC8 D43D 73               7                  ld      (hl),e
       D43E                     m_wrprm1:
000EC9 D43E 7A               4                  ld      a,d
000ECA D43F D3A8            11                  out     (PSL_STAT),a
000ECC D441 C9              10                  ret
       D442                     m_clprim:
000ECD D442 D3A8            11                  out     (PSL_STAT),a
000ECF D444 08               4                  ex      af,af'
000ED0 D445 CD98F3          17                  call    cl_jp
000ED3 D448 08               4                  ex      af,af'
000ED4 D449 F1              10                  pop     af
000ED5 D44A D3A8            11                  out     (PSL_STAT),a
000ED7 D44C 08               4                  ex      af,af'
000ED8 D44D C9              10                  ret
       D44E                     m_cl_jp:
000ED9 D44E DDE9             8                  jp      (ix)
       D450                     m_prim_end:
000EDB D450 00               4                  nop
                                
       F380                     rdprim:         equ     $F380
       F385                     wrprim:         equ     rdprim+(m_wrprim-m_rdprim)
       F38C                     clprim:         equ     rdprim+(m_clprim-m_rdprim)
       F398                     cl_jp:          equ     rdprim+(m_cl_jp-m_rdprim)
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:slot.asm:UTF_8]
                                    INCLUDE "LDFILE.ASM"
                                
                                ;   LSX-Dodgers FILE
                                
       D451                     FILEC:
000EDC D451 CD5CD4          17      CALL    FILE
       D454                     FILEC2:
000EDF D454 3A15E4          13      LD  A,(FDRV+1)
000EE2 D457 FE20             7      CP  020H
000EE4 D459 C8              11      RET Z
000EE5 D45A 1839            12      JR  SETDIR1
                                
       D45C                     FILE:
000EE7 D45C AF               4      XOR A
000EE8 D45D 3214E4          13      LD  (FDRV),A
000EEB D460 67               4      LD  H,A
000EEC D461 6F               4      LD  L,A
000EED D462 2222E4          16      LD  (FDRV+14),HL
000EF0 D465 CD33D5          17      CALL    SPCUT
000EF3 D468 CD18D5          17      CALL    CCHK3
000EF6 D46B 2812            12      JR  Z,DEVI1
000EF8 D46D 13               6      INC DE
000EF9 D46E 1A               7      LD  A,(DE)
000EFA D46F 1B               6      DEC DE
000EFB D470 FE3A             7      CP  ':'
000EFD D472 200B            12      JR  NZ,DEVI1
000EFF D474 1A               7      LD  A,(DE)      ;DRIVE
000F00 D475 CD73D7          17      CALL    CAP
000F03 D478 D640             7      SUB '@'
000F05 D47A 13               6      INC DE
000F06 D47B 13               6      INC DE
000F07 D47C 3214E4          13      LD  (FDRV),A
       D47F                     DEVI1:
000F0A D47F 1A               7      LD  A,(DE)
000F0B D480 D65C             7      SUB 05CH        ;\
000F0D D482 2009            12      JR  NZ,NOROOT
000F0F D484 6F               4      LD  L,A     ;A=0でH=0のはずなのでHL=0
000F10 D485 222EE4          16      LD  (FDRV+26),HL
000F13 D488 2C               4      INC L
000F14 D489 2222E4          16      LD  (FDRV+14),HL
000F17 D48C 13               6      INC DE
       D48D                     NOROOT:
                                
       D48D                     SETDIR:
000F18 D48D CDB9D4          17      CALL    FILED
000F1B D490 1A               7      LD  A,(DE)
000F1C D491 FE5C             7      CP  05CH        ;\
000F1E D493 C0              11      RET NZ
000F1F D494 13               6      INC DE
       D495                     SETDIR1:
000F20 D495 3E10             7      LD  A,010H      ;Directory
000F22 D497 3221E4          13      LD  (FDRV+13),A
000F25 D49A D5              11      PUSH    DE
000F26 D49B 1114E4          10      LD  DE,FDRV
000F29 D49E 2A1EE5          16      LD  HL,(STABLE+2*00FH)
000F2C D4A1 CD0F00          17      CALL    JP_HL
000F2F D4A4 D1              10      POP DE
000F30 D4A5 B7               4      OR  A
000F31 D4A6 C0              11      RET NZ
                                
000F32 D4A7 3A21E4          13      LD  A,(FDRV+13)
000F35 D4AA CB67             8      BIT 4,A
000F37 D4AC C8              11      RET Z
                                
000F38 D4AD CD00D5          17      CALL    FILEI
000F3B D4B0 2A2EE4          16      LD  HL,(FDRV+26)
000F3E D4B3 23               6      INC HL
000F3F D4B4 2222E4          16      LD  (FDRV+14),HL
000F42 D4B7 18D4            12      JR  SETDIR
                                
       D4B9                     FILED:
000F44 D4B9 CD00D5          17      CALL    FILEI
000F47 D4BC 2115E4          10      LD  HL,FNAME
                                
000F4A D4BF 0608             7      LD  B,8
       D4C1                     FILE2:
000F4C D4C1 CD0DD5          17      CALL    CCHKF
000F4F D4C4 C8              11      RET Z
000F50 D4C5 FE2A             7      CP  '*'
000F52 D4C7 282E            12      JR  Z,FILE9
000F54 D4C9 FE2E             7      CP  '.'
000F56 D4CB 280C            12      JR  Z,FILE4
000F58 D4CD 77               7      LD  (HL),A
000F59 D4CE 23               6      INC HL
000F5A D4CF 10F0            13      DJNZ    FILE2
                                
       D4D1                     FILE3:
000F5C D4D1 CD0DD5          17      CALL    CCHKF
000F5F D4D4 C8              11      RET Z
000F60 D4D5 FE2E             7      CP  '.'
000F62 D4D7 20F8            12      JR  NZ,FILE3
                                
       D4D9                     FILE4:
000F64 D4D9 211DE4          10      LD  HL,FNAME+8
000F67 D4DC 0603             7      LD  B,3
                                
       D4DE                     FILE4L:
000F69 D4DE CD0DD5          17      CALL    CCHKF
000F6C D4E1 C8              11      RET Z
000F6D D4E2 FE2E             7      CP  '.'
000F6F D4E4 2008            12      JR  NZ,FILE12
000F71 D4E6 3215E4          13      LD  (FNAME),A   ;Parent directory(..)
000F74 D4E9 3216E4          13      LD  (FNAME+1),A
000F77 D4EC 3E20             7      LD  A,020H
       D4EE                     FILE12:
000F79 D4EE FE2A             7      CP  '*'
000F7B D4F0 280A            12      JR  Z,FILE10
000F7D D4F2 77               7      LD  (HL),A
000F7E D4F3 23               6      INC HL
000F7F D4F4 10E8            13      DJNZ    FILE4L
000F81 D4F6 C9              10      RET
                                
       D4F7                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000F82 D4F7 CDFCD4          17      CALL    FILE10
000F85 D4FA 18D5            12      JR  FILE3
                                
       D4FC                     FILE10:
000F87 D4FC 3E3F             7      LD  A,'?'
000F89 D4FE 1808            12      JR  FILL_MEMORY
       D500                     FILEI:              ;名前＋拡張子をスペースで初期化
000F8B D500 3E20             7      LD  A,020H
000F8D D502 01000B          10      LD  BC,11*256   ;C=0にしておく
000F90 D505 2115E4          10      LD  HL,FNAME
       D508                     FILL_MEMORY:            ;HLからBバイトAで埋める
000F93 D508 77               7      LD  (HL),A
000F94 D509 23               6      INC HL
000F95 D50A 10FC            13      DJNZ    FILL_MEMORY
000F97 D50C C9              10      RET
                                
       D50D                     CCHKF:
000F98 D50D 1A               7      LD  A,(DE)
000F99 D50E CD15D5          17      CALL    CCHK2
000F9C D511 C8              11      RET Z
000F9D D512 C380D8          10      JP  FKAN
                                
       D515                     CCHK2:
000FA0 D515 0C               4      INC C
000FA1 D516 0D               4      DEC C
000FA2 D517 C0              11      RET NZ
       D518                     CCHK3:              ;ZF=1 で使えない文字
000FA3 D518 FE2B             7      CP  '+'
000FA5 D51A C8              11      RET Z
000FA6 D51B FE2C             7      CP  ','
000FA8 D51D C8              11      RET Z
000FA9 D51E FE2F             7      CP  '/'
000FAB D520 C8              11      RET Z
000FAC D521 FE3A             7      CP  ':'
000FAE D523 C8              11      RET Z
000FAF D524 FE3B             7      CP  ';'
000FB1 D526 C8              11      RET Z
000FB2 D527 FE3D             7      CP  '='
000FB4 D529 C8              11      RET Z
000FB5 D52A FE5C             7      CP  05CH    ;\
000FB7 D52C C8              11      RET Z
000FB8 D52D FE20             7      CP  020H
000FBA D52F D0              11      RET NC
000FBB D530 BF               4      CP  A       ;Z=1
000FBC D531 C9              10      RET
                                
       D532                     SS1:
000FBD D532 13               6      INC DE
       D533                     SPCUT:              ;スペースをカット
000FBE D533 1A               7      LD  A,(DE)
000FBF D534 FE20             7      CP  020H
000FC1 D536 28FA            12      JR  Z,SS1
000FC3 D538 C9              10      RET
                                
       D539                     SETDRVF:
000FC4 D539 1114E4          10      LD  DE,FDRV
       D53C                     SETDRV0:
000FC7 D53C CD45D5          17      CALL    SETDRV
000FCA D53F FDE1            14      POP IY
000FCC D541 C1              10      POP BC
000FCD D542 D1              10      POP DE
000FCE D543 E1              10      POP HL
000FCF D544 C9              10      RET
                                
       D545                     SETDRV:
000FD0 D545 E3              19      EX  (SP),HL     ;HL=RETRN ADDRESS
000FD1 D546 D5              11      PUSH    DE      ;PUSH HL/DE/BC/IY
000FD2 D547 C5              11      PUSH    BC
000FD3 D548 1A               7      LD  A,(DE)
000FD4 D549 D5              11      PUSH    DE
000FD5 D54A FDE3            23      EX  (SP),IY
                                
000FD7 D54C CD53D5          17      CALL    GETDRV
000FDA D54F CDD9E4          17      CALL    _CHGDRV
                                
000FDD D552 E9               4      JP  (HL)
                                
       D553                     GETDRV:
000FDE D553 CD66D5          17      CALL    GETDRV1
000FE1 D556 3288E4          13      LD  (_DRV),A
000FE4 D559 C9              10      RET
                                
       D55A                     IS_SAME_DRV_A_DE:
                                ;   A と (DE) が同じドライブか調べる
                                ;   ZF=1ならば同じドライブ
000FE5 D55A CD66D5          17      CALL    GETDRV1
000FE8 D55D C5              11      PUSH    BC
000FE9 D55E 4F               4      LD  C,A
000FEA D55F 1A               7      LD  A,(DE)
000FEB D560 CD66D5          17      CALL    GETDRV1
000FEE D563 A9               4      XOR C
000FEF D564 C1              10      POP BC
000FF0 D565 C9              10      RET
       D566                     GETDRV1:
000FF1 D566 E67F             7      AND 07FH
000FF3 D568 D601             7      SUB 001H
000FF5 D56A D0              11      RET NC
000FF6 D56B 3A87E4          13      LD  A,(_DVSW)   ;Current Drive
000FF9 D56E C9              10      RET
                                
       D56F                     SOPENX:
000FFA D56F 1139E4          10      LD  DE,SFILE
000FFD D572 FD7E00          19      LD  A,(IY+0)        ;(FCB)ドライブ番号
001000 D575 CD5AD5          17      CALL    IS_SAME_DRV_A_DE
001003 D578 2024            12      JR  NZ,SOPEN
001005 D57A 13               6      INC DE
001006 D57B FDE5            15      PUSH    IY
001008 D57D E1              10      POP HL
001009 D57E 23               6      INC HL
00100A D57F CD0BD7          17      CALL    CPFILE
00100D D582 201A            12      JR  NZ,SOPEN
                                
00100F D584 2AF4E5          16      LD  HL,(SCDIR)
001012 D587 FD750E          19      LD  (IY+14),L   ;(FCB)アクセスするディレクトリのクラスタ番号+1
001015 D58A FD740F          19      LD  (IY+15),H
                                
001018 D58D 2AF8E5          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
00101B D590 229FE4          16      LD  (_FILEN),HL
                                
00101E D593 ED5BF6E5        20      LD  DE,(SFBPS)
001022 D597 2139E4          10      LD  HL,SFILE
001025 D59A 36FF            10      LD  (HL),0FFH
001027 D59C 23               6      INC HL
001028 D59D C9              10      RET
       D59E                     SOPEN:
001029 D59E 21B3D6          10      LD  HL,FILESE
       D5A1                     SOPENC:
00102C D5A1 22DAD5          16      LD  (OPENPAT),HL
                                
00102F D5A4 CDE2E4          17      CALL    _RDFATX     ;Detect Media
001032 D5A7 3856            12      JR  C,RDDERR
                                
001034 D5A9 AF               4      XOR A
001035 D5AA 329FE4          13      LD  (_FILEN),A
001038 D5AD CDB3D7          17      CALL    LDDIRX1     ;A=0で呼び出す
00103B D5B0 2818            12      JR  Z,SDIRX1
                                
00103D D5B2 CDA4D6          17      CALL    READ_DIR    ;Sub Directory
001040 D5B5 3808            12      JR  C,SDIRX0
001042 D5B7 2A7EE5          16      LD  HL,(_DTBUF)
001045 D5BA 7E               7      LD  A,(HL)
001046 D5BB FE2E             7      CP  '.'
001048 D5BD 280F            12      JR  Z,SOPEN1
       D5BF                     SDIRX0:
00104A D5BF AF               4      XOR A
00104B D5C0 32A0E4          13      LD  (_DIRF),A
00104E D5C3 FD360E01        19      LD  (IY+14),1   ;(FCB)レコードサイズ
001052 D5C7 FD770F          19      LD  (IY+15),A
       D5CA                     SDIRX1:
001055 D5CA ED5BFCE5        20      LD  DE,(_DIRPS) ;Root Directory
       D5CE                     SOPEN1:
001059 D5CE 0E20             7      LD  C,32        ;自己書き換え 1セクタ辺りのディレクトリエントリ数  1024=32 / 512=16 / 256=8
       D5CF                     SDECPAT EQU $-1
       D5D0                     SOPEN1X:
00105B D5D0 CDA4D6          17      CALL    READ_DIR    ;FILE SEARCH
00105E D5D3 382A            12      JR  C,RDDERR
001060 D5D5 2A7EE5          16      LD  HL,(_DTBUF)
       D5D8                     SOPEN2:
001063 D5D8 D5              11      PUSH    DE
001064 D5D9 CDB3D6          17      CALL    FILESE      ;(self-modifying code)
       D5DA                     OPENPAT EQU $-2
001067 D5DC D1              10      POP DE
001068 D5DD 386D            12      JR  C,SOPENE
00106A D5DF 281B            12      JR  Z,SCF_FF_RET
       D5E1                     SOPEN3:
00106C D5E1 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
00106F D5E4 B7               4      OR  A
001070 D5E5 200C            12      JR  NZ,SOPEN5
001072 D5E7 13               6      INC DE      ;ルートディレクトリ
001073 D5E8 E5              11      PUSH    HL
001074 D5E9 210C00          10      LD  HL,12       ;(self-modifying code)MAXDIR
       D5EA                     MD_PAT  EQU $-2
001077 D5EC ED52            15      SBC HL,DE       ;CF=0 なので SUB HL,DE
001079 D5EE E1              10      POP HL
00107A D5EF 20DD            12      JR  NZ,SOPEN1
00107C D5F1 1807            12      JR  SOPEN6
       D5F3                     SOPEN5:
00107E D5F3 CDC2DE          17      CALL    GNCLX       ;END DIR
001081 D5F6 D8              11      RET C
001082 D5F7 CD6BD7          17      CALL    ENDCL
       D5FA                     SOPEN6:
001085 D5FA 38D2            12      JR  C,SOPEN1
       D5FC                     SCF_FF_RET:
001087 D5FC 37               4      SCF         ;CF=1
001088 D5FD 9F               4      SBC A,A     ;A=0FFH
001089 D5FE C9              10      RET
                                
       D5FF                     RDDERR:
00108A D5FF BF               4      CP  A       ;READ ERR CF=1 ZF=1
00108B D600 37               4      SCF
00108C D601 C9              10      RET
                                
       D602                     NOPEN:
00108D D602 21B3D6          10      LD  HL,FILESE
001090 D605 22DAD5          16      LD  (OPENPAT),HL
001093 D608 FD2A98E4        20      LD  IY,(_FCB)
001097 D60C CD93D8          17      CALL    CHKWILDX
00109A D60F 30EB            12      JR  NC,SCF_FF_RET
00109C D611 FD7E00          19      LD  A,(IY+0)
00109F D614 CD53D5          17      CALL    GETDRV
0010A2 D617 CDD9E4          17      CALL    _CHGDRV
0010A5 D61A D8              11      RET C
0010A6 D61B 2AF8E5          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
0010A9 D61E 229FE4          16      LD  (_FILEN),HL
                                
0010AC D621 CDAED7          17      CALL    LDDIRX
0010AF D624 ED5B9AE4        20      LD  DE,(_FBPS)
0010B3 D628 CDA4D6          17      CALL    READ_DIR
0010B6 D62B 38D2            12      JR  C,RDDERR
0010B8 D62D 3A9EE4          13      LD  A,(_FBCNT)
0010BB D630 3D               4      DEC A
0010BC D631 28AE            12      JR  Z,SOPEN3
       D633                     NOPEN2:
0010BE D633 2A9CE4          16      LD  HL,(_FBAD)
0010C1 D636 012000          10      LD  BC,020H
0010C4 D639 09              11      ADD HL,BC
0010C5 D63A 4F               4      LD  C,A
0010C6 D63B 189B            12      JR  SOPEN2
                                
       D63D                     SOPENE2:
0010C8 D63D 229CE4          16      LD  (_FBAD),HL
0010CB D640 79               4      LD  A,C
0010CC D641 329EE4          13      LD  (_FBCNT),A
0010CF D644 ED539AE4        20      LD  (_FBPS),DE
0010D3 D648 FD2298E4        20      LD  (_FCB),IY
       D64C                     SOPENE:
0010D7 D64C AF               4      XOR A
0010D8 D64D C9              10      RET
                                
       D64E                     COPEN:
0010D9 D64E FD360D20        19      LD  (IY+13),020H    ;(FCB)属性(アトリビュート)
                                
0010DD D652 21D0D6          10      LD  HL,NEXTSE
0010E0 D655 CDA1D5          17      CALL    SOPENC
0010E3 D658 D0              11      RET NC
0010E4 D659 C8              11      RET Z
0010E5 D65A 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
0010E8 D65D B7               4      OR  A
0010E9 D65E 37               4      SCF
0010EA D65F C8              11      RET Z       ;ルートディレクトリ
0010EB D660 0601             7      LD  B,1
0010ED D662 CDF2D8          17      CALL    WRDF
0010F0 D665 D8              11      RET C
0010F1 D666 ED5BFEE5        20      LD  DE,(_CLPS)
0010F5 D66A D5              11      PUSH    DE
0010F6 D66B CD34D7          17      CALL    DCPAT
0010F9 D66E CD4DDD          17      CALL    DRDNX
0010FC D671 2A7EE5          16      LD  HL,(_DTBUF) ;ディレクトリエントリを0クリア
0010FF D674 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
001102 D677 47               4      LD  B,A
001103 D678 AF               4      XOR A
001104 D679 4F               4      LD  C,A
       D67A                     COPENCL:
001105 D67A 77               7      LD  (HL),A
001106 D67B EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
001108 D67D EA7AD6          10      JP  PE,COPENCL
                                
00110B D680 3A52D7          13      LD  A,(SPCPAT)  ;1クラスタの論理セクタ数
00110E D683 3D               4      DEC A
00110F D684 2819            12      JR  Z,COPENE
001111 D686 3E01             7      LD  A,1     ;1セクタ辺りのセクタ数が2以上の場合
001113 D688 32BADE          13      LD  (_SECPS),A
001116 D68B D1              10      POP DE      ;DE=(_CLPS)
001117 D68C D5              11      PUSH    DE
       D68D                     COPEN1:
001118 D68D D5              11      PUSH    DE      ;データバッファに入らないセクタもゼロクリア
001119 D68E C5              11      PUSH    BC
00111A D68F 2A7EE5          16      LD  HL,(_DTBUF)
00111D D692 CD4ED7          17      CALL    CLUSTX
001120 D695 CD52E0          17      CALL    DWT24
001123 D698 C1              10      POP BC
001124 D699 D1              10      POP DE
001125 D69A CDB9DE          17      CALL    NEXTX
001128 D69D 20EE            12      JR  NZ,COPEN1
       D69F                     COPENE:
00112A D69F 2A7EE5          16      LD  HL,(_DTBUF)
00112D D6A2 D1              10      POP DE
00112E D6A3 C9              10      RET
                                
       D6A4                     READ_DIR:
00112F D6A4 ED53FEE5        20      LD  (_CLPS),DE
001133 D6A8 C5              11      PUSH    BC
001134 D6A9 D5              11      PUSH    DE
001135 D6AA CD34D7          17      CALL    DCPAT
001138 D6AD CD2DDD          17      CALL    DRDX
00113B D6B0 D1              10      POP DE
00113C D6B1 C1              10      POP BC
00113D D6B2 C9              10      RET
                                
       D6B3                     FILESE:
00113E D6B3 7E               7      LD  A,(HL)
00113F D6B4 B7               4      OR  A
001140 D6B5 C8              11      RET Z       ;END:ZF=1 CF=0
001141 D6B6 FEE5             7      CP  0E5H
001143 D6B8 280E            12      JR  Z,FILESE1
001145 D6BA FDE5            15      PUSH    IY
001147 D6BC D1              10      POP DE
001148 D6BD 13               6      INC DE
001149 D6BE E5              11      PUSH    HL
00114A D6BF CD0BD7          17      CALL    CPFILE
00114D D6C2 CC2CD7          17      CALL    Z,CPFILE2
001150 D6C5 E1              10      POP HL
001151 D6C6 37               4      SCF
001152 D6C7 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       D6C8                     FILESE1:
001153 D6C8 CDDFD6          17      CALL    FNEXT
001156 D6CB 20E6            12      JR  NZ,FILESE
       D6CD                     ZF0_CF0_AFF_RET:
001158 D6CD F6FF             7      OR  0FFH        ;ZF=0 CF=0
00115A D6CF C9              10      RET
                                
       D6D0                     NEXTSE:
00115B D6D0 7E               7      LD  A,(HL)
00115C D6D1 B7               4      OR  A
00115D D6D2 37               4      SCF
00115E D6D3 C8              11      RET Z       ;!!!:ZF=1 CF=1
00115F D6D4 FEE5             7      CP  0E5H
001161 D6D6 37               4      SCF
001162 D6D7 C8              11      RET Z       ;!!!:(ZF=1) CF=1
001163 D6D8 CDDFD6          17      CALL    FNEXT
001166 D6DB 20F3            12      JR  NZ,NEXTSE
001168 D6DD 18EE            12      JR  ZF0_CF0_AFF_RET
                                
       D6DF                     FNEXT:
00116A D6DF E5              11      PUSH    HL
00116B D6E0 219FE4          10      LD  HL,_FILEN
00116E D6E3 34              11      INC (HL)
00116F D6E4 E1              10      POP HL
001170 D6E5 112000          10      LD  DE,020H
001173 D6E8 19              11      ADD HL,DE
001174 D6E9 0D               4      DEC C
001175 D6EA C9              10      RET
                                
       D6EB                     CPNAME:
001176 D6EB C5              11      PUSH    BC
001177 D6EC D5              11      PUSH    DE
001178 D6ED E5              11      PUSH    HL
001179 D6EE CD05D7          17      CALL    CPFILE4
00117C D6F1 E1              10      POP HL
00117D D6F2 23               6      INC HL
00117E D6F3 23               6      INC HL
00117F D6F4 23               6      INC HL
001180 D6F5 23               6      INC HL
001181 D6F6 D1              10      POP DE
001182 D6F7 C1              10      POP BC
001183 D6F8 2005            12      JR  NZ,CPNAME1
001185 D6FA 7E               7      LD  A,(HL)
001186 D6FB 23               6      INC HL
001187 D6FC 66               7      LD  H,(HL)
001188 D6FD 6F               4      LD  L,A
001189 D6FE C9              10      RET
       D6FF                     CPNAME1:
00118A D6FF 23               6      INC HL
00118B D700 23               6      INC HL
00118C D701 10E8            13      DJNZ    CPNAME
00118E D703 37               4      SCF
00118F D704 C9              10      RET
                                
       D705                     CPFILE4:
001190 D705 C5              11      PUSH    BC
001191 D706 010004          10      LD  BC,00400H
001194 D709 1804            12      JR  CPSTR1
       D70B                     CPFILE:
001196 D70B C5              11      PUSH    BC
001197 D70C 01000B          10      LD  BC,00B00H
       D70F                     CPSTR1:
00119A D70F 1A               7      LD  A,(DE)
00119B D710 FE3F             7      CP  '?'     ;Wild card
00119D D712 2812            12      JR  Z,CPSTR2
00119F D714 7E               7      LD  A,(HL)
0011A0 D715 CD79D8          17      CALL    FKANC
0011A3 D718 E5              11      PUSH    HL
0011A4 D719 67               4      LD  H,A
0011A5 D71A 1A               7      LD  A,(DE)
0011A6 D71B CB01             4      RLC C
0011A8 D71D CD79D8          17      CALL    FKANC
0011AB D720 CB09             4      RRC C
0011AD D722 BC               4      CP  H       ;CP (HL),(DE)
0011AE D723 E1              10      POP HL
0011AF D724 2004            12      JR  NZ,CPSTR3
       D726                     CPSTR2:
0011B1 D726 13               6      INC DE
0011B2 D727 23               6      INC HL
0011B3 D728 10E5            13      DJNZ    CPSTR1
       D72A                     CPSTR3:
0011B5 D72A C1              10      POP BC
0011B6 D72B C9              10      RET
                                
       D72C                     CPFILE2:
0011B7 D72C FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
0011BA D72F F6E1             7      OR  0E1H
0011BC D731 2F               4      CPL
0011BD D732 A6               7      AND (HL)
0011BE D733 C9              10      RET
                                
       D734                     DCPAT:
0011BF D734 0E00             7      LD  C,0
0011C1 D736 2A7EE5          16      LD  HL,(_DTBUF)
0011C4 D739 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
0011C7 D73C B7               4      OR  A
0011C8 D73D C8              11      RET Z       ;ルートディレクトリの場合はCレジスタを0にしておく(CDEがセクタ番号)
0011C9 D73E 3A52D7          13      LD  A,(SPCPAT)
0011CC D741 4F               4      LD  C,A
0011CD D742 3ABADE          13      LD  A,(_SECPS)
0011D0 D745 B9               4      CP  C
0011D1 D746 3801            12      JR  C,DC1
0011D3 D748 AF               4      XOR A
       D749                     DC1:
0011D4 D749 F680             7      OR  080H
0011D6 D74B 32A0E4          13      LD  (_DIRF),A   ;bit0-6:セクタインデックス
       D74E                     CLUSTX:
0011D9 D74E E5              11      PUSH    HL
0011DA D74F EB               4      EX  DE,HL
0011DB D750 AF               4      XOR A
0011DC D751 0E01             7      LD  C,1     ;自己書き換え（1クラスタの論理セクタ数）
       D752                     SPCPAT  EQU $-1
       D753                     L_CLDBL:
0011DE D753 CB19             8      RR  C       ;->CF
0011E0 D755 3804            12      JR  C,E_CLDBL
0011E2 D757 29              11      ADD HL,HL       ;*2
0011E3 D758 8F               4      ADC A,A
0011E4 D759 18F8            12      JR  L_CLDBL
       D75B                     E_CLDBL:
0011E6 D75B 4F               4      LD  C,A
0011E7 D75C 3ABADE          13      LD  A,(_SECPS)
0011EA D75F B5               4      OR  L
0011EB D760 6F               4      LD  L,A
0011EC D761 110800          10      LD  DE,8    ;+8 (2D)  !ADDCL (self-modifying code)
       D762                     CLSPAT  EQU $-2
0011EF D764 AF               4      XOR A
0011F0 D765 19              11      ADD HL,DE   ;データ格納領域の先頭論理セクタ番号
0011F1 D766 89               4      ADC A,C
0011F2 D767 4F               4      LD  C,A
0011F3 D768 EB               4      EX  DE,HL
0011F4 D769 E1              10      POP HL
0011F5 D76A C9              10      RET
                                
       D76B                     ENDCL:
0011F6 D76B 7A               4      LD  A,D ;END CLUSTER
0011F7 D76C FE01             7      CP  1   ;164=356    (self-modifying code)
       D76D                     CLPAT1  EQU $-1
0011F9 D76E C0              11      RET NZ
0011FA D76F 7B               4      LD  A,E
0011FB D770 FE64             7      CP  064H    ;       (self-modifying code)
       D771                     CLPAT2  EQU $-1
0011FD D772 C9              10      RET
                                
       D773                     CAP:
0011FE D773 FE61             7      CP  'a'
001200 D775 D8              11      RET C
001201 D776 FE7B             7      CP  'z'+1
001203 D778 D0              11      RET NC
001204 D779 D620             7      SUB 020H
001206 D77B C9              10      RET
       D77C                     CAP2:
001207 D77C CD73D7          17      CALL    CAP
       D77F                     CAP3:               ;
00120A D77F FE05             7      CP  5
00120C D781 2803            12      JR  Z,CAP4
00120E D783 FE21             7      CP  021H
001210 D785 C9              10      RET
       D786                     CAP4:
001211 D786 3EE5             7      LD  A,0E5H
001213 D788 C9              10      RET
                                
       D789                     CHDIR:
001214 D789 CD74E1          17      CALL    GETDPBD
001217 D78C 381D            12      JR  C,CHDIR2
001219 D78E DD751A          19      LD  (IX+DPB_SDIR),L
00121C D791 DD741B          19      LD  (IX+DPB_SDIR+1),H
00121F D794 1815            12      JR  CHDIR2      ;POP_IX_RET
                                
       D796                     LDDIR:
001221 D796 CD74E1          17      CALL    GETDPBD
001224 D799 DD5E1A          19      LD  E,(IX+DPB_SDIR)
001227 D79C DD561B          19      LD  D,(IX+DPB_SDIR+1)
00122A D79F 13               6      INC DE
00122B D7A0 FD730E          19      LD  (IY+14),E   ;(FCB)アクセスするディレクトリのクラスタ番号+1
00122E D7A3 FD720F          19      LD  (IY+15),D
001231 D7A6 1B               6      DEC DE
001232 D7A7 AF               4      XOR A
001233 D7A8 32A0E4          13      LD  (_DIRF),A
       D7AB                     CHDIR2:
001236 D7AB DDE1            14      POP IX
001238 D7AD C9              10      RET
                                
       D7AE                     LDDIRX:
001239 D7AE 3AA0E4          13      LD  A,(_DIRF)   ;(FCB)アクセスするディレクトリのセクタインデックス
00123C D7B1 E67F             7      AND 07FH
       D7B3                     LDDIRX1:
00123E D7B3 32BADE          13      LD  (_SECPS),A
001241 D7B6 FD5E0E          19      LD  E,(IY+14)   ;(FCB)アクセスするディレクトリのクラスタ番号+1
001244 D7B9 FD560F          19      LD  D,(IY+15)
001247 D7BC 1B               6      DEC DE
001248 D7BD CD6BD7          17      CALL    ENDCL
00124B D7C0 D496D7          17      CALL    NC,LDDIR
       D7C3                     LDDIRS:
00124E D7C3 7A               4      LD  A,D
00124F D7C4 B3               4      OR  E
001250 D7C5 32A0E4          13      LD  (_DIRF),A   ;ディレクトリか判別
001253 D7C8 C9              10      RET
                                
       D7C9                     KILL:
001254 D7C9 CD93D8          17      CALL    CHKWILDX
001257 D7CC 3834            12      JR  C,KILLW
001259 D7CE CD6FD5          17      CALL    SOPENX
       D7D1                     KILLS:
00125C D7D1 3E1F             7      LD  A,01FH
00125E D7D3 D415D8          17      CALL    NC,CHKATT
001261 D7D6 D8              11      RET C
       D7D7                     KILLSX:
001262 D7D7 36E5            10      LD  (HL),0E5H   ;DIR
001264 D7D9 CD6DD8          17      CALL    WTDB
001267 D7DC 111A00          10      LD  DE,01AH
00126A D7DF 19              11      ADD HL,DE
00126B D7E0 5E               7      LD  E,(HL)
00126C D7E1 23               6      INC HL
00126D D7E2 56               7      LD  D,(HL)
       D7E3                     KILLS1:
00126E D7E3 CD6BD7          17      CALL    ENDCL
001271 D7E6 D0              11      RET NC      ;CF=0
001272 D7E7 21FEFF          10      LD  HL,0-2
001275 D7EA 19              11      ADD HL,DE
001276 D7EB D0              11      RET NC      ;DE= 0 or 1
001277 D7EC D5              11      PUSH    DE
001278 D7ED CDF7E4          17      CALL    _GNCL
00127B D7F0 ED53FEE5        20      LD  (_CLPS),DE
00127F D7F4 D1              10      POP DE
001280 D7F5 210000          10      LD  HL,0
001283 D7F8 D4FAE4          17      CALL    NC,_SNCL
001286 D7FB D8              11      RET C
001287 D7FC ED5BFEE5        20      LD  DE,(_CLPS)  ;FAT
00128B D800 18E1            12      JR  KILLS1
                                
       D802                     KILLW:
00128D D802 CD9ED5          17      CALL    SOPEN
       D805                     KILLW1:
001290 D805 380B            12      JR  C,KILLW2
001292 D807 CD3DD6          17      CALL    SOPENE2
001295 D80A CDD1D7          17      CALL    KILLS
001298 D80D CD02D6          17      CALL    NOPEN
00129B D810 18F3            12      JR  KILLW1
       D812                     KILLW2:
00129D D812 C8              11      RET Z
00129E D813 3F               4      CCF
00129F D814 C9              10      RET
                                
       D815                     CHKATT:
0012A0 D815 E5              11      PUSH    HL
0012A1 D816 110B00          10      LD  DE,00BH
0012A4 D819 19              11      ADD HL,DE
0012A5 D81A A6               7      AND (HL)
0012A6 D81B E1              10      POP HL
0012A7 D81C C8              11      RET Z
0012A8 D81D 37               4      SCF
0012A9 D81E C9              10      RET
                                
       D81F                     NAME:
0012AA D81F CD93D8          17      CALL    CHKWILDX
0012AD D822 D8              11      RET C
0012AE D823 110400          10      LD  DE,4
0012B1 D826 19              11      ADD HL,DE
0012B2 D827 223CD8          16      LD  (NAMEP),HL
0012B5 D82A 23               6      INC HL
0012B6 D82B CD97D8          17      CALL    CHKWILD
0012B9 D82E D8              11      RET C
                                
0012BA D82F CD6FD5          17      CALL    SOPENX
0012BD D832 3E0F             7      LD  A,00FH
0012BF D834 D415D8          17      CALL    NC,CHKATT
0012C2 D837 D8              11      RET C
                                
0012C3 D838 FDE5            15      PUSH    IY
0012C5 D83A FD210000        14      LD  IY,0        ;自己書き換え
       D83C                     NAMEP   EQU $-2
0012C9 D83E CD6FD5          17      CALL    SOPENX
0012CC D841 FDE3            23      EX  (SP),IY
0012CE D843 3F               4      CCF
0012CF D844 D49ED5          17      CALL    NC,SOPEN
0012D2 D847 EB               4      EX  DE,HL
0012D3 D848 E1              10      POP HL
0012D4 D849 D8              11      RET C
                                
       D84A                     SETNAME:
0012D5 D84A 01000B          10      LD  BC,11*256
0012D8 D84D 23               6      INC HL
0012D9 D84E 7E               7      LD  A,(HL)
0012DA D84F FEE5             7      CP  0E5H
0012DC D851 2004            12      JR  NZ,SNAME1
0012DE D853 3E05             7      LD  A,5
0012E0 D855 180E            12      JR  SNAME3
       D857                     SNAME1:
0012E2 D857 7E               7      LD  A,(HL)
0012E3 D858 0C               4      INC C
0012E4 D859 0D               4      DEC C
0012E5 D85A 2009            12      JR  NZ,SNAME3
0012E7 D85C CD73D7          17      CALL    CAP
0012EA D85F FEA0             7      CP  0A0H
0012EC D861 2002            12      JR  NZ,SNAME3
0012EE D863 3E20             7      LD  A,020H
       D865                     SNAME3:
0012F0 D865 12               7      LD  (DE),A
0012F1 D866 7E               7      LD  A,(HL)
0012F2 D867 23               6      INC HL
0012F3 D868 CD80D8          17      CALL    FKAN
0012F6 D86B 10EA            13      DJNZ    SNAME1
       D86D                     WTDB:
0012F8 D86D 3EFF             7      LD  A,0FFH
0012FA D86F 3239E4          13      LD  (SFILE),A
       D872                     SWTDBF:
0012FD D872 3E01             7      LD  A,1
0012FF D874 32A4E4          13      LD  (_WTDBF),A
001302 D877 AF               4      XOR A
001303 D878 C9              10      RET
                                
       D879                     FKANC:
001304 D879 CB41             8      BIT 0,C
001306 D87B CC7CD7          17      CALL    Z,CAP2
001309 D87E 1801            12      JR  FKANX
       D880                     FKAN:           ;漢字チェック
00130B D880 13               6      INC DE
       D881                     FKANX:
00130C D881 CB41             8      BIT 0,C
00130E D883 CB81             8      RES 0,C
001310 D885 C0              11      RET NZ
001311 D886 FE80             7      CP  080H
001313 D888 D8              11      RET C
001314 D889 FEA0             7      CP  0A0H
001316 D88B 3803            12      JR  C,FKAN1
001318 D88D FEE0             7      CP  0E0H
00131A D88F D8              11      RET C
       D890                     FKAN1:
00131B D890 0C               4      INC C
00131C D891 A7               4      AND A
00131D D892 C9              10      RET
                                
       D893                     CHKWILDX:
00131E D893 FDE5            15      PUSH    IY
001320 D895 E1              10      POP HL
001321 D896 23               6      INC HL
       D897                     CHKWILD:
001322 D897 060B             7      LD  B,11
001324 D899 3E3F             7      LD  A,'?'
       D89B                     CHKWIL1:
001326 D89B BE               7      CP  (HL)
001327 D89C 23               6      INC HL
001328 D89D 37               4      SCF
001329 D89E C8              11      RET Z
00132A D89F 10FA            13      DJNZ    CHKWIL1
00132C D8A1 AF               4      XOR A
00132D D8A2 C9              10      RET
                                
       D8A3                     SDIRENT:        ;IY=FCB HL=DIR
00132E D8A3 D5              11      PUSH    DE
00132F D8A4 E5              11      PUSH    HL
001330 D8A5 FDE5            15      PUSH    IY
001332 D8A7 D1              10      POP DE
001333 D8A8 EB               4      EX  DE,HL
001334 D8A9 CD4AD8          17      CALL    SETNAME
                                ;               Attribute
001337 D8AC FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
00133A D8AF 12               7      LD  (DE),A
00133B D8B0 13               6      INC DE
                                ;               Reserved
00133C D8B1 AF               4      XOR A
00133D D8B2 060A             7      LD  B,10
       D8B4                     SDE1:
00133F D8B4 12               7      LD  (DE),A
001340 D8B5 13               6      INC DE
001341 D8B6 10FC            13      DJNZ    SDE1
                                                    ;(FCB)更新時刻
001343 D8B8 21E4E5          10      LD  HL,SDDATA       ;(FCB)更新年月日
001346 D8BB 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       D8BD                     SDLOOP:                 ;(FCB)ファイルのサイズ(バイト単位)
001348 D8BD 7E               7      LD  A,(HL)
001349 D8BE 23               6      INC HL
00134A D8BF 32C4D8          13      LD  (SDPAT),A
00134D D8C2 FD7E00          19      LD  A,(IY+0)    ;LD A,(IY+A)
       D8C4                     SDPAT   EQU $-1
001350 D8C5 12               7      LD  (DE),A
001351 D8C6 13               6      INC DE
001352 D8C7 10F4            13      DJNZ    SDLOOP
                                
001354 D8C9 AF               4      XOR A
001355 D8CA E1              10      POP HL
001356 D8CB D1              10      POP DE
001357 D8CC C9              10      RET
                                
       D8CD                     WOPEN:
001358 D8CD FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
00135B D8D0 E61F             7      AND 01FH
00135D D8D2 37               4      SCF
00135E D8D3 C0              11      RET NZ
00135F D8D4 FD361CFE        19      LD  (IY+28),0FEH    ;(FCB)オープンモード
       D8D8                     TOPEN2:
001363 D8D8 AF               4      XOR A
       D8D9                     TOPEN:              ;Initializes the time stamp
001364 D8D9 FD3617FF        19      LD  (IY+23),0FFH    ;(FCB)更新時刻
001368 D8DD C9              10      RET
                                
       D8DE                     WRDFX:
001369 D8DE 3A52D7          13      LD  A,(SPCPAT)  ;1クラスタの論理セクタ
       D8E1                     L_WRFX:
00136C D8E1 1F               4      RRA         ;->CF
00136D D8E2 3806            12      JR  C,E_WRFX
00136F D8E4 CB39             8      SRL C
001371 D8E6 CB1C             8      RR  H       ;CH=CH/2
001373 D8E8 18F7            12      JR  L_WRFX
       D8EA                     E_WRFX:
001375 D8EA 41               4      LD  B,C
001376 D8EB 4C               4      LD  C,H
001377 D8EC 03               6      INC BC
001378 D8ED 3E37             7      LD  A,037H      ;SCF
00137A D8EF 324ADD          13      LD  (DRDN1),A
                                
       D8F2                     WRDF:               ;BCクラスタ分FATを確保する
00137D D8F2 110200          10      LD  DE,2
001380 D8F5 AF               4      XOR A
001381 D8F6 32BADE          13      LD  (_SECPS),A
       D8F9                     WRDF1:
001384 D8F9 C5              11      PUSH    BC
001385 D8FA D5              11      PUSH    DE
001386 D8FB CDF7E4          17      CALL    _GNCL
001389 D8FE 381C            12      JR  C,WRDF3
00138B D900 7A               4      LD  A,D     ;空いているかチェック
00138C D901 B3               4      OR  E
00138D D902 202A            12      JR  NZ,WRDF4
00138F D904 E1              10      POP HL      ;HL=空いているクラスタ
001390 D905 E5              11      PUSH    HL
001391 D906 ED5BFEE5        20      LD  DE,(_CLPS)  ;DE=元の(_CLPS)
001395 D90A 22FEE5          16      LD  (_CLPS),HL
001398 D90D 7A               4      LD  A,D     ;元の(_CLPS)が 0 か?
001399 D90E B3               4      OR  E
00139A D90F 2008            12      JR  NZ,WRDF2
00139C D911 FD751A          19      LD  (IY+26),L   ;(FCB)ファイルの先頭クラスタ
00139F D914 FD741B          19      LD  (IY+27),H   ;元が空の場合はFCBにクラスタをセットする
0013A2 D917 1803            12      JR  WRDF3
       D919                     WRDF2:
0013A4 D919 CDFAE4          17      CALL    _SNCL
       D91C                     WRDF3:
0013A7 D91C D1              10      POP DE
0013A8 D91D C1              10      POP BC
0013A9 D91E D8              11      RET C
0013AA D91F 0B               6      DEC BC
0013AB D920 78               4      LD  A,B
0013AC D921 B1               4      OR  C
0013AD D922 200C            12      JR  NZ,WRDF5    ;ここでループカウンタチェック
0013AF D924 ED5BFEE5        20      LD  DE,(_CLPS)
0013B3 D928 21FFFF          10      LD  HL,0FFFFH   ;FATエントリ終了(EOCマーク)
0013B6 D92B C3FAE4          10      JP  _SNCL
                                
       D92E                     WRDF4:              ;DEクラスタが空じゃないので次に移動する
0013B9 D92E D1              10      POP DE
0013BA D92F C1              10      POP BC
       D930                     WRDF5:
0013BB D930 13               6      INC DE
0013BC D931 CD6BD7          17      CALL    ENDCL
0013BF D934 38C3            12      JR  C,WRDF1
0013C1 D936 37               4      SCF
0013C2 D937 C9              10      RET
                                
       D938                     RWXR:
0013C3 D938 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       D93B                     L_RWX:
0013C6 D93B 1F               4      RRA     ;->CF
0013C7 D93C 3808            12      JR  C,E_RWX
0013C9 D93E CB38             8      SRL B   ;BCH=BCH/2
0013CB D940 CB19             8      RR  C   ;
0013CD D942 CB1C             8      RR  H   ;
0013CF D944 18F5            12      JR  L_RWX
       D946                     E_RWX:
0013D1 D946 FD5E1A          19      LD  E,(IY+26)   ;(FCB)ファイルの先頭クラスタ
0013D4 D949 FD561B          19      LD  D,(IY+27)
0013D7 D94C AF               4      XOR A
0013D8 D94D 32BADE          13      LD  (_SECPS),A
       D950                     RWX1:
0013DB D950 ED53FEE5        20      LD  (_CLPS),DE
0013DF D954 7A               4      LD  A,D
0013E0 D955 B3               4      OR  E
0013E1 D956 2813            12      JR  Z,SCF_RET   ;RET DE==0 => CF=1
                                
0013E3 D958 78               4      LD  A,B
0013E4 D959 B1               4      OR  C
0013E5 D95A B4               4      OR  H
0013E6 D95B C8              11      RET Z       ;RET BCH==0 => CF=0
                                
0013E7 D95C CDC2DE          17      CALL    GNCLX
0013EA D95F D8              11      RET C
0013EB D960 7C               4      LD  A,H     ;
0013EC D961 25               4      DEC H       ;
0013ED D962 B7               4      OR  A       ;DEC BCH
0013EE D963 2001            12      JR  NZ,RWX2     ;
0013F0 D965 0B               6      DEC BC      ;
       D966                     RWX2:
0013F1 D966 CD6BD7          17      CALL    ENDCL
0013F4 D969 38E5            12      JR  C,RWX1
       D96B                     SCF_RET:
0013F6 D96B 37               4      SCF
0013F7 D96C C9              10      RET
                                
       D96D                     DSKF:
0013F8 D96D 110000          10      LD  DE,0
       D96E                     MAXCLP  EQU $-2
0013FB D970 2AACE4          16      LD  HL,(_FAKEFREE)
0013FE D973 7C               4      LD  A,H
0013FF D974 B5               4      OR  L
001400 D975 2803            12      JR  Z,DSKF1
001402 D977 110100          10      LD  DE,1
       D97A                     DSKF1:
001405 D97A D5              11      PUSH    DE
001406 D97B CDF7E4          17      CALL    _GNCL
001409 D97E 380C            12      JR  C,POPSCF
00140B D980 7A               4      LD  A,D
00140C D981 B3               4      OR  E
00140D D982 2001            12      JR  NZ,DSKF2
00140F D984 23               6      INC HL
       D985                     DSKF2:
001410 D985 D1              10      POP DE
001411 D986 1B               6      DEC DE
001412 D987 7A               4      LD  A,D
001413 D988 B3               4      OR  E
001414 D989 20EF            12      JR  NZ,DSKF1
001416 D98B C9              10      RET
                                
       D98C                     POPSCF:
001417 D98C F1              10      POP AF
001418 D98D 37               4      SCF
001419 D98E C9              10      RET
                                
       D98F                     SETTMS:
00141A D98F FD7E17          19      LD  A,(IY+23)   ;(FCB)ファイルを最後に変更した時刻
00141D D992 3C               4      INC A
00141E D993 C0              11      RET NZ      ;ファイルが更新されていない
       D994                     SETTMSX:            ;FCBに日付時刻をセットする
00141F D994 CD6CD1          17      CALL    _SYS2C      ;(BDOS)時刻の獲得
                                                ;H←時  L←分  D←秒
001422 D997 CB25             8      SLA L       ;   *2
001424 D999 CB25             8      SLA L       ;   *4
001426 D99B 29              11      ADD HL,HL       ;*2 *8
001427 D99C 29              11      ADD HL,HL       ;*4 *16
001428 D99D 29              11      ADD HL,HL       ;*8 *32
001429 D99E 7A               4      LD  A,D
00142A D99F 0F               4      RRCA            ;bit.0->7->->->0->C
00142B D9A0 E61F             7      AND 01FH
00142D D9A2 B5               4      OR  L
00142E D9A3 FD7716          19      LD  (IY+22),A   ;(FCB)ファイルを最後に変更した時刻
001431 D9A6 FD7417          19      LD  (IY+23),H
                                
001434 D9A9 CD66D1          17      CALL    _SYS2A      ;(BDOS)日付の獲得
                                                ;HL←年  D←月  E←日
001437 D9AC 0144F8          10      LD  BC,0-1980
00143A D9AF 09              11      ADD HL,BC
00143B D9B0 65               4      LD  H,L
                                
00143C D9B1 7A               4      LD  A,D
00143D D9B2 87               4      ADD A,A     ;*2
00143E D9B3 87               4      ADD A,A     ;*4
00143F D9B4 87               4      ADD A,A     ;*8
001440 D9B5 87               4      ADD A,A     ;*16
001441 D9B6 6F               4      LD  L,A
001442 D9B7 29              11      ADD HL,HL       ;*32
001443 D9B8 7D               4      LD  A,L
001444 D9B9 B3               4      OR  E
001445 D9BA FD7714          19      LD  (IY+20),A   ;(FCB)ファイルを最後に変更した日付
001448 D9BD FD7415          19      LD  (IY+21),H
00144B D9C0 C9              10      RET
                                
       D9C1                     PUSHRR:
00144C D9C1 3259DA          13      LD  (SETSEQ_SWC_RND),A
00144F D9C4 226BDA          16      LD  (SETSEQ_SWC_SEQ_RR),HL
001452 D9C7 CDE7D9          17      CALL    GET_RR_AHL
001455 D9CA 220FE4          16      LD  (RR_BUF_HL),HL
001458 D9CD 3211E4          13      LD  (RR_BUF_A),A
00145B D9D0 C9              10      RET
                                
       D9D1                     GET_CPM_R_SIZE:     ;バイト単位からCP/Mのレコード単位を求める（1レコード=128バイト）
00145C D9D1 87               4      ADD A,A     ;in BHLA => out AHL
00145D D9D2 ED6A            15      ADC HL,HL
00145F D9D4 CB18             8      RR  B
001461 D9D6 B7               4      OR  A
001462 D9D7 78               4      LD  A,B     ;ここでフラグは変化しない
001463 D9D8 C8              11      RET Z
001464 D9D9 2C               4      INC L       ;INC AHL
001465 D9DA C0              11      RET NZ      ;
001466 D9DB 24               4      INC H       ;
001467 D9DC C0              11      RET NZ      ;
001468 D9DD 3C               4      INC A       ;
001469 D9DE C9              10      RET
                                
       D9DF                     INIT_RND:
00146A D9DF 3ECD             7      LD  A,0CDH      ;CALL ????
00146C D9E1 212EDA          10      LD  HL,POPRR
00146F D9E4 CDC1D9          17      CALL    PUSHRR
       D9E7                     GET_RR_AHL:
001472 D9E7 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001475 D9EA FD6622          19      LD  H,(IY+34)   ;
001478 D9ED FD7E23          19      LD  A,(IY+35)   ;
00147B D9F0 C9              10      RET
       D9F1                     SET_RR_AHL:
00147C D9F1 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
00147F D9F4 FD7422          19      LD  (IY+34),H
001482 D9F7 FD7723          19      LD  (IY+35),A
001485 D9FA C9              10      RET
       D9FB                     INIT_SEQ:
001486 D9FB 3E01             7      LD  A,1     ;LD BC,????
001488 D9FD 212BDA          10      LD  HL,SETSEQ
00148B DA00 CDC1D9          17      CALL    PUSHRR
       DA03                     GETSEQ:
00148E DA03 FD6E20          19      LD  L,(IY+32)   ;(FCB)カレントレコード
001491 DA06 FD660C          19      LD  H,(IY+12)   ;(FCB)カレントブロック
001494 DA09 AF               4      XOR A
                                
001495 DA0A CB25             8      SLA L   ;L=L*2
                                
001497 DA0C CB3C             8      SRL H   ;HL=HL/2
001499 DA0E CB1D             8      RR  L   ;
00149B DA10 C9              10      RET
                                
       DA11                     SETSEQ1:
00149C DA11 F5              11      PUSH    AF
00149D DA12 E5              11      PUSH    HL      ;AHL=Random record
00149E DA13 CDE7D9          17      CALL    GET_RR_AHL
0014A1 DA16 47               4      LD  B,A     ;AHL→HLA
0014A2 DA17 7D               4      LD  A,L     ;(IY+33)(FCB)ランダムレコード
0014A3 DA18 6C               4      LD  L,H     ;(IY+34)
0014A4 DA19 60               4      LD  H,B     ;(IY+35)
0014A5 DA1A 0600             7      LD  B,0
                                
0014A7 DA1C CDD1D9          17      CALL    GET_CPM_R_SIZE
                                
0014AA DA1F 29              11      ADD HL,HL
0014AB DA20 CB3D             8      SRL L       ;L=L/2
0014AD DA22 FD7520          19      LD  (IY+32),L   ;(FCB)カレントレコード
0014B0 DA25 FD740C          19      LD  (IY+12),H   ;(FCB)カレントブロック
0014B3 DA28 E1              10      POP HL
0014B4 DA29 F1              10      POP AF
0014B5 DA2A C9              10      RET
       DA2B                     SETSEQ:
0014B6 DA2B CD11DA          17      CALL    SETSEQ1
       DA2E                     POPRR:
0014B9 DA2E F5              11      PUSH    AF
0014BA DA2F E5              11      PUSH    HL
0014BB DA30 2A0FE4          16      LD  HL,(RR_BUF_HL)
0014BE DA33 3A11E4          13      LD  A,(RR_BUF_A)
0014C1 DA36 CDF1D9          17      CALL    SET_RR_AHL
0014C4 DA39 E1              10      POP HL
0014C5 DA3A F1              10      POP AF
0014C6 DA3B C9              10      RET
                                
       DA3C                     RB_WRITE:
0014C7 DA3C C5              11      PUSH    BC
0014C8 DA3D ED4B4CE5        20      LD  BC,(STABLE+2*026H)  ;(BDOS)ランダムブロック書き込み
0014CC DA41 1805            12      JR  RBRW
       DA43                     RB_READ:
0014CE DA43 C5              11      PUSH    BC
0014CF DA44 ED4B4EE5        20      LD  BC,(STABLE+2*027H)  ;(BDOS)ランダムブロック読み込み
       DA48                     RBRW:
0014D3 DA48 1F               4      RRA     ;AHL = AHL*128
0014D4 DA49 7C               4      LD  A,H ;AHL = AHL0/2
0014D5 DA4A 1F               4      RRA     ;A
0014D6 DA4B 65               4      LD  H,L ;
0014D7 DA4C CB1C             8      RR  H   ;H
0014D9 DA4E 2E00             7      LD  L,0 ;
0014DB DA50 CB1D             8      RR  L   ;L
0014DD DA52 CDF1D9          17      CALL    SET_RR_AHL
0014E0 DA55 218000          10      LD  HL,128
0014E3 DA58 C5              11      PUSH    BC
       DA59                     SETSEQ_SWC_RND:
0014E4 DA59 CD11DA          17      CALL    SETSEQ1
0014E7 DA5C C1              10      POP BC
0014E8 DA5D FDCB20FE        23      SET 7,(IY+32)   ;(FCB)カレントレコード
0014EC DA61 FDE5            15      PUSH    IY
0014EE DA63 D1              10      POP DE
0014EF DA64 D5              11      PUSH    DE
0014F0 DA65 CD73DA          17      CALL    JP_BC
0014F3 DA68 FDE1            14      POP IY
0014F5 DA6A CD2BDA          17      CALL    SETSEQ
       DA6B                     SETSEQ_SWC_SEQ_RR   EQU $-2
0014F8 DA6D FDCB20BE        23      RES 7,(IY+32)   ;(FCB)カレントレコード
                                
0014FC DA71 C1              10      POP BC
0014FD DA72 C9              10      RET
       DA73                     JP_BC:
0014FE DA73 C5              11      PUSH    BC
0014FF DA74 C9              10      RET
                                
       D5FC                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       D5FC                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       D5FC                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       D5FC                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       D5FC                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:LDFILE.ASM:SHIFT_JIS]
                                    INCLUDE "LDFILE2.ASM"
                                
                                ;   LSX-Dodgers FILE2
                                
                                                ;Write random block
       DA75                     _SYS26:     ;(BDOS)ランダムブロック書き込み
001500 DA75 AF               4      XOR A
001501 DA76 324ADD          13      LD  (DRDN1),A   ;NOP
001504 DA79 229ADC          16      LD  (RBSIZE),HL ;HL←書き込むレコード数
001507 DA7C 225DE4          16      LD  (LEFTX),HL
00150A DA7F CD45D5          17      CALL    SETDRV
                                
00150D DA82 CDF2DB          17      CALL    RBX0
001510 DA85 DA12DB          10      JP  C,RBWERR
001513 DA88 CDCDD8          17      CALL    WOPEN
001516 DA8B DA12DB          10      JP  C,RBWERR
001519 DA8E 7C               4      LD  A,H
00151A DA8F B5               4      OR  L
00151B DA90 CA0BDB          10      JP  Z,RBW1
                                
00151E DA93 2B               6      DEC HL
                                
00151F DA94 CDB0DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
001522 DA97 19              11      ADD HL,DE       ;BCHL=HL+BCDE
001523 DA98 3001            12      JR  NC,S26X1    ;
001525 DA9A 03               6      INC BC      ;
       DA9B                     S26X1:
001526 DA9B CD38D9          17      CALL    RWXR
001529 DA9E DCDED8          17      CALL    C,WRDFX
00152C DAA1 DA12DB          10      JP  C,RBWERR
                                
00152F DAA4 CD21DC          17      CALL    RBX2
001532 DAA7 281A            12      JR  Z,RBWB      ;NZ=セクタ以下の端数がある
001534 DAA9 CD40DC          17      CALL    RBXA
001537 DAAC 3864            12      JR  C,RBWERR
001539 DAAE EB               4      EX  DE,HL
00153A DAAF C5              11      PUSH    BC
00153B DAB0 EDB0                    LDIR
00153D DAB2 225FE4          16      LD  (DTAX),HL
                                
001540 DAB5 CD72D8          17      CALL    SWTDBF      ;バッファデータは更新された
                                
001543 DAB8 2A5DE4          16      LD  HL,(LEFTX)
001546 DABB D1              10      POP DE
001547 DABC ED52            15      SBC HL,DE
001549 DABE 225DE4          16      LD  (LEFTX),HL
00154C DAC1 2831            12      JR  Z,RBWEND
                                
       DAC3                     RBWB:
00154E DAC3 CD75DC          17      CALL    RBXB
001551 DAC6 2814            12      JR  Z,RBWC
       DAC8                     RBWB1:
001553 DAC8 C5              11      PUSH    BC
001554 DAC9 D5              11      PUSH    DE
001555 DACA CD4ED7          17      CALL    CLUSTX
001558 DACD CDC4DC          17      CALL    DWTC
00155B DAD0 D1              10      POP DE
00155C DAD1 C1              10      POP BC
00155D DAD2 D4C2DE          17      CALL    NC,GNCLX
001560 DAD5 383B            12      JR  C,RBWERR
001562 DAD7 10EF            13      DJNZ    RBWB1
001564 DAD9 CD14DD          17      CALL    DRW_FLUSH
       DADC                     RBWC:
001567 DADC CD8DDC          17      CALL    RBXC
00156A DADF 2813            12      JR  Z,RBWEND
00156C DAE1 C5              11      PUSH    BC
00156D DAE2 CD4ED7          17      CALL    CLUSTX
001570 DAE5 CD49DD          17      CALL    DRDN
001573 DAE8 C1              10      POP BC
001574 DAE9 3827            12      JR  C,RBWERR
001576 DAEB ED5B7EE5        20      LD  DE,(_DTBUF)
00157A DAEF EDB0                    LDIR
00157C DAF1 CD72D8          17      CALL    SWTDBF      ;バッファデータは更新された
       DAF4                     RBWEND:
00157F DAF4 CD99DC          17      CALL    RBXEND
                                
001582 DAF7 CD01DC          17      CALL    RBX1
001585 DAFA 300F            12      JR  NC,RBW1     ;ランダムレコードの方が大きい場合はサイズを合わせる
001587 DAFC CDB0DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
00158A DAFF FD7310          19      LD  (IY+16),E   ;ファイルのサイズ(バイト単位)
00158D DB02 FD7211          19      LD  (IY+17),D   ;
001590 DB05 FD7112          19      LD  (IY+18),C   ;
001593 DB08 FD7013          19      LD  (IY+19),B   ;
       DB0B                     RBW1:
001596 DB0B FDE1            14      POP IY
001598 DB0D C1              10      POP BC
001599 DB0E D1              10      POP DE
00159A DB0F E1              10      POP HL
       DB10                     DD_NUL:
00159B DB10 AF               4      XOR A
       DB11                     DRDF0:
       DB11                     DWTF0:
00159C DB11 C9              10      RET
                                
       DB12                     RBWERR:
00159D DB12 FDE5            15      PUSH    IY
00159F DB14 D1              10      POP DE
0015A0 DB15 2A20E5          16      LD  HL,(STABLE+2*010H)
0015A3 DB18 CD0F00          17      CALL    JP_HL
       DB1B                     RBRERR1:
0015A6 DB1B 3E01             7      LD  A,001H
       DB1D                     RBRERR2:
0015A8 DB1D FDE1            14      POP IY
0015AA DB1F C1              10      POP BC
0015AB DB20 D1              10      POP DE
0015AC DB21 E1              10      POP HL
0015AD DB22 37               4      SCF
0015AE DB23 210000          10      LD  HL,0
0015B1 DB26 C9              10      RET
                                
       DB27                     RBRERR:
0015B2 DB27 3EFF             7      LD  A,0FFH
0015B4 DB29 18F2            12      JR  RBRERR2
                                
       DB2B                     RBRFL:
0015B6 DB2B 3E00             7  RBRFLP: LD  A,000H
0015B8 DB2D FE0D             7      CP  00DH
0015BA DB2F 2005            12      JR  NZ,RBRFL1
0015BC DB31 D5              11      PUSH    DE
0015BD DB32 1E0A             7      LD  E,00AH
0015BF DB34 1805            12      JR  RBRFL2
       DB36                     RBRFL1:
0015C1 DB36 D5              11      PUSH    DE
0015C2 DB37 CD09E4          17      CALL    _SYS07
0015C5 DB3A 5F               4      LD  E,A
       DB3B                     RBRFL2:
0015C6 DB3B CDCDE4          17      CALL    _PRINT
0015C9 DB3E 7B               4      LD  A,E
0015CA DB3F D1              10      POP DE
0015CB DB40 322CDB          13      LD  (RBRFLP+1),A
0015CE DB43 C9              10      RET
       DB44                     DDX:
0015CF DB44 FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
0015D2 DB47 CD73D7          17      CALL    CAP
0015D5 DB4A FE41             7      CP  'A'
0015D7 DB4C C9              10      RET
                                
                                                ;Read random block
       DB4D                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0015D8 DB4D 225DE4          16      LD  (LEFTX),HL
0015DB DB50 CD45D5          17      CALL    SETDRV
                                
0015DE DB53 FDCB0D66        20      BIT 4,(IY+13)   ;(FCB)属性(アトリビュート)
0015E2 DB57 C2E0DB          10      JP  NZ,RBRDIR   ;ディレクトリ
0015E5 DB5A CDF2DB          17      CALL    RBX0
0015E8 DB5D DA27DB          10      JP  C,RBRERR
0015EB DB60 CD01DC          17      CALL    RBX1
0015EE DB63 D419DC          17      CALL    NC,RBX1R
0015F1 DB66 DA1BDB          10      JP  C,RBRERR1
0015F4 DB69 EB               4      EX  DE,HL
0015F5 DB6A ED52            15      SBC HL,DE       ;CP 00HL,BCDE
0015F7 DB6C 19              11      ADD HL,DE
0015F8 DB6D 79               4      LD  A,C
0015F9 DB6E DE00             7      SBC A,0
0015FB DB70 78               4      LD  A,B
0015FC DB71 DE00             7      SBC A,0
0015FE DB73 3801            12      JR  C,RBR1
001600 DB75 EB               4      EX  DE,HL
       DB76                     RBR1:
001601 DB76 9F               4      SBC A,A
001602 DB77 E601             7      AND 1
001604 DB79 32DEDB          13      LD  (RBRAP+1),A
                                
001607 DB7C 7C               4      LD  A,H
001608 DB7D B5               4      OR  L
001609 DB7E 2857            12      JR  Z,RBREND0
                                
00160B DB80 229ADC          16      LD  (RBSIZE),HL ;HL←読み込むレコード数
00160E DB83 225DE4          16      LD  (LEFTX),HL
                                
001611 DB86 CD21DC          17      CALL    RBX2
001614 DB89 2819            12      JR  Z,RBRB
001616 DB8B CD40DC          17      CALL    RBXA
001619 DB8E DA27DB          10      JP  C,RBRERR
00161C DB91 C5              11      PUSH    BC
00161D DB92 EDB0                    LDIR
00161F DB94 ED535FE4        20      LD  (DTAX),DE
001623 DB98 2A5DE4          16      LD  HL,(LEFTX)
001626 DB9B D1              10      POP DE
001627 DB9C A7               4      AND A
001628 DB9D ED52            15      SBC HL,DE
00162A DB9F 225DE4          16      LD  (LEFTX),HL
00162D DBA2 2830            12      JR  Z,RBREND
                                
       DBA4                     RBRB:
00162F DBA4 CD75DC          17      CALL    RBXB
001632 DBA7 2815            12      JR  Z,RBRC
       DBA9                     RBRB1:
001634 DBA9 C5              11      PUSH    BC
001635 DBAA D5              11      PUSH    DE
001636 DBAB CD4ED7          17      CALL    CLUSTX
001639 DBAE CDCADC          17      CALL    DRDC
00163C DBB1 D1              10      POP DE
00163D DBB2 C1              10      POP BC
00163E DBB3 D4C2DE          17      CALL    NC,GNCLX
001641 DBB6 DA27DB          10      JP  C,RBRERR
001644 DBB9 10EE            13      DJNZ    RBRB1
001646 DBBB CD14DD          17      CALL    DRW_FLUSH
       DBBE                     RBRC:
001649 DBBE CD8DDC          17      CALL    RBXC
00164C DBC1 2811            12      JR  Z,RBREND
00164E DBC3 C5              11      PUSH    BC
00164F DBC4 CD4ED7          17      CALL    CLUSTX
001652 DBC7 CD2DDD          17      CALL    DRDX
001655 DBCA C1              10      POP BC
001656 DBCB DA27DB          10      JP  C,RBRERR
001659 DBCE EB               4      EX  DE,HL
00165A DBCF 2A7EE5          16      LD  HL,(_DTBUF)
00165D DBD2 EDB0                    LDIR
       DBD4                     RBREND:
00165F DBD4 CD99DC          17      CALL    RBXEND
       DBD7                     RBREND0:
001662 DBD7 FDE1            14      POP IY
001664 DBD9 C1              10      POP BC
001665 DBDA D1              10      POP DE
001666 DBDB F1              10      POP AF  ;(HL)
001667 DBDC AF               4      XOR A
001668 DBDD 3E00             7  RBRAP:  LD  A,000H
00166A DBDF C9              10      RET
                                
       DBE0                     RBRDIR:
00166B DBE0 FD6E1A          19      LD  L,(IY+26)   ;(FCB)ファイルの先頭クラスタ
00166E DBE3 FD661B          19      LD  H,(IY+27)
001671 DBE6 CD89D7          17      CALL    CHDIR
001674 DBE9 AF               4      XOR A
001675 DBEA 67               4      LD  H,A
001676 DBEB 6F               4      LD  L,A
001677 DBEC 3C               4      INC A
001678 DBED 32DEDB          13      LD  (RBRAP+1),A
00167B DBF0 18E5            12      JR  RBREND0
                                
       DBF2                     RBX0:
00167D DBF2 2A8AE4          16      LD  HL,(_DTA)
001680 DBF5 225FE4          16      LD  (DTAX),HL
001683 DBF8 2A5DE4          16      LD  HL,(LEFTX)
001686 DBFB FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
001689 DBFE D6FD             7      SUB 0FDH
00168B DC00 C9              10      RET
                                
       DC01                     RBX1:               ;ファイルサイズとランダムレコードを比べる
00168C DC01 E5              11      PUSH    HL      ;Record byte
                                                ;AHL=File size
00168D DC02 FD6E10          19      LD  L,(IY+16)   ;ファイルのサイズ(バイト単位)
001690 DC05 FD6611          19      LD  H,(IY+17)   ;
001693 DC08 FD7E12          19      LD  A,(IY+18)   ;
                                
001696 DC0B CDB0DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
001699 DC0E A7               4      AND A
00169A DC0F ED52            15      SBC HL,DE
00169C DC11 99               4      SBC A,C
00169D DC12 4F               4      LD  C,A
00169E DC13 FD7E13          19      LD  A,(IY+19)   ;ファイルのサイズ
0016A1 DC16 98               4      SBC A,B
0016A2 DC17 D1              10      POP DE
0016A3 DC18 C9              10      RET
       DC19                     RBX1R:
0016A4 DC19 47               4      LD  B,A
0016A5 DC1A B1               4      OR  C
0016A6 DC1B EB               4      EX  DE,HL   ;BCDE=File byte HL=Record byte
0016A7 DC1C B2               4      OR  D
0016A8 DC1D B3               4      OR  E
0016A9 DC1E C0              11      RET NZ
0016AA DC1F 37               4      SCF
0016AB DC20 C9              10      RET
                                
       DC21                     RBX2:               ;Cluster settings
0016AC DC21 FD6622          19      LD  H,(IY+34)   ;(+33)(FCB)ランダムレコード
0016AF DC24 FD4E23          19      LD  C,(IY+35)
0016B2 DC27 0600             7      LD  B,0
0016B4 DC29 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
0016B8 DC2D 2003            12      JR  NZ,RBX3
0016BA DC2F FD4624          19      LD  B,(IY+36)
       DC32                     RBX3:
0016BD DC32 CD38D9          17      CALL    RWXR
0016C0 DC35 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
0016C3 DC38 3D               4      DEC A
0016C4 DC39 FDA622          19      AND (IY+34)
0016C7 DC3C FDB621          19      OR  (IY+33)
0016CA DC3F C9              10      RET
                                
       DC40                     RBXA:
0016CB DC40 C5              11      PUSH    BC
0016CC DC41 D5              11      PUSH    DE
0016CD DC42 CD4ED7          17      CALL    CLUSTX
0016D0 DC45 CD2DDD          17      CALL    DRDX
0016D3 DC48 D1              10      POP DE
0016D4 DC49 C1              10      POP BC
0016D5 DC4A D4C2DE          17      CALL    NC,GNCLX
0016D8 DC4D D8              11      RET C
0016D9 DC4E ED53FEE5        20      LD  (_CLPS),DE
                                
0016DD DC52 FD4E21          19      LD  C,(IY+33)   ;(FCB)ランダムレコード
0016E0 DC55 210004          10  SECSZ:  LD  HL,0400H    ;自己書き換え 1024=0400H / 512=0200H ここに1セクタのサイズが格納される
0016E3 DC58 7C               4      LD  A,H
0016E4 DC59 3D               4      DEC A       ;1024=3 / 512=1
0016E5 DC5A FDA622          19      AND (IY+34)     ;(FCB)ランダムレコード
0016E8 DC5D 47               4      LD  B,A     ;BCに1セクタ以下の端数が入る
0016E9 DC5E ED42            15      SBC HL,BC       ;残りを計算
                                
0016EB DC60 ED5B5DE4        20      LD  DE,(LEFTX)
0016EF DC64 ED52            15      SBC HL,DE       ;CP HL,DE
0016F1 DC66 19              11      ADD HL,DE       ;
0016F2 DC67 3801            12      JR  C,RBXA1     ;DEとHLを比較して大きい方をHLに
0016F4 DC69 EB               4      EX  DE,HL
       DC6A                     RBXA1:
0016F5 DC6A E5              11      PUSH    HL
0016F6 DC6B 2A7EE5          16      LD  HL,(_DTBUF)
0016F9 DC6E 09              11      ADD HL,BC
0016FA DC6F ED5B5FE4        20      LD  DE,(DTAX)
0016FE DC73 C1              10      POP BC
0016FF DC74 C9              10      RET
                                
       DC75                     RBXB:
001700 DC75 2A5FE4          16      LD  HL,(DTAX)
001703 DC78 ED5BFEE5        20      LD  DE,(_CLPS)
001707 DC7C 3A5EE4          13      LD  A,(LEFTX+1)
00170A DC7F 47               4      LD  B,A
00170B DC80 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       DC83                     RBXB1:
00170E DC83 1F               4      RRA     ;->CF
00170F DC84 3804            12      JR  C,RBXB2
001711 DC86 CB38             8      SRL B   ;B=B/2
001713 DC88 18F9            12      JR  RBXB1
       DC8A                     RBXB2:
001715 DC8A 78               4      LD  A,B
001716 DC8B B7               4      OR  A
001717 DC8C C9              10      RET
                                
       DC8D                     RBXC:
001718 DC8D ED4B5DE4        20      LD  BC,(LEFTX)
00171C DC91 3A57DC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
00171F DC94 3D               4      DEC A
001720 DC95 A0               4      AND B
001721 DC96 47               4      LD  B,A     ;1セクタ以下の端数がない場合はZ
001722 DC97 B1               4      OR  C
001723 DC98 C9              10      RET
                                
       DC99                     RBXEND:             ;レコード数だけランダムレコードを進める
001724 DC99 110000          10      LD  DE,0        ;進めるレコード数(RBSIZE)
       DC9A                     RBSIZE  EQU $-2
001727 DC9C CDE7D9          17      CALL    GET_RR_AHL
00172A DC9F 19              11      ADD HL,DE
00172B DCA0 CE00             7      ADC A,0
00172D DCA2 CDF1D9          17      CALL    SET_RR_AHL
001730 DCA5 EB               4      EX  DE,HL       ;HL=進めるレコード数
001731 DCA6 D0              11      RET NC
001732 DCA7 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
001736 DCAB C0              11      RET NZ
001737 DCAC FD3424          23      INC (IY+36)
00173A DCAF C9              10      RET
                                
       DCB0                     GET_RR_BCDE:            ;BCDE=Random record
00173B DCB0 FD5E21          19      LD  E,(IY+33)   ;(FCB)ランダムレコード
00173E DCB3 FD5622          19      LD  D,(IY+34)
001741 DCB6 FD4E23          19      LD  C,(IY+35)
001744 DCB9 0600             7      LD  B,0     ;CP/M互換のアクセスの場合はFCBは36バイト
001746 DCBB FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
00174A DCBF C0              11      RET NZ
00174B DCC0 FD4624          19      LD  B,(IY+36)
00174E DCC3 C9              10      RET
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめる
                                
       DCC4                     DWTC:
00174F DCC4 E5              11      PUSH    HL
001750 DCC5 2154E0          10      LD  HL,DWT24B
001753 DCC8 1804            12      JR  DWTC1
       DCCA                     DRDC:
001755 DCCA E5              11      PUSH    HL
001756 DCCB 2144E0          10      LD  HL,DRD24B
       DCCE                     DWTC1:
001759 DCCE 2228DD          16      LD  (DRWF_MODE),HL
00175C DCD1 E1              10      POP HL
00175D DCD2 3A18DD          13      LD  A,(DRWF_B)
001760 DCD5 B7               4      OR  A
001761 DCD6 200F            12      JR  NZ,DRDC1
       DCD8                     SAVE_DRWC:
001763 DCD8 0601             7      LD  B,1
001765 DCDA ED4317DD        20      LD  (DRWF_C),BC
001769 DCDE ED531EDD        20      LD  (DRWF_E),DE
00176D DCE2 2221DD          16      LD  (DRWF_HL),HL
001770 DCE5 1820            12      JR  INC_HL_DRWC
       DCE7                     DRDC1:
001772 DCE7 E5              11      PUSH    HL
001773 DCE8 211EDD          10      LD  HL,DRWF_E
001776 DCEB 86               7      ADD A,(HL)
001777 DCEC F5              11      PUSH    AF
001778 DCED BB               4      CP  E
001779 DCEE 201D            12      JR  NZ,DRDC2
00177B DCF0 F1              10      POP AF
00177C DCF1 23               6      INC HL
00177D DCF2 7E               7      LD  A,(HL)
00177E DCF3 CE00             7      ADC A,0
001780 DCF5 F5              11      PUSH    AF
001781 DCF6 BA               4      CP  D
001782 DCF7 2014            12      JR  NZ,DRDC2
001784 DCF9 F1              10      POP AF
001785 DCFA 3A17DD          13      LD  A,(DRWF_C)
001788 DCFD CE00             7      ADC A,0
00178A DCFF B9               4      CP  C
00178B DD00 200C            12      JR  NZ,DRDC3
00178D DD02 2118DD          10      LD  HL,DRWF_B
001790 DD05 34              11      INC (HL)
001791 DD06 E1              10      POP HL
       DD07                     INC_HL_DRWC:
001792 DD07 3A57DC          13      LD  A,(SECSZ+2)     ;1セクタのサイズの上位1バイト
001795 DD0A 84               4      ADD A,H
001796 DD0B 67               4      LD  H,A
001797 DD0C C9              10      RET
       DD0D                     DRDC2:
001798 DD0D F1              10      POP AF
       DD0E                     DRDC3:
001799 DD0E CD14DD          17      CALL    DRW_FLUSH
00179C DD11 E1              10      POP HL
00179D DD12 18C4            12      JR  SAVE_DRWC
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめたものをフラッシュする
       DD14                     DRW_FLUSH:
00179F DD14 C5              11      PUSH    BC
0017A0 DD15 D5              11      PUSH    DE
0017A1 DD16 010000          10      LD  BC,0
       DD17                     DRWF_C  EQU $-2
       DD18                     DRWF_B  EQU $-1
0017A4 DD19 78               4      LD  A,B
0017A5 DD1A B7               4      OR  A
0017A6 DD1B 280D            12      JR  Z,DRDF1
0017A8 DD1D 110000          10      LD  DE,0
       DD1E                     DRWF_E  EQU $-2
       DD1F                     DRWF_D  EQU $-1
0017AB DD20 210000          10      LD  HL,0
       DD21                     DRWF_HL EQU $-2
0017AE DD23 AF               4      XOR A
0017AF DD24 3218DD          13      LD  (DRWF_B),A
0017B2 DD27 CD44E0          17      CALL    DRD24B
       DD28                     DRWF_MODE   EQU $-2
       DD2A                     DRDF1:
0017B5 DD2A D1              10      POP DE
0017B6 DD2B C1              10      POP BC
0017B7 DD2C C9              10      RET
[EOF:LDFILE2.ASM:SHIFT_JIS]
                                    INCLUDE "LDDIO.ASM"
                                
                                ;   LSX-Dodgers DIO
                                
       DD2D                     DRDX:
0017B8 DD2D CD6BDD          17      CALL    DRDY
0017BB DD30 C8              11      RET Z
0017BC DD31 CD51DD          17      CALL    DRDX1       ;データバッファの情報を保存
0017BF DD34 D8              11      RET C
0017C0 DD35 E5              11      PUSH    HL
0017C1 DD36 C5              11      PUSH    BC
0017C2 DD37 D5              11      PUSH    DE
0017C3 DD38 2A7EE5          16      LD  HL,(_DTBUF)
0017C6 DD3B 3A94DD          13      LD  A,(_DBS24)
0017C9 DD3E 4F               4      LD  C,A
0017CA DD3F CD42E0          17      CALL    DRD24
0017CD DD42 DC66DD          17      CALL    C,DRDNE
       DD45                     POP_DE_BC_HL_RET:
0017D0 DD45 D1              10      POP DE
0017D1 DD46 C1              10      POP BC
0017D2 DD47 E1              10      POP HL
0017D3 DD48 C9              10      RET
                                
                                ;   CDE:セクタ番号
       DD49                     DRDN:
0017D4 DD49 AF               4      XOR A
0017D5 DD4A 00               4  DRDN1:  NOP         ;自己書き換え NOP / SCF
0017D6 DD4B 30E0            12      JR  NC,DRDX
       DD4D                     DRDNX:
0017D8 DD4D CD6BDD          17      CALL    DRDY
0017DB DD50 C8              11      RET Z
       DD51                     DRDX1:
0017DC DD51 CD81DD          17      CALL    DWTX
                                                ;データバッファの読み込んだドライブ・セクタ情報を保存
0017DF DD54 ED53A6E4        20      LD  (_DBSEC),DE
0017E3 DD58 79               4      LD  A,C
0017E4 DD59 3294DD          13      LD  (_DBS24),A
                                
0017E7 DD5C 3A88E4          13      LD  A,(_DRV)
0017EA DD5F 32A5E4          13      LD  (_DBDRV),A
0017ED DD62 CDD9E4          17      CALL    _CHGDRV
0017F0 DD65 D0              11      RET NC
       DD66                     DRDNE:
0017F1 DD66 9F               4      SBC A,A     ;CF=1ならばA=0FFH
0017F2 DD67 32A5E4          13      LD  (_DBDRV),A
0017F5 DD6A C9              10      RET
                                
                                ;   CDE:セクタ番号
       DD6B                     DRDY:
0017F6 DD6B 3A94DD          13      LD  A,(_DBS24)
0017F9 DD6E B9               4      CP  C
0017FA DD6F C0              11      RET NZ
                                
0017FB DD70 E5              11      PUSH    HL
0017FC DD71 3A88E4          13      LD  A,(_DRV)
0017FF DD74 21A5E4          10      LD  HL,_DBDRV
001802 DD77 AE               7      XOR (HL)
001803 DD78 2005            12      JR  NZ,POP_HL_RET
                                
001805 DD7A 2AA6E4          16      LD  HL,(_DBSEC)
001808 DD7D ED52            15      SBC HL,DE       ;上でXORを使っているのでCF=0のはず
       DD7F                     POP_HL_RET:
00180A DD7F E1              10      POP HL
00180B DD80 C9              10      RET
                                
       DD81                     DWTX:
00180C DD81 3AA4E4          13      LD  A,(_WTDBF)
00180F DD84 B7               4      OR  A
001810 DD85 C8              11      RET Z
001811 DD86 AF               4      XOR A
001812 DD87 32A4E4          13      LD  (_WTDBF),A
                                
001815 DD8A E5              11      PUSH    HL
001816 DD8B C5              11      PUSH    BC
001817 DD8C D5              11      PUSH    DE
001818 DD8D 3AA5E4          13      LD  A,(_DBDRV)
00181B DD90 CDD9E4          17      CALL    _CHGDRV
00181E DD93 0E00             7      LD  C,0
       DD94                     _DBS24  EQU $-1
001820 DD95 ED5BA6E4        20      LD  DE,(_DBSEC)
001824 DD99 2A7EE5          16      LD  HL,(_DTBUF)
001827 DD9C D452E0          17      CALL    NC,DWT24
       DD9F                     POP_DE_BC_HL_RET2:
00182A DD9F 18A4            12      JR  POP_DE_BC_HL_RET
                                
       DDA1                     RDFATX:
00182C DDA1 E5              11      PUSH    HL
00182D DDA2 3A88E4          13      LD  A,(_DRV)
001830 DDA5 21AAE4          10      LD  HL,_FATDRV
001833 DDA8 AE               7      XOR (HL)
001834 DDA9 28D4            12      JR  Z,POP_HL_RET
                                
001836 DDAB C5              11      PUSH    BC
001837 DDAC D5              11      PUSH    DE
001838 DDAD DDE5            15      PUSH    IX
00183A DDAF CDCBDD          17      CALL    WTFATX
00183D DDB2 3813            12      JR  C,POP_IX_DE_BC_HL_RET
                                
00183F DDB4 AF               4      XOR A
001840 DDB5 32ABE4          13      LD  (_FATIX),A
001843 DDB8 3A88E4          13      LD  A,(_DRV)
001846 DDBB 32AAE4          13      LD  (_FATDRV),A
001849 DDBE CDE5E4          17      CALL    _RDFAT
       DDC1                     RDFATE2:
00184C DDC1 3004            12      JR  NC,POP_IX_DE_BC_HL_RET
00184E DDC3 9F               4      SBC A,A     ;A=0xFF
00184F DDC4 32AAE4          13      LD  (_FATDRV),A
       DDC7                     POP_IX_DE_BC_HL_RET:
001852 DDC7 DDE1            14      POP IX
001854 DDC9 18D4            12      JR  POP_DE_BC_HL_RET2
                                
       DDCB                     WTFATX:
001856 DDCB 3AA2E4          13      LD  A,(_WTFATF)
001859 DDCE B7               4      OR  A
00185A DDCF C8              11      RET Z
00185B DDD0 E5              11      PUSH    HL
00185C DDD1 3AAAE4          13      LD  A,(_FATDRV)
00185F DDD4 21A5E4          10      LD  HL,_DBDRV
001862 DDD7 AE               7      XOR (HL)
001863 DDD8 CC81DD          17      CALL    Z,DWTX
001866 DDDB 38A2            12      JR  C,POP_HL_RET
001868 DDDD C5              11      PUSH    BC
001869 DDDE D5              11      PUSH    DE
00186A DDDF DDE5            15      PUSH    IX
00186C DDE1 CD5FE0          17      CALL    WTFAT
00186F DDE4 AF               4      XOR A
001870 DDE5 32A2E4          13      LD  (_WTFATF),A
001873 DDE8 18DD            12      JR  POP_IX_DE_BC_HL_RET
                                
       DDEA                     NCL1:
001875 DDEA 7A               4      LD  A,D
001876 DDEB B3               4      OR  E
001877 DDEC 37               4      SCF
001878 DDED C8              11      RET Z
                                
001879 DDEE 7A               4      LD  A,D
00187A DDEF CB3F             8      SRL A   ;/2
00187C DDF1 CB3F             8      SRL A   ;/2
                                
00187E DDF3 E5              11      PUSH    HL
00187F DDF4 3213DE          13      LD  (NCLPAT_FATIX),A    ;_FATIX
001882 DDF7 2AAAE4          16      LD  HL,(_FATDRV)    ;L=_FATDRV H=_FATIX
001885 DDFA BC               4      CP  H
001886 DDFB 3A88E4          13      LD  A,(_DRV)    ;LDではフラグは変化しない
001889 DDFE 3212DE          13      LD  (NCLPAT_FATDRV),A   ;_FATDRV
00188C DE01 2005            12      JR  NZ,NCL2     ;FATIXが違う
00188E DE03 BD               4      CP  L
00188F DE04 2002            12      JR  NZ,NCL2     ;ドライブが違う
001891 DE06 E1              10      POP HL
001892 DE07 C9              10      RET
       DE08                     NCL2:
001893 DE08 C5              11      PUSH    BC
001894 DE09 D5              11      PUSH    DE
001895 DE0A DDE5            15      PUSH    IX
001897 DE0C CDCBDD          17      CALL    WTFATX
00189A DE0F 38B6            12      JR  C,POP_IX_DE_BC_HL_RET
00189C DE11 010000          10      LD  BC,0        ;自己書き換え C=_FATDRV B=_FATIX
       DE13                     NCLPAT_FATIX    EQU $-1
       DE12                     NCLPAT_FATDRV   EQU $-2
00189F DE14 ED43AAE4        20      LD  (_FATDRV),BC
0018A3 DE18 CD34E0          17      CALL    RDFATS
0018A6 DE1B 18A4            12      JR  RDFATE2
                                
       DE1D                     NCL3:
0018A8 DE1D CB9A             8      RES 3,D
0018AA DE1F CB92             8      RES 2,D
0018AC DE21 6B               4      LD  L,E
0018AD DE22 62               4      LD  H,D
0018AE DE23 CB3C             8      SRL H   ;
0018B0 DE25 CB1D             8      RR  L   ;HLA=HLA/2
0018B2 DE27 1F               4      RRA     ;
0018B3 DE28 F5              11      PUSH    AF
0018B4 DE29 3AABE4          13      LD  A,(_FATIX)
0018B7 DE2C 0F               4      RRCA
0018B8 DE2D 300B            12      JR  NC,NCL3X1
0018BA DE2F 3A57DC          13      LD  A,(SECSZ+2)
0018BD DE32 FE04             7      CP  4       ;1セクタ1024バイトの場合は奇数インデックスの場合に先頭を512バイトずらす
0018BF DE34 2004            12      JR  NZ,NCL3X1
0018C1 DE36 010002          10      LD  BC,512
0018C4 DE39 09              11      ADD HL,BC
       DE3A                     NCL3X1:
0018C5 DE3A F1              10      POP AF
0018C6 DE3B ED4B7CE5        20      LD  BC,(_FATBF)
0018CA DE3F 19              11      ADD HL,DE
0018CB DE40 09              11      ADD HL,BC
0018CC DE41 17               4      RLA
0018CD DE42 C9              10      RET
                                
       DE43                     GNCL:
0018CE DE43 CDEADD          17      CALL    NCL1        ;GET NEXT CLUSTER
0018D1 DE46 D8              11      RET C
0018D2 DE47 C5              11      PUSH    BC
0018D3 DE48 E5              11      PUSH    HL
0018D4 DE49 CD1DDE          17      CALL    NCL3
0018D7 DE4C 3809            12      JR  C,GNC1
0018D9 DE4E 5E               7      LD  E,(HL)
0018DA DE4F 23               6      INC HL
0018DB DE50 7E               7      LD  A,(HL)
0018DC DE51 E60F             7      AND 00FH
0018DE DE53 57               4      LD  D,A
0018DF DE54 E1              10      POP HL
0018E0 DE55 C1              10      POP BC
0018E1 DE56 C9              10      RET
       DE57                     GNC1:
0018E2 DE57 7E               7      LD  A,(HL)
0018E3 DE58 23               6      INC HL
0018E4 DE59 56               7      LD  D,(HL)
0018E5 DE5A 0604             7      LD  B,4
       DE5C                     GNC1L:
0018E7 DE5C CB3A             8      SRL D   ;DA=DA/2
0018E9 DE5E 1F               4      RRA     ;
0018EA DE5F 10FB            13      DJNZ    GNC1L
                                
0018EC DE61 5F               4      LD  E,A
0018ED DE62 E1              10      POP HL
0018EE DE63 C1              10      POP BC
0018EF DE64 A7               4      AND A
0018F0 DE65 C9              10      RET
                                
       DE66                     SNCL:
0018F1 DE66 CDEADD          17      CALL    NCL1
0018F4 DE69 D8              11      RET C
                                ;               SET NEXT CLUSTER
0018F5 DE6A E5              11      PUSH    HL
0018F6 DE6B C5              11      PUSH    BC
0018F7 DE6C D5              11      PUSH    DE
0018F8 DE6D E5              11      PUSH    HL
0018F9 DE6E CD1DDE          17      CALL    NCL3
0018FC DE71 D1              10      POP DE
                                ;CF=ODD
0018FD DE72 7E               7      LD  A,(HL)
0018FE DE73 73               7      LD  (HL),E
0018FF DE74 3806            12      JR  C,SNC1
                                ;EVEN
                                ;M[0] = E
                                ;M[1] = (M[1] & 0xF0) | (D & 0x0F)
001901 DE76 23               6      INC HL
001902 DE77 ED67            18      RRD     ;M={A[3:0],E[3:0]}
001904 DE79 7A               4      LD  A,D
001905 DE7A 1804            12      JR  SNC11
       DE7C                     SNC1:
                                ;ODD
                                ;HL[0] = (HL[0]&0x0F) | (E<<4)
                                ;HL[1] = DE>>4
001907 DE7C ED6F            18      RLD     ;M={D[3:0],E[7:4]}
001909 DE7E 23               6      INC HL
00190A DE7F 72               7      LD  (HL),D  ;M={D[3:0],E[7:4]}
       DE80                     SNC11:
00190B DE80 ED6F            18      RLD     ;M={M[7:4],D[3:0]}
00190D DE82 B7               4      OR  A
00190E DE83 D1              10      POP DE
00190F DE84 C1              10      POP BC
001910 DE85 E1              10      POP HL
       DE86                     FAT_CHANGED:
001911 DE86 3E01             7      LD  A,1
001913 DE88 32A2E4          13      LD  (_WTFATF),A
001916 DE8B C9              10      RET
                                
       DE8C                     N16CL3:
001917 DE8C C5              11      PUSH    BC
001918 DE8D 6B               4      LD  L,E
001919 DE8E 7A               4      LD  A,D
00191A DE8F E603             7      AND 3
00191C DE91 67               4      LD  H,A
00191D DE92 29              11      ADD HL,HL
00191E DE93 ED4B7CE5        20      LD  BC,(_FATBF)
001922 DE97 09              11      ADD HL,BC
001923 DE98 C1              10      POP BC
001924 DE99 C9              10      RET
                                
       DE9A                     GNCL16:
001925 DE9A CDEADD          17      CALL    NCL1        ;GET NEXT CLUSTER for FAT16
001928 DE9D D8              11      RET C
001929 DE9E E5              11      PUSH    HL
00192A DE9F CD8CDE          17      CALL    N16CL3
00192D DEA2 5E               7      LD  E,(HL)
00192E DEA3 23               6      INC HL
00192F DEA4 56               7      LD  D,(HL)
001930 DEA5 E1              10      POP HL
001931 DEA6 C9              10      RET
                                
       DEA7                     SNCL16:
001932 DEA7 CDEADD          17      CALL    NCL1        ;GET NEXT CLUSTER for FAT16
001935 DEAA D8              11      RET C
001936 DEAB D5              11      PUSH    DE
001937 DEAC E5              11      PUSH    HL
001938 DEAD CD8CDE          17      CALL    N16CL3
00193B DEB0 D1              10      POP DE      ;HL
00193C DEB1 73               7      LD  (HL),E
00193D DEB2 23               6      INC HL
00193E DEB3 72               7      LD  (HL),D
00193F DEB4 6B               4      LD  L,E
001940 DEB5 62               4      LD  H,D
001941 DEB6 D1              10      POP DE
001942 DEB7 18CD            12      JR  FAT_CHANGED
                                
                                ;------------------------
                                ;次のセクタを探す際に_SECPSの値をチェック
                                ;in
                                ;   DE : セクタ番号
                                ;out
                                ;   DE : 次のセクタ番号
                                ;note
                                ;
                                ;------------------------
       DEB9                     NEXTX:
001944 DEB9 3E00             7      LD  A,0 ;自己書き換え
       DEBA                     _SECPS  EQU $-1
001946 DEBB 3C               4      INC A
001947 DEBC E600             7      AND 0   ;自己書き換え　1クラスタの論理セクタ数-1
       DEBD                     _NCPAT  EQU $-1
001949 DEBE 32BADE          13      LD  (_SECPS),A
00194C DEC1 C9              10      RET
                                
       DEC2                     GNCLX:
00194D DEC2 CDB9DE          17      CALL    NEXTX
001950 DEC5 C0              11      RET NZ  ;1クラスタのセクタ未満の場合は戻る
001951 DEC6 C3F7E4          10      JP  _GNCL   ;次のクラスタを探す
                                
       DEC9                     RDFAT:
001954 DEC9 3E80             7      LD  A,080H
001956 DECB 3270E4          13      LD  (CHECK),A
       DECE                     RDFAT1:
001959 DECE 3A88E4          13      LD  A,(_DRV)
00195C DED1 CD7DE1          17      CALL    CHGDRVR
00195F DED4 D8              11      RET C
001960 DED5 DD7E12          19      LD  A,(IX+DPB_DEVICE)
001963 DED8 CB6F             8      BIT 5,A
001965 DEDA 2868            12      JR  Z,RDFAT0X
001967 DEDC 2170E4          10      LD  HL,CHECK
00196A DEDF A6               7      AND (HL)
00196B DEE0 77               7      LD  (HL),A
00196C DEE1 110000          10      LD  DE,0        ;BPB
00196F DEE4 2A7CE5          16      LD  HL,(_FATBF)
001972 DEE7 CD40E0          17      CALL    DRD16
001975 DEEA 3024            12      JR  NC,GETBPB
001977 DEEC 2170E4          10      LD  HL,CHECK
00197A DEEF CB06            15      RLC (HL)
00197C DEF1 3F               4      CCF
00197D DEF2 D8              11      RET C
00197E DEF3 DDCB0A1E        23      RR  (IX+DPB_FDMODE)
001982 DEF7 3F               4      CCF         ;フロッピーディスクのFDモードを切り替える
001983 DEF8 DDCB0A16        23      RL  (IX+DPB_FDMODE)
001987 DEFC 3EFF             7      LD  A,0FFH
001989 DEFE 3289E4          13      LD  (_DSK),A
00198C DF01 3A84E4          13      LD  A,(_DRIVE)
00198F DF04 E603             7      AND 3
001991 DF06 F680             7      OR  080H
001993 DF08 6F               4      LD  L,A
001994 DF09 26E4             7      LD  H,_CYL0/256
001996 DF0B 3EFF             7      LD  A,0FFH
001998 DF0D 77               7      LD  (HL),A
001999 DF0E 18BE            12      JR  RDFAT1
       DF10                     GETBPB:
00199B DF10 FDE5            15      PUSH    IY
00199D DF12 FD2A7CE5        20      LD  IY,(_FATBF) ;BPB
0019A1 DF16 CDF1E4          17      CALL    _BPB2DPB
0019A4 DF19 FDE1            14      POP IY
0019A6 DF1B DD7E12          19      LD  A,(IX+DPB_DEVICE)
0019A9 DF1E 3021            12      JR  NC,GETBPBOK
0019AB DF20 E60F             7      AND 00FH
0019AD DF22 FE07             7      CP  7
0019AF DF24 37               4      SCF
0019B0 DF25 C0              11      RET NZ
0019B1 DF26 DDCB0A46        20      BIT 0,(IX+DPB_FDMODE)
0019B5 DF2A 21C0E5          10      LD  HL,M2D
0019B8 DF2D 2002            12      JR  NZ,SETFDMODE
0019BA DF2F 2ED2             7      LD  L,M2HD-STABLE
       DF31                     SETFDMODE:
0019BC DF31 DDE5            15      PUSH    IX
0019BE DF33 D1              10      POP DE
0019BF DF34 EDA0            16      LDI
0019C1 DF36 EDA0            16      LDI
0019C3 DF38 13               6      INC DE
0019C4 DF39 13               6      INC DE
0019C5 DF3A 13               6      INC DE
0019C6 DF3B 13               6      INC DE
0019C7 DF3C 010C00          10      LD  BC,12
0019CA DF3F EDB0                    LDIR
       DF41                     GETBPBOK:
0019CC DF41 CDE8E0          17      CALL    CHGDRV2
       DF44                     RDFAT0X:
0019CF DF44 CD34E0          17      CALL    RDFATS
0019D2 DF47 D8              11      RET C
0019D3 DF48 DDAE06          19      XOR (IX+DPB_FATID)
0019D6 DF4B C8              11      RET Z
0019D7 DF4C DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
0019DB DF50 C0              11      RET NZ      ;BPBを取得している場合はFATIDをチェックしない
0019DC DF51 37               4      SCF
0019DD DF52 C9              10      RET
                                
       DF53                     POP_HL_SCF_RET:
0019DE DF53 E1              10      POP HL
0019DF DF54 37               4      SCF
0019E0 DF55 C9              10      RET
                                
       DF56                     BPB2DPB:
0019E1 DF56 FD7E0B          19      LD  A,(IY+11)   ;BPB_BytsPerSec
0019E4 DF59 B7               4      OR  A
0019E5 DF5A 37               4      SCF
0019E6 DF5B C0              11      RET NZ
       DF5C                     BPBOK:
0019E7 DF5C FD7E0D          19      LD  A,(IY+13)   ;BPB_SecPerClus
0019EA DF5F DD7707          19      LD  (IX+DPB_SECPCL),A
                                
0019ED DF62 FD7E16          19      LD  A,(IY+22)   ;BPB_FATSz16
0019F0 DF65 DD7700          19      LD  (IX+DPB_FATLN),A
0019F3 DF68 FD7E17          19      LD  A,(IY+23)   ;BPB_FATSz16
0019F6 DF6B DD7701          19      LD  (IX+DPB_FATLN+1),A
                                
0019F9 DF6E FD6E0E          19      LD  L,(IY+14)   ;BPB_RsvdSecCnt
0019FC DF71 FD660F          19      LD  H,(IY+15)
0019FF DF74 DD750E          19      LD  (IX+DPB_FATPS),L
001A02 DF77 FD5E16          19      LD  E,(IY+22)   ;BPB_FATSz16
001A05 DF7A FD5617          19      LD  D,(IY+23)
001A08 DF7D FD4610          19      LD  B,(IY+16)   ;BPB_NumFATs
       DF80                     BPBDP1:             ;BPB_FATSz16 * BPB_NumFATs
001A0B DF80 19              11      ADD HL,DE
001A0C DF81 10FD            13      DJNZ    BPBDP1
       DF83                     BPBDP2:
001A0E DF83 DD7510          19      LD  (IX+DPB_DIRPS),L
001A11 DF86 DD7411          19      LD  (IX+DPB_DIRPS+1),H
001A14 DF89 E5              11      PUSH    HL
                                
001A15 DF8A FD6E11          19      LD  L,(IY+17)   ;BPB_RootEntCnt
001A18 DF8D FD6612          19      LD  H,(IY+18)
001A1B DF90 FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
001A1E DF93 B7               4      OR  A
001A1F DF94 28BD            12      JR  Z,POP_HL_SCF_RET
001A21 DF96 0606             7      LD  B,6
       DF98                     BPBBPS1:
001A23 DF98 05               4      DEC B
001A24 DF99 0F               4      RRCA
001A25 DF9A 30FC            12      JR  NC,BPBBPS1
       DF9C                     BPBDE1:
001A27 DF9C 29              11      ADD HL,HL
001A28 DF9D 10FD            13      DJNZ    BPBDE1
                                
001A2A DF9F 7C               4      LD  A,H
001A2B DFA0 DD770B          19      LD  (IX+DPB_DIRSCNT),A  ;
                                
001A2E DFA3 D1              10      POP DE      ;DPB_DIRPS
001A2F DFA4 6C               4      LD  L,H
001A30 DFA5 2600             7      LD  H,0
001A32 DFA7 19              11      ADD HL,DE       ;MAXDIR
001A33 DFA8 E5              11      PUSH    HL
001A34 DFA9 FD4E0D          19      LD  C,(IY+13)   ;BPB_SecPerClus
001A37 DFAC CB21             8      SLA C       ;*2
001A39 DFAE AF               4      XOR A
001A3A DFAF 47               4      LD  B,A
001A3B DFB0 ED42            15      SBC HL,BC
001A3D DFB2 DD7514          19      LD  (IX+DPB_ADDCL),L
001A40 DFB5 DD7415          19      LD  (IX+DPB_ADDCL+1),H
                                
001A43 DFB8 D1              10      POP DE      ;DE=DPB_MAXDIR
001A44 DFB9 FD6E13          19      LD  L,(IY+19)   ;BPB_TotSec16
001A47 DFBC FD6614          19      LD  H,(IY+20)
                                
001A4A DFBF DD7E12          19      LD  A,(IX+DPB_DEVICE)
001A4D DFC2 E60F             7      AND 00FH
001A4F DFC4 FE07             7      CP  7       ;フロッピー
001A51 DFC6 2019            12      JR  NZ,NOT_FD
001A53 DFC8 E5              11      PUSH    HL
001A54 DFC9 FD4E18          19      LD  C,(IY+24)   ;BPB_SecPerTr
001A57 DFCC DD710D          19      LD  (IX+DPB_MAXSEC),C
001A5A DFCF AF               4      XOR A
001A5B DFD0 CB21             8      SLA C       ;両面なのでセクタ数を２倍
001A5D DFD2 0610             7      LD  B,16
       DFD4                     DIVSEC:             ;MAXCYL = BPB_TotSec16 / (BPB_SecPerTr * 2)
001A5F DFD4 29              11      ADD HL,HL
001A60 DFD5 17               4      RLA
001A61 DFD6 B9               4      CP  C
001A62 DFD7 3802            12      JR  C,DIVSEC1
001A64 DFD9 91               4      SUB C
001A65 DFDA 2C               4      INC L
       DFDB                     DIVSEC1:
001A66 DFDB 10F7            13      DJNZ    DIVSEC
001A68 DFDD DD750C          19      LD  (IX+DPB_MAXCYL),L
001A6B DFE0 E1              10      POP HL  ;ここまでフロッピー専用
       DFE1                     NOT_FD:
001A6C DFE1 7C               4      LD  A,H
001A6D DFE2 B5               4      OR  L
001A6E DFE3 3E00             7      LD  A,0     ;LDでフラグは変化しない。BPB_TotSec16を AHL で扱う為、Aに0を入れる
001A70 DFE5 2010            12      JR  NZ,BPB16BIT ;BPB_TotSec16が「0」の場合はBPB_TotSec32で計算
001A72 DFE7 FD7E23          19      LD  A,(IY+35)   ;念のために総セクタ数が24ビットを超える場合はエラーを返す
001A75 DFEA B7               4      OR  A
001A76 DFEB 37               4      SCF
001A77 DFEC C0              11      RET NZ
001A78 DFED FD6E20          19      LD  L,(IY+32)   ;BPB_TotSec32 は AHL の24ビットで扱う
001A7B DFF0 FD6621          19      LD  H,(IY+33)   ;1クラスタの論理セクタ数(DPB_SECPCL)が最大128なので
001A7E DFF3 FD7E22          19      LD  A,(IY+34)   ;24ビットを超えると必ずクラスタ数が16ビットを超えてしまうのでこれで十分
001A81 DFF6 A7               4      AND A       ;CF=0
       DFF7                     BPB16BIT:
001A82 DFF7 ED52            15      SBC HL,DE
001A84 DFF9 DE00             7      SBC A,0
001A86 DFFB FD460D          19      LD  B,(IY+13)   ;BPB_SecPerClus
       DFFE                     BPBTC1:             ;総クラスタ数(AHL) = 総セクタ数(AHL) / セクタサイズ(B)
001A89 DFFE CB18             8      RR  B       ;->CY
001A8B E000 3808            12      JR  C,BPBTC2
001A8D E002 CB3F             8      SRL A
001A8F E004 CB1C             8      RR  H       ;AHL=AHL/2
001A91 E006 CB1D             8      RR  L
001A93 E008 18F4            12      JR  BPBTC1
       E00A                     BPBTC2:
001A95 E00A B7               4      OR  A
001A96 E00B 37               4      SCF
001A97 E00C C0              11      RET NZ      ;念のため(クラスタ数が16ビットを超える場合)
001A98 E00D 23               6      INC HL
001A99 E00E 23               6      INC HL
001A9A E00F DD7508          19      LD  (IX+DPB_MAXCL),L
001A9D E012 DD7409          19      LD  (IX+DPB_MAXCL+1),H
                                
001AA0 E015 FD7E15          19      LD  A,(IY+21)   ;BPB_Media
001AA3 E018 DD7706          19      LD  (IX+DPB_FATID),A
                                
001AA6 E01B FD7E10          19      LD  A,(IY+16)   ;BPB_NumFATs
001AA9 E01E C6FE             7      ADD A,0-2       ;>2:CF=1
001AAB E020 FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
001AAE E023 6F               4      LD  L,A
001AAF E024 3002            12      JR  NC,BPBFAT1
001AB1 E026 F680             7      OR  080H
       E028                     BPBFAT1:            ;ここではCF=0
001AB3 E028 DD770F          19      LD  (IX+DPB_BPS),A
001AB6 E02B 2D               4      DEC L       ;以下のセクタサイズに合致しない場合はCF=1でエラーにする
001AB7 E02C C8              11      RET Z       ;1セクタ256バイト
001AB8 E02D 2D               4      DEC L
001AB9 E02E C8              11      RET Z       ;1セクタ512バイト
001ABA E02F 2D               4      DEC L
001ABB E030 2D               4      DEC L
001ABC E031 C8              11      RET Z       ;1セクタ1024バイト
001ABD E032 37               4      SCF
001ABE E033 C9              10      RET
                                
       E034                     RDFATS:
001ABF E034 CD7AE0          17      CALL    FATSETUP
001AC2 E037 D8              11      RET C
001AC3 E038 CD44E0          17      CALL    DRD24B
001AC6 E03B 2A7CE5          16      LD  HL,(_FATBF)
001AC9 E03E 7E               7      LD  A,(HL)
001ACA E03F C9              10      RET
                                
       E040                     DRD16:
001ACB E040 0E00             7      LD  C,0
       E042                     DRD24:
001ACD E042 0601             7      LD  B,1
       E044                     DRD24B:
001ACF E044 DDE5            15      PUSH    IX
001AD1 E046 DD2AA8E4        20      LD  IX,(_DPB)
001AD5 E04A CDC2E1          17      CALL    FDRD        ;自己書き換え（ディスク読み込み）
       E04B                     DRDPAT  EQU $-2
       E04D                     POP_IX_RET:
001AD8 E04D DDE1            14      POP IX
001ADA E04F C9              10      RET
                                
       E050                     DWT16:
001ADB E050 0E00             7      LD  C,0
       E052                     DWT24:
001ADD E052 0601             7      LD  B,1
       E054                     DWT24B:
001ADF E054 DDE5            15      PUSH    IX
001AE1 E056 DD2AA8E4        20      LD  IX,(_DPB)
001AE5 E05A CDC0E1          17      CALL    FDWT        ;自己書き換え（ディスク書き込み）
       E05B                     DWTPAT  EQU $-2
001AE8 E05D 18EE            12      JR  POP_IX_RET
                                
       E05F                     WTFAT:
001AEA E05F CD7AE0          17      CALL    FATSETUP
001AED E062 D454E0          17      CALL    NC,DWT24B
001AF0 E065 D8              11      RET C
001AF1 E066 DDCB0F7E        20      BIT 7,(IX+DPB_BPS)
001AF5 E06A C8              11      RET Z       ;予備FATが無い
001AF6 E06B CD81E0          17      CALL    FATS2
001AF9 E06E E5              11      PUSH    HL      ;予備FAT
001AFA E06F DD6E00          19      LD  L,(IX+DPB_FATLN)
001AFD E072 DD6601          19      LD  H,(IX+DPB_FATLN+1)
001B00 E075 19              11      ADD HL,DE
001B01 E076 EB               4      EX  DE,HL
001B02 E077 E1              10      POP HL
001B03 E078 18DA            12      JR  DWT24B
                                ;------------------------
                                ;FATのセットアップ
                                ;out
                                ;   B  : FATセクタ数
                                ;   DE : FAT先頭セクタ番号
                                ;   HL : FATバッファポインタ
                                ;   CF : 1=ドライブ切り替えエラー
                                ;note
                                ;   FATサイズがFATバッファを超える場合は
                                ;   対象クラスタ領域==(_FATIX)によって
                                ;   FAT12:対象クラスタ1024毎に1.5KBを切り替える
                                ;   FAT16:対象クラスタ1024毎に2KBを切り替える
                                ;------------------------
       E07A                     FATSETUP:
001B05 E07A 3AAAE4          13      LD  A,(_FATDRV)
001B08 E07D CD7DE1          17      CALL    CHGDRVR     ;ドライブ切り替え
001B0B E080 D8              11      RET C
       E081                     FATS2:
001B0C E081 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;512=2 1024=4
001B0F E084 0F               4      RRCA
001B10 E085 CDAEE0          17      CALL    FATSETUP12  ;自己書き換え
       E086                     FATSX   EQU $-2
001B13 E088 210000          10      LD  HL,0
001B16 E08B 4A               4      LD  C,D
001B17 E08C 54               4      LD  D,H
001B18 E08D 3AABE4          13      LD  A,(_FATIX)  ;範囲FAT12:0-3/FAT16:0-63(0-03FH):65535*2/2048
001B1B E090 47               4      LD  B,A
001B1C E091 04               4      INC B
001B1D E092 DD7E00          19      LD  A,(IX+DPB_FATLN)
       E095                     FAT_SKP:
001B20 E095 05               4      DEC B
001B21 E096 2805            12      JR  Z,FAT1
001B23 E098 19              11      ADD HL,DE
001B24 E099 93               4      SUB E
001B25 E09A 30F9            12      JR  NC,FAT_SKP
001B27 E09C C9              10      RET
       E09D                     FAT1:
001B28 E09D EB               4      EX  DE,HL
001B29 E09E B9               4      CP  C       ;C=FATバッファに読み込めるセクタ数
001B2A E09F 3801            12      JR  C,FAT2
001B2C E0A1 79               4      LD  A,C
       E0A2                     FAT2:
001B2D E0A2 47               4      LD  B,A
                                
001B2E E0A3 2AFAE5          16      LD  HL,(_FATPS) ;fat sector pos
001B31 E0A6 19              11      ADD HL,DE
001B32 E0A7 EB               4      EX  DE,HL
001B33 E0A8 2A7CE5          16      LD  HL,(_FATBF)
001B36 E0AB AF               4      XOR A       ;CF=0
001B37 E0AC 4F               4      LD  C,A
001B38 E0AD C9              10      RET
                                ;
                                ;   FATバッファに読み込める最大のセクタ数と_FATIXで進めるセクタ数
                                ;   FATSETUP* (FAT12/FAT16)
                                ;out
                                ;   D : FATバッファに読み込める最大のセクタ数
                                ;   E : _FATIXで進めるセクタ数
       E0AE                     FATSETUP12:
001B39 E0AE 110606          10      LD  DE,0606H    ;256
001B3C E0B1 D8              11      RET C
001B3D E0B2 110303          10      LD  DE,0303H    ;512
001B40 E0B5 0F               4      RRCA
001B41 E0B6 D8              11      RET C
001B42 E0B7 110102          10      LD  DE,0201H    ;1024
001B45 E0BA C9              10      RET
                                
       E0BB                     FATSETUP16:
001B46 E0BB 110808          10      LD  DE,0808H    ;256
001B49 E0BE D8              11      RET C
001B4A E0BF 110404          10      LD  DE,0404H
001B4D E0C2 0F               4      RRCA            ;512
001B4E E0C3 D8              11      RET C
001B4F E0C4 110202          10      LD  DE,0202H    ;1024
001B52 E0C7 C9              10      RET
                                
       E0C8                     CHGDRV:
001B53 E0C8 E5              11      PUSH    HL
001B54 E0C9 2189E4          10      LD  HL,_DSK
001B57 E0CC BE               7      CP  (HL)
001B58 E0CD 280A            12      JR  Z,CHGDRVE
       E0CF                     CHGDRV1:
001B5A E0CF DDE5            15      PUSH    IX
001B5C E0D1 CDDBE0          17      CALL    CHGDRV0
001B5F E0D4 3A89E4          13      LD  A,(_DSK)
001B62 E0D7 DDE1            14      POP IX
       E0D9                     CHGDRVE:
001B64 E0D9 E1              10      POP HL
001B65 E0DA C9              10      RET
                                
       E0DB                     CHGDRV0:
001B66 E0DB 6F               4      LD  L,A
001B67 E0DC CDDCE4          17      CALL    _GETDPB
001B6A E0DF D8              11      RET C
001B6B E0E0 DD22A8E4        20      LD  (_DPB),IX
001B6F E0E4 7D               4      LD  A,L
001B70 E0E5 3289E4          13      LD  (_DSK),A
       E0E8                     CHGDRV2:
001B73 E0E8 C5              11      PUSH    BC
001B74 E0E9 D5              11      PUSH    DE
001B75 E0EA ED7333E1        20      LD  (SPPAT2),SP
001B79 E0EE F3               4      DI
001B7A E0EF DDF9            10      LD  SP,IX
                                
001B7C E0F1 E1              10      POP HL      ;00:DPB_FATLN
001B7D E0F2 E1              10      POP HL      ;02:DPB_DRD
001B7E E0F3 224BE0          16      LD  (DRDPAT),HL
                                
001B81 E0F6 E1              10      POP HL
001B82 E0F7 225BE0          16      LD  (DWTPAT),HL ;04:DPB_DWT
                                
001B85 E0FA E1              10      POP HL      ;L=06:DPB_FATID H=07:DPB_SECPCL
001B86 E0FB 7C               4      LD  A,H
001B87 E0FC 3252D7          13      LD  (SPCPAT),A  ;1クラスタの論理セクタ数
001B8A E0FF 3D               4      DEC A
001B8B E100 32BDDE          13      LD  (_NCPAT),A
                                
001B8E E103 E1              10      POP HL      ;08:DPB_MAXCL
001B8F E104 7D               4      LD  A,L
001B90 E105 3271D7          13      LD  (CLPAT2),A
001B93 E108 7C               4      LD  A,H
001B94 E109 326DD7          13      LD  (CLPAT1),A
001B97 E10C 2B               6      DEC HL
001B98 E10D 226ED9          16      LD  (MAXCLP),HL
                                
001B9B E110 E1              10      POP HL      ;L=0A:DPB_FDMODE H=0B:DPB_DIRSCNT
001B9C E111 4C               4      LD  C,H
                                
001B9D E112 E1              10      POP HL      ;L=0C:DPB_MAXCYL H=0D:DPB_MAXSEC
                                
001B9E E113 E1              10      POP HL      ;L=0E:DPB_FATPS H=0F:DPB_BPS
001B9F E114 7C               4      LD  A,H     ;DPB_BPS
001BA0 E115 E607             7      AND 7
001BA2 E117 3257DC          13      LD  (SECSZ+2),A ;1セクタのサイズの上位1バイト 0x400 - 0x200 - 0x100
                                                ;1セクタ512 2D/2DD/2HC/2HQ(2HD1.44MB)/EMM/BRAM/EMEM等
                                                ;1セクタ1024 2HD/2HDE98
                                                ;1セクタ256 GRAM/RAMF/CMOS/等
                                                ;1024   512 256
                                                ;4  2   1
001BA5 E11A 87               4      ADD A,A     ;8  4   2
001BA6 E11B 87               4      ADD A,A     ;010H   8   4
001BA7 E11C 87               4      ADD A,A     ;020H   010H    8
001BA8 E11D 32CFD5          13      LD  (SDECPAT),A ;1セクタ辺りのディレクトリエントリ数
                                
001BAB E120 2600             7      LD  H,0
001BAD E122 22FAE5          16      LD  (_FATPS),HL
                                
001BB0 E125 E1              10      POP HL      ;10:DPB_DIRPS
001BB1 E126 22FCE5          16      LD  (_DIRPS),HL
                                
001BB4 E129 E1              10      POP HL      ;L=12:DPB_DEVICE H=13:DPB_UNITNO
001BB5 E12A 7C               4      LD  A,H
001BB6 E12B 3284E4          13      LD  (_DRIVE),A
                                
001BB9 E12E E1              10      POP HL      ;14:DPB_ADDCL
001BBA E12F 2262D7          16      LD  (CLSPAT),HL
                                
001BBD E132 310000          10      LD  SP,0        ;元のSPを復元
       E133                     SPPAT2  EQU $-2
001BC0 E135 FB               4      EI
001BC1 E136 2AFCE5          16      LD  HL,(_DIRPS)
001BC4 E139 0600             7      LD  B,0
001BC6 E13B 09              11      ADD HL,BC       ;C=DPB_DIRSCNT
001BC7 E13C 22EAD5          16      LD  (MD_PAT),HL
                                
001BCA E13F 2A6ED9          16      LD  HL,(MAXCLP);
001BCD E142 11F60F          10      LD  DE,4086     ;クラスタ数が4086未満:FAT12 4086以上:FAT16
001BD0 E145 ED52            15      SBC HL,DE       ;CF=0のはず
001BD2 E147 300F            12      JR  NC,SETFAT16
001BD4 E149 2143DE          10      LD  HL,GNCL     ;FAT12
001BD7 E14C 1166DE          10      LD  DE,SNCL
001BDA E14F 01AEE0          10      LD  BC,FATSETUP12
001BDD E152 DDCB0FAE        23      RES 5,(IX+DPB_BPS)  ;DPB_BPS(FAT12)
001BE1 E156 180D            12      JR  EXTRA1
       E158                     SETFAT16:
001BE3 E158 219ADE          10      LD  HL,GNCL16   ;FAT16
001BE6 E15B 11A7DE          10      LD  DE,SNCL16
001BE9 E15E 01BBE0          10      LD  BC,FATSETUP16
001BEC E161 DDCB0FEE        23      SET 5,(IX+DPB_BPS)  ;DPB_BPS(FAT16)
       E165                     EXTRA1:
001BF0 E165 22F8E4          16      LD  (GNCPAT),HL
001BF3 E168 ED53FBE4        20      LD  (SNCPAT),DE
001BF7 E16C ED4386E0        20      LD  (FATSX),BC
001BFB E170 D1              10      POP DE
001BFC E171 C1              10      POP BC
001BFD E172 AF               4      XOR A
001BFE E173 C9              10      RET
                                
       E174                     GETDPBD:
001BFF E174 DDE3            23      EX  (SP),IX
001C01 E176 DDE5            15      PUSH    IX
001C03 E178 3A88E4          13      LD  A,(_DRV)
001C06 E17B 1807            12      JR  GETDPB1
                                
       E17D                     CHGDRVR:
001C08 E17D CDD9E4          17      CALL    _CHGDRV
001C0B E180 D8              11      RET C
001C0C E181 3A89E4          13      LD  A,(_DSK)
       E184                     GETDPB1:
001C0F E184 C3DCE4          10      JP  _GETDPB
                                
       E187                     GETDPB:
001C12 E187 FE08             7      CP  8
001C14 E189 3F               4      CCF
001C15 E18A D8              11      RET C
001C16 E18B 0F               4      RRCA
001C17 E18C 0F               4      RRCA
001C18 E18D 0F               4      RRCA
001C19 E18E DD                      DB  0DDH        ;Z80未定義命令
001C1A E18F 6F               4      LD  L,A     ;LD IXL,A
001C1B E190 DD                      DB  0DDH        ;Z80未定義命令
001C1C E191 26E6             7      LD  H,_DEVICE/256   ;LD IXH,_DEVICE/256
001C1E E193 DD7E00          19      LD  A,(IX+DPB_FATLN)
001C21 E196 A7               4      AND A       ;CF=0の為
001C22 E197 DDCB0F6E        20      BIT 5,(IX+DPB_BPS)
001C26 E19B C0              11      RET NZ      ;FAT16
001C27 E19C DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
001C2B E1A0 C0              11      RET NZ      ;BPB
001C2C E1A1 FE01             7      CP  001H        ;A=0 THEN CF=1
001C2E E1A3 C9              10      RET
                                
       E1A4                     _SYS5F:
001C2F E1A4 AF               4      XOR A
       E1A5                     FFLUSH:
001C30 E1A5 F5              11      PUSH    AF
001C31 E1A6 CDCBDD          17      CALL    WTFATX
001C34 E1A9 AF               4      XOR A
001C35 E1AA 32ABE4          13      LD  (_FATIX),A
001C38 E1AD 2F               4      CPL         ;0FFH
001C39 E1AE 32AAE4          13      LD  (_FATDRV),A
001C3C E1B1 3E                      DB  03EH        ;次のPUSH AFをスキップ
       E1B2                     FFLUSHBUF:
001C3D E1B2 F5              11      PUSH    AF
001C3E E1B3 CD81DD          17      CALL    DWTX
001C41 E1B6 3EFF             7      LD  A,0FFH
001C43 E1B8 3239E4          13      LD  (SFILE),A
001C46 E1BB 32A5E4          13      LD  (_DBDRV),A
001C49 E1BE F1              10      POP AF
001C4A E1BF C9              10      RET
                                
[EOF:LDDIO.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDISK.ASM"
                                
                                ;   LSX-Dodgers DISK
                                ;   MSX
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ可変(256/512/1024)
                                
       E1C0                     WTTRK:
       E1C0                     FDWT:
001C4B E1C0 37               4      SCF
001C4C E1C1 C9              10      RET
       E1C2                     FDRD:
001C4D E1C2 ED7353E2        20      LD  (DRDSP),SP
001C51 E1C6 3A54E2          13      LD  A,(DRDSPH)  ;スタックがカートリッジと被っていないかチェック
001C54 E1C9 FE7F             7      CP  07FH
001C56 E1CB 3807            12      JR  C,FDRD1
001C58 E1CD FEC1             7      CP  0C1H
001C5A E1CF 3003            12      JR  NC,FDRD1
001C5C E1D1 315EF5          10      LD  SP,BUF
       E1D4                     FDRD1:
001C5F E1D4 C5              11      PUSH    BC
001C60 E1D5 D5              11      PUSH    DE
                                
001C61 E1D6 E5              11      PUSH    HL
001C62 E1D7 EB               4      EX  DE,HL
001C63 E1D8 DD460F          19      LD  B,(IX+DPB_BPS)
       E1DB                     EADR1:
001C66 E1DB CB18             8      RR  B
001C68 E1DD 3803            12      JR  C,EADR2
001C6A E1DF 29              11      ADD HL,HL
001C6B E1E0 18F9            12      JR  EADR1
       E1E2                     EADR2:
001C6D E1E2 E5              11      PUSH    HL  ;あとでDEで受け取る
001C6E E1E3 29              11      ADD HL,HL   ;64KB→32KB
001C6F E1E4 29              11      ADD HL,HL   ;32KB→16KB
       E1E5                     ASCII16K1:
001C70 E1E5 29              11      ADD HL,HL   ;16KB→8KB  ;ASCII-16Kの場合はここがNOPに置き換えられる
                                
001C71 E1E6 DD7E0C          19      LD  A,(IX+DPB_MAXCYL)   ;16KB単位でカートリッジ内のディスクが存在する位置を指定
       E1E9                     ASCII16K2:
001C74 E1E9 87               4      ADD A,A         ;ASCII-16Kの場合はここがNOPに置き換えられる
001C75 E1EA 84               4      ADD A,H
001C76 E1EB 5F               4      LD  E,A
001C77 E1EC 3A62E4          13      LD  A,(ROM_SLT)
001C7A E1EF 210070          10      LD  HL,BANK2_SEL
       E1F0                     ROM8000H    EQU $-2
001C7D E1F2 CDFBD2          17      CALL    WRSLT
                                
001C80 E1F5 2680             7      LD  H,080H
001C82 E1F7 3A62E4          13      LD  A,(ROM_SLT) ;カートリッジROMに切り替える
001C85 E1FA CD6ED3          17      CALL    ENASLT
                                
001C88 E1FD D1              10      POP DE
001C89 E1FE E1              10      POP HL      ;HLは読み出し先のメモリアドレス
                                
001C8A E1FF 7B               4      LD  A,E
001C8B E200 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F/16K:3F)
       E201                     ASCII16K3   EQU $-1
001C8D E202 1E00             7      LD  E,0     ;DEはROMディスクから読み出すアドレス
001C8F E204 C680             7      ADD A,080H
001C91 E206 57               4      LD  D,A
                                
001C92 E207 3E                      DB  03EH
001C93 E208 A7               4      AND A
001C94 E209 3236E2          13      LD  (DRD_SWC3),A
001C97 E20C 7C               4      LD  A,H     ;読み出し先がカートリッジと被っていないかチェック
001C98 E20D FE7B             7      CP  07BH
001C9A E20F 3812            12      JR  C,DRD2
001C9C E211 FEC1             7      CP  0C1H
001C9E E213 300E            12      JR  NC,DRD2
001CA0 E215 223DE2          16      LD  (DRD_SWC1),HL   ;被っている場合はデータバッファをフラッシュして一時的に使う
001CA3 E218 2100EF          10      LD  HL,DTBUF
001CA6 E21B 3E                      DB  03EH
001CA7 E21C 37               4      SCF
001CA8 E21D 3236E2          13      LD  (DRD_SWC3),A
001CAB E220 CDB2E1          17      CALL    FFLUSHBUF
       E223                     DRD2:
001CAE E223 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001CB1 E226 E607             7      AND 7
001CB3 E228 47               4      LD  B,A
001CB4 E229 4B               4      LD  C,E ;E=0
                                
001CB5 E22A EB               4      EX  DE,HL
001CB6 E22B EDB0                    LDIR
001CB8 E22D D5              11      PUSH    DE
001CB9 E22E 2680             7      LD  H,080H
001CBB E230 3A43F3          13      LD  A,(0F341H+2)    ;メインRAMに戻す
001CBE E233 CD6ED3          17      CALL    ENASLT
       E236                     DRD_SWC3:
001CC1 E236 A7               4      AND A       ;自己書き換え)被っている場合はSCFになる
001CC2 E237 3012            12      JR  NC,DRD3
                                
001CC4 E239 2100EF          10      LD  HL,DTBUF
001CC7 E23C 110000          10      LD  DE,0
       E23D                     DRD_SWC1    EQU $-2
001CCA E23F DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001CCD E242 E607             7      AND 7
001CCF E244 47               4      LD  B,A
001CD0 E245 0E00             7      LD  C,0
001CD2 E247 EDB0                    LDIR
001CD4 E249 E1              10      POP HL
001CD5 E24A D5              11      PUSH    DE
       E24B                     DRD3:
001CD6 E24B E1              10      POP HL
001CD7 E24C D1              10      POP DE
001CD8 E24D 13               6      INC DE
001CD9 E24E C1              10      POP BC
001CDA E24F 1083            13      DJNZ    FDRD1
001CDC E251 AF               4      XOR A
001CDD E252 310000          10      LD  SP,0
       E253                     DRDSP   EQU $-2
       E254                     DRDSPH  EQU $-1
001CE0 E255 FB               4      EI
001CE1 E256 C9              10      RET
                                
       E257                     PDWT:
001CE2 E257 37               4      SCF
001CE3 E258 CB7C             8      BIT 7,H
001CE5 E25A 2056            12      JR  NZ,PDWX
001CE7 E25C CDB2E1          17      CALL    FFLUSHBUF
       E25F                     PDWT1:
001CEA E25F C5              11      PUSH    BC
001CEB E260 D5              11      PUSH    DE
001CEC E261 1100EF          10      LD  DE,DTBUF
001CEF E264 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001CF2 E267 E607             7      AND 7
001CF4 E269 47               4      LD  B,A
001CF5 E26A 0E00             7      LD  C,0
001CF7 E26C EDB0                    LDIR
001CF9 E26E E5              11      PUSH    HL
001CFA E26F 2100EF          10      LD  HL,DTBUF
001CFD E272 0601             7      LD  B,1
001CFF E274 37               4      SCF
001D00 E275 CDB2E2          17      CALL    PDWX
001D03 E278 3834            12      JR  C,PDRWERR
001D05 E27A E1              10      POP HL
001D06 E27B D1              10      POP DE
001D07 E27C 13               6      INC DE
001D08 E27D C1              10      POP BC
001D09 E27E 10D7            13      DJNZ    PDWT
001D0B E280 AF               4      XOR A
001D0C E281 C9              10      RET
       E282                     PDRD:
001D0D E282 A7               4      AND A
001D0E E283 CB7C             8      BIT 7,H
001D10 E285 202B            12      JR  NZ,PDWX
001D12 E287 CDB2E1          17      CALL    FFLUSHBUF
       E28A                     PDRD1:
001D15 E28A C5              11      PUSH    BC
001D16 E28B D5              11      PUSH    DE
001D17 E28C E5              11      PUSH    HL
001D18 E28D 2100EF          10      LD  HL,DTBUF
001D1B E290 0601             7      LD  B,1
001D1D E292 A7               4      AND A
001D1E E293 CDB2E2          17      CALL    PDWX
001D21 E296 3816            12      JR  C,PDRWERR
001D23 E298 D1              10      POP DE
001D24 E299 2100EF          10      LD  HL,DTBUF
001D27 E29C DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001D2A E29F E607             7      AND 7
001D2C E2A1 47               4      LD  B,A
001D2D E2A2 0E00             7      LD  C,0
001D2F E2A4 EDB0                    LDIR
001D31 E2A6 EB               4      EX  DE,HL
001D32 E2A7 D1              10      POP DE
001D33 E2A8 13               6      INC DE
001D34 E2A9 C1              10      POP BC
001D35 E2AA 10D6            13      DJNZ    PDRD
001D37 E2AC AF               4      XOR A
001D38 E2AD C9              10      RET
       E2AE                     PDRWERR:
001D39 E2AE E1              10      POP HL
001D3A E2AF D1              10      POP DE
001D3B E2B0 C1              10      POP BC
001D3C E2B1 C9              10      RET
       E2B2                     PDWX:                   ;CF=0 READ CF=1 WRITE
001D3D E2B2 DDCB1266        20      BIT 4,(IX+DPB_DEVICE)   ;デバイス情報
001D41 E2B6 2003            12      JR  NZ,PDWX1
001D43 E2B8 DD4E06          19      LD  C,(IX+DPB_FATID)    ;メディアバイト
       E2BB                     PDWX1:
001D46 E2BB DD7E13          19      LD  A,(IX+DPB_UNITNO)   ;デバイスドライバ内におけるユニット番号
001D49 E2BE C5              11      PUSH    BC
001D4A E2BF D5              11      PUSH    DE
001D4B E2C0 E5              11      PUSH    HL
001D4C E2C1 DDE5            15      PUSH    IX
001D4E E2C3 FDE5            15      PUSH    IY
001D50 E2C5 CDA7FF          17      CALL    H_PHYD
001D53 E2C8 FDE1            14      POP IY
001D55 E2CA DDE1            14      POP IX
001D57 E2CC E1              10      POP HL
001D58 E2CD D1              10      POP DE
001D59 E2CE C1              10      POP BC
001D5A E2CF D8              11      RET C
       E2D0                     PDWX2:
001D5B E2D0 13               6      INC DE
001D5C E2D1 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001D5F E2D4 E607             7      AND 7
001D61 E2D6 84               4      ADD A,H
001D62 E2D7 67               4      LD  H,A
001D63 E2D8 10F6            13      DJNZ    PDWX2
001D65 E2DA AF               4      XOR A
001D66 E2DB C9              10      RET
[EOF:MSXDISK.ASM:UTF_8]
                                    INCLUDE "LDCCPWK.ASM"
                                
                                ;   LSX-Dodgers CCP WORK
                                
       003B                     PATHX   EQU 59
001D67 E2DC                     PATHD:  DS  PATHX
001DA2 E317 00                  PATHE:  DB  0
                                
       E318                     DTA_CCP:
001DA3 E318                         DS  37
                                
       E33D                     FCB_BAT:
001DC8 E33D                         DS  37
                                
001DED E362 2020203C4449523E    DIRMES: DB  "   <DIR>  $"
            202024              
001DF8 E36D 20667265652024      FREE:   DB  " free $"
[EOF:LDCCPWK.ASM:UTF_8]
                                    INCLUDE "LDWORK.ASM"
                                
                                ;   LSX-Dodgers WORK0
                                ;
                                ;   CP/M互換BIOS
                                ;   BOOT:アドレス下位1バイトが0になるように
       E374                     AT_WORK:
001DFF E374                         DS  WORKAD-AT_WORK
                                
       E400                     CPM_BOOT:
001E8B E400 C30000          10      JP  0
       E403                     _SYS00:     ;(BDOS)プログラム終了
       E403                     CPM_WBOOT:
001E8E E403 C309C9          10      JP  WBOOT1
       E406                     CPM_CONST:
001E91 E406 C354D1          10      JP  CONSTX
       E409                     _SYS07:     ;(BDOS)コンソール直接入力
       E409                     CPM_CONIN:
001E94 E409 C375D0          10      JP  FLGET
       E40C                     CPM_CONOUT:
001E97 E40C C3F8D1          10      JP  CONOUT1
                                
       E40F                     DECBF:              ;10進数表示時のバッファ(5バイト)
001E9A E40F                         DS  5
       E40F                     RR_BUF_HL   EQU DECBF   ;CP/M互換ファイルアクセスの際のランダムレコードの一時的な保管場所
       E411                     RR_BUF_A    EQU DECBF+2 ;計3バイト
                                
001E9F E414 00                  FDRV:   DB  0
001EA0 E415                     FNAME:  DS  36
001EC4 E439                     SFILE:  DS  33      ;DRV FILENAME
                                
001EE5 E45A                         DS  3
                                
001EE8 E45D 0000                LEFTX:  DW  0
001EEA E45F 0000                DTAX:   DW  0
                                
       E461                     ZERO:
       E461                     BEEPD:
001EEC E461 008E01000B000C10        DB  0,08EH,1,0,00BH,0,00CH,010H
001EF4 E469 073E08100D00FF          DB  007H,03EH,008H,010H,00DH,0,0FFH
       E462                     RTC_YY  EQU BEEPD+1
       E463                     RTC_MW  EQU BEEPD+2
       E464                     RTC_DD  EQU BEEPD+3
       E465                     RTC_TT  EQU BEEPD+4
       E466                     RTC_MM  EQU BEEPD+5
       E467                     RTC_SS  EQU BEEPD+6
       E462                     ROM_SLT EQU BEEPD+1
                                
001EFB E470 00                  CHECK:  DB  0
                                
001EFC E471 4F4B24              OK: DB  "OK$"
001EFF E474                         DS  5
001F04 E479 4572726F722124      COMERM: DB  "Error!$"
                                ;   システムワークエリア
                                ;   _CYL0:アドレス下位1バイトが080Hになるように
001F0B E480 FF                  _CYL0:  DB  0FFH    ;Cylinder
001F0C E481 FF                  _CYL1:  DB  0FFH    ;Cylinder
001F0D E482 FF                  _CYL2:  DB  0FFH    ;Cylinder
001F0E E483 FF                  _CYL3:  DB  0FFH    ;Cylinder
001F0F E484 00                  _DRIVE: DB  0   ;unit number
001F10 E485 00                  _SEEKSP:DB  0   ;Seek speed
001F11 E486 FF                  _ISEEK: DB  0FFH    ;
001F12 E487 00                  _DVSW:  DB  0
001F13 E488 00                  _DRV:   DB  0
001F14 E489 FF                  _DSK:   DB  0FFH
001F15 E48A 8000                _DTA:   DW  00080H
001F17 E48C 0000                _CTC:   DW  0
001F19 E48E 0000                _TXADR: DW  0
001F1B E490 0000                _KEYPS: DW  0
001F1D E492 00FF                _KEYD:  DW  0FF00H  ;キーデータ
001F1F E494 0000                _KEYSP: DB  KEYSP_L,KEYSP_H ;オートリピートの速度
001F21 E496 00                  _COLORF:DB  COLORF  ;色
001F22 E497 19                  _LINE:  DB  LINE
                                
001F23 E498 0000                _FCB:   DW  0   ;SEARCH FILES
001F25 E49A 0000                _FBPS:  DW  0   ;    //
001F27 E49C 0000                _FBAD:  DW  0   ;    //
001F29 E49E 00                  _FBCNT: DB  0   ;    //
001F2A E49F 00                  _FILEN: DB  0   ;    //
001F2B E4A0 00                  _DIRF:  DB  0   ;bit7:ディレクトリ bit0-6:セクタインデックス
001F2C E4A1                         DS  1
001F2D E4A2 00                  _WTFATF:DB  0   ;FATバッファの更新フラグ
001F2E E4A3                         DS  1
001F2F E4A4 00                  _WTDBF: DB  0   ;データバッファの更新フラグ
001F30 E4A5 FF                  _DBDRV: DB  0FFH    ;データバッファにあるデータを読み込んだドライブ
001F31 E4A6 0000                _DBSEC: DW  0   ;データバッファにあるデータを読み込んだセクタ番号
001F33 E4A8 0000                _DPB:   DW  0
       E4AA                     _FATDRV:
001F35 E4AA FF                      DB  0FFH    ;FATバッファに読み込んでいるドライブ
001F36 E4AB 00                  _FATIX: DB  0   ;FATバッファに読み込んでいるインデックス
       E4AC                     _FAKEFREE:
001F37 E4AC 0000                    DW  0   ;偽の残量（FATサイズが大きくなると重くなるのでその対策）
                                
001F39 E4AE                         DS  2
                                
       E4B0                     CRTCD:
001F3B E4B0 6F                      DB  06FH
       E4B1                     _WIDTH:
001F3C E4B1 28                      DB  WIDTH
       E4B2                     TVRAMTOP:
001F3D E4B2 5938                    DB  059H,038H
001F3F E4B4 1F02                    DB  01FH,002H
       E4B6                     _LINE2:
001F41 E4B6 19                      DB  019H
       E4B7                     WKE4:
001F42 E4B7 1C                      DB  01CH
       E4B8                     WKE6:
001F43 E4B8 00                      DB  000H
       E4B9                     WK40:
001F44 E4B9 07                      DB  007H
       E4BA                     _PAGE_MINUS:
001F45 E4BA 18FC                    DW  0-WIDTH*LINE
       E4BC                     _WIDTH_MINUS:
001F47 E4BC D8FF                    DW  0-WIDTH
       E4BE                     WK30:
001F49 E4BE 0C                      DB  00CH
       E4BF                     WK31:
       E4BF                     WK1FD0:
001F4A E4BF 20                      DB  020H
                                
001F4B E4C0 0000                CTC0:   DW  INTCTCE
001F4D E4C2 0000                CTC1:   DW  INTCTCE
001F4F E4C4 0000                CTC2:   DW  INTCTCE
001F51 E4C6 0000                CTC3:   DW  INTCTCE
001F53 E4C8 0000                INTVEC: DW  INT
                                
                                ;   LSX-Dodgers 独自BIOS
                                
001F55 E4CA C3BAD0          10  _INKEY: JP  INKEY
001F58 E4CD C3FBCF          10  _PRINT: JP  PRINT
001F5B E4D0 C392D1          10  _SCRN:  JP  SCRN
001F5E E4D3 C372D1          10  _POS:   JP  POS
001F61 E4D6 C37DD1          10  _LOC:   JP  LOC
       E4D9                     _CHGDRV:
001F64 E4D9 C3C8E0          10      JP  CHGDRV
       E4DC                     _GETDPB:
001F67 E4DC C387E1          10      JP  GETDPB
       E4DF                     _FFLUSH:
001F6A E4DF C3A5E1          10      JP  FFLUSH
       E4E2                     _RDFATX:
001F6D E4E2 C3A1DD          10      JP  RDFATX
001F70 E4E5 C3C9DE          10  _RDFAT: JP  RDFAT
001F73 E4E8 C3C0E1          10  _WTTRK: JP  WTTRK
001F76 E4EB C3C2E1          10  _FDRD:  JP  FDRD
001F79 E4EE C3C0E1          10  _FDWT:  JP  FDWT
       E4F1                     _BPB2DPB:
001F7C E4F1 C356DF          10      JP  BPB2DPB
       E4F4                     _BREAK:
001F7F E4F4 C388CA          10      JP  END_BATCH
       E4F7                     _GNCL:
001F82 E4F7 C343DE          10      JP  GNCL        ; self-modifying code
       E4F8                     GNCPAT  EQU $-2
       E4FA                     _SNCL:
001F85 E4FA C366DE          10      JP  SNCL        ; self-modifying code
       E4FB                     SNCPAT  EQU $-2
001F88 E4FD C341C9          10  _COMANL:JP  COMANL
                                
       E500                     _WE:
[EOF:LDWORK.ASM:SHIFT_JIS]
                                    INCLUDE "LDCALL.ASM"
                                
                                ;   LSX-Dodgers システムコール(BDOS)
                                ;
                                ;   LSX-Dodgers SYSTEM CALL
                                ;   STABLE:アドレス下位1バイトが0になるように
                                
       E500                     STABLE:
                                ;0
001F8B E500 03E4FECF2FD0FCD5        DW  _SYS00,_SYS01,_SYS02,_SYS03
001F93 E508 6ACD6ACD34D009E4        DW  _SYS04,_SYS05,_SYS06,_SYS07
001F9B E510 3CD06CCDC0D054D1        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001FA3 E518 81CD86CD95CDA6CD        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001FAB E520 FACD41CE8ACEBBCE        DW  _SYS10,_SYS11,_SYS12,_SYS13
001FB3 E528 C3CED9CEEECEE6CE        DW  _SYS14,_SYS15,_SYS16,_SYS17
001FBB E530 35CF3ACF3FCF45CF        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001FC3 E538 6ACD6BCF6ACD6FCF        DW  _SYS1C,_SYS1D,_SYS1E,_SYS1F
                                ;2
001FCB E540 6ACD25CF2DCF76CF        DW  _SYS20,_SYS21,_SYS22,_SYS23
001FD3 E548 9CCF6ACD75DA4DDB        DW  _SYS24,_ERROR,_SYS26,_SYS27
001FDB E550 2DCFA5CF66D1FCD5        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001FE3 E558 6CD1FCD56ACDC6CF        DW  _SYS2C,_SYS2D,_SYS2E,_SYS2F
                                ;3
001FEB E560 C0CF6ACD6ACD6ACD        DW  _SYS30,_ERROR,_ERROR,_ERROR
001FF3 E568 6ACD6ACD6ACD6ACD        DW  _ERROR,_ERROR,_ERROR,_ERROR
001FFB E570 6ACDFCD5FCD5E7CF        DW  _ERROR,_SYS39,_SYS3A,_SYS5A
                                ;DOS2
002003 E578 4DCD                    DW  _DOS2
                                
002005 E57A                         DS  2
002007 E57C 00E7                _FATBF: DW  FATBF
002009 E57E 00EF                _DTBUF: DW  DTBUF
                                
                                ;   コントロールコードテーブル
                                ;   CTRLTB:アドレス下位1バイトが080Hになるように
                                
       E580                     CTRLTB:
00200B E580 00000000A2D10000        DW  CTRL00,CTRL00,CTRL02,CTRL03 ;  A,B,C
002013 E588 0000000000000000        DW  CTRL04,CTRL05,CTRL06,CTRL07 ;D,E,F,G
00201B E590 0000000000000000        DW  CTRL08,CTRL09,CTRL0A,CTRL0B ;H,I,J,K
002023 E598 0000000000000000        DW  CTRL0C,CTRL0D,CTRL0E,CTRL00 ;L,M,N,O
00202B E5A0 0000000000000000        DW  CTRL00,CTRL00,CTRL12,CTRL00 ;P,Q,R,S
002033 E5A8 0000000000000000        DW  CTRL00,CTRL00,CTRL00,CTRL00 ;T,U,V,W
00203B E5B0 0000000000000000        DW  CTRL00,CTRL00,CTRL0C,CTRL1B ;X,Y,Z,ESC
002043 E5B8 0000000000000000        DW  CTRL1C,CTRL1D,CTRL1E,CTRL1F ;→,←,↑,↓
                                
00204B E5C0 0200                M2D:    DW  2
00204D E5C2 FD02                    DB  0FDH,2
00204F E5C4 6401                    DW  356
002051 E5C6 FF0728090182            DB  0FFH,7,40,9,1,082H
002057 E5CC 0500A7000800            DW  5,0A7H,8
                                
00205D E5D2 0200                M2HD:   DW  2
00205F E5D4 FE01                    DB  0FEH,1
002061 E5D6 C704                    DW  1223
002063 E5D8 FE064D080184            DB  0FEH,6,77,8,1,084H
002069 E5DE 0500A7000900            DW  5,0A7H,9
                                
00206F E5E4 1617                SDDATA: DB  22,23       ;(FCB)ファイルを最後に変更した時刻
002071 E5E6 1415                    DB  20,21       ;(FCB)ファイルを最後に変更した日付
002073 E5E8 1A1B                    DB  26,27       ;(FCB)ファイルの先頭クラスタ
002075 E5EA 10111213                DB  16,17,18,19 ;(FCB)ファイルのサイズ(バイト単位)
       E5EE                     SDDATAE:
                                
002079 E5EE                         DS  2
       E5F0                     _FCB_BAT:
00207B E5F0 3DE3                    DW  FCB_BAT
       E5F2                     _PATH:
00207D E5F2 DCE2                    DW  PATHD
                                
00207F E5F4                     SCDIR:  DS  2       ;+14 +15
002081 E5F6                     SFBPS:  DS  2       ;FBPS
002083 E5F8                     SFNDF:  DS  2       ;FILEN DIRF
                                
002085 E5FA 0000                _FATPS: DW  0
002087 E5FC 0000                _DIRPS: DW  0
002089 E5FE 0000                _CLPS:  DW  0
                                
       E600                     _PE:
[EOF:LDCALL.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDPB.ASM"
                                
                                ;   LSX-Dodgers DPB
                                ;   MSX
                                
       E600                     _DEVICE:
                                
                                ;   A:
                                
00208B E600 0300                    DW  3   ;DPB_FATLN
00208D E602 EBE4                    DW  _FDRD   ;DPB_DRD
00208F E604 EEE4                    DW  _FDWT   ;DPB_DWT
002091 E606 F9                      DB  0F9H    ;DPB_FATID
002092 E607 03                      DB  3   ;DPB_SECPCL
002093 E608 CB02                    DW  715 ;DPB_MAXCL
002095 E60A 00                      DB  0   ;DPB_FDMODE
002096 E60B 07                      DB  7   ;DPB_DIRSCNT
002097 E60C 01                      DB  1   ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
002098 E60D 00                      DB  0   ;DPB_MAXSEC
002099 E60E 01                      DB  1   ;DPB_FATPS
00209A E60F 82                      DB  082H    ;DPB_BPS
00209B E610 0700                    DW  7   ;DPB_DIRPS
00209D E612 2C                      DB  02CH    ;DPB_DEVICE
00209E E613 00                      DB  0   ;DPB_UNITNO
00209F E614 0A00                    DW  10  ;DPB_ADDCL
0020A1 E616 0000                    DW  0   ;DPB_16
0020A3 E618 0000                    DW  0   ;DPB_18
0020A5 E61A 0000                    DW  0   ;DPB_SDIR
0020A7 E61C 524F4D30                DB  "ROM0"  ;DPB_NAME
                                
                                ;   B:
                                
0020AB E620 0300                    DW  3   ;DPB_FATLN
0020AD E622 EBE4                    DW  _FDRD   ;DPB_DRD
0020AF E624 EEE4                    DW  _FDWT   ;DPB_DWT
0020B1 E626 F9                      DB  0F9H    ;DPB_FATID
0020B2 E627 03                      DB  3   ;DPB_SECPCL
0020B3 E628 CB02                    DW  715 ;DPB_MAXCL
0020B5 E62A 00                      DB  0   ;DPB_FDMODE
0020B6 E62B 07                      DB  7   ;DPB_DIRSCNT
0020B7 E62C 2E                      DB  46  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
0020B8 E62D 00                      DB  0   ;DPB_MAXSEC
0020B9 E62E 01                      DB  1   ;DPB_FATPS
0020BA E62F 82                      DB  082H    ;DPB_BPS
0020BB E630 0700                    DW  7   ;DPB_DIRPS
0020BD E632 2C                      DB  02CH    ;DPB_DEVICE
0020BE E633 01                      DB  1   ;DPB_UNITNO
0020BF E634 0A00                    DW  10  ;DPB_ADDCL
0020C1 E636 0000                    DW  0   ;DPB_16
0020C3 E638 0000                    DW  0   ;DPB_18
0020C5 E63A 0000                    DW  0   ;DPB_SDIR
0020C7 E63C 524F4D31                DB  "ROM1"  ;DPB_NAME
                                
                                ;   C:
                                
0020CB E640                         DS  32
                                
                                ;   D:
                                
0020EB E660                         DS  32
                                
                                ;   E:
                                
00210B E680 0300                    DW  3   ;DPB_FATLN
00210D E682 82E2                    DW  PDRD    ;DPB_DRD
00210F E684 57E2                    DW  PDWT    ;DPB_DWT
002111 E686 F9                      DB  0F9H    ;DPB_FATID
002112 E687 03                      DB  3   ;DPB_SECPCL
002113 E688 CB02                    DW  715 ;DPB_MAXCL
002115 E68A FF                      DB  0FFH    ;DPB_FDMODE
002116 E68B 07                      DB  7   ;DPB_DIRSCNT
002117 E68C 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
002118 E68D 09                      DB  9   ;DPB_MAXSEC
002119 E68E 01                      DB  1   ;DPB_FATPS
00211A E68F 82                      DB  082H    ;DPB_BPS
00211B E690 0700                    DW  7   ;DPB_DIRPS
00211D E692 2C                      DB  02CH    ;DPB_DEVICE
00211E E693 00                      DB  0   ;DPB_UNITNO
00211F E694 0A00                    DW  10  ;DPB_ADDCL
002121 E696 0000                    DW  0   ;DPB_16
002123 E698 0000                    DW  0   ;DPB_18
002125 E69A 0000                    DW  0   ;DPB_SDIR
002127 E69C 44534B30                DB  "DSK0"  ;DPB_NAME
                                
                                ;   F:
                                
00212B E6A0 0300                    DW  3   ;DPB_FATLN
00212D E6A2 82E2                    DW  PDRD    ;DPB_DRD
00212F E6A4 57E2                    DW  PDWT    ;DPB_DWT
002131 E6A6 F9                      DB  0F9H    ;DPB_FATID
002132 E6A7 03                      DB  3   ;DPB_SECPCL
002133 E6A8 CB02                    DW  715 ;DPB_MAXCL
002135 E6AA FF                      DB  0FFH    ;DPB_FDMODE
002136 E6AB 07                      DB  7   ;DPB_DIRSCNT
002137 E6AC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
002138 E6AD 09                      DB  9   ;DPB_MAXSEC
002139 E6AE 01                      DB  1   ;DPB_FATPS
00213A E6AF 82                      DB  082H    ;DPB_BPS
00213B E6B0 0700                    DW  7   ;DPB_DIRPS
00213D E6B2 2C                      DB  02CH    ;DPB_DEVICE
00213E E6B3 01                      DB  1   ;DPB_UNITNO
00213F E6B4 0A00                    DW  10  ;DPB_ADDCL
002141 E6B6 0000                    DW  0   ;DPB_16
002143 E6B8 0000                    DW  0   ;DPB_18
002145 E6BA 0000                    DW  0   ;DPB_SDIR
002147 E6BC 44534B31                DB  "DSK1"  ;DPB_NAME
                                
                                ;   G:
                                
00214B E6C0 0300                    DW  3   ;DPB_FATLN
00214D E6C2 82E2                    DW  PDRD    ;DPB_DRD
00214F E6C4 57E2                    DW  PDWT    ;DPB_DWT
002151 E6C6 F9                      DB  0F9H    ;DPB_FATID
002152 E6C7 03                      DB  3   ;DPB_SECPCL
002153 E6C8 CB02                    DW  715 ;DPB_MAXCL
002155 E6CA FF                      DB  0FFH    ;DPB_FDMODE
002156 E6CB 07                      DB  7   ;DPB_DIRSCNT
002157 E6CC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
002158 E6CD 09                      DB  9   ;DPB_MAXSEC
002159 E6CE 01                      DB  1   ;DPB_FATPS
00215A E6CF 82                      DB  082H    ;DPB_BPS
00215B E6D0 0700                    DW  7   ;DPB_DIRPS
00215D E6D2 2C                      DB  02CH    ;DPB_DEVICE
00215E E6D3 02                      DB  2   ;DPB_UNITNO
00215F E6D4 0A00                    DW  10  ;DPB_ADDCL
002161 E6D6 0000                    DW  0   ;DPB_16
002163 E6D8 0000                    DW  0   ;DPB_18
002165 E6DA 0000                    DW  0   ;DPB_SDIR
002167 E6DC 44534B32                DB  "DSK2"  ;DPB_NAME
                                
                                ;   H:
00216B E6E0 0300                    DW  3   ;DPB_FATLN
00216D E6E2 82E2                    DW  PDRD    ;DPB_DRD
00216F E6E4 57E2                    DW  PDWT    ;DPB_DWT
002171 E6E6 F9                      DB  0F9H    ;DPB_FATID
002172 E6E7 03                      DB  3   ;DPB_SECPCL
002173 E6E8 CB02                    DW  715 ;DPB_MAXCL
002175 E6EA FF                      DB  0FFH    ;DPB_FDMODE
002176 E6EB 07                      DB  7   ;DPB_DIRSCNT
002177 E6EC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
002178 E6ED 09                      DB  9   ;DPB_MAXSEC
002179 E6EE 01                      DB  1   ;DPB_FATPS
00217A E6EF 82                      DB  082H    ;DPB_BPS
00217B E6F0 0700                    DW  7   ;DPB_DIRPS
00217D E6F2 2C                      DB  02CH    ;DPB_DEVICE
00217E E6F3 07                      DB  7   ;DPB_UNITNO
00217F E6F4 0A00                    DW  10  ;DPB_ADDCL
002181 E6F6 0000                    DW  0   ;DPB_16
002183 E6F8 0000                    DW  0   ;DPB_18
002185 E6FA 0000                    DW  0   ;DPB_SDIR
002187 E6FC 44534B37                DB  "DSK7"  ;DPB_NAME
       E700                     MSX_E:
[EOF:MSXDPB.ASM:UTF_8]
                                
00218B E700                         DS  03FFFH - $$
003FFF 0574 00                      DB  0
       0575                     LAST_ADR:
                                
                                    END
[EOF:MSX.ASM:UTF_8]
