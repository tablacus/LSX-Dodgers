                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.13.0, LST:Full:4
                                ;   LSX-Dodgers for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "MSXDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       0003                     MAC EQU 3   ;MSX
       0001                     DEV EQU 1
                                
       001D                     VER_6F  EQU 0001DH
                                
       4000                     RUN EQU 04000H
                                
       C700                     START2  EQU 0C700H
       CA06                     BDOS    EQU 0CA06H
       E500                     WORKAD  EQU 0E500H
       E800                     FATBF   EQU 0E800H
       EE00                     DTBUF   EQU 0EE00H
       0028                     WIDTH   EQU 40
       0019                     LINE    EQU 25
       0000                     COLORF  EQU 0
       0000                     KEYSP_H EQU 0
       0000                     KEYSP_L EQU 0
       0008                     COMS    EQU 8
       0002                     MAX_SEC_SZ_H    EQU 2       ;1セクタ1024バイトのサポート(2:off 4:on)
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
                                
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PINLIN  EQU 000AEH
       00B1                     INLIN   EQU 000B1H
       00B4                     QINLIN  EQU 000B4H
       00B7                     BREAKX  EQU 000B7H
       00C0                     BEEP    EQU 000C0H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0144                     PHYDIO  EQU 00144H  ;MAIN:BIOS:
       0156                     KILBUF  EQU 00156H
                                
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
                                
       FEDA                     H_STKE  EQU 0FEDAH
       FFA7                     H_PHYD  EQU 0FFA7H
                                
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU 06000H
       6800                     BANK1_SEL EQU 06800H
       7000                     BANK2_SEL EQU 07000H
       7800                     BANK3_SEL EQU 07800H
                                            ;ASCII-16K
                                ;BANK0_SEL EQU 06000H
                                ;BANK1_SEL EQU 07000H
                                            ;KONAMI-8K
       8000                     KONAMI_BANK2_SEL EQU 08000H
       A000                     KONAMI_BANK3_SEL EQU 0A000H
[EOF:MSXDEF.ASM:UTF_8]
                                    INCLUDE "LDDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                
       0001                     VER_1   EQU 1
       0006                     VER_2   EQU 6
       0001                     VER_3   EQU 1
       1D03                     MACW    EQU MAC + 01D00H    ;機種フラグとLD判別フラグ
       0103                     MACD    EQU MAC + DEV * 256 ;機種フラグとデバイスフラグ
       0161                     VER EQU VER_1 * 256 + VER_2 * 16 + VER_3
                                
       0004                     _DVSW   EQU 00004H
       0005                     SYSTEM  EQU 00005H
       000F                     JP_HL   EQU 0000FH
       005C                     FCB1    EQU 0005CH
       006C                     FCB2    EQU 0006CH
       005D                     FCB1FN  EQU FCB1+1
       006D                     FCB2FN  EQU FCB2+1
       0080                     DTA1    EQU 00080H
                                
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       0000                     DPB_FATLN   EQU 00H
       0002                     DPB_DRD     EQU 02H
       0004                     DPB_DWT     EQU 04H
       0006                     DPB_FATID   EQU 06H
       0007                     DPB_SECPCL  EQU 07H
       0008                     DPB_MAXCL   EQU 08H
       000A                     DPB_FDMODE  EQU 0AH
       000B                     DPB_DIRSCNT EQU 0BH
       000C                     DPB_MAXCYL  EQU 0CH
       000D                     DPB_MAXSEC  EQU 0DH
       000E                     DPB_FATPS   EQU 0EH
       000F                     DPB_BPS     EQU 0FH
       0010                     DPB_DIRPS   EQU 10H
       0012                     DPB_DEVICE  EQU 12H
       0013                     DPB_UNITNO  EQU 13H
       0014                     DPB_ADDCL   EQU 14H
                                
       001A                     DPB_SDIR    EQU 1AH
       001C                     DPB_NAME    EQU 1CH
                                
[EOF:LDDEF.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\hardware.asm"
                                ; C-BIOS hardware related declarations
                                ;
                                ; Copyright (c) 2002-2005 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2004-2005 Joost Yervante Damad.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                ;---------------------------------------------------
                                ; I/O ports
                                
       002E                     DBG_CTRL:       equ     $2E             ; openMSX debugdevice control (mode)
       002F                     DBG_DATA:       equ     $2F             ; openMSX debugdevice data
                                
       0090                     PRN_STAT:       equ     $90             ; printer status
       0091                     PRN_DATA:       equ     $91             ; printer data
                                
       0098                     VDP_DATA:       equ     $98             ; VDP data port (VRAM read/write)
       0099                     VDP_ADDR:       equ     $99             ; VDP address (write only)
       0099                     VDP_STAT:       equ     $99             ; VDP status (read only)
       009A                     VDP_PALT:       equ     $9A             ; VDP palette latch (write only)
       009B                     VDP_REGS:       equ     $9B             ; VDP register access (write only)
                                
       00A0                     PSG_REGS:       equ     $A0             ; PSG register write port
       00A1                     PSG_DATA:       equ     $A1             ; PSG value write port
       00A2                     PSG_STAT:       equ     $A2             ; PSG value read port
                                
       00A8                     PSL_STAT:       equ     $A8             ; slot status
       00A9                     KBD_STAT:       equ     $A9             ; keyboard status
       00AA                     GIO_REGS:       equ     $AA             ; General IO Register
       00AB                     PPI_REGS:       equ     $AB             ; PPI register
                                
       00B4                     RTC_ADDR:       equ     $B4             ; RTC address
       00B5                     RTC_DATA:       equ     $B5             ; RTC data
                                
       00F4                     SYSFLAGS:       equ     $F4             ; MSX2+ System flags,
                                                                        ; preserved after reset
                                                                        ; bit 5: CPU boot mode (1=R800)
                                                                        ; bit 7: Boot method
                                                                        ;        (1=soft boot, no logo)
                                
       00FC                     MAP_REG1:       equ     $FC             ; memory mapper: bank in $0000-$3FFF
       00FD                     MAP_REG2:       equ     $FD             ; memory mapper: bank in $4000-$7FFF
       00FE                     MAP_REG3:       equ     $FE             ; memory mapper: bank in $8000-$BFFF
       00FF                     MAP_REG4:       equ     $FF             ; memory mapper: bank in $C000-$FFFF
                                
                                ;---------------------------------------------------
                                ; memory mapped I/O
                                
       FFFF                     SSL_REGS:       equ     $FFFF           ; secondary slot select registers
                                
                                ;---------------------------------------------------
                                ; Constants used to define which hardware the BIOS will run on.
                                ; Used by the main_<model>.asm sources.
                                
                                ; VDP models:
       9918                     TMS99X8:        equ     $9918
       9938                     V9938:          equ     $9938
       9958                     V9958:          equ     $9958
                                
                                ; MSX models:
       0000                     MODEL_MSX1:     equ     0
       0001                     MODEL_MSX2:     equ     1
       0002                     MODEL_MSX2P:    equ     2
       0003                     MODEL_MSXTR:    equ     3
                                
       0004                     MODEL_SUBROM:   equ     4
                                
                                ; Locales:
                                ; -- ID byte 0
       0000                     LOCAL_CHSET_JP  equ     $00
       0001                     LOCAL_CHSET_US  equ     $01
       0002                     LOCAL_CHSET_KO  equ     $02
                                
                                ; There are charsets which pretend to be INT, but are not... For now only BR:
       0000                     LOCAL_CHSET_VAR_NONE equ  $00
       0001                     LOCAL_CHSET_VAR_BR   equ  $01
                                
       0000                     LOCAL_DATE_YMD  equ     $00
       0010                     LOCAL_DATE_MDY  equ     $10
       0020                     LOCAL_DATE_DMY  equ     $20
                                
       0000                     LOCAL_INT_60HZ  equ     $00
       0080                     LOCAL_INT_50HZ  equ     $80
                                
                                ; -- ID byte 1
       0000                     LOCAL_KBD_JP    equ     $00
       0001                     LOCAL_KBD_US    equ     $01
       0002                     LOCAL_KBD_FR    equ     $02
       0003                     LOCAL_KBD_UK    equ     $03
       0004                     LOCAL_KBD_DE    equ     $04
                                
       0000                     LOCAL_BASIC_JP  equ     $00
       0001                     LOCAL_BASIC_US  equ     $01
                                
                                
                                ; BOOLEAN VALUES
       0001                     YES:            equ     1
       0000                     NO:             equ     0
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:hardware.asm:UTF_8]
                                    INCLUDE "msx_cbios\\systemvars.asm"
                                ;
                                ; C-BIOS system variable declarations
                                ;
                                ; Copyright (c) 2002-2003 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Joost Yervante Damad.  All rights reserved.
                                ; Copyright (c) 2004-2005 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2005 Jussi Pitkänen.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                
                                ;-------------------
                                ; help function area
                                ;-------------------
                                ; Note: Functions defined in "main.asm" are disabled here.
                                
                                ; F380-F384: interslot read
                                ;RDPRIM:         equ     $F380
                                
                                ; F385-F38B: interslot read
                                ;WRPRIM:         equ     $F385
                                
                                ; F38C-F399: interslot call
                                ;CLPRIM:         equ     $F38C
                                
                                ; F39A-F3AD: workarea for the DEF USR statement
                                ; this area is initialized with the 10 times the value $475A, which gives
                                ; the error 'Syntax Error'
       F39A                     USRTAB:         equ     $F39A
                                
                                ;----------------------
                                ; screen parameter area
                                ;----------------------
                                
                                ; F3AE: # of positions on a line in SCREEN 0 (ini:39)
       F3AE                     LINL40:         equ     $F3AE
                                
                                ; F3AF: # of positions on a line in SCREEN 1 (ini:29)
       F3AF                     LINL32:         equ     $F3AF
                                
                                ; F3B0: # of actually used positions in the current screenmodus (ini:39)
       F3B0                     LINLEN:         equ     $F3B0
                                
                                ; F3B1: # of used lines on screen (ini:24)
       F3B1                     CRTCNT:         equ     $F3B1
                                
                                ; F3B2: # of positions within a tabulator-column (ini:14)
       F3B2                     CLMLST:         equ     $F3B2
                                
                                ; F3B3-F3B4: BASE(0): name table address for SCREEN 0 (ini:$0000)
                                ; used to initialize NAMBAS when SCREEN 0 is activated
       F3B3                     TXTNAM:         equ     $F3B3
                                
                                ; F3B5-F3B6: BASE(1): color table address for SCREEN 0, unused? (ini:$0000)
       F3B5                     TXTCOL:         equ     $F3B5
                                
                                ; F3B7-F3B8: BASE(2): pattern table address for SCREEN 0 (ini:$0800)
                                ; used to initialize CGPBAS when SCREEN 0 is activated
       F3B7                     TXTCGP:         equ     $F3B7
                                
                                ; F3B9-F3BA: BASE(3): sprite attribute table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize ATRBAS when SCREEN 0 is activated
       F3B9                     TXTATR:         equ     $F3B9
                                
                                ; F3BB-F3BC: BASE(4): sprite pattern table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize PATBAS when SCREEN 0 is activated
       F3BB                     TXTPAT:         equ     $F3BB
                                
                                ; F3BD-F3BE: BASE(5): nametable address for SCREEN 1 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 1 is activated
       F3BD                     T32NAM:         equ     $F3BD
                                
                                ; F3BF-F3C0: BASE(6): color table address for SCREEN 1 (ini:$2000)
       F3BF                     T32COL:         equ     $F3BF
                                
                                ; F3C1-F3C2: BASE(7): pattern table address for SCREEN 1 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 1 is activated
       F3C1                     T32CGP:         equ     $F3C1
                                
                                ; F3C3-F3C4: BASE(8): sprite attribute table address for SCREEN 1 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 1 is activated
       F3C3                     T32ATR:         equ     $F3C3
                                
                                ; F3C5-F3C6: BASE(9): sprite pattern table address for SCREEN 1 (ini:$0800)
                                ; used to initialize PATBAS when SCREEN 1 is activated
       F3C5                     T32PAT:         equ     $F3C5
                                
                                ; F3C7-F3C8: BASE(10): name table address for SCREEN 2 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 2 is activated
       F3C7                     GRPNAM:         equ     $F3C7
                                
                                ; F3C9-F3CA: BASE(11): color table address for SCREEN 2 (ini:$2000)
       F3C9                     GRPCOL:         equ     $F3C9           ; Screen2 Color
                                
                                ; F3CB-F3CC: BASE(12): pattern table address for SCREEN 2 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 2 is activated
       F3CB                     GRPCGP:         equ     $F3CB
                                
                                ; F3CD-F3CE: BASE(13): sprite attribute table address for SCREEN 2 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 2 is activated
       F3CD                     GRPATR:         equ     $F3CD
                                
                                ; F3CF-F3D0: BASE(14): sprite pattern table address for SCREEN 2 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 2 is activated
       F3CF                     GRPPAT:         equ     $F3CF
                                
                                ; F3D1-F3D2: BASE(15): name table address for SCREEN 3 (ini:$0800)
                                ; used to initialize NAMBAS when SCREEN 3 is activated
       F3D1                     MLTNAM:         equ     $F3D1
                                
                                ; F3D3-F3D4: BASE(16): color table address for SCREEN 3 (ini:$0000)
                                ; the color table is unused in SCREEN 3
       F3D3                     MLTCOL:         equ     $F3D3
                                
                                ; F3D5-F3D6: BASE(17): pattern table address for SCREEN 3 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 3 is activated
       F3D5                     MLTCGP:         equ     $F3D5
                                
                                ; F3D7-F3D8: BASE(18): sprite attribute table address for SCREEN 3 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 3 is activated
       F3D7                     MLTATR:         equ     $F3D7
                                
                                ; F3D9-F3DA: BASE(19): sprite pattern table address for SCREEN 3 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 3 is activated
       F3D9                     MLTPAT:         equ     $F3D9
                                
                                ; F3DB: keyclick when a key is pressed: 0: no, 1: yes (ini: 1)
                                ; SCREEN ,,n will write to this address
       F3DB                     CLIKSW:         equ     $F3DB
                                
                                ; F3DC: line where the cursor is located
                                ; starts to count at 1 for the topmost line
       F3DC                     CSRY:           equ     $F3DC
                                
                                ; F3DD: column where the cursor is located
                                ; starts to count at 1 for the leftmost column
       F3DD                     CSRX:           equ     $F3DD
                                
                                ; F3DE: function key definition shown: 0: no, -1: yes
                                ; Note: MSX BIOS will mess up end-of-screen if this variable contains
                                ;       something other than $00 or $FF.
       F3DE                     CNSDFG:         equ     $F3DE
                                
                                ; F3DF-D3E6: storage for the last written value towards VDP registers 0 till 7
                                ; this is needed because these registers are write only
       F3DF                     RG0SAV:         equ     $F3DF
       F3E0                     RG1SAV:         equ     $F3E0
       F3E1                     RG2SAV:         equ     $F3E1
       F3E2                     RG3SAV:         equ     $F3E2
       F3E3                     RG4SAV:         equ     $F3E3
       F3E4                     RG5SAV:         equ     $F3E4
       F3E5                     RG6SAV:         equ     $F3E5
       F3E6                     RG7SAV:         equ     $F3E6
                                ; F3E7: last read value of VDP register 8
       F3E7                     STATFL:         equ     $F3E7
                                
                                ; F3E8: information about the joystick and space bar
                                ; 7 6 5 4 3 2 1 0
                                ; | | | |       +-- Space bar, trig(0) (0 = pressed)
                                ; | | | +---------- Stick 1, Trigger 1 (0 = pressed)
                                ; | | +------------ Stick 1, Trigger 2 (0 = pressed)
                                ; | +-------------- Stick 2, Trigger 1 (0 = pressed)
                                ; +---------------- Stick 2, Trigger 2 (0 = pressed)
       F3E8                     TRGFLG:         equ     $F3E8
                                
                                ; F3E9: code for the standard foreground color (ini:15)
       F3E9                     FORCLR:         equ     $F3E9
                                
                                ; F3EA: code for the standard background color (ini:4)
       F3EA                     BAKCLR:         equ     $F3EA
                                
                                ; F3EB: code for the standard border color (ini:7)
       F3EB                     BDRCLR:         equ     $F3EB
                                
                                ; F3EC-F3EE: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EC                     MAXUPD:         equ     $F3EC
                                
                                ; F3EF-F3F1: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EF                     MINUPD:         equ     $F3EF
                                
                                ; F3F2: working color, as used for graphical operations
                                ; normally equals to the foreground color (ini:15)
       F3F2                     ATRBYT:         equ     $F3F2
                                
                                ; F3F3-F3F4: starting value of the address of the queue-table
                                ; the queue-table contains 4 queue's: 3 for sound and one for RS232
                                ; (ini: QUETAB ($F959))
       F3F3                     QUEUES:         equ     $F3F3
                                
                                ; F3F5: CLOAD flag =0 when CLOAD =255 when CLOAD?
       F3F5                     FRCNEW:         equ     $F3F5
                                
                                ; F3F6: VDP-interupt counter that counts from 3 to 0, when it reaches zero, the
                                ; keyboard matrix is scanned, and the counters is reset at 3
       F3F6                     SCNCNT:         equ     $F3F6
                                
                                ; F3F7: key repeat counter. Runs from 13 to 0, and is changed when SCNCNT is changed
                                ; if the key remained the same. If it reaches 0, keyrepetition starts. If another key
                                ; is pressed the value is reset at 13.
       F3F7                     REPCNT:         equ     $F3F7
                                
                                ; F3F8-F3F9: first free space in the inputbuffer of the keyboard
                                ; everytime a key is added to the inputbuffer, this address is incremented,
                                ; when it equals to GETPNT, the buffer is full
                                ; the buffer is located at KEYBUF
       F3F8                     PUTPNT:         equ     $F3F8
                                
                                ; F3FA-F3FB: address in inputbuffer of first character that is not yet read
                                ; everytime a key is read from the buffer it is incremented
                                ; the buffer is located at KEYBUF
       F3FA                     GETPNT:         equ     $F3FA
                                
                                ; F3FC-F400: memory area for tape system parameters for 1200 baud
                                ; F3FC: length of  low signal for 0     (ini:83)
                                ; F3FD: length of high signal for 0     (ini:92)
                                ; F3FE: length of  low signal for 1     (ini:38)
                                ; F3FF: length of high signal for 1     (ini:45)
                                ; F400: length of synchronization block (ini:15)
       F3FC                     CS120:          equ     $F3FC
                                
                                ; F401-F405: memory area for tape system parameters for 1200 baud
                                ; F401: length of  low signal for 0     (ini:37)
                                ; F402: length of high signal for 0     (ini:45)
                                ; F403: length of  low signal for 1     (ini:14)
                                ; F404: length of high signal for 1     (ini:22)
                                ; F405: length of synchronization block (ini:31)
       F401                     CS240:          equ     $F401
                                
                                ; F406-F407: lenghts of signal for 0 for the current speed of the tape system
                                ; either equal to the content of F3FC-F3FD or the content of F401-F402
                                ; (ini: 83, 92)
       F406                     LOW_:           equ     $F406 ; real name: LOW, but doesn't compile?
                                
                                ; F408-F409: lenghts of signal for 1 for the current speed of the tape system
                                ; either equal to the content of F3FE-F3FF or the content of F403-F404
                                ; (ini: 38, 45)
       F408                     HIGH_:          equ     $F408 ; real name: HIGH, but doesn't compile?
                                
                                ; F40A: lenghts of synchronization block for the current speed of the tape system
                                ; either equal to the content of F400 or the content of F405 (ini: 15)
       F40A                     HEADER:         equ     $F40A
                                
                                ; F40B-F40C: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; only the byte in F40B is actually used
                                ; If ASPECT2 is larger then 255, the value of F40B is the number of horizontal
                                ; dots per 256 verical dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40B                     ASPCT1:         equ     $F40B
                                
                                ; F40D-F40E: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; If ASPCT2 is smaller then 512, then ASPCT2 is the
                                ; number of vertical dots per 256 horizontal dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40D                     ASPCT2:         equ     $F40D
                                
                                ; F40F-F413: work area for the BASIC statement RESUME NEXT
                                ; contains a fake end of basic program
                                ; (ini: 58, 0, 0, 0, 0)
       F40F                     ENDPRG:         equ     $F40F
                                
                                ; F414: errornumber of last error that happened while executing a BASIC program
                                ; (ini:0)
       F414                     ERRFLG:         equ     $F414
                                
                                ; F415: number of characters in the writebuffer of the printer that still
                                ; need printing
       F415                     LPTPOS:         equ     $F415
                                
                                ; F416: switch indicating if output should be screen or printer
                                ; (think LIST vs LLIST) (ini:0) values: 0: screen, 1: printer
       F416                     PRTFLG:         equ     $F416
                                
                                ; F417: switch indicating if hooked up printer is an MSX printer or not
                                ; values: 0: MSX-Printer, 1: no MSX-Printer
                                ; if the printer is no MSX-Printer, non-ASCII (>=128) characters are replaced
                                ; by spaces before sending them to the printer (ini: 0)
       F417                     NTMSXP:         equ     $F417
                                
                                ; F418: switch indicating of printing routines should use raw-mode or
                                ; should convert:
                                ; =0 to convert tabs and unknown characters to spaces and remove graphical headers
                                ; =1 to send data just like it gets it (ini: 0)
                                ; if RAWPRT is 1, the value if NTMSXP is ignored
       F418                     RAWPRT:         equ     $F418
                                
                                ; ---------------------------
                                ; basic interpreter work area
                                ; ---------------------------
                                
                                ; F419-F41A: work area for the BASIC command VAL: contains address of character that
                                ; has temporarely been replaced by O by VAL
       F419                     VLZADR:         equ     $F419
                                
                                ; F41B: work area for the BASIC command VAL: contains the character originally at
                                ; the location of VLZADR
       F41B                     VLZDAT:         equ     $F41B
                                
                                ; F41C-F41D: line number of current BASIC line being executed, in direct modus this
                                ; contains $FFFF (ini:$FFFF)
       F41C                     CURLIN:         equ     $F41C
                                
                                ; F41E: error detection prefix for KBUF, always contains ":"
                                ; originally undocumented :)
       F41E                     KBFMIN:         equ     $F41E
                                
                                ; F41F-F55C: workarea for coding basic rules that have been typed in direct modus
                                ; this are contains the code for the line interpreted in direct modus
       F41F                     KBUF:           equ     $F41F
                                
                                ; F55D: byte used as first byte of BUF for input statements, giving them always
                                ; an extra ',' (ini:44 == ',')
       F55D                     BUFMIN:         equ     $F55D
                                
                                ; F55E-F65F: used in direct modus to store the ASCII codes of the line, or simulary
                                ; for INPUT or LINE INPUT BASIC statements
       F55E                     BUF:            equ     $F55E
                                
                                ; F562-F570: used by bitblit routines to store the register data
       F562                     SX:             equ     $F562
       F564                     SY:             equ     $F564
       F566                     DX:             equ     $F566
       F568                     DY:             equ     $F568
       F56A                     NX:             equ     $F56A
       F56C                     NY:             equ     $F56C
       F56E                     CDUMMY:         equ     $F56E
       F56F                     ARG_:           equ     $F56F
       F570                     L_OP:           equ     $F570
                                
                                ; F660: last usable byte of BUF
       F660                     ENDBUF:         equ     $F660
                                
                                ; F661: number of column of last written character on the screen
       F661                     TTYPOS:         equ     $F661
                                
                                ; F662: switch indicating during variable lookup for arrays, if this has not already
                                ; been done for a DIM BASIC statement
       F662                     DIMFLG:         equ     $F662
                                
                                ; F663: workarea for evaluation of expressions; contains type of last evaluated
                                ; expression; the value of the expression is in DAC, possible values of VALTYP:
                                ; 2: integer
                                ; 3: string
                                ; 4: normal real
                                ; 8: double real
       F663                     VALTYP:         equ     $F663
                                
                                ; F664: workarea for coding of BASIC statements. switch indicating if keywords have
                                ; to be encoded or not. E.g. in DATA fields they should not be encoded
                                ; 0: encoding on, 1: encoding off
       F664                     DORES:          equ     $F664
                                
                                ; F665: workarea for coding of BASIC statements. swithc indication of numbers have to be
                                ; encoded; values: $0: encode as const, $1: encode as line number, $FF: do not encode
       F665                     DONUM:          equ     $F665
                                
                                ; F666-F667: work area for evaluation of expressions: contains address of first character
                                ; after the code of the last evaluated expression
       F666                     CONTXT:         equ     $F666
                                
                                ; F668: work area for evaluation of expressions: contains information byte about the
                                ; encoding of the last evaluated constant number; value of this constant is in CONLO
                                ; values:
                                ; $0B: octal (2 bytes)
                                ; $0C: hexadecimal (2 bytes)
                                ; $0F: decimal 0<=value<256 (1 byte)
                                ; $11-$1B: short encoding for 0->10
                                ; $1C: decimal (2bytes, 2s-compliment)
                                ; $26: $42 binary as ASCII
                                ; $0E: line number
                                ; $0D: line pointer
                                ; $1D: normal real (1 byte exp, 3 bytes BCD)
                                ; $1F: double real (1 byte exp, 7 bytes BCD)
       F668                     CONSAV:         equ     $F668
                                
                                ; F669: work area for evaluation of expressions: contains type of last evaluated number
                                ; constant; the value is in CONLO, for values of CONTYP, see VALTYP
                                ; Strings are never contant in BASIC!
       F669                     CONTYP:         equ     $F669
                                
                                ; F66A-F671: work area for evaluation of expressions: contains the value of the last
                                ; evaluated number contant; value starts at F66A, and takes bytes as needed for the type
       F66A                     CONLO:          equ     $F66A
                                
                                ; F672-F673: upper limit of memory area reserved for strings, contains the upper address
                                ; that is allowed to be used
       F672                     MEMSIZ:         equ     $F672
                                
                                ; F674-F675: top of stack; also first byte below string area
       F674                     STKTOP:         equ     $F674
                                
                                ; F676-F677: start address of current basic program, set at initialization, and
                                ; not changed by OS (ini:$8001)
       F676                     TXTTAB:         equ     $F676
                                
                                ; F678-F679: address of first unused string-descriptor in TEMPST
                                ; (ini:value of TEMPST)
       F678                     TEMPPT:         equ     $F678
                                
                                ; F67A-F697: work area for evaluation of string expressions; this area has space
                                ; for 10 string descriptors of 3 bytes; these can be used for temporarely results
                                ; of string arythmetics
       F67A                     TEMPST:         equ     $F67A
                                
                                ; F698-F69A: work area for evaluation of string expressions; this contains the
                                ; string descriptor of the intermediate result
       F698                     DSCTMP:         equ     $F698
                                
                                ; F69B-F69C: first address within the string memory area that is still free
                                ; the string area is filled backwards, soo the lower the value, the less space
                                ; remains (ini: value of MEMSIZ)
       F69B                     FRETOP:         equ     $F69B
                                
                                ; F69D-F69E: temporarely storage for adminstration of the basic interpreter
       F69D                     TEMP3:          equ     $F69D
                                
                                ; F69F-F6A0: temporarely storage for garbage collection
       F69F                     TEMP8:          equ     $F69F
                                
                                ; F6A1-F6A2: address of first byte in BASIC-code after last FOR statement
       F6A1                     ENDFOR:         equ     $F6A1
                                
                                ; F6A3-F6A4: line number of last used line of DATA statements
       F6A3                     DATLIN:         equ     $F6A3
                                
                                ; F6A5: switch indicating if a variable is allowed to be an array variable.
                                ; This is e.g. not allowed for the loop variable of a FOR statement
                                ; 0 = allowed, 1 = not allowed
       F6A5                     SUBFLG:         equ     $F6A5
                                
                                ; F6A6: switch indicating if currently a READ or INPUT statement is being executed
       F6A6                     FLKINP:         equ     $F6A6
                                
                                ; F6A7-F6A8: temporarely storage for adminstration of the basic interpreter
       F6A7                     TEMP:           equ     $F6A7
                                
                                ; F6A9: switch indicating if there are still linenumber constants in the BASIC code
                                ; that are encoded as pointers?
       F6A9                     PTRFLG:         equ     $F6A9
                                
                                ; F6AA: switch indication if currently an AUTO statement is active
                                ; 0 = no auto, 1 = auto
       F6AA                     AUTFLG:         equ     $F6AA
                                
                                ; F6AB-F6AC: last generated AUTO line number
       F6AB                     AUTLIN:         equ     $F6AB
                                
                                ; F6AD-F6AE: last used AUTO increment
       F6AD                     AUTINC:         equ     $F6AD
                                
                                ; F6AF-F6B0: work area of the error system; contains address of first byte
                                ; of statement currently being executed
       F6AF                     SAVTXT:         equ     $F6AF
                                
                                ; F6B1-F6B2: work area of the error system; contains address of the stack
                                ; before executing of the current statement started
       F6B1                     SAVSTK:         equ     $F6B1
                                
                                ; F6B3-F6B4: line number of last failed line
       F6B3                     ERRLIN:         equ     $F6B3
                                
                                ; F6B5-F6B6: line number of last used (changed, listed, added) line
       F6B5                     DOT:            equ     $F6B5
                                
                                ; F6B7-F5B8: work area of the error system; contains the address of the first
                                ; byte of the statement that last failed; on failure it is stored with the
                                ; content of SAVTXT
       F6B7                     ERRTXT:         equ     $F6B7
                                
                                ; F6B9-F6BA: work area of the error system; contains the line number where
                                ; execution should go to on error (as in basic: ON ERROR GOTO x)
       F6B9                     ONELIN:         equ     $F6B9
                                
                                ; F6BB-F6BC: work area of the error system; indication if the interpreter is
                                ; currently executing an error catch routine
                                ; 0 = no, FF = yes
       F6BB                     ONEFLG:         equ     $F6BB
                                
                                ; F6BC-F6BD: temporarely storage for the interpreter
       F6BC                     TEMP2:          equ     $F6BC
                                
                                ; F6BE-F6BF: line number of last program break, reset at 0 at any program change
       F6BE                     OLDLIN:         equ     $F6BE
                                
                                ; F6C0-F6C1: address of first statement that is not executed due to a break
       F6C0                     OLDTXT:         equ     $F6C0
                                
                                ; F6C2-F6C3: begin address of storage of basic variables and function descriptors;
                                ; possibly adjusted when program changes in size
       F6C2                     VARTAB:         equ     $F6C2
                                
                                ; F6C4-F6C5: begin address of array variables; possibly adjusted when program
                                ; changes size or more variables are allocated
       F6C4                     ARYTAB:         equ     $F6C4
                                
                                ; F6C6-F6C7: address of first free byte not used for storage of code or variables
                                ; (ini: $8003)
       F6C6                     STREND:         equ     $F6C6
                                
                                ; F6C8-F6C9: address where data needs to be searched at next READ statement
       F6C8                     DATPTR:         equ     $F6C8
                                
                                ; F6CA-F6E3: table with variable types, one for each letter in the alphabet
                                ; possible values:
                                ;       2 = integer     3 = string      4 = single      8 = double
       F6CA                     DEFTBL:         equ     $F6CA
                                
                                ; F6E4-F7B4: work area for execution of self defined functions
                                
                                ; F6E4-F6E5: contains address ; of previous parameter block on the stack;
                                ; needed for garbage collection
       F6E4                     PRMSTK:         equ     $F6E4
                                
                                ; F6E6-F6E7:  amount of valid bytes in PARM1
       F6E6                     PRMLEN:         equ     $F6E6
                                
                                ; F6E8-F74B: contains definitions of the variables in the parameter lists
                                ; of self defined functions
       F6E8                     PARM1:          equ     $F6E8
                                
                                ; F74C-F74D: previous value of PRMSTK
       F74C                     PRMDRV:         equ     $F74C
                                
                                ; F74E-F74F: number of valid bytes in PARM2
       F74E                     PRMLN2:         equ     $F74E
                                
                                ; F750-F7B3: area used for calculation of values that end up in PARM1
       F750                     PARM2:          equ     $F750
                                
                                ; F7B4: switch indicating of while searching a variable name PARM1 has
                                ; been looked at; 0 = no, 1 = yes
       F7B4                     PRMFLG:         equ     $F7B4
                                
                                ; F7B5-F7B6: address of first byte where it is no longer needed to search
                                ; for a variable name; it is equal to ARYTAB when the normal variable area
                                ; is searched, and equal to PARM1+PRMLEN when PARM1 is searched
       F7B5                     ARYTA2:         equ     $F7B5
                                
                                ; F7B7-F7B8: switch indicating iif PARM1 contains a valid parameter block
                                ; 0 = no, 1 = yes
       F7B7                     NOFUNS:         equ     $F7B7
                                
                                ; F7B8-F7B9: temporarely memory used while searching parameter blocks on
                                ; the stack
       F7B8                     TEMP9:          equ     $F7B8
                                
                                ; F7BA-F7BB: counter of the nesting-dept of the function being evaluated
       F7BA                     FUNACT:         equ     $F7BA
                                
                                ; F7BC-F7C3: work area when executing the SWAP statement; the first variable
                                ; is stored here
       F7BC                     SWPTMP:         equ     $F7BC
                                
                                ; F7C4: switch indicating if TRON is on; 0 = off, >0 = on
       F7C4                     TRCFLG:         equ     $F7C4
                                
                                ; F7C5-F7F4: workarea when executing numeric operators
       F7C5                     FBUFFR:         equ     $F7C5
       F7F0                     DECTMP:         equ     $F7F0
       F7F2                     DECTM2:         equ     $F7F2
       F7F4                     DECCNT:         equ     $F7F4
                                
                                ; F7F6-F805: workarea when executing numeric operators; intermediate
                                ; results are stored here; also used for parameter transfer when using
                                ; the USR functions; VALTYPE then contains the type, and the value is
                                ; stored like this:
                                ; typename  type  where
                                ; integer   2     F7F8-F7F9
                                ; string    3     F7F8-F7F9 (address descriptor)
                                ; single    4     F7F6-F7F9
                                ; double    8     F7F6-F7FD
       F7F6                     DAC:            equ     $F7F6
                                
                                ; F806-F856: workarea when executing numeric operators
       F806                     HOLD8:          equ     $F806
       F836                     HOLD2:          equ     $F836
       F83E                     HOLD:           equ     $F83E
       F847                     ARG:            equ     $F847
                                
                                ; F857-F85E: last calculated random double
       F857                     RNDX:           equ     $F857
                                
                                ; --------------------
                                ; filesystem work area
                                ; --------------------
                                
                                ; F85F: # of filedescriptors reserved minus 1
                                ; this is also the maximum number of open files possible
       F85F                     MAXFIL:         equ     $F85F
                                
                                ; F860-F861: start address of the file information table
       F860                     FILTAB:         equ     $F860
                                
                                ; F862-F863: start address of the first file-buffer
       F862                     NULBUF:         equ     $F862
                                
                                ; F864-F865: during file I/O the start address of the active file-buffer
       F864                     PTRFIL:         equ     $F864
                                
                                ; F866: flag indicating if the file that is being loaded have to be started
                                ; immediately; 0 = no, FF = yes
       F866                     RUNFLG:         equ     $F866
                                
                                ; note that RUNFLG and FILNAM overlap!
                                
                                ; F866-F870: filename of last file that has been active;
                                ; first 8 chars are name, last 3 are extension
       F866                     FILNAM:         equ     $F866
                                
                                ; F871-F87B: second filename if needed, e.g. the NAME command
       F871                     FILNM2:         equ     $F871
                                
                                ; F87C: switch indicating if currently a BASIC program is being loaded
                                ; 0 = no, 1 = yes
       F87C                     NLONLY:         equ     $F87C
                                
                                ; F87D-F87E: workarea for BLOAD and BSAVE; when a part of normal memory
                                ; is written, it contains the end address of the written memory region
                                ; if video memory is written it contains $4BE5 + start address of the
                                ; written memory region ??
       F87D                     SAVEND:         equ     $F87D
                                
                                ; F87F-F91E: storage area for the text of the function keys 10x16 bytes,
                                ; but strings need to be zero-terminated, soo maximum length of command is
                                ; 15 characters
       F87F                     FNKSTR:         equ     $F87F
                                
                                ; ------------------------
                                ; screen routine work area
                                ; ------------------------
                                
                                ; F91F-F921: start address of the standard ASCII pattern table
                                ; at every change towards a text mode it is copied in the pattern table
                                ; of the VDP
                                ;   F91F: slot indication (ini: 0)
                                ;   F920-F921: address (ini: 1BBF)
                                ; TODO: make CBIOS use this value instead of hardcoded value
       F91F                     CGPNT:          equ     $F91F
                                
                                ; F922-F923: start address of the nametable in the VRAM
       F922                     NAMBAS:         equ     $F922
                                
                                ; F924-F925: start address of the pattern table in the VRAM
       F924                     CGPBAS:         equ     $F924
                                
                                ; F926-F927: start address of the sprite pattern table in the VRAM
       F926                     PATBAS:         equ     $F926
                                
                                ; F928-F929: start address of the sprite location table in the VRAM
       F928                     ATRBAS:         equ     $F928
                                
                                ; F92A-F92B: address in VRAM of the pattern of the current position
                                ; on screen
       F92A                     CLOC:           equ     $F92A
                                
                                ; F92C: mask for CLOC selecting the right bits that correspond with
                                ; the current position
       F92C                     CMASK:          equ     $F92C
                                
                                ; F92D-F930: work area for graphical calculations
       F92D                     MINDEL:         equ     $F92D
       F92F                     MAXDEL:         equ     $F92F
                                
                                ; ----------------------------------------------
                                ; F931-F941: work area for calculation of CIRCLE
                                ; ----------------------------------------------
                                
                                ; F931-F932: ratio of # of dots in the horizontal and vertical direction
                                ; if = $0100 then ASPCT1 and ASPCT2 are used
                                ; if < $0100 then it is the # of dots in one direction for each
                                ; $0100 # of dots in the other direction; the direction is indicated
                                ; by CSCLXY
       F931                     ASPECT:         equ     $F931
                                
                                ; F933:F934: ; distance, in # of dots from the center of the most
                                ; distant point of the circle
       F933                     CENCNT:         equ     $F933
                                
                                ; F935: switch indication if the start and/or end point need to be
                                ; connected to the center
                                ;  bit 7: connect end point; 1 = yes
                                ;  bit 0: connect start point; 1 = yes
       F935                     CLINEF:         equ     $F935
                                
                                ; F936-F937: used during calculation of CIRCLE
       F936                     CNPNTS:         equ     $F936
                                
                                ; F938: direction of drawing of circle:
                                ;  00 = from CSTCNT towards CENCNT
                                ;  FF = from CENCNT towards CSTCNT
       F938                     CPLOTF:         equ     $F938
                                
                                ; F939-F93A: used during calculation of CIRCLE
       F939                     CPCNT:          equ     $F939
                                
                                ; F93B-F93C: ; contains the total # of dots of the full circle,
                                ; even when only a part is drawn
       F93B                     CPCNT8:         equ     $F93B
                                
                                ; F93D-F93E: used during calculation of CIRCLE
       F93D                     CRCSUM:         equ     $F93D
                                
                                ; F93F-F940: ; distance in dots from the center towards the closest
                                ; circle point
       F93F                     CSTCNT:         equ     $F93F
                                
                                ; F941: switch indicating if the X or Y direction needs to be streched:
                                ; 0 = X, 1 = Y
       F941                     CSCLXY:         equ     $F941
                                
                                ; F942-F943: store of CLOC, also used for PAINT
       F942                     CSAVEA:         equ     $F942
                                
                                ; F944: storage of CMASK; also used for PAINT
       F944                     CSAVEM:         equ     $F944
                                
                                ; F945-F946: horizontal distance towards the center
       F945                     CXOFF:          equ     $F945
                                
                                ; F947-F948: vertical distance towards the center
       F947                     CYOFF:          equ     $F947
                                
                                ; -------------------------------------------
                                ; work area for executing the PAINT statement
                                ; -------------------------------------------
                                
                                ; F949: leftmost position of protrusion towards the left
       F949                     LOHMSK:         equ     $F949
                                
                                ; F94A: new workdirection for protrusion towards the left
       F94A                     LOHDIR:         equ     $F94A
                                
                                ;F94B-F94C: leftmost position of protrusion towards the left
       F94B                     LOHADR:         equ     $F94B
                                
                                ; F94D: size of protrusion towards the left
       F94D                     LOHCNT:         equ     $F94D
                                
                                ; F94F-F950: # of pixels that may be skipped
       F94F                     SKPCNT:         equ     $F94F
                                
                                ; F951-F952: # of movements
       F951                     MOVCNT:         equ     $F951
                                
                                ; F953: current direction; $40 = \/, $C0 = /\, $00 = stop
       F953                     PDIREC:         equ     $F953
                                
                                ; F954: indicate if paint towards the left worked
       F954                     LFPROG:         equ     $F954
                                
                                ; F955: indicate of a paint towards the right worked
       F955                     RTPROG:         equ     $F955
                                
                                ; F956-F957: start address of a jumptable for subcommands
                                ; contained in a string variable, used for both PLAY and DRAW
                                ; where this systemvar points to either the PLAY or the DRAW
                                ; table
       F956                     MCLTAB:         equ     $F956
                                
                                ; F958: switch indication if MCLTAB is for PLAY or DRAW
                                ; $0 = DRAW, $FF = PLAY
       F958                     MCLFLG:         equ     $F958
                                
                                ; ------------------------------------------
                                ; work area for sound and queueing and RS232
                                ; ------------------------------------------
                                
                                ; F959-F971: Variables for three music queues and one RS232 queue
                                ; F959: VOICAQ put position
                                ; F95A: VOICAQ get position
                                ; F95B: VOICAQ putback flag
                                ; F95C: VOICAQ size
                                ; F95D: VOICAQ address
                                ; F95F-F964: VOICBQ
                                ; F965-F96A: VOICCQ
                                ; F96B-F970: RS2IQ
       F959                     QUETAB:         equ     $F959
                                
                                ; Putback characters for queues. TODO: what purpose do these have exactly?
       F971                     QUEBAK:         equ     $F971
                                
                                ; Buffers for queues.
       F975                     VOICAQ:         equ     $F975           ; Voice A queue
       F9F5                     VOICBQ:         equ     $F9F5           ; Voice B queue
       FA75                     VOICCQ:         equ     $FA75           ; Voice C queue
       FAF5                     RS2IQ:          equ     $FAF5           ; RS232   queue
                                
                                ; in MSX2 the content of RS2IQ is used differently:
       FAF5                     DPPAGE:         equ     $FAF5           ; Display page (SCR5+)
       FAF6                     ACPAGE:         equ     $FAF6           ; Active page (SCR5+)
                                
                                ; FAF7: AV control port value storage
       FAF7                     AVCSAV:         equ     $FAF7
                                
                                ; FAF8: extended BASIC ROM slot address
       FAF8                     EXBRSA:         equ     $FAF8
                                
                                ; FAF9: character count for ROMA-KANA
       FAF9                     CHRCNT:         equ     $FAF9
                                
                                ; FAFA-FAFB: character save for ROMA-KANA
       FAFA                     ROMA:           equ     $FAFA
                                
                                ; ROMA-KANA extension mode switch or VRAM size??
       FAFC                     MODE:           equ     $FAFC
                                ;Reserved       equ     $FAFD
                                
                                ; FAFE-FAFF: x position for mouse or lightpen
       FAFE                     XSAVE:          equ     $FAFE
                                
                                ; FB00-FB01: y position for mouse or lightpen
       FB00                     YSAVE:          equ     $FB00
       FB02                     LOGOPR:         equ     $FB02
                                ; FB21-FB28: Table which contains info for up to 4 disk ROMs, 2 bytes each:
                                ; - first byte: number of drives connected to this interface
                                ; - second byte: slot ID of the disk ROM
       FB21                     DRVINF:         equ     $FB21
                                ; end of MSX2 only usage of RS2IQ
                                
                                ; --------------------------------
                                ; work area for the PLAY statement
                                ; --------------------------------
                                
                                ; FB35: status about the parsing of a PLAY string
                                ;  bit 7: only one time parsed; 1 = yes
                                ;  bit 1-0: number of parsed strings (0-3)
       FB35                     PRSCNT:         equ     $FB35
                                
                                ; FB36-FB37: storage of stack
       FB36                     SAVSP:          equ     $FB36
                                
                                ; FB38: # of voice currently being parsed (0-2)
       FB38                     VOICEN:         equ     $FB38
                                
                                ; FB39-FB3A: storage of volume of a muted voice
       FB39                     SAVVOL:         equ     $FB39
                                
                                ; FB3B: size of string being parsed (also used by DRAW)
       FB3B                     MCLLEN:         equ     $FB3B
                                
                                ; FB3C-FB3D: address of string being parsed (also used by DRAW)
       FB3C                     MCLPTR:         equ     $FB3C
                                
                                ; FB3E: temporarely storage of active queue # (0-2)
       FB3E                     QUEUEN:         equ     $FB3E
                                
                                ; FB3F: flag indicating which queues are active
                                ; bit 2 = queue 2; 1 = active
                                ; bit 1 = queue 1; 1 = active
                                ; bit 0 = queue 0; 1 = active
       FB3F                     MUSICF:         equ     $FB3F
                                
                                ; FB40: count of the # of PLAY statements parsed, but not executed yet
       FB40                     PLYCNT:         equ     $FB40
                                
                                ; FB41-FB65: Voice Control Block for voice A (queue 0)
       FB41                     VCBA:           equ     $FB41
                                ; FB66-FB8A: Voice Control Block for voice B (queue 1)
       FB66                     VCBB:           equ     $FB66
                                ; FB8B-FBAF: Voice Control Block for voice C (queue 2)
       FB8B                     VCBC:           equ     $FB8B
                                
                                ; each VCB has the following structure:
                                
                                ; name                  offset  length  purpose
       0000                     METREX:         equ     0 ;     2       interrupt counter
       0002                     VCXLEN:         equ     2 ;     1       MCLLEN for voice
       0003                     VCXPTR:         equ     3 ;     2       MCLPTR for voice
       0005                     VCXSTP:         equ     5 ;     2       stack pointer
       0007                     QLENGX:         equ     7 ;     1       # bytes in queue
       0008                     NTICSX:         equ     8 ;     2       new counter ?
       000A                     TONPRX:         equ     10;     2       pitch
       000C                     AMPLTX:         equ     12;     1       amplitude
       000D                     ENVPRX:         equ     13;     2       envelope speed
       000F                     OCTAVX:         equ     15;     1       octave
       0010                     NOTELX:         equ     16;     1       tone length
       0011                     TEMPOX:         equ     17;     1       tempo
       0012                     VOLUMX:         equ     18;     1       volume
       0013                     ENVLPX:         equ     19;     1       envelope shape
       0021                     MCLSTX:         equ     33;             space for stack storage
       0024                     MCLSEX:         equ     36;             start of stack
                                ; the stack mentioned above is used to store bytevalues
                                ; that are readied to be put on the voice queue
                                
                                ; -----------------------------------------------
                                ; settings for screen editor and interrupt system
                                ; -----------------------------------------------
                                
                                ; FBB0: switch indicating if software reset is enabled
                                ; 0 = n, 1 = yes; can be used to reset BASIC by pressing
                                ; SHIFT-CODE-GRAPH; does not erase the existing program
                                ; (ini: 0)
       FBB0                     ENSTOP:         equ     $FBB0
                                
                                ; FBB1: switch indicating if the current BASIC program is in a ROM
                                ; 0 = no; 1 = yes
       FBB1                     BASROM:         equ     $FBB1
                                
                                ; FBB2-FBC9: table containing for each line if it continues on the
                                ; next line; 0 = yes, >0 = no
       FBB2                     LINTTB:         equ     $FBB2
                                
                                ; FBCA-FBCB storage of location of cursor for INLIN and QINLIN
                                ;  FBCA: CSRY , FBCB: CSRX
       FBCA                     FSTPOS:         equ     $FBCA
                                
                                ; ASCII code of the character currently covered by the cursor
                                ; TODO: is the name CURSAV or CODSAV ?
       FBCC                     CURSAV:         equ     $FBCC
                                
                                ; FBCD: switch indicating which function keys are to be displayed
                                ; on the screen; 0 = F6-F10, 1 = F1-F5
       FBCD                     FNKSWI:         equ     $FBCD
                                
                                ; FBCE-FBD7: for each function key, a flag indicating if it has
                                ; interrupt facility enabled; 0 = disabled, 1 = enabled
       FBCE                     FNKFLG:         equ     $FBCE
                                
                                ; FBD8: counter of # of interrupts that still have a pending ON .. GOSUB
       FBD8                     ONGSBF:         equ     $FBD8
                                
                                ; FBD9: flag indicating if a keyclick has already been generated, to avoid
                                ; keyclicks for a key that generates two ASCII codes
                                ; $00 = no click, $0F = click
       FBD9                     CLIKFL:         equ     $FBD9
                                
                                ; FBDA-FBE4: storage of keyboard matrix, used for detection key repetition
       FBDA                     OLDKEY:         equ     $FBDA
                                
                                ; FBE5-FBEF: current state of the keyboard matrix
       FBE5                     NEWKEY:         equ     $FBE5
                                
                                ; keyboard buffer; each char entered via the keyboard ends up here
       FBF0                     KEYBUF:         equ     $FBF0
                                ; LIMPNT: something about "key buffer pointer"
       FC17                     LIMPNT:         equ     $FC17
                                
                                ; FC18-FC3F: work area for processing the last typed line
       FC18                     LINWRK:         equ     $FC18
                                
                                ; FC40-FC47: storage for the patter of an ASCII character
                                ; used when writing an ASCII character in a graphical mode
       FC40                     PATWRK:         equ     $FC40
                                
                                ; FC48-FC49: lowest address of the RAM memory; initialized at startup
                                ; and not changed normally
       FC48                     BOTTOM:         equ     $FC48
                                
                                ; FC4A-FC4B: highest address of the RAM memory that is not reserved by
                                ; the OS; string area, filebuffers and stack are below this address
                                ; initialized at startup and not changed normally
       FC4A                     HIMEM:          equ     $FC4A
                                
                                ; FC4C-FC99: table for interrupt facilities of MSX BASIC
                                ; each 3 bytes are used like this:
                                ; byte 1 is a flag:
                                ;  bit 2: interrupt happened; 1 = yes
                                ;  bit 1: interrupt stop; 1 = yes
                                ;  bit 0: interrupt off; 1 = no
                                ; byte 2-3 is the adress of the line in BASIC where should be
                                ; jumped too
                                ; the offsets in the table are:
                                ;  offset  address interrupt
                                ;       0  FC4C    F1
                                ;       3  FC4F    F2
                                ;       6  FC52    F3
                                ;       9  FC55    F4
                                ;      12  FC58    F5
                                ;      15  FC5B    F6
                                ;      18  FC5E    F7
                                ;      21  FC61    F8
                                ;      24  FC64    F9
                                ;      27  FC67    F10
                                ;      30  FC6A    STOP
                                ;      33  FC6D    sprite collision
                                ;      36  FC70    SPACE (trigger 0)
                                ;      39  FC73    joystick 1 button 1 (trigger 1)
                                ;      39  FC76    joystick 2 button 1 (trigger 2)
                                ;      39  FC79    joystick 1 button 2 (trigger 3)
                                ;      39  FC7C    joystick 2 button 2 (trigger 4)
                                ;      39  FC7F    interval
       FC4C                     TRPTBL:         equ     $FC4C
                                
                                ; FC9A: usage unknown
       FC9A                     RTYCNT:         equ     $FC9A
                                
                                ; FC9B: STOP indication
                                ; 0 = nothing; 3 = CTRL+STOP, 4 = STOP
       FC9B                     INTFLG:         equ     $FC9B
                                
                                ; FC9C: last read Y-position of a touchpad
       FC9C                     PADY:           equ     $FC9C
                                
                                ; FC9D: last read X-position of a touchpad
       FC9D                     PADX:           equ     $FC9D
                                
                                ; FC9E-FC9F: software clock, updated at each VDP interrupt
       FC9E                     JIFFY:          equ     $FC9E           ; timer counter
                                
                                ; FCA0-FCA1: initial value of INTCNT, used when INTCNT
                                ; reaches 0; used for ON INTERVAL GOSUB
       FCA0                     INTVAL:         equ     $FCA0
                                
                                ; FCA2-FCA3: interrupt counter; lowered at each VDP interrupt;
                                ; reset with value of INTVAL when it reaches zero; if interval
                                ; interrupt is needed, it is generated
       FCA2                     INTCNT:         equ     $FCA2
                                
                                ; FCA4-FCA5: parameter used at tap input, given a value during
                                ; reading of a headerblock from tape
       FCA4                     LOWLIM:         equ     $FCA4
       FCA5                     WINWID:         equ     $FCA5
                                
                                ; FCA6: flag indicating if the previous character written
                                ; to the screen was an extension character for graphical signs
                                ; (ASCII 1); 0 = no, 1 = yes
       FCA6                     GRPHED:         equ     $FCA6
                                
                                ; FCA7 ESCCNT State of a state machine that handles the printing of escape
                                ; sequences. A subset of the VT52 escape sequences is supported.
                                ; values:
                                ; $00: not inside an escape sequence
                                ; $01: seen <ESC>x
                                ; $02: seen <ESC>y
                                ; $03: seen <ESC>Y<row>
                                ; $04: seen <ESC>Y
                                ; $FF: seen <ESC>
       FCA7                     ESCCNT:         equ     $FCA7
                                
                                ; FCA8: switch indicating insert or overwrite mode
                                ; $00 = overwrite; $FF = insert
                                ; the value of INSFLG is changed each time the INS key is pressed
       FCA8                     INSFLG:         equ     $FCA8
                                
                                ; FCA9: show cursor; 0 = no, 1 = yes
                                ; can be changed with escape sequences x5 and y5
       FCA9                     CSRSW:          equ     $FCA9
                                
                                ; FCAA: shape of cursor; 0 = block; 1 = insert
                                ; pressing the INS key changes the value of CSTYLE
                                ; can be changed with escape sequences x4 and y4
       FCAA                     CSTYLE:         equ     $FCAA
                                
                                ; switch indicating if the CAPS-LOCK is on
                                ; $00 = off, $FF = on (unofficial: $80 = perma-on)
       FCAB                     CAPST:          equ     $FCAB
                                
                                ; FCAC: dead key control in non-japanese MSX models
                                ; adds a mark on the next char pressed, if applicable
                                ;  0 = no dead key
                                ;  1 = dead key                => accent grave
                                ;  2 = SHIFT + dead key        => accent aigu
                                ;  3 = CODE + dead key         => accent circumflex
                                ;  4 = SHIFT + CODE + dead key => trema
                                ; in japanese models it controls the charset used
       FCAC                     KANAST:         equ     $FCAC
                                
                                ; FCAD: only used in japanese MSX models; it defines
                                ; the used typeset (ini: $40)
       FCAD                     KANAMD:         equ     $FCAD
                                
                                ; ----
                                ; misc
                                ; ----
                                
       FCAE                     FLBMEM:         equ     $FCAE
       FCAF                     SCRMOD:         equ     $FCAF
       FCB0                     OLDSCR:         equ     $FCB0
       FCB1                     CASPRV:         equ     $FCB1
       FCB2                     BRDATR:         equ     $FCB2
       FCB3                     GXPOS:          equ     $FCB3
       FCB5                     GYPOS:          equ     $FCB5
       FCB7                     GRPACX:         equ     $FCB7
       FCB9                     GRPACY:         equ     $FCB9
       FCBB                     DRWFLG:         equ     $FCBB
       FCBD                     DRWANG:         equ     $FCBD
       FCBE                     RUNBNF:         equ     $FCBE
       FCBF                     SAVENT:         equ     $FCBF
                                
                                ; ---------------------------
                                ; storage of slot information
                                ; ---------------------------
                                
                                ; FCC1-FCC4: Information for each primary slot. The most significant bit is
                                ; set if the primary slot is found to be expanded.
       FCC1                     EXPTBL:         equ     $FCC1
                                
                                ; FCC5-FCC8: Duplicate the contents of the four possible secondary slot
                                ; registers.
       FCC5                     SLTTBL:         equ     $FCC5
                                
                                ; FCC9-FD08: Information for any extension ROMs found during the power-up
                                ; ROM search.
                                ; FCC9-FCCC: primary slot 0, secondary slot 0
                                ; FCCD-FCD0: primary slot 0, secondary slot 1
                                ; FCD1-FCD4: primary slot 0, secondary slot 2
                                ; FCD5-FCD8: primary slot 0, secondary slot 3
                                ; FCD9-FCE8: primary slot 1
                                ; FCE9-FCF8: primary slot 2
                                ; FCF9-FD08: primary slot 3
                                ; The information is stored as below.
                                ; bit 7 (set): BASIC program
                                ; bit 6 (set): device handler
                                ; bit 5 (set): statement handler
       FCC9                     SLTATR:         equ     $FCC9
                                
       FD09                     SLTWRK:         equ     $FD09
                                
                                ; ------------------------------
                                ; storage of ROM-page parameters
                                ; ------------------------------
                                
       FD89                     PROCNM:         equ     $FD89
       FD99                     DEVICE:         equ     $FD99
                                ; ------------
                                ; system hooks
                                ; ------------
                                
                                ; system hooks are defined in hooks.asm
                                
                                ; ------------------
                                ; storage of VDP8-23
                                ; ------------------
                                
                                ; FFE7-FFF6: storage of VDP 8-23
       FFE7                     RG8SAV:         equ     $FFE7
                                
                                ; ----------------------
                                ; extra slot information
                                ; ----------------------
                                
                                ; FFF7: slot address of main-rom
                                ;?????:         equ     $FFF7
                                
                                ; ------------------
                                ; storage of VDP25-27
                                ; ------------------
                                
                                ; FFFA-FFFC: storage of VDP 25-27
       FFFA                     RG25SAV:         equ     $FFFA
                                
                                ; ---------------------------
                                ; subslot switching addresses
                                ; ---------------------------
                                
                                ; FFFF: subslot switching address
                                ; This is not actually a system variable, it is a hardware register:
                                ;   SSL_REGS (see hardware.asm).
                                
                                ; -------
                                ; the end
                                ; -------
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:systemvars.asm:UTF_8]
                                
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"   ; ID for auto-executable ROM
000002 4002 6B40                    DW  INIT_ROM   ; Main program execution address.
000004 4004 0000                    DW  0      ; STATEMENT
000006 4006 0000                    DW  0      ; DEVICE
000008 4008 0000                    DW  0      ; TEXT
00000A 400A 000000000000            DW  0,0,0  ; Reserved
                                    INCLUDE "MSXINIT.ASM"
                                
                                ;   LSX-Dodgers INIT
                                ;   MSX
       4010                     INIT_FDD_BOOT:
000010 4010 F3               4      DI
000011 4011 ED56             8      IM  1
000013 4013 3A42F3          13      LD  A,(RAMAD1)
000016 4016 2640             7      LD  H,040H
000018 4018 CD71D4          17      CALL    ENASLT
00001B 401B 21DC80          10      LD  HL,AT_START2+04000H
00001E 401E 1100C7          10      LD  DE,START2
000021 4021 010021          10      LD  BC,MSX_E-START2
000024 4024 EDB0                    LDIR
000026 4026 2180E7          10      LD  HL,_DEVICE+4*32     ;E
000029 4029 1100E7          10      LD  DE,_DEVICE      ;A
00002C 402C 018000          10      LD  BC,32*4
00002F 402F EDB0                    LDIR
000031 4031 21DFE7          10      LD  HL,_DEVICE+6*32+DPB_NAME+3
000034 4034 3E07             7      LD  A,7
       4036                     FDD_INIT1:
000036 4036 C62F             7      ADD A,'0'-1
000038 4038 77               7      LD  (HL),A
000039 4039 11F4FF          10      LD  DE,DPB_UNITNO-(DPB_NAME+3)
00003C 403C 19              11      ADD HL,DE
00003D 403D D630             7      SUB '0'
00003F 403F 77               7      LD  (HL),A
000040 4040 11ECFF          10      LD  DE,-DPB_UNITNO-1
000043 4043 19              11      ADD HL,DE       ;ここでZフラグは変化しない
000044 4044 20F0            12      JR  NZ,FDD_INIT1
000046 4046 211040          10      LD  HL,INIT_FDD_BOOT
                                
000049 4049 CD11C8          17      CALL    SET_BDOS
00004C 404C 21E9C7          10      LD  HL,ROMCHECKED
00004F 404F 2204C7          16      LD  (INIT_SWC),HL
000052 4052 C300C7          10      JP  START2
                                
       4055                     START:
000055 4055 F3               4      DI
000056 4056 ED56             8      IM  1
000058 4058 3E01             7      LD  A,1
00005A 405A 320068          13      LD  (BANK1_SEL),A
00005D 405D 21DC40          10      LD  HL,AT_START2
000060 4060 1100C7          10      LD  DE,START2
000063 4063 010021          10      LD  BC,MSX_E-START2
000066 4066 EDB0                    LDIR
000068 4068 C300C7          10      JP  START2
                                
       406B                     INIT_ROM:
00006B 406B 3E                      DB  03EH    ;LD A,??
00006C 406C F7              12      RST 30H
00006D 406D F3               4      DI
00006E 406E 32DAFE          13      LD  (H_STKE),A
000071 4071 CDB840          17      CALL    GTSL1_
000074 4074 21DBFE          10      LD  HL,H_STKE+1
000077 4077 77               7      LD  (HL),A
000078 4078 115540          10      LD  DE,START
00007B 407B 23               6      INC HL
00007C 407C 73               7      LD  (HL),E
00007D 407D 23               6      INC HL
00007E 407E 72               7      LD  (HL),D
                                
00007F 407F CD3801          17      CALL    RSLREG      ;read primary slot #
000082 4082 07               4      RLCA
000083 4083 07               4      RLCA
000084 4084 F5              11      PUSH    AF
000085 4085 1605             7      LD  D,4+1
000087 4087 CDBF40          17      CALL    GTSL2_
00008A 408A 3244F3          13      LD  (RAMAD3),A
00008D 408D 3A42F3          13      LD  A,(RAMAD1)
000090 4090 CDAA40          17      CALL    FIXRAMAD
000093 4093 3242F3          13      LD  (RAMAD1),A
000096 4096 3A41F3          13      LD  A,(RAMAD0)
000099 4099 CDAA40          17      CALL    FIXRAMAD
00009C 409C 3241F3          13      LD  (RAMAD0),A
00009F 409F F1              10      POP AF
0000A0 40A0 1603             7      LD  D,2+1
0000A2 40A2 CDBF40          17      CALL    GTSL2_
0000A5 40A5 3243F3          13      LD  (RAMAD2),A
                                
0000A8 40A8 FB               4      EI
0000A9 40A9 C9              10      RET
                                
       40AA                     FIXRAMAD:
0000AA 40AA B7               4      OR  A
0000AB 40AB 2807            12      JR  Z,FIXRAMAD1
0000AD 40AD FEC9             7      CP  0C9H
0000AF 40AF 2803            12      JR  Z,FIXRAMAD1
0000B1 40B1 FEFF             7      CP  0FFH
0000B3 40B3 C0              11      RET NZ
       40B4                     FIXRAMAD1:
0000B4 40B4 3A44F3          13      LD  A,(RAMAD3)
0000B7 40B7 C9              10      RET
                                
       40B8                     GTSL1_:             ;自分のいるスロットを知る
0000B8 40B8 CD3801          17      CALL    RSLREG      ;read primary slot #
0000BB 40BB 0F               4      RRCA
0000BC 40BC 0F               4      RRCA
0000BD 40BD 1601             7      LD  D,1
       40BF                     GTSL2_:
0000BF 40BF E603             7      AND 3       ;[A]=000000PP
0000C1 40C1 5F               4      LD  E,A     ;[E]=000000PP
0000C2 40C2 21C1FC          10      LD  HL,EXPTBL
0000C5 40C5 85               4      ADD A,L     ;桁上りは無い
0000C6 40C6 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
0000C7 40C7 7B               4      LD  A,E     ;[A]=000000PP
0000C8 40C8 CB7E            13      BIT 7,(HL)
0000CA 40CA C8              11      RET Z
0000CB 40CB 7D               4      LD  A,L     ;point to SLTTBL entry
0000CC 40CC C604             7      ADD A,4     ;桁上りは無い
0000CE 40CE 6F               4      LD  L,A
0000CF 40CF 7E               7      LD  A,(HL)      ;get currently expansion slot register
       40D0                     GTSL3_:
0000D0 40D0 15               4      DEC D
0000D1 40D1 2803            12      JR  Z,GTSL4_:
0000D3 40D3 0F               4      RRCA
0000D4 40D4 18FA            12      JR  GTSL3_:
       40D6                     GTSL4_:
0000D6 40D6 E60C             7      AND 00CH        ;[A] = 0000SS00
0000D8 40D8 B3               4      OR  E       ;[A] = 0000SSPP
0000D9 40D9 F680             7      OR  080H        ;[A] = 1000SSPP
0000DB 40DB C9              10      RET
                                
       40DC                     AT_START2:
0000DC C700                         ORG START2,AT_START2-RUN
                                
0000DC C700 3100C7          10      LD  SP,START2
0000DF C703 CD11C7          17      CALL    INIT        ;NZならAUTOEXECを実行
       C704                     INIT_SWC    EQU $-2
0000E2 C706 210000          10      LD  HL,0
0000E5 C709 E5              11      PUSH    HL
0000E6 C70A C8              11      RET Z
0000E7 C70B 1106C9          10      LD  DE,AUTOD
0000EA C70E C3FDE5          10      JP  _COMANL
                                
       C711                     INIT:
0000ED C711 DD21900D        14      LD  IX,0D90H
0000F1 C715 0600             7      LD  B,0
       C717                     CHECK_CBIOS1:
0000F3 C717 DD7E00          19      LD  A,(IX+0)
0000F6 C71A FE43             7      CP  'C'
0000F8 C71C 202B            12      JR  NZ,CHECK_CBIOS2
0000FA C71E DD7E01          19      LD  A,(IX+1)
0000FD C721 FE2D             7      CP  '-'
0000FF C723 2024            12      JR  NZ,CHECK_CBIOS2
000101 C725 DD7E02          19      LD  A,(IX+2)
000104 C728 FE42             7      CP  'B'
000106 C72A 201D            12      JR  NZ,CHECK_CBIOS2
000108 C72C DD7E03          19      LD  A,(IX+3)
00010B C72F FE49             7      CP  'I'
00010D C731 2016            12      JR  NZ,CHECK_CBIOS2
00010F C733 DD7E04          19      LD  A,(IX+4)
000112 C736 FE4F             7      CP  'O'
000114 C738 200F            12      JR  NZ,CHECK_CBIOS2
000116 C73A DD7E05          19      LD  A,(IX+5)
000119 C73D EE53             7      XOR 'S'
00011B C73F 2008            12      JR  NZ,CHECK_CBIOS2
                                
00011D C741 3281D1          13      LD  (CBIOS_SWC1),A
000120 C744 32A5D1          13      LD  (CBIOS_SWC2),A
                                
000123 C747 1804            12      JR  CHECK_CBIOS3
       C749                     CHECK_CBIOS2:
000125 C749 DD23            10      INC IX
000127 C74B 10CA            13      DJNZ    CHECK_CBIOS1
       C74D                     CHECK_CBIOS3:
000129 C74D 3ADBFE          13      LD  A,(H_STKE+1)
00012C C750 3262E5          13      LD  (ROM_SLT),A
                                
       C753                     RAMCHK2:
00012F C753 3A42F3          13      LD  A,(RAMAD1)
000132 C756 2640             7      LD  H,040H
000134 C758 CD6AC8          17      CALL    CHK_RAM
000137 C75B 3242F3          13      LD  (RAMAD1),A
       C75E                     RAMCHK1:
00013A C75E 3A41F3          13      LD  A,(RAMAD0)
00013D C761 2600             7      LD  H,00H
00013F C763 CD6AC8          17      CALL    CHK_RAM
000142 C766 3241F3          13      LD  (RAMAD0),A
       C769                     RAMCHK0:
000145 C769 3A42F3          13      LD  A,(RAMAD1)
000148 C76C 2640             7      LD  H,040H
00014A C76E CD71D4          17      CALL    ENASLT
                                
00014D C771 3A41F3          13      LD  A,(RAMAD0)
000150 C774 2600             7      LD  H,000H
000152 C776 CD71D4          17      CALL    ENASLT
                                
000155 C779 210000          10      LD  HL,0
000158 C77C 065C             7      LD  B,05CH
00015A C77E 3E                      DB  03EH    ;LD A,??
00015B C77F EF              12      RST 28H
00015C C780 CD0BD6          17      CALL    FILL_MEMORY
00015F C783 06A4             7      LD  B,0A4H
000161 C785 AF               4      XOR A
000162 C786 320400          13      LD  (_DVSW),A
000165 C789 CD0BD6          17      CALL    FILL_MEMORY
                                
000168 C78C CD11C8          17      CALL    SET_BDOS
                                
                                                ;LSX-Dodgers
00016B C78F 3EE5             7      LD  A,CPM_BOOT/256
00016D C791 320B00          13      LD  (0000BH),A
                                
                                                ;MSXワークエリア
000170 C794 3E03             7      LD  A,3
000172 C796 329BFC          13      LD  (INTFLG),A
                                
                                                ;ROMタイプ判別(ASCII-8K/ASCII-16K)
000175 C799 1E00             7      LD  E,0
000177 C79B 3A62E5          13      LD  A,(ROM_SLT)
00017A C79E 210068          10      LD  HL,BANK1_SEL
00017D C7A1 CDFED3          17      CALL    WRSLT
                                
000180 C7A4 210060          10      LD  HL,06000H
000183 C7A7 3A62E5          13      LD  A,(ROM_SLT)
000186 C7AA CDBDD3          17      CALL    RDSLT
000189 C7AD FE41             7      CP  'A'
00018B C7AF 280F            12      JR  Z,ROM8K
                                                ;ASCII-8K/Konami-8Kではない(ASCII-16K)
00018D C7B1 3E                      DB  03EH    ;LD A,??
00018E C7B2 00               4      NOP
00018F C7B3 32E4E2          13      LD  (ASCII16K1),A
000192 C7B6 32E8E2          13      LD  (ASCII16K2),A
000195 C7B9 3E3F             7      LD  A,03FH
000197 C7BB 3200E3          13      LD  (ASCII16K3),A
00019A C7BE 1829            12      JR  ROMCHECKED
       C7C0                     ROM8K:              ;Konami-8Kチェック
00019C C7C0 1E01             7      LD  E,1
00019E C7C2 3A62E5          13      LD  A,(ROM_SLT)
0001A1 C7C5 210070          10      LD  HL,BANK2_SEL
0001A4 C7C8 CDFED3          17      CALL    WRSLT
                                
0001A7 C7CB 1E00             7      LD  E,0
0001A9 C7CD 3A62E5          13      LD  A,(ROM_SLT)
0001AC C7D0 210080          10      LD  HL,KONAMI_BANK2_SEL
0001AF C7D3 CDFED3          17      CALL    WRSLT
                                
0001B2 C7D6 210080          10      LD  HL,08000H
0001B5 C7D9 3A62E5          13      LD  A,(ROM_SLT)
0001B8 C7DC CDBDD3          17      CALL    RDSLT
0001BB C7DF FE41             7      CP  'A'
0001BD C7E1 2006            12      JR  NZ,ROMCHECKED
                                                ;Konami-8K
0001BF C7E3 210080          10      LD  HL,KONAMI_BANK2_SEL
0001C2 C7E6 22EFE2          16      LD  (ROM8000H),HL
       C7E9                     ROMCHECKED:
                                                ;MSX2判別
0001C5 C7E9 3AF8FA          13      LD  A,(EXBRSA)
0001C8 C7EC B7               4      OR  A
0001C9 C7ED 3E28             7      LD  A,40
0001CB C7EF 2802            12      JR  Z,ISMSX1
0001CD C7F1 3E50             7      LD  A,80        ;MSX2以降は80桁で起動
       C7F3                     ISMSX1:
0001CF C7F3 32AEF3          13      LD  (LINL40),A
0001D2 C7F6 32B1E5          13      LD  (_WIDTH),A
0001D5 C7F9 DD216C00        14      LD  IX,INITXT
0001D9 C7FD CD17D3          17      CALL    CALSLT_R
0001DC C800 DD217800        14      LD  IX,SETTXT
0001E0 C804 CD17D3          17      CALL    CALSLT_R
                                
0001E3 C807 2112C9          10      LD  HL,INIMES
0001E6 C80A CD7ACE          17      CALL    MSX
       C80D                     INIT1:
0001E9 C80D AF               4      XOR A
0001EA C80E FE03             7      CP  3
0001EC C810 C9              10      RET
       C811                     SET_BDOS:
0001ED C811 3E                      DB  03EH    ;LD A,??
0001EE C812 E9               4      JP  (HL)
0001EF C813 320F00          13      LD  (0000FH),A
                                
0001F2 C816 3EC3             7      LD  A,0C3H      ;JP
0001F4 C818 2103E5          10      LD  HL,CPM_WBOOT
0001F7 C81B 320000          13      LD  (00000H),A
0001FA C81E 220100          16      LD  (00001H),HL ;IPL
                                
0001FD C821 2106CA          10      LD  HL,BDOS
000200 C824 320500          13      LD  (00005H),A
000203 C827 220600          16      LD  (00006H),HL ;BDOS
                                
000206 C82A 210000          10      LD  HL,0
000209 C82D 322800          13      LD  (00028H),A
00020C C830 222900          16      LD  (00029H),HL ;BDOS
                                                ;インタースロットコール
00020F C833 2171D3          10      LD  HL,RDSLTR
000212 C836 320C00          13      LD  (_RDSLT),A
000215 C839 220D00          16      LD  (_RDSLT+1),HL
                                
000218 C83C 217AD3          10      LD  HL,WRSLTR
00021B C83F 321400          13      LD  (_WRSLT),A
00021E C842 221500          16      LD  (_WRSLT+1),HL
                                
000221 C845 2133D3          10      LD  HL,CALSLTR
000224 C848 321C00          13      LD  (_CALSLT),A
000227 C84B 221D00          16      LD  (_CALSLT+1),HL
                                
00022A C84E 2171D4          10      LD  HL,ENASLT
00022D C851 322400          13      LD  (_ENASLT),A
000230 C854 222500          16      LD  (_ENASLT+1),HL
                                
000233 C857 2123D3          10      LD  HL,CALLF
000236 C85A 323000          13      LD  (_CALLF),A
000239 C85D 223100          16      LD  (_CALLF+1),HL
                                
00023C C860 2183D3          10      LD  HL,INT38H
00023F C863 323800          13      LD  (00038H),A
000242 C866 223900          16      LD  (00038H+1),HL
000245 C869 C9              10      RET
       C86A                     CHK_RAM:
000246 C86A E5              11      PUSH    HL
000247 C86B CDBFC8          17      CALL    CHK_RAM0
00024A C86E E1              10      POP HL
00024B C86F C8              11      RET Z
00024C C870 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
00024F C873 E680             7      AND 080H
000251 C875 CD96C8          17      CALL    CHK_RAM_SLT
000254 C878 C8              11      RET Z
000255 C879 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000258 C87C E680             7      AND 080H
00025A C87E C601             7      ADD A,1
00025C C880 CD96C8          17      CALL    CHK_RAM_SLT
00025F C883 C8              11      RET Z
000260 C884 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000263 C887 E680             7      AND 080H
000265 C889 C602             7      ADD A,2
000267 C88B CD96C8          17      CALL    CHK_RAM_SLT
00026A C88E C8              11      RET Z
00026B C88F 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
00026E C892 E680             7      AND 080H
000270 C894 C603             7      ADD A,3
       C896                     CHK_RAM_SLT:
000272 C896 E5              11      PUSH    HL
000273 C897 CDBFC8          17      CALL    CHK_RAM0        ;スロット#X or X-0
000276 C89A E1              10      POP HL
000277 C89B C8              11      RET Z
000278 C89C CB79             8      BIT 7,C
00027A C89E 281A            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
00027C C8A0 79               4      LD  A,C
00027D C8A1 C604             7      ADD A,4*1           ;スロット#X-1
00027F C8A3 E5              11      PUSH    HL
000280 C8A4 CDBFC8          17      CALL    CHK_RAM0
000283 C8A7 E1              10      POP HL
000284 C8A8 C8              11      RET Z
000285 C8A9 79               4      LD  A,C
000286 C8AA C608             7      ADD A,4*2           ;スロット#X-2
000288 C8AC E5              11      PUSH    HL
000289 C8AD CDBFC8          17      CALL    CHK_RAM0
00028C C8B0 E1              10      POP HL
00028D C8B1 C8              11      RET Z
00028E C8B2 79               4      LD  A,C
00028F C8B3 C60C             7      ADD A,4*3           ;スロット#X-3
000291 C8B5 E5              11      PUSH    HL
000292 C8B6 CDBFC8          17      CALL    CHK_RAM0
000295 C8B9 E1              10      POP HL
       C8BA                     CHK_RAM_E:
000296 C8BA AF               4      XOR A
000297 C8BB 3C               4      INC A           ;ZF=0にする
000298 C8BC 3E00             7      LD  A,0
00029A C8BE C9              10      RET
                                
       C8BF                     CHK_RAM0:
00029B C8BF 4F               4      LD  C,A
00029C C8C0 3A62E5          13      LD  A,(ROM_SLT)
00029F C8C3 B9               4      CP  C
0002A0 C8C4 28F4            12      JR  Z,CHK_RAM_E
0002A2 C8C6 2E00             7      LD  L,0
       C8C8                     CHK_RAM1:
0002A4 C8C8 79               4      LD  A,C
0002A5 C8C9 DD210C00        14      LD  IX,_RDSLT
0002A9 C8CD CDFAC8          17      CALL    CALSLT_RAM
0002AC C8D0 C6E5             7      ADD A,0E5H
0002AE C8D2 47               4      LD  B,A
0002AF C8D3 5F               4      LD  E,A
0002B0 C8D4 79               4      LD  A,C
0002B1 C8D5 DD211400        14      LD  IX,_WRSLT
0002B5 C8D9 CDFAC8          17      CALL    CALSLT_RAM
0002B8 C8DC 79               4      LD  A,C
0002B9 C8DD DD210C00        14      LD  IX,_RDSLT
0002BD C8E1 CDFAC8          17      CALL    CALSLT_RAM
0002C0 C8E4 B8               4      CP  B
0002C1 C8E5 C0              11      RET NZ
0002C2 C8E6 D6E5             7      SUB 0E5H
0002C4 C8E8 79               4      LD  A,C
0002C5 C8E9 5F               4      LD  E,A
0002C6 C8EA DD211400        14      LD  IX,_WRSLT
0002CA C8EE CDFAC8          17      CALL    CALSLT_RAM
0002CD C8F1 24               4      INC H
0002CE C8F2 7D               4      LD  A,L
0002CF C8F3 C604             7      ADD A,4
0002D1 C8F5 6F               4      LD  L,A
0002D2 C8F6 20D0            12      JR  NZ,CHK_RAM1
0002D4 C8F8 79               4      LD  A,C     ;ZF=1のハズ
0002D5 C8F9 C9              10      RET
                                
       C8FA                     CALSLT_RAM:
0002D6 C8FA C5              11      PUSH    BC
0002D7 C8FB E5              11      PUSH    HL
0002D8 C8FC FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0002DC C900 CD1C00          17      CALL    _CALSLT
0002DF C903 E1              10      POP HL
0002E0 C904 C1              10      POP BC
0002E1 C905 C9              10      RET
                                
0002E2 C906 4155544F45584543    AUTOD:  DB  "AUTOEXEC "
            20                  
0002EB C90F 413A00              AUTODV: DB  "A:",0
                                
0002EE C912 0C4C53582D446F64    INIMES: DB  00CH,"LSX-Dodgers for MSX v"
            6765727320666F72    
            204D53582076        
000304 C928 312E                    DB  030H + VER_1, '.'
000306 C92A 3631                    DB  030H + VER_2 ,030H + VER_3
000308 C92C 61                      DB  'a'
000309 C92D 2047616B750D0A          DB  " Gaku",0DH,0AH
000310 C934 00                      DB  0
                                
000311 C935 0300                M2DD:   DW  3
000313 C937 F902                    DB  0F9H,2
000315 C939 CB02                    DW  715
000317 C93B FF0750090182            DB  0FFH,7,80,9,1,082H
00031D C941 0700A7000A00            DW  7,0A7H,10
       C947                     M2DDE:
[EOF:MSXINIT.ASM:SHIFT_JIS]
                                    INCLUDE "MSXCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                ;   MSX
                                
       C947                     INITE:
000323 C947                         DS  BDOS-INITE
0003E2 CA06 C33ACE          10      JP  BDOS0
                                
       CA09                     WBOOT1:
0003E5 CA09 ED7B0600        20      LD  SP,(SYSTEM+1)
0003E9 CA0D 3E03             7      LD  A,3
0003EB CA0F CD04D1          17      CALL    MSG_A
       CA12                     WBOOT2:
[EOF:MSXCCP.ASM:UTF_8]
                                    INCLUDE "LDCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                
       CA12                     COMMAND:
0003EE CA12 3A3DE4          13      LD  A,(FCB_BAT)
0003F1 CA15 B7               4      OR  A
0003F2 CA16 C258CB          10      JP  NZ,C_BAT1
0003F5 CA19 CDCCCA          17      CALL    SETDTA1
0003F8 CA1C 3A0400          13      LD  A,(_DVSW)
0003FB CA1F C641             7      ADD A,'A'
0003FD CA21 CD04D1          17      CALL    MSG_A
000400 CA24 3E3E             7      LD  A,'>'
000402 CA26 CD04D1          17      CALL    MSG_A
000405 CA29 3E50             7      LD  A,80
000407 CA2B 12               7      LD  (DE),A
000408 CA2C CDC3D1          17      CALL    _SYS0A      ;(BDOS)文字列入力
00040B CA2F CD4DCC          17      CALL    LTNL
       CA32                     COMMAND2:
00040E CA32 118200          10      LD  DE,DTA1+2
000411 CA35 CDFDE5          17      CALL    _COMANL
000414 CA38 30D8            12      JR  NC,COMMAND
000416 CA3A 1179E5          10      LD  DE,COMERM
000419 CA3D CD6BCE          17      CALL    _SYS09      ;(BDOS)文字列出力
00041C CA40 C7              12      RST 0
                                
       CA41                     COMANL:
00041D CA41 CD5FD5          17      CALL    FILE
000420 CA44 3A19E5          13      LD  A,(FNAME+4)
000423 CA47 FE20             7      CP  020H
000425 CA49 201C            12      JR  NZ,COMB2
000427 CA4B D5              11      PUSH    DE
000428 CA4C 1115E5          10      LD  DE,FNAME
00042B CA4F 1A               7      LD  A,(DE)
00042C CA50 FE20             7      CP  020H
00042E CA52 2844            12      JR  Z,SDVSW
000430 CA54 1B               6      DEC DE
000431 CA55 1A               7      LD  A,(DE)
000432 CA56 C6FF             7      ADD A,0FFH
000434 CA58 3809            12      JR  C,COMB
000436 CA5A 13               6      INC DE
                                
000437 CA5B 210ACE          10      LD  HL,COMTB
00043A CA5E 0608             7      LD  B,COMS
00043C CA60 CDEED7          17      CALL    CPNAME
       CA63                     COMB:
00043F CA63 D1              10      POP DE
000440 CA64 D20F00          10      JP  NC,JP_HL
       CA67                     COMB2:
000443 CA67 EB               4      EX  DE,HL
000444 CA68 2235CB          16      LD  (COMSWC),HL
000447 CA6B F5              11      PUSH    AF
000448 CA6C CDEDCA          17      CALL    CEXE4
00044B CA6F F1              10      POP AF
00044C CA70 2115E5          10      LD  HL,FNAME
00044F CA73 116D00          10      LD  DE,FCB2FN   ;COMMAND NAME
000452 CA76 010B00          10      LD  BC,11
000455 CA79 EDB0                    LDIR
000457 CA7B 11DCE3          10      LD  DE,PATHD
       CA7E                     CEX1:
00045A CA7E 1A               7      LD  A,(DE)
00045B CA7F FE20             7      CP  020H
00045D CA81 D8              11      RET C
00045E CA82 CD54D5          17      CALL    FILEC
000461 CA85 D5              11      PUSH    DE
000462 CA86 216D00          10      LD  HL,FCB2FN   ;COMMAND NAME
000465 CA89 1115E5          10      LD  DE,FNAME
000468 CA8C 010B00          10      LD  BC,11
00046B CA8F EDB0                    LDIR
00046D CA91 CDEDCA          17      CALL    CEXE4
000470 CA94 D1              10      POP DE
000471 CA95 13               6      INC DE
000472 CA96 18E6            12      JR  CEX1
                                
       CA98                     SDVSW:
000474 CA98 F1              10      POP AF
000475 CA99 3A14E5          13      LD  A,(FDRV)
000478 CA9C 3D               4      DEC A
000479 CA9D 5F               4      LD  E,A
00047A CA9E 0E0E             7      LD  C,00EH      ;(BDOS)カレントドライブの設定
00047C CAA0 1831            12      JR  SYSTEM0
                                
       CAA2                     OPEN1:
00047E CAA2 2114E5          10      LD  HL,FDRV
       CAA5                     OPEN:
000481 CAA5 0E11             7      LD  C,011H      ;(BDOS)ファイルの検索
       CAA7                     OPEN3:
000483 CAA7 D5              11      PUSH    DE
000484 CAA8 1118E4          10      LD  DE,DTA_CCP
000487 CAAB CDC9CA          17      CALL    SETDTA
00048A CAAE EB               4      EX  DE,HL
00048B CAAF CDD3CA          17      CALL    SYSTEM0
00048E CAB2 D1              10      POP DE
00048F CAB3 C9              10      RET
                                
       CAB4                     OPEN2:
000490 CAB4 0E12             7      LD  C,012H
000492 CAB6 18EF            12      JR  OPEN3
                                
       CAB8                     DEFCB:              ;Z=Ok NZ=Error
000494 CAB8 1118E4          10      LD  DE,DTA_CCP
000497 CABB CDD1CA          17      CALL    SYSC0F
                                
00049A CABE 1139E4          10      LD  DE,DTA_CCP+33   ;(FCB)ランダムレコード
00049D CAC1 0604             7      LD  B,4
00049F CAC3 CD1ECD          17      CALL    ZERO_MEMORY_DE
       CAC6                     SETDTA100:
0004A2 CAC6 110001          10      LD  DE,00100H
       CAC9                     SETDTA:
0004A5 CAC9 C33ED0          10      JP  _SYS1A      ;(BDOS)DTAの設定
                                
       CACC                     SETDTA1:
0004A8 CACC 118000          10      LD  DE,DTA1
0004AB CACF 18F8            12      JR  SETDTA
                                
       CAD1                     SYSC0F:
0004AD CAD1 0E0F             7      LD  C,00FH      ;(BDOS)ファイルのオープン
       CAD3                     SYSTEM0:
0004AF CAD3 CD0500          17      CALL    SYSTEM
0004B2 CAD6 B7               4      OR  A
0004B3 CAD7 C9              10      RET
                                
       CAD8                     C_CD:
0004B4 CAD8 0E5A             7      LD  C,05AH
0004B6 CADA 18F7            12      JR  SYSTEM0
                                
       CADC                     S27BUF:
0004B8 CADC 2100FE          10      LD  HL,0-00200H ;スクラッチエリア(0100H)+スタック予備(0100H)
0004BB CADF 39              11      ADD HL,SP
0004BC CAE0 2E00             7      LD  L,0
0004BE CAE2 7C               4      LD  A,H
0004BF CAE3 E6F8             7      AND 0F8H
0004C1 CAE5 67               4      LD  H,A
       CAE6                     S27DTA:
0004C2 CAE6 1118E4          10      LD  DE,DTA_CCP
       CAE9                     S27:
0004C5 CAE9 0E27             7      LD  C,027H      ;(BDOS)ランダムブロック読み込み
0004C7 CAEB 18E6            12      JR  SYSTEM0
                                
       CAED                     CEXE4:
0004C9 CAED 211DE5          10      LD  HL,FNAME+8
0004CC CAF0 7E               7      LD  A,(HL)
0004CD CAF1 FE20             7      CP  020H
0004CF CAF3 2007            12      JR  NZ,CEXE7
0004D1 CAF5 3E3F             7      LD  A,'?'
0004D3 CAF7 77               7      LD  (HL),A
0004D4 CAF8 23               6      INC HL
0004D5 CAF9 77               7      LD  (HL),A
0004D6 CAFA 23               6      INC HL
0004D7 CAFB 77               7      LD  (HL),A
       CAFC                     CEXE7:
0004D8 CAFC CDA2CA          17      CALL    OPEN1
       CAFF                     CEXE5:
0004DB CAFF C0              11      RET NZ
0004DC CB00 2A22E4          16      LD  HL,(DTA_CCP+1+9)
0004DF CB03 7C               4      LD  A,H
0004E0 CB04 CD76D8          17      CALL    CAP
0004E3 CB07 67               4      LD  H,A
0004E4 CB08 7D               4      LD  A,L
0004E5 CB09 CD76D8          17      CALL    CAP
0004E8 CB0C 6F               4      LD  L,A
0004E9 CB0D 3A21E4          13      LD  A,(DTA_CCP+1+8)
0004EC CB10 CD76D8          17      CALL    CAP
0004EF CB13 D642             7      SUB 'B'
0004F1 CB15 282C            12      JR  Z,C_BAT
0004F3 CB17 3D               4      DEC A       ;'C'
0004F4 CB18 2805            12      JR  Z,C_EXE
       CB1A                     CEXE6:
0004F6 CB1A CDB4CA          17      CALL    OPEN2
0004F9 CB1D 18E0            12      JR  CEXE5
                                
       CB1F                     C_EXE:
0004FB CB1F 7C               4      LD  A,H
0004FC CB20 FE4D             7      CP  'M'
0004FE CB22 20F6            12      JR  NZ,CEXE6
                                
000500 CB24 CDB8CA          17      CALL    DEFCB
000503 CB27 CDDCCA          17      CALL    S27BUF
000506 CB2A 3D               4      DEC A
000507 CB2B 37               4      SCF
000508 CB2C C0              11      RET NZ
000509 CB2D 7C               4      LD  A,H
00050A CB2E B5               4      OR  L
00050B CB2F 37               4      SCF
00050C CB30 C8              11      RET Z
00050D CB31 CDCCCA          17      CALL    SETDTA1
000510 CB34 110000          10      LD  DE,0                ; self-modifying code
       CB35                     COMSWC  EQU $-2
000513 CB37 ED7B0600        20      LD  SP,(SYSTEM+1)
000517 CB3B 67               4      LD  H,A             ; A=0 in SETDTA1(_SYS1A)
000518 CB3C 6F               4      LD  L,A
000519 CB3D E5              11      PUSH    HL              ; push $0000 (reboot address)
00051A CB3E 24               4      INC H
00051B CB3F E5              11      PUSH    HL              ; push $0100 (TPA address)
00051C CB40 C3E9CC          10      JP  SETFCB              ; and JP $0100
                                
       CB43                     C_BAT:
00051F CB43 114154          10      LD  DE,'A'+'T'*256
000522 CB46 ED52            15      SBC HL,DE
000524 CB48 20D0            12      JR  NZ,CEXE6
                                
000526 CB4A CDB8CA          17      CALL    DEFCB
                                
000529 CB4D 2118E4          10      LD  HL,DTA_CCP
00052C CB50 113DE4          10      LD  DE,FCB_BAT
00052F CB53 012500          10      LD  BC,37
000532 CB56 EDB0                    LDIR
       CB58                     C_BAT1:
000534 CB58 CDC6CA          17      CALL    SETDTA100
000537 CB5B CD8FCB          17      CALL    FGETC_BAT
00053A CB5E 218100          10      LD  HL,DTA1+1
00053D CB61 2025            12      JR  NZ,END_BATCH
00053F CB63 FE21             7      CP  021H        ;スペースや改行など制御文字を飛ばす
000541 CB65 38F1            12      JR  C,C_BAT1
000543 CB67 3620            10      LD  (HL),' '
000545 CB69 23               6      INC HL
       CB6A                     C_BAT2:
000546 CB6A 77               7      LD  (HL),A
000547 CB6B 23               6      INC HL
000548 CB6C 7D               4      LD  A,L
000549 CB6D 3C               4      INC A       ;L==0FFH
00054A CB6E 2809            12      JR  Z,RUN_BATCH
00054C CB70 CD8FCB          17      CALL    FGETC_BAT
00054F CB73 2004            12      JR  NZ,RUN_BATCH
000551 CB75 FE20             7      CP  020H
000553 CB77 30F1            12      JR  NC,C_BAT2
       CB79                     RUN_BATCH:
000555 CB79 7D               4      LD  A,L
000556 CB7A D67F             7      SUB DTA1-1
000558 CB7C 328000          13      LD  (DTA1),A
00055B CB7F FE04             7      CP  4
00055D CB81 3805            12      JR  C,END_BATCH
00055F CB83 3600            10      LD  (HL),0
000561 CB85 C332CA          10      JP  COMMAND2
       CB88                     END_BATCH:
000564 CB88 AF               4      XOR A       ;バッチファイルを閉じる
000565 CB89 323DE4          13      LD  (FCB_BAT),A
000568 CB8C C300E5          10      JP  CPM_BOOT
                                
       CB8F                     FGETC_BAT:
00056B CB8F 113DE4          10      LD  DE,FCB_BAT
       CB92                     FGETC:              ;1文字ずつ読み込む
00056E CB92 E5              11      PUSH    HL      ;Z:成功
00056F CB93 210100          10      LD  HL,1
000572 CB96 CDE9CA          17      CALL    S27
000575 CB99 E1              10      POP HL
000576 CB9A 3A0001          13      LD  A,(00100H)
000579 CB9D C9              10      RET
                                
       CB9E                     C_DEL:
00057A CB9E CDE9CC          17      CALL    SETFCB
00057D CBA1 CD3FD1          17      CALL    _SYS08      ;(BDOS)エコーなしコンソール入力
                                
000580 CBA4 0E13             7      LD  C,013H
000582 CBA6 180A            12      JR  CDEL1       ;(BDOS)ファイルの削除
                                
       CBA8                     C_REN:
000584 CBA8 CDE9CC          17      CALL    SETFCB
000587 CBAB 3E10             7      LD  A,010H      ;ディレクトリも対象にする
000589 CBAD 326900          13      LD  (FCB1+13),A ;属性
00058C CBB0 0E17             7      LD  C,017H      ;(BDOS)ファイル名の変更
       CBB2                     CDEL1:
00058E CBB2 115C00          10      LD  DE,FCB1
000591 CBB5 CD0500          17      CALL    SYSTEM
000594 CBB8 C6FF             7      ADD A,0FFH
000596 CBBA C9              10      RET
                                
       CBBB                     C_DIR:
000597 CBBB CD54D5          17      CALL    FILEC
00059A CBBE 2115E5          10      LD  HL,FDRV+1
00059D CBC1 CDFFCD          17      CALL    CWILD1
0005A0 CBC4 3EF1             7      LD  A,0F1H
0005A2 CBC6 3221E5          13      LD  (FDRV+13),A
0005A5 CBC9 CDA2CA          17      CALL    OPEN1
       CBCC                     CDIR1:
0005A8 CBCC B7               4      OR  A
0005A9 CBCD 2008            12      JR  NZ,PDSKF
0005AB CBCF CD1ACC          17      CALL    P_NAME
0005AE CBD2 CDB4CA          17      CALL    OPEN2
0005B1 CBD5 18F5            12      JR  CDIR1
       CBD7                     PDSKF:
0005B3 CBD7 3A14E5          13      LD  A,(FDRV)
0005B6 CBDA 5F               4      LD  E,A
0005B7 CBDB 0E1B             7      LD  C,01BH      ;(BDOS)ディスク情報の獲得
0005B9 CBDD CD0500          17      CALL    SYSTEM
0005BC CBE0 4F               4      LD  C,A     ;C←1クラスタ辺りの論理セクタ数
0005BD CBE1 C601             7      ADD A,001H
0005BF CBE3 D8              11      RET C       ;Aが0FFHだった場合
0005C0 CBE4 3E06             7      LD  A,8-2
       CBE6                     PDS1:               ;HL=未使用クラスタの総数
0005C2 CBE6 3C               4      INC A
0005C3 CBE7 CB19             8      RR  C
0005C5 CBE9 30FB            12      JR  NC,PDS1
       CBEB                     PDS2:               ;B←論理セクタのサイズの上位8ビット
0005C7 CBEB 3C               4      INC A
0005C8 CBEC CB18             8      RR  B
0005CA CBEE 30FB            12      JR  NC,PDS2
0005CC CBF0 47               4      LD  B,A
                                
0005CD CBF1 110000          10      LD  DE,0
       CBF4                     PDS3:
0005D0 CBF4 29              11      ADD HL,HL
0005D1 CBF5 EB               4      EX  DE,HL
0005D2 CBF6 ED6A            15      ADC HL,HL
0005D4 CBF8 EB               4      EX  DE,HL
0005D5 CBF9 10F9            13      DJNZ    PDS3
       CBFB                     PDSKF1:
0005D7 CBFB CD87CC          17      CALL    PRDEC_DEHL
0005DA CBFE 116DE4          10      LD  DE,FREE
0005DD CC01 CD6BCE          17      CALL    _SYS09      ;(BDOS)文字列出力
0005E0 CC04 CD74CC          17      CALL    PUTDRV
0005E3 CC07 3E5C             7      LD  A,05CH      ;\
0005E5 CC09 CD04D1          17      CALL    MSG_A
0005E8 CC0C 2A22E5          16      LD  HL,(FDRV+14)    ;ディレクトリのクラスタ番号
0005EB CC0F AF               4      XOR A
0005EC CC10 11FEFF          10      LD  DE,0-2
0005EF CC13 19              11      ADD HL,DE
0005F0 CC14 23               6      INC HL
0005F1 CC15 DC84CC          17      CALL    C,PRDEC_HL
0005F4 CC18 1833            12      JR  LTNL
                                
       CC1A                     P_NAME:
0005F6 CC1A 3A19E4          13      LD  A,(DTA_CCP+1)
0005F9 CC1D FE2E             7      CP  '.'
0005FB CC1F C8              11      RET Z
                                
0005FC CC20 3A24E4          13      LD  A,(DTA_CCP+1+00BH)
0005FF CC23 F5              11      PUSH    AF
000600 CC24 CB67             8      BIT 4,A
000602 CC26 2808            12      JR  Z,DIR3
000604 CC28 1162E4          10      LD  DE,DIRMES
000607 CC2B CD6BCE          17      CALL    _SYS09      ;(BDOS)文字列出力
00060A CC2E 180A            12      JR  DIR6
       CC30                     DIR3:
00060C CC30 ED5B37E4        20      LD  DE,(DTA_CCP+1+01EH)
000610 CC34 2A35E4          16      LD  HL,(DTA_CCP+1+01CH)
000613 CC37 CD87CC          17      CALL    PRDEC_DEHL
       CC3A                     DIR6:
000616 CC3A F1              10      POP AF
000617 CC3B 0F               4      RRCA
000618 CC3C 9F               4      SBC A,A
000619 CC3D E60A             7      AND '*'-020H
00061B CC3F C620             7      ADD A,020H
00061D CC41 CD04D1          17      CALL    MSG_A
000620 CC44 CD74CC          17      CALL    PUTDRV
000623 CC47 2119E4          10      LD  HL,DTA_CCP+1
000626 CC4A CDC7CC          17      CALL    FPRNT
                                
       CC4D                     LTNL:
000629 CC4D 1E03             7      LD  E,3
00062B CC4F C3CDE5          10      JP  _PRINT
                                
       CC52                     C_PATH:
00062E CC52 CD36D6          17      CALL    SPCUT
000631 CC55 21DCE3          10      LD  HL,PATHD
000634 CC58 FE21             7      CP  021H
000636 CC5A 300C            12      JR  NC,CPATH0
       CC5C                     CPATHP:
000638 CC5C 7E               7      LD  A,(HL)
000639 CC5D 23               6      INC HL
00063A CC5E FE20             7      CP  020H
00063C CC60 3F               4      CCF
00063D CC61 30EA            12      JR  NC,LTNL
00063F CC63 CD04D1          17      CALL    MSG_A
000642 CC66 18F4            12      JR  CPATHP
       CC68                     CPATH0:
000644 CC68 FE3B             7      CP  ';'
000646 CC6A 2001            12      JR  NZ,CPATH1
000648 CC6C 13               6      INC DE
       CC6D                     CPATH1:
000649 CC6D EB               4      EX  DE,HL
00064A CC6E 013B00          10      LD  BC,PATHX
00064D CC71 EDB0                    LDIR
00064F CC73 C9              10      RET
                                
       CC74                     PUTDRV:
000650 CC74 3A14E5          13      LD  A,(FDRV)
000653 CC77 CD69D6          17      CALL    GETDRV1
000656 CC7A C641             7      ADD A,'A'
000658 CC7C CD04D1          17      CALL    MSG_A
00065B CC7F 3E3A             7      LD  A,':'
       CC81                     MSG_AR:
00065D CC81 C304D1          10      JP  MSG_A
                                
       CC84                     PRDEC_HL:
000660 CC84 AF               4      XOR A
000661 CC85 5F               4      LD  E,A
000662 CC86 57               4      LD  D,A
       CC87                     PRDEC_DEHL:
000663 CC87 D5              11      PUSH    DE
000664 CC88 110FE5          10      LD  DE,DECBF
000667 CC8B 0605             7      LD  B,5
000669 CC8D CD1ECD          17      CALL    ZERO_MEMORY_DE  ;A=0
00066C CC90 D1              10      POP DE
                                
00066D CC91 0E20             7      LD  C,32
       CC93                     DEC1:
00066F CC93 29              11      ADD HL,HL
000670 CC94 EB               4      EX  DE,HL
000671 CC95 ED6A            15      ADC HL,HL
000673 CC97 EB               4      EX  DE,HL
000674 CC98 E5              11      PUSH    HL
000675 CC99 2113E5          10      LD  HL,DECBF+4
000678 CC9C 0605             7      LD  B,5
       CC9E                     DEC2:
00067A CC9E 7E               7      LD  A,(HL)
00067B CC9F 8F               4      ADC A,A
00067C CCA0 27               4      DAA
00067D CCA1 77               7      LD  (HL),A
00067E CCA2 2B               6      DEC HL
00067F CCA3 10F9            13      DJNZ    DEC2
000681 CCA5 E1              10      POP HL
000682 CCA6 0D               4      DEC C
000683 CCA7 20EA            12      JR  NZ,DEC1
                                
000685 CCA9 210FE5          10      LD  HL,DECBF
000688 CCAC 3E20             7      LD  A,020H
00068A CCAE 0604             7      LD  B,4
       CCB0                     DEC3:
00068C CCB0 CDBDCC          17      CALL    DEC4
00068F CCB3 CDBDCC          17      CALL    DEC4
000692 CCB6 23               6      INC HL
000693 CCB7 10F7            13      DJNZ    DEC3
       CCB9                     DECX:
000695 CCB9 CDBDCC          17      CALL    DEC4
000698 CCBC AF               4      XOR A
       CCBD                     DEC4:
000699 CCBD ED6F            18      RLD
00069B CCBF FE20             7      CP  020H
00069D CCC1 2802            12      JR  Z,DEC5
00069F CCC3 F630             7      OR  030H
       CCC5                     DEC5:
0006A1 CCC5 18BA            12      JR  MSG_AR
                                
       CCC7                     FPRNT:
0006A3 CCC7 0608             7      LD  B,8 ;ファイル名を表示
0006A5 CCC9 CDD8CC          17      CALL    P_N1
0006A8 CCCC 7E               7      LD  A,(HL)
0006A9 CCCD CD82D8          17      CALL    CAP3
0006AC CCD0 D8              11      RET C   ;拡張子が無い
                                
0006AD CCD1 3E2E             7      LD  A,'.'
0006AF CCD3 CD04D1          17      CALL    MSG_A
0006B2 CCD6 0603             7      LD  B,3 ;拡張子を表示
       CCD8                     P_N1:
0006B4 CCD8 7E               7      LD  A,(HL)
0006B5 CCD9 CD82D8          17      CALL    CAP3
0006B8 CCDC 3807            12      JR  C,P_N2
0006BA CCDE CD04D1          17      CALL    MSG_A
0006BD CCE1 23               6      INC HL
0006BE CCE2 10F4            13      DJNZ    P_N1
0006C0 CCE4 C9              10      RET
       CCE5                     P_N2:
0006C1 CCE5 23               6      INC HL
0006C2 CCE6 10FD            13      DJNZ    P_N2
0006C4 CCE8 C9              10      RET
                                
       CCE9                     SETFCB:
0006C5 CCE9 CD36D6          17      CALL    SPCUT
0006C8 CCEC 1A               7      LD  A,(DE)
0006C9 CCED FE20             7      CP  020H
0006CB CCEF 3801            12      JR  C,SETFCBA
0006CD CCF1 1B               6      DEC DE
       CCF2                     SETFCBA:
0006CE CCF2 0624             7      LD  B,36
0006D0 CCF4 215C00          10      LD  HL,FCB1
0006D3 CCF7 E5              11      PUSH    HL
0006D4 CCF8 AF               4      XOR A
0006D5 CCF9 CD0BD6          17      CALL    FILL_MEMORY
0006D8 CCFC E1              10      POP HL
0006D9 CCFD D5              11      PUSH    DE
0006DA CCFE CDA5D0          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
0006DD CD01 216C00          10      LD  HL,FCB2
0006E0 CD04 CDA5D0          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
0006E3 CD07 E1              10      POP HL
0006E4 CD08 010050          10      LD  BC,05000H
0006E7 CD0B 118100          10      LD  DE,00081H
       CD0E                     SETFCB1:
0006EA CD0E 7E               7      LD  A,(HL)
0006EB CD0F 23               6      INC HL
0006EC CD10 FE20             7      CP  020H
0006EE CD12 3805            12      JR  C,SETFCB2
0006F0 CD14 12               7      LD  (DE),A
0006F1 CD15 13               6      INC DE
0006F2 CD16 0C               4      INC C
0006F3 CD17 10F5            13      DJNZ    SETFCB1
       CD19                     SETFCB2:
0006F5 CD19 79               4      LD  A,C
0006F6 CD1A 328000          13      LD  (DTA1),A
0006F9 CD1D 04               4      INC B
       CD1E                     ZERO_MEMORY_DE:
0006FA CD1E AF               4      XOR A
       CD1F                     FILL_MEMORY_DE:
0006FB CD1F 12               7      LD  (DE),A
0006FC CD20 13               6      INC DE
0006FD CD21 10FC            13      DJNZ    FILL_MEMORY_DE
0006FF CD23 C9              10      RET
                                
       CD24                     C_COPY:
000700 CD24 CDE9CC          17      CALL    SETFCB
                                
000703 CD27 1161E5          10      LD  DE,ZERO
000706 CD2A CD57D5          17      CALL    FILEC2
000709 CD2D 216C00          10      LD  HL,FCB2
00070C CD30 CDACD0          17      CALL    S29X1
                                
00070F CD33 3E10             7      LD  A,010H
000711 CD35 326900          13      LD  (FCB1+13),A
000714 CD38 216D00          10      LD  HL,FCB2FN
000717 CD3B CDFFCD          17      CALL    CWILD1
       CD3E                     COPY0:
00071A CD3E CDFCCD          17      CALL    CWILD
00071D CD41 215C00          10      LD  HL,FCB1
000720 CD44 CDA5CA          17      CALL    OPEN
000723 CD47 37               4      SCF
       CD48                     COPY1:
000724 CD48 C0              11      RET NZ
000725 CD49 CDB8CA          17      CALL    DEFCB
                                
000728 CD4C 3A25E4          13      LD  A,(DTA_CCP+13)
00072B CD4F CB67             8      BIT 4,A
00072D CD51 2821            12      JR  Z,COPY1A
                                
00072F CD53 215D00          10      LD  HL,FCB1FN
000732 CD56 CD9AD9          17      CALL    CHKWILD
000735 CD59 3814            12      JR  C,COPY9
                                
000737 CD5B 3E20             7      LD  A,020H
000739 CD5D 325D00          13      LD  (FCB1FN),A
00073C CD60 2A32E4          16      LD  HL,(DTA_CCP+26)
00073F CD63 23               6      INC HL
000740 CD64 226A00          16      LD  (FCB1+14),HL
000743 CD67 18D5            12      JR  COPY0
                                
       CD69                     COPY8:
000745 CD69 CD6BCE          17      CALL    _SYS09      ;(BDOS)文字列出力
000748 CD6C CD4DCC          17      CALL    LTNL
       CD6F                     COPY9:
00074B CD6F CDB4CA          17      CALL    OPEN2
00074E CD72 18D4            12      JR  COPY1
                                
       CD74                     COPY1A:
000750 CD74 216C00          10      LD  HL,FCB2
000753 CD77 1114E5          10      LD  DE,FDRV
000756 CD7A 011AE4          10      LD  BC,DTA_CCP+2
000759 CD7D EDA0            16      LDI
00075B CD7F 3E0B             7      LD  A,11
       CD81                     COPY2:
00075D CD81 F5              11      PUSH    AF
00075E CD82 7E               7      LD  A,(HL)
00075F CD83 FE3F             7      CP  '?'
000761 CD85 2001            12      JR  NZ,COPY3
000763 CD87 0A               7      LD  A,(BC)
       CD88                     COPY3:
000764 CD88 12               7      LD  (DE),A
000765 CD89 03               6      INC BC
000766 CD8A 13               6      INC DE
000767 CD8B 23               6      INC HL
000768 CD8C F1              10      POP AF
000769 CD8D 3D               4      DEC A
00076A CD8E 20F1            12      JR  NZ,COPY2
00076C CD90 010500          10      LD  BC,16-11
00076F CD93 EDB0                    LDIR
       CD95                     PUTNAME:
000771 CD95 215D00          10      LD  HL,FCB1FN
000774 CD98 CD9AD9          17      CALL    CHKWILD
000777 CD9B 300B            12      JR  NC,PUTN1
000779 CD9D 2115E5          10      LD  HL,FDRV+1
00077C CDA0 CDC7CC          17      CALL    FPRNT
00077F CDA3 3E20             7      LD  A,020H
000781 CDA5 CD04D1          17      CALL    MSG_A
       CDA8                     PUTN1:
000784 CDA8 1114E5          10      LD  DE,FDRV
000787 CDAB 0E16             7      LD  C,016H      ;(BDOS)ファイルの作成
000789 CDAD CDD3CA          17      CALL    SYSTEM0
00078C CDB0 2048            12      JR  NZ,COPYE2
00078E CDB2 67               4      LD  H,A     ;A=0
00078F CDB3 6F               4      LD  L,A
000790 CDB4 2235E5          16      LD  (FDRV+33),HL    ;(FCB)ランダムレコード
000793 CDB7 2237E5          16      LD  (FDRV+35),HL
       CDBA                     COPY6:
000796 CDBA CDDCCA          17      CALL    S27BUF
000799 CDBD 47               4      LD  B,A
00079A CDBE 3C               4      INC A
00079B CDBF 2831            12      JR  Z,COPYE
00079D CDC1 7C               4      LD  A,H
00079E CDC2 B5               4      OR  L
00079F CDC3 280C            12      JR  Z,COPY7
0007A1 CDC5 1114E5          10      LD  DE,FDRV
0007A4 CDC8 0E26             7      LD  C,026H      ;(BDOS)ランダムブロック書き込み
0007A6 CDCA CDD3CA          17      CALL    SYSTEM0
0007A9 CDCD 2023            12      JR  NZ,COPYE
0007AB CDCF 10E9            13      DJNZ    COPY6
       CDD1                     COPY7:
0007AD CDD1 3A25E4          13      LD  A,(DTA_CCP+13)  ;(FCB)属性
0007B0 CDD4 3221E5          13      LD  (FDRV+13),A
0007B3 CDD7 212CE4          10      LD  HL,DTA_CCP+20   ;(FCB)タイムスタンプ
0007B6 CDDA 1128E5          10      LD  DE,FDRV+20
0007B9 CDDD 010400          10      LD  BC,4
0007BC CDE0 EDB0                    LDIR
                                
0007BE CDE2 1114E5          10      LD  DE,FDRV
0007C1 CDE5 0E10             7      LD  C,010H      ;(BDOS)ファイルのクローズ
0007C3 CDE7 CDD3CA          17      CALL    SYSTEM0
0007C6 CDEA 2006            12      JR  NZ,COPYE
                                
0007C8 CDEC 1171E5          10      LD  DE,OK
0007CB CDEF C369CD          10      JP  COPY8
                                
       CDF2                     COPYE:
0007CE CDF2 1114E5          10      LD  DE,FDRV
0007D1 CDF5 0E13             7      LD  C,013H      ;(BDOS)ファイルの削除
0007D3 CDF7 CD0500          17      CALL    SYSTEM
       CDFA                     COPYE2:
0007D6 CDFA 37               4      SCF
0007D7 CDFB C9              10      RET
                                
       CDFC                     CWILD:
0007D8 CDFC 215D00          10      LD  HL,FCB1FN
       CDFF                     CWILD1:
0007DB CDFF 7E               7      LD  A,(HL)
0007DC CE00 FE20             7      CP  020H
0007DE CE02 C0              11      RET NZ
       CE03                     CWILD2:
0007DF CE03 3E3F             7      LD  A,'?'
0007E1 CE05 060B             7      LD  B,11
0007E3 CE07 C30BD6          10      JP  FILL_MEMORY
                                
       CE0A                     COMTB:
0007E6 CE0A 44202020                DB  "D   "  ;1
0007EA CE0E BBCB                    DW  C_DIR
0007EC CE10 44495220                DB  "DIR "  ;2
0007F0 CE14 BBCB                    DW  C_DIR
0007F2 CE16 434F5059                DB  "COPY"  ;3
0007F6 CE1A 24CD                    DW  C_COPY
0007F8 CE1C 43442020                DB  "CD  "  ;4
0007FC CE20 D8CA                    DW  C_CD
0007FE CE22 44454C20                DB  "DEL "  ;5
000802 CE26 9ECB                    DW  C_DEL
000804 CE28 50415448                DB  "PATH"  ;6
000808 CE2C 52CC                    DW  C_PATH
00080A CE2E 52454E20                DB  "REN "  ;7
00080E CE32 A8CB                    DW  C_REN
000810 CE34 52454D20                DB  "REM "  ;8
000814 CE38 68CE                    DW  C_REM
[EOF:LDCCP.ASM:SHIFT_JIS]
                                    INCLUDE "LDOS.ASM"
                                
                                ;   LSX-Dodgers OS
                                
       CE3A                     BDOS0:
000816 CE3A E5              11      PUSH    HL
000817 CE3B 79               4      LD  A,C
000818 CE3C FE3C             7      CP  03CH
00081A CE3E 3802            12      JR  C,DOS1
00081C CE40 3E3C             7      LD  A,03CH
       CE42                     DOS1:
00081E CE42 87               4      ADD A,A
00081F CE43 3247CE          13      LD  (DOS1_SWC),A
000822 CE46 2A00E6          16      LD  HL,(STABLE)
       CE47                     DOS1_SWC    EQU $-2
000825 CE49 E3              19      EX  (SP),HL
000826 CE4A 79               4      LD  A,C
                                ;確認用
                                ;   LD  (0050H),A
000827 CE4B C9              10      RET
       CE4C                     _DOS2:
000828 CE4C FE5A             7      CP  05AH        ;(BDOS)カレントディレクトリの変更(_CHDIR)
00082A CE4E CAE7D0          10      JP  Z,_SYS5A
00082D CE51 FE5C             7      CP  05CH        ;(BDOS)ファイル名の解析(_PFILE)
00082F CE53 CAA4D0          10      JP  Z,_SYS5C
000832 CE56 FE5F             7      CP  05FH        ;(BDOS)ディスクバッファのフラッシュ(_FLUSH)
000834 CE58 CAA3E2          10      JP  Z,_SYS5F
000837 CE5B FE6F             7      CP  06FH        ;(BDOS)MSX-DOS のバージョン番号の獲得(_DOSVER)
000839 CE5D 200A            12      JR  NZ,_ERROR
00083B CE5F 011D00          10      LD  BC,VER_6F
00083E CE62 116101          10      LD  DE,VER
000841 CE65 210301          10      LD  HL,MACD
       CE68                     C_REM:
000844 CE68 AF               4      XOR A
       CE69                     _ERROR:
000845 CE69 A7               4      AND A
000846 CE6A C9              10      RET
                                
       CE6B                     _SYS09:     ;文字列出力
000847 CE6B D5              11      PUSH    DE
       CE6C                     _SX09:
000848 CE6C 1A               7      LD  A,(DE)
000849 CE6D 13               6      INC DE
00084A CE6E FE24             7      CP  '$'
00084C CE70 2831            12      JR  Z,SX0E2
00084E CE72 CD04D1          17      CALL    MSG_A
000851 CE75 18F5            12      JR  _SX09
                                
       CE77                     MSX1:
000853 CE77 CD04D1          17      CALL    MSG_A
       CE7A                     MSX:
000856 CE7A 7E               7      LD  A,(HL)
000857 CE7B 23               6      INC HL
000858 CE7C B7               4      OR  A
000859 CE7D 20F8            12      JR  NZ,MSX1
00085B CE7F C9              10      RET
                                
       CE80                     _SYS0C:     ;(BDOS)バージョン番号の獲得
00085C CE80 212200          10      LD  HL,00022H
00085F CE83 7D               4      LD  A,L
000860 CE84 C9              10      RET
                                
       CE85                     _SYS0D:     ;(BDOS)ディスクリセット
000861 CE85 CDDFE5          17      CALL    _FFLUSH
000864 CE88 E5              11      PUSH    HL
000865 CE89 218000          10      LD  HL,00080H
000868 CE8C 228AE5          16      LD  (_DTA),HL
00086B CE8F E1              10      POP HL
00086C CE90 D5              11      PUSH    DE
00086D CE91 1E00             7      LD  E,0
00086F CE93 3E                      DB  03EH    ;次の PUSH DE をスキップ
                                
       CE94                     _SYS0E:     ;(BDOS)カレントドライブの設定
000870 CE94 D5              11      PUSH    DE
000871 CE95 7B               4      LD  A,E
000872 CE96 DDE5            15      PUSH    IX
000874 CE98 CDDCE5          17      CALL    _GETDPB
000877 CE9B DDE1            14      POP IX
000879 CE9D 3804            12      JR  C,SX0E2
00087B CE9F 7B               4      LD  A,E
00087C CEA0 320400          13      LD  (_DVSW),A
       CEA3                     SX0E2:
00087F CEA3 D1              10      POP DE
000880 CEA4 C9              10      RET
                                
       CEA5                     _SYS0F:     ;(BDOS)ファイルのオープン
000881 CEA5 CD48D6          17      CALL    SETDRV
000884 CEA8 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
000887 CEAB C602             7      ADD A,002H      ;Write
000889 CEAD 2848            12      JR  Z,FEND0F
00088B CEAF CD96D9          17      CALL    CHKWILDX
                                
00088E CEB2 D472D6          17      CALL    NC,SOPENX
       CEB5                     _S16XX:
000891 CEB5 3840            12      JR  C,FEND0F
                                                ;Directory location
000893 CEB7 3A9FE5          13      LD  A,(_FILEN)
000896 CEBA FD7719          19      LD  (IY+25),A   ;(FCB)ディレクトリロケーション
                                ;               _DIRF
000899 CEBD 3AA0E5          13      LD  A,(_DIRF)
00089C CEC0 FD771D          19      LD  (IY+29),A   ;(FCB)ディレクトリモード
                                ;               _FBPS
00089F CEC3 FD731E          19      LD  (IY+30),E   ;(FCB)ディレクトリポジション
0008A2 CEC6 FD721F          19      LD  (IY+31),D
                                ;               Open(Read)
0008A5 CEC9 FD361CFF        19      LD  (IY+28),0FFH    ;(FCB)オープンモード
                                ;               FILENAME
0008A9 CECD FDE5            15      PUSH    IY
0008AB CECF D1              10      POP DE
0008AC CED0 13               6      INC DE
0008AD CED1 010B00          10      LD  BC,11
0008B0 CED4 EDB0                    LDIR
                                ;               Attribute
0008B2 CED6 7E               7      LD  A,(HL)
0008B3 CED7 FD770D          19      LD  (IY+13),A   ;(FCB)属性(アトリビュート)
0008B6 CEDA 110B00          10      LD  DE,11       ;Reserved
0008B9 CEDD 19              11      ADD HL,DE
                                                    ;(FCB)ファイルを最後に変更した時刻
0008BA CEDE 11E4E6          10      LD  DE,SDDATA       ;(FCB)ファイルを最後に変更した日付
0008BD CEE1 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       CEE3                     S16LOOP:                ;(FCB)ファイルのサイズ(バイト単位)
0008BF CEE3 1A               7      LD  A,(DE)
0008C0 CEE4 13               6      INC DE
0008C1 CEE5 32ECCE          13      LD  (S16PAT),A
0008C4 CEE8 7E               7      LD  A,(HL)
0008C5 CEE9 23               6      INC HL
0008C6 CEEA FD7700          19      LD  (IY+0),A
       CEEC                     S16PAT  EQU $-1
0008C9 CEED 10F4            13      DJNZ    S16LOOP
                                
0008CB CEEF AF               4      XOR A
0008CC CEF0 FD770C          19      LD  (IY+12),A   ;(FCB)カレントブロック
0008CF CEF3 FD2294CF        20      LD  (OFCB_SWC),IY
       CEF7                     FEND0F:
0008D3 CEF7 1845            12      JR  FEND10
                                
       CEF9                     _SYS10:     ;(BDOS)ファイルのクローズ
0008D5 CEF9 CD48D6          17      CALL    SETDRV
0008D8 CEFC FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
0008DB CEFF D6FE             7      SUB 0FEH
0008DD CF01 37               4      SCF
0008DE CF02 3F               4      CCF
0008DF CF03 2039            12      JR  NZ,FEND10
       CF05                     _S10A:              ;Write
0008E1 CF05 FD770E          19      LD  (IY+14),A   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
0008E4 CF08 FD770F          19      LD  (IY+15),A
                                
0008E7 CF0B FD341C          23      INC (IY+28)     ;(FCB)オープンモード 0FEH->0FFH
0008EA CF0E CD92DA          17      CALL    SETTMS
                                
0008ED CF11 FD7E1D          19      LD  A,(IY+29)   ;(FCB)ディレクトリモード
0008F0 CF14 32A0E5          13      LD  (_DIRF),A
0008F3 CF17 E67F             7      AND 07FH
0008F5 CF19 32C4DF          13      LD  (_SECPS),A
0008F8 CF1C FD5E1E          19      LD  E,(IY+30)   ;(FCB)ディレクトリポジション
0008FB CF1F FD561F          19      LD  D,(IY+31)
0008FE CF22 CDA7D7          17      CALL    READ_DIR
000901 CF25 3817            12      JR  C,FEND10
                                
000903 CF27 3AD2D6          13  SDECM1: LD  A,(SDECPAT) ;1セクタ辺りのディレクトリエントリ数
000906 CF2A 3D               4      DEC A       ;1024=01FH / 512=00FH / 256=7
000907 CF2B FDA619          19      AND (IY+25)     ;(FCB)ディレクトリロケーション
00090A CF2E 6F               4      LD  L,A
00090B CF2F 2600             7      LD  H,0
00090D CF31 29              11      ADD HL,HL       ;*2
00090E CF32 29              11      ADD HL,HL       ;*4
00090F CF33 29              11      ADD HL,HL       ;*8
000910 CF34 29              11      ADD HL,HL       ;*16
000911 CF35 29              11      ADD HL,HL       ;*32
000912 CF36 ED4B7EE6        20      LD  BC,(_DTBUF)
000916 CF3A 09              11      ADD HL,BC
                                
000917 CF3B CDA6D9          17      CALL    SDIRENT
       CF3E                     FEND10:
00091A CF3E 1842            12      JR  FEND
                                
       CF40                     _SYS11:     ;(BDOS)最初のファイルの検索
00091C CF40 CD48D6          17      CALL    SETDRV
00091F CF43 CDA1D6          17      CALL    SOPEN
       CF46                     _S12X1:
000922 CF46 383A            12      JR  C,FEND
000924 CF48 CD40D7          17      CALL    SOPENE2
000927 CF4B ED5B8AE5        20      LD  DE,(_DTA)
00092B CF4F 3A88E5          13      LD  A,(_DRV)
00092E CF52 3C               4      INC A
00092F CF53 12               7      LD  (DE),A
000930 CF54 D5              11      PUSH    DE
000931 CF55 13               6      INC DE
000932 CF56 012000          10      LD  BC,32
000935 CF59 EDB0                    LDIR
000937 CF5B FD6E0E          19      LD  L,(IY+14)   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
00093A CF5E FD660F          19      LD  H,(IY+15)
00093D CF61 22F4E6          16      LD  (SCDIR),HL
000940 CF64 2A9AE5          16      LD  HL,(_FBPS)
000943 CF67 22F6E6          16      LD  (SFBPS),HL
000946 CF6A 2A9FE5          16      LD  HL,(_FILEN)
000949 CF6D 7C               4      LD  A,H
00094A CF6E B7               4      OR  A
00094B CF6F 2806            12      JR  Z,_S12DIR
00094D CF71 3AC4DF          13      LD  A,(_SECPS)
000950 CF74 F680             7      OR  080H
000952 CF76 67               4      LD  H,A
       CF77                     _S12DIR:
000953 CF77 22F8E6          16      LD  (SFNDF),HL  ;Directory position and Flags
000956 CF7A E1              10      POP HL
000957 CF7B 1139E5          10      LD  DE,SFILE
00095A CF7E 0E21             7      LD  C,33
       CF80                     _S11B:
00095C CF80 EDB0                    LDIR
       CF82                     FEND:
00095E CF82 9F               4      SBC A,A     ;CF=0 A=0 : CF=1 A=0FFH
       CF83                     FENDE:
00095F CF83 FDE1            14      POP IY
000961 CF85 C1              10      POP BC
000962 CF86 D1              10      POP DE
000963 CF87 E1              10      POP HL
000964 CF88 C9              10      RET
                                
       CF89                     _SYS12:     ;(BDOS)次のファイルの検索
000965 CF89 E5              11      PUSH    HL
000966 CF8A D5              11      PUSH    DE
000967 CF8B C5              11      PUSH    BC
000968 CF8C FDE5            15      PUSH    IY
00096A CF8E CD05D7          17      CALL    NOPEN
00096D CF91 18B3            12      JR  _S12X1
                                
       CF93                     _S16K:
00096F CF93 110000          10      LD  DE,0
       CF94                     OFCB_SWC    EQU $-2
000972 CF96 D5              11      PUSH    DE
000973 CF97 061A             7      LD  B,26        ;First cluster
       CF99                     S16K1:
000975 CF99 13               6      INC DE
000976 CF9A 23               6      INC HL
000977 CF9B 10FC            13      DJNZ    S16K1
                                
000979 CF9D 1A               7      LD  A,(DE)
00097A CF9E BE               7      CP  (HL)
00097B CF9F 2015            12      JR  NZ,S16K2
00097D CFA1 13               6      INC DE
00097E CFA2 23               6      INC HL
00097F CFA3 1A               7      LD  A,(DE)
000980 CFA4 BE               7      CP  (HL)
000981 CFA5 200F            12      JR  NZ,S16K2
                                
000983 CFA7 E1              10      POP HL
000984 CFA8 FDE5            15      PUSH    IY
000986 CFAA D1              10      POP DE
000987 CFAB 7E               7      LD  A,(HL)
000988 CFAC CD5DD6          17      CALL    IS_SAME_DRV_A_DE
00098B CFAF 2006            12      JR  NZ,S16K3
                                                ;ここはCFが必ず0
00098D CFB1 ED52            15      SBC HL,DE       ;CP HL,DE
00098F CFB3 37               4      SCF
000990 CFB4 C0              11      RET NZ
000991 CFB5 E5              11      PUSH    HL
       CFB6                     S16K2:
000992 CFB6 E1              10      POP HL
       CFB7                     S16K3:
000993 CFB7 FDE5            15      PUSH    IY
000995 CFB9 D1              10      POP DE
       CFBA                     _SYS13:     ;(BDOS)ファイルの削除
000996 CFBA CD48D6          17      CALL    SETDRV
000999 CFBD CDCCD8          17      CALL    KILL
       CFC0                     FEND13:
00099C CFC0 18C0            12      JR  FEND
                                
       CFC2                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00099E CFC2 CD48D6          17      CALL    SETDRV
0009A1 CFC5 CDF4DA          17      CALL    INIT_SEQ
       CFC8                     SREAD:
0009A4 CFC8 CD22DB          17      CALL    RB_READ
                                
0009A7 CFCB C601             7      ADD A,001H
0009A9 CFCD 38B3            12      JR  C,FEND
                                
0009AB CFCF 7D               4      LD  A,L
0009AC CFD0 D601             7      SUB 001H
       CFD2                     FENDX:
0009AE CFD2 9F               4      SBC A,A
0009AF CFD3 E603             7      AND 3
0009B1 CFD5 1F               4      RRA
0009B2 CFD6 18AB            12      JR  FENDE
                                
       CFD8                     _SYS15:     ;(BDOS)シーケンシャルな書き込み
0009B4 CFD8 CD48D6          17      CALL    SETDRV
0009B7 CFDB CDF4DA          17      CALL    INIT_SEQ
       CFDE                     SWRITE:
0009BA CFDE CD1BDB          17      CALL    RB_WRITE
                                
0009BD CFE1 C6FF             7      ADD A,0FFH
0009BF CFE3 18ED            12      JR  FENDX
                                
       CFE5                     _SYS17:     ;(BDOS)ファイル名の変更
0009C1 CFE5 CD48D6          17      CALL    SETDRV
0009C4 CFE8 CD22D9          17      CALL    NAME
0009C7 CFEB 18D3            12      JR  FEND13
                                
       CFED                     _SYS16:     ;(BDOS)ファイルの作成
0009C9 CFED CD48D6          17      CALL    SETDRV
                                
0009CC CFF0 CD96D9          17      CALL    CHKWILDX
0009CF CFF3 38CB            12      JR  C,FEND13
0009D1 CFF5 FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
0009D4 CFF8 FE05             7      CP  5
0009D6 CFFA 2805            12      JR  Z,_S16X2
0009D8 CFFC FE21             7      CP  021H
0009DA CFFE DAC0CF          10      JP  C,FEND13
       D001                     _S16X2:
                                ;               Clear FCB
0009DD D001 FDE5            15      PUSH    IY
0009DF D003 E1              10      POP HL
0009E0 D004 011000          10      LD  BC,16
0009E3 D007 09              11      ADD HL,BC
       D008                     _S16X1:
0009E4 D008 70               7      LD  (HL),B      ;B=0
0009E5 D009 23               6      INC HL
0009E6 D00A 0D               4      DEC C
0009E7 D00B 20FB            12      JR  NZ,_S16X1
                                
0009E9 D00D CD97DA          17      CALL    SETTMSX
0009EC D010 FD360DFF        19      LD  (IY+13),0FFH    ;(FCB)Attribute
0009F0 D014 CD72D6          17      CALL    SOPENX
0009F3 D017 3F               4      CCF
0009F4 D018 CC93CF          17      CALL    Z,_S16K
0009F7 D01B D451D7          17      CALL    NC,COPEN
0009FA D01E D4A6D9          17      CALL    NC,SDIRENT
0009FD D021 C3B5CE          10      JP  _S16XX
                                
       D024                     _SYS21:     ;(BDOS)ランダムな読み出し
000A00 D024 CD48D6          17      CALL    SETDRV
000A03 D027 CDE2DA          17      CALL    INIT_RND
000A06 D02A 189C            12      JR  SREAD
                                
       D02C                     _SYS22:     ;(BDOS)ランダムな書き込み
       D02C                     _SYS28:     ;(BDOS)ランダムな書き込み・その2
000A08 D02C CD48D6          17      CALL    SETDRV
000A0B D02F CDE2DA          17      CALL    INIT_RND
000A0E D032 18AA            12      JR  SWRITE
                                
       D034                     _SYS18:     ;(BDOS)ログインベクトルの獲得
000A10 D034 21FF00          10      LD  HL,000FFH
000A13 D037 AF               4      XOR A
000A14 D038 C9              10      RET
                                
       D039                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
000A15 D039 3A0400          13      LD  A,(_DVSW)
000A18 D03C A7               4      AND A
000A19 D03D C9              10      RET
                                
       D03E                     _SYS1A:     ;(BDOS)DTAの設定
000A1A D03E ED538AE5        20      LD  (_DTA),DE
000A1E D042 AF               4      XOR A
000A1F D043 C9              10      RET
                                
       D044                     _SYS1B:     ;(BDOS)ディスク情報の獲得
000A20 D044 7B               4      LD  A,E
000A21 D045 CD56D6          17      CALL    GETDRV
000A24 D048 CDDCE5          17      CALL    _GETDPB
000A27 D04B D4E2E5          17      CALL    NC,_RDFATX
000A2A D04E 210000          10      LD  HL,0
000A2D D051 D470DA          17      CALL    NC,DSKF
                                
000A30 D054 ED5B71DA        20      LD  DE,(MAXCLP) ;DPB_MAXCL-1
000A34 D058 1B               6      DEC DE      ;DE←クラスタの総数
000A35 D059 FD2A7CE6        20      LD  IY,(_FATBF) ;IY←メモリ上のFATの先頭アドレス
000A39 D05D 9F               4      SBC A,A
000A3A D05E D8              11      RET C
000A3B D05F 4F               4      LD  C,A     ;C=0
000A3C D060 DD7E0F          19      LD  A,(IX+DPB_BPS)
000A3F D063 E607             7      AND 7
000A41 D065 47               4      LD  B,A
000A42 D066 DD7E07          19      LD  A,(IX+DPB_SECPCL)
000A45 D069 C9              10      RET
                                
       D06A                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
000A46 D06A AF               4      XOR A
000A47 D06B 67               4      LD  H,A
000A48 D06C 6F               4      LD  L,A
000A49 D06D C9              10      RET
                                
       D06E                     _SYS1F:     ;(BDOS)ディスク装置のパラメータの読み出し
000A4A D06E 2100E7          10      LD  HL,_DEVICE
000A4D D071 7B               4      LD  A,E
000A4E D072 C3DCE5          10      JP  _GETDPB
                                
       D075                     _SYS23:     ;(BDOS)ファイルサイズの獲得
000A51 D075 E5              11      PUSH    HL
000A52 D076 2A1EE6          16      LD  HL,(STABLE+2*00FH)  ;ファイルのオープン
000A55 D079 CD0F00          17      CALL    JP_HL
000A58 D07C 381B            12      JR  C,_S23X1
                                
000A5A D07E D5              11      PUSH    DE      ;EX DE,IY
000A5B D07F FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
000A5D D081 FD7E10          19      LD  A,(IY+16)   ;(FCB)ファイルのサイズ(バイト単位)
000A60 D084 FD6E11          19      LD  L,(IY+17)   ;
000A63 D087 FD6612          19      LD  H,(IY+18)   ;
000A66 D08A C5              11      PUSH    BC      ;
000A67 D08B FD4613          19      LD  B,(IY+19)   ;
000A6A D08E CDD4DA          17      CALL    GET_CPM_R_SIZE
000A6D D091 C1              10      POP BC
       D092                     _S24X1:
000A6E D092 CD0CDE          17      CALL    SET_RR_AHL
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
000A71 D095 FDE3            23      EX  (SP),IY     ;
000A73 D097 D1              10      POP DE      ;
                                
000A74 D098 AF               4      XOR A
       D099                     _S23X1:
000A75 D099 E1              10      POP HL
000A76 D09A C9              10      RET
                                
       D09B                     _SYS24:     ;(BDOS)ランダムレコードフィールドの設定
000A77 D09B E5              11      PUSH    HL
000A78 D09C D5              11      PUSH    DE      ;EX DE,IY
000A79 D09D FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
000A7B D09F CDFCDA          17      CALL    GETSEQ
000A7E D0A2 18EE            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       D0A4                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
000A80 D0A4 2B               6      DEC HL
       D0A5                     _SYS29:     ;(BDOS)ファイル名の解析(_PPATH)
000A81 D0A5 C5              11      PUSH    BC
000A82 D0A6 E5              11      PUSH    HL
000A83 D0A7 CD5FD5          17      CALL    FILE
000A86 D0AA E1              10      POP HL
000A87 D0AB C1              10      POP BC
       D0AC                     S29X1:
000A88 D0AC C5              11      PUSH    BC
000A89 D0AD D5              11      PUSH    DE
000A8A D0AE E5              11      PUSH    HL
000A8B D0AF EB               4      EX  DE,HL
000A8C D0B0 AF               4      XOR A
000A8D D0B1 3221E5          13      LD  (FDRV+13),A
000A90 D0B4 2114E5          10      LD  HL,FDRV
000A93 D0B7 011000          10      LD  BC,16
000A96 D0BA EDB0                    LDIR
000A98 D0BC E1              10      POP HL
000A99 D0BD D1              10      POP DE
000A9A D0BE C1              10      POP BC
000A9B D0BF C9              10      RET
                                
       D0C0                     _SYS30:     ;(BDOS)論理セクタを用いた書き込み
000A9C D0C0 C5              11      PUSH    BC
000A9D D0C1 0162E1          10      LD  BC,DWT24B
000AA0 D0C4 1804            12      JR  S2FX
       D0C6                     _SYS2F:
000AA2 D0C6 C5              11      PUSH    BC
000AA3 D0C7 0152E1          10      LD  BC,DRD24B
       D0CA                     S2FX:
000AA6 D0CA ED43E0D0        20      LD  (S2F_SWC),BC
000AAA D0CE CDDFE5          17      CALL    _FFLUSH
                                
000AAD D0D1 D5              11      PUSH    DE
000AAE D0D2 E5              11      PUSH    HL
000AAF D0D3 7D               4      LD  A,L     ;Drive
000AB0 D0D4 CDD9E5          17      CALL    _CHGDRV
000AB3 D0D7 3809            12      JR  C,S30X2
000AB5 D0D9 44               4      LD  B,H     ;Number of clusters
000AB6 D0DA 2A8AE5          16      LD  HL,(_DTA)
                                
000AB9 D0DD 0E00             7      LD  C,0
000ABB D0DF CD52E1          17      CALL    DRD24B
       D0E0                     S2F_SWC EQU $-2
       D0E2                     S30X2:
000ABE D0E2 E1              10      POP HL
000ABF D0E3 D1              10      POP DE
000AC0 D0E4 C1              10      POP BC
000AC1 D0E5 9F               4      SBC A,A
000AC2 D0E6 C9              10      RET
                                
       D0E7                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
000AC3 D0E7 C5              11      PUSH    BC
000AC4 D0E8 D5              11      PUSH    DE
000AC5 D0E9 E5              11      PUSH    HL
000AC6 D0EA CD54D5          17      CALL    FILEC
000AC9 D0ED 21E2D0          10      LD  HL,S30X2
000ACC D0F0 E5              11      PUSH    HL
000ACD D0F1 3A21E5          13      LD  A,(FDRV+13) ;(FCB)属性(アトリビュート))
000AD0 D0F4 E610             7      AND 010H        ;ディレクトリ
000AD2 D0F6 C8              11      RET Z
000AD3 D0F7 1114E5          10      LD  DE,FDRV
000AD6 D0FA 2A4EE6          16      LD  HL,(STABLE+2*027H)  ;ランダムブロック読み込み
000AD9 D0FD E9               4      JP  (HL)
[EOF:LDOS.ASM:SHIFT_JIS]
                                    INCLUDE "MSXIO.ASM"
                                
                                ;   LSX-Dodgers IO
                                ;   MSX
                                
       CE69                     _SYS04  EQU _ERROR      ;(BDOS)外部出力
       CE69                     _SYS05  EQU _ERROR      ;(BDOS)プリンタ出力
       CE69                     _SYS1C  EQU _ERROR      ;(BDOS)ディスクの書き込み禁止化
       CE69                     _SYS1E  EQU _ERROR      ;(BDOS)ファイル属性の設定
       CE69                     _SYS20  EQU _ERROR      ;(BDOS)利用者番号の設定と読み出し
       CE69                     _SYS2E  EQU _ERROR      ;(BDOS)ベリファイ・フラグの設定
                                
       0000                     INT EQU 0
       0000                     INTCTCE EQU 0
       0000                     INTCTC2 EQU 0
                                
       0000                     CTRL00  EQU 0
       0000                     CTRL03  EQU 0
       0000                     CTRL04  EQU 0
       0000                     CTRL05  EQU 0
       0000                     CTRL06  EQU 0
       0000                     CTRL07  EQU 0
       0000                     CTRL08  EQU 0
       0000                     CTRL09  EQU 0
       0000                     CTRL0A  EQU 0
       0000                     CTRL0B  EQU 0
       0000                     CTRL0C  EQU 0
       0000                     CTRL0D  EQU 0
       0000                     CTRL0E  EQU 0
       0000                     CTRL12  EQU 0
       0000                     CTRL1B  EQU 0
       0000                     CTRL1C  EQU 0
       0000                     CTRL1D  EQU 0
       0000                     CTRL1E  EQU 0
       0000                     CTRL1F  EQU 0
                                
       D0FE                     PRINT:
000ADA D0FE 7B               4      LD  A,E
000ADB D0FF 1803            12      JR  MSG_A
                                
       D101                     _SYS01:     ;(BDOS)コンソール入力
000ADD D101 CD09E5          17      CALL    _SYS07
       D104                     MSG_A:
000AE0 D104 FE03             7      CP  3
000AE2 D106 2814            12      JR  Z,MSG_BR
       D108                     MSGA1:
000AE4 D108 F5              11      PUSH    AF
000AE5 D109 C5              11      PUSH    BC
000AE6 D10A D5              11      PUSH    DE
000AE7 D10B E5              11      PUSH    HL
000AE8 D10C DDE5            15      PUSH    IX
000AEA D10E DD21A200        14      LD  IX,CHPUT
000AEE D112 CD17D3          17      CALL    CALSLT_R
000AF1 D115 DDE1            14      POP IX
000AF3 D117 E1              10      POP HL
000AF4 D118 D1              10      POP DE
000AF5 D119 C1              10      POP BC
       D11A                     MSGA2:
000AF6 D11A F1              10      POP AF
000AF7 D11B C9              10      RET
       D11C                     MSG_BR:
000AF8 D11C F5              11      PUSH    AF
000AF9 D11D 3ADDF3          13      LD  A,(CSRX)
000AFC D120 FE02             7      CP  2
000AFE D122 38F6            12      JR  C,MSGA2
000B00 D124 F1              10      POP AF
       D125                     MSG_CR:
000B01 D125 F5              11      PUSH    AF
000B02 D126 3E0D             7      LD  A,00DH
000B04 D128 CD08D1          17      CALL    MSGA1
000B07 D12B 3E0A             7      LD  A,00AH
000B09 D12D CD08D1          17      CALL    MSGA1
000B0C D130 F1              10      POP AF
000B0D D131 C9              10      RET
                                
       D132                     _SYS02:     ;(BDOS)コンソール出力
000B0E D132 CD4DD1          17      CALL    BREAK
000B11 D135 1805            12      JR  PRINTX
                                
       D137                     _SYS06:     ;(BDOS)コンソール直接入出力
000B13 D137 7B               4      LD  A,E
000B14 D138 3C               4      INC A
000B15 D139 CACAE5          10      JP  Z,_INKEY
       D13C                     PRINTX:
000B18 D13C C3CDE5          10      JP  _PRINT
                                
       D13F                     _SYS08:     ;(BDOS)エコーなしコンソール入力
000B1B D13F CD09E5          17      CALL    _SYS07
000B1E D142 FE03             7      CP  3
000B20 D144 CCF4E5          17      CALL    Z,_BREAK
000B23 D147 FE13             7      CP  013H        ;CTRL+S
000B25 D149 C0              11      RET NZ
       D14A                     PAUSE:
000B26 D14A CD64D1          17      CALL    KEYBC
                                
       D14D                     BREAK:
000B29 D14D F5              11      PUSH    AF
000B2A D14E C5              11      PUSH    BC
000B2B D14F D5              11      PUSH    DE
000B2C D150 E5              11      PUSH    HL
000B2D D151 DDE5            15      PUSH    IX
000B2F D153 DD21B700        14      LD  IX,BREAKX
000B33 D157 CD17D3          17      CALL    CALSLT_R
000B36 D15A DDE1            14      POP IX
000B38 D15C E1              10      POP HL
000B39 D15D D1              10      POP DE
000B3A D15E C1              10      POP BC
000B3B D15F DCF4E5          17      CALL    C,_BREAK
000B3E D162 F1              10      POP AF
000B3F D163 C9              10      RET
       D164                     KEYBC:
000B40 D164 F5              11      PUSH    AF
000B41 D165 C5              11      PUSH    BC
000B42 D166 D5              11      PUSH    DE
000B43 D167 E5              11      PUSH    HL
000B44 D168 DDE5            15      PUSH    IX
000B46 D16A DD215601        14      LD  IX,KILBUF
000B4A D16E CD17D3          17      CALL    CALSLT_R
000B4D D171 DDE1            14      POP IX
000B4F D173 E1              10      POP HL
000B50 D174 D1              10      POP DE
000B51 D175 C1              10      POP BC
000B52 D176 F1              10      POP AF
000B53 D177 C9              10      RET
       D178                     FLGET:
000B54 D178 C5              11      PUSH    BC
000B55 D179 D5              11      PUSH    DE
000B56 D17A E5              11      PUSH    HL
000B57 D17B DDE5            15      PUSH    IX
000B59 D17D CDDFE5          17      CALL    _FFLUSH
000B5C D180 181B            12      JR  FLGET1
       D181                     CBIOS_SWC1  EQU $-1
000B5E D182 CDFFD2          17      CALL    GETVRAM
                                
000B61 D185 E5              11      PUSH    HL
000B62 D186 DD214A00        14      LD  IX,RDVRM
000B66 D18A CD17D3          17      CALL    CALSLT_R
000B69 D18D E1              10      POP HL
000B6A D18E 32A9D1          13      LD  (SWCCHR),A
                                
000B6D D191 E5              11      PUSH    HL
000B6E D192 3EFF             7      LD  A,0FFH
000B70 D194 DD214D00        14      LD  IX,WRTVRM
000B74 D198 CD17D3          17      CALL    CALSLT_R
000B77 D19B E1              10      POP HL
                                
000B78 D19C E5              11      PUSH    HL
       D19D                     FLGET1:
000B79 D19D DD219F00        14      LD  IX,CHGET
000B7D D1A1 CD17D3          17      CALL    CALSLT_R
000B80 D1A4 180C            12      JR  FLGET2
       D1A5                     CBIOS_SWC2  EQU $-1
000B82 D1A6 E1              10      POP HL
                                
000B83 D1A7 F5              11      PUSH    AF
000B84 D1A8 3E00             7      LD  A,0
       D1A9                     SWCCHR  EQU $-1
000B86 D1AA DD214D00        14      LD  IX,WRTVRM
000B8A D1AE CD17D3          17      CALL    CALSLT_R
000B8D D1B1 F1              10      POP AF
       D1B2                     FLGET2:
000B8E D1B2 DDE1            14      POP IX
000B90 D1B4 E1              10      POP HL
000B91 D1B5 D1              10      POP DE
000B92 D1B6 C1              10      POP BC
000B93 D1B7 FE03             7      CP  3
000B95 D1B9 C0              11      RET NZ
000B96 D1BA C300E5          10      JP  CPM_BOOT
                                
       D1BD                     INKEY:
000B99 D1BD CD06E5          17      CALL    CPM_CONST
000B9C D1C0 C8              11      RET Z
000B9D D1C1 18B5            12      JR  FLGET
                                
       D1C3                     _SYS0A:     ;(BDOS)文字列入力
000B9F D1C3 C5              11      PUSH    BC
000BA0 D1C4 E5              11      PUSH    HL
000BA1 D1C5 D5              11      PUSH    DE
000BA2 D1C6 CDEFD1          17      CALL    GETL
000BA5 D1C9 111FF4          10      LD  DE,KBUF
000BA8 D1CC E1              10      POP HL
000BA9 D1CD E5              11      PUSH    HL
000BAA D1CE 0E00             7      LD  C,0
000BAC D1D0 3004            12      JR  NC,SAX0
000BAE D1D2 23               6      INC HL
000BAF D1D3 23               6      INC HL
000BB0 D1D4 1808            12      JR  SAX4
       D1D6                     SAX0:
000BB2 D1D6 46               7      LD  B,(HL)
000BB3 D1D7 23               6      INC HL
       D1D8                     SAX1:
000BB4 D1D8 23               6      INC HL
000BB5 D1D9 1A               7      LD  A,(DE)
000BB6 D1DA 13               6      INC DE
000BB7 D1DB B7               4      OR  A
000BB8 D1DC 2004            12      JR  NZ,SAX2
       D1DE                     SAX4:
000BBA D1DE 360D            10      LD  (HL),00DH
000BBC D1E0 1804            12      JR  SAX3
       D1E2                     SAX2:
000BBE D1E2 77               7      LD  (HL),A
000BBF D1E3 0C               4      INC C
000BC0 D1E4 10F2            13      DJNZ    SAX1
       D1E6                     SAX3:
000BC2 D1E6 D1              10      POP DE
000BC3 D1E7 79               4      LD  A,C
000BC4 D1E8 13               6      INC DE
000BC5 D1E9 12               7      LD  (DE),A
000BC6 D1EA 1B               6      DEC DE
000BC7 D1EB E1              10      POP HL
000BC8 D1EC C1              10      POP BC
000BC9 D1ED A7               4      AND A
000BCA D1EE C9              10      RET
       D1EF                     GETL:
000BCB D1EF DDE5            15      PUSH    IX
000BCD D1F1 FDE5            15      PUSH    IY
                                
000BCF D1F3 2ADCF3          16      LD  HL,(CSRY)
000BD2 D1F6 22CAFB          16      LD  (FSTPOS),HL
       D1F9                     GETL1:
000BD5 D1F9 CD3FD1          17      CALL    _SYS08
000BD8 D1FC FE09             7      CP  9
000BDA D1FE 2008            12      JR  NZ,GETL1V
000BDC D200 211FF4          10      LD  HL,KBUF
000BDF D203 CD7ACE          17      CALL    MSX
000BE2 D206 18F1            12      JR  GETL1
       D208                     GETL1V:
000BE4 D208 5F               4      LD  E,A
000BE5 D209 FE08             7      CP  8
000BE7 D20B CCA5D2          17      CALL    Z,CTRL02
000BEA D20E FE20             7      CP  020H
000BEC D210 D4D1D2          17      CALL    NC,INSERT
000BEF D213 CD08D1          17      CALL    MSGA1
                                
000BF2 D216 7B               4      LD  A,E
000BF3 D217 FE0D             7      CP  00DH
000BF5 D219 20DE            12      JR  NZ,GETL1
                                
000BF7 D21B 111FF4          10      LD  DE,KBUF
000BFA D21E 3AB0F3          13      LD  A,(LINLEN)
000BFD D221 47               4      LD  B,A
000BFE D222 CD1ECD          17      CALL    ZERO_MEMORY_DE
                                
000C01 D225 2ACAFB          16      LD  HL,(FSTPOS)
000C04 D228 3ADCF3          13      LD  A,(CSRY)
000C07 D22B 6F               4      LD  L,A
000C08 D22C E5              11      PUSH    HL
000C09 D22D CD02D3          17      CALL    LOC0
000C0C D230 4D               4      LD  C,L
000C0D D231 44               4      LD  B,H
000C0E D232 E1              10      POP HL
000C0F D233 3AB0F3          13      LD  A,(LINLEN)
000C12 D236 94               4      SUB H
000C13 D237 3D               4      DEC A
000C14 D238 5F               4      LD  E,A
000C15 D239 211FF4          10      LD  HL,KBUF
       D23C                     GETL2:
000C18 D23C CDD0E5          17      CALL    _SCRN
000C1B D23F 03               6      INC BC
000C1C D240 77               7      LD  (HL),A
000C1D D241 23               6      INC HL
000C1E D242 1D               4      DEC E
000C1F D243 20F7            12      JR  NZ,GETL2
000C21 D245 CD25D1          17      CALL    MSG_CR
                                
000C24 D248 FDE1            14      POP IY
000C26 D24A DDE1            14      POP IX
       D24C                     GETL3:
000C28 D24C 2B               6      DEC HL
000C29 D24D 7E               7      LD  A,(HL)
000C2A D24E FE21             7      CP  021H
000C2C D250 D0              11      RET NC
000C2D D251 3600            10      LD  (HL),0
000C2F D253 15               4      DEC D
000C30 D254 20F6            12      JR  NZ,GETL3
000C32 D256 C9              10      RET
                                
       D257                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       D257                     CONSTX:
000C33 D257 C5              11      PUSH    BC
000C34 D258 D5              11      PUSH    DE
000C35 D259 E5              11      PUSH    HL
000C36 D25A DDE5            15      PUSH    IX
000C38 D25C DD219C00        14      LD  IX,CHSNS
000C3C D260 CD17D3          17      CALL    CALSLT_R
000C3F D263 DDE1            14      POP IX
000C41 D265 E1              10      POP HL
000C42 D266 D1              10      POP DE
000C43 D267 C1              10      POP BC
000C44 D268 C9              10      RET
                                
       D269                     _SYS2A:     ;(BDOS)日付の獲得
000C45 D269 AF               4      XOR A
000C46 D26A 57               4      LD  D,A
000C47 D26B 5F               4      LD  E,A
000C48 D26C 67               4      LD  H,A
000C49 D26D 6F               4      LD  L,A
000C4A D26E C9              10      RET
                                
       D26F                     _SYS2C:     ;(BDOS)時刻の獲得
000C4B D26F AF               4      XOR A
000C4C D270 57               4      LD  D,A
000C4D D271 5F               4      LD  E,A
000C4E D272 67               4      LD  H,A
000C4F D273 6F               4      LD  L,A
000C50 D274 C9              10      RET
                                
       D275                     POS:
000C51 D275 F5              11      PUSH    AF
000C52 D276 2ADCF3          16      LD  HL,(CSRY)
000C55 D279 7D               4      LD  A,L
000C56 D27A 6C               4      LD  L,H
000C57 D27B 67               4      LD  H,A
000C58 D27C 2C               4      INC L
000C59 D27D 24               4      INC H
000C5A D27E F1              10      POP AF
000C5B D27F C9              10      RET
                                
       D280                     LOC:
000C5C D280 F5              11      PUSH    AF
000C5D D281 E5              11      PUSH    HL
000C5E D282 7D               4      LD  A,L
000C5F D283 6C               4      LD  L,H
000C60 D284 67               4      LD  H,A
000C61 D285 2D               4      DEC L
000C62 D286 25               4      DEC H
000C63 D287 DDE5            15      PUSH    IX
000C65 D289 DD21C600        14      LD  IX,POSIT
000C69 D28D CD17D3          17      CALL    CALSLT_R
000C6C D290 DDE1            14      POP IX
000C6E D292 E1              10      POP HL
000C6F D293 F1              10      POP AF
000C70 D294 C9              10      RET
       D295                     SCRN:
000C71 D295 E5              11      PUSH    HL
000C72 D296 DDE5            15      PUSH    IX
                                
000C74 D298 69               4      LD  L,C
000C75 D299 60               4      LD  H,B
000C76 D29A DD214A00        14      LD  IX,RDVRM
000C7A D29E CD17D3          17      CALL    CALSLT_R
                                
000C7D D2A1 DDE1            14      POP IX
000C7F D2A3 E1              10      POP HL
000C80 D2A4 C9              10      RET
                                
       D2A5                     CTRL02:
000C81 D2A5 F5              11      PUSH    AF
000C82 D2A6 D5              11      PUSH    DE
000C83 D2A7 2ADCF3          16      LD  HL,(CSRY)
000C86 D2AA 3AB0F3          13      LD  A,(LINLEN)
000C89 D2AD 4F               4      LD  C,A
000C8A D2AE 94               4      SUB H   ;CSRX
000C8B D2AF C602             7      ADD A,2
000C8D D2B1 47               4      LD  B,A ;カーソルより右の文字数
000C8E D2B2 61               4      LD  H,C ;LINLEN
000C8F D2B3 C5              11      PUSH    BC
000C90 D2B4 CD02D3          17      CALL    LOC0
000C93 D2B7 C1              10      POP BC
                                
000C94 D2B8 1620             7      LD  D,020H
       D2BA                     C8X1:
000C96 D2BA DD214A00        14      LD  IX,RDVRM
000C9A D2BE CD17D3          17      CALL    CALSLT_R
000C9D D2C1 4F               4      LD  C,A
000C9E D2C2 7A               4      LD  A,D
000C9F D2C3 DD214D00        14      LD  IX,WRTVRM
000CA3 D2C7 CD17D3          17      CALL    CALSLT_R
000CA6 D2CA 2B               6      DEC HL
000CA7 D2CB 51               4      LD  D,C
000CA8 D2CC 10EC            13      DJNZ    C8X1
000CAA D2CE D1              10      POP DE
000CAB D2CF F1              10      POP AF
000CAC D2D0 C9              10      RET
                                
       D2D1                     INSERT:
000CAD D2D1 F5              11      PUSH    AF
000CAE D2D2 D5              11      PUSH    DE
000CAF D2D3 2ADCF3          16      LD  HL,(CSRY)
000CB2 D2D6 3AB0F3          13      LD  A,(LINLEN)
000CB5 D2D9 4F               4      LD  C,A
000CB6 D2DA 94               4      SUB H   ;CSRX
000CB7 D2DB 3C               4      INC A
000CB8 D2DC 47               4      LD  B,A ;カーソルより右の文字数
000CB9 D2DD C5              11      PUSH    BC
000CBA D2DE CD02D3          17      CALL    LOC0
000CBD D2E1 C1              10      POP BC
                                
000CBE D2E2 1620             7      LD  D,020H
       D2E4                     INS1:
000CC0 D2E4 DD214A00        14      LD  IX,RDVRM
000CC4 D2E8 CD17D3          17      CALL    CALSLT_R
000CC7 D2EB 4F               4      LD  C,A
000CC8 D2EC 7A               4      LD  A,D
000CC9 D2ED DD214D00        14      LD  IX,WRTVRM
000CCD D2F1 CD17D3          17      CALL    CALSLT_R
000CD0 D2F4 23               6      INC HL
000CD1 D2F5 51               4      LD  D,C
000CD2 D2F6 10EC            13      DJNZ    INS1
000CD4 D2F8 D1              10      POP DE
000CD5 D2F9 F1              10      POP AF
000CD6 D2FA C9              10      RET
                                
       D2FB                     CONOUT1:
000CD7 D2FB 59               4      LD  E,C
000CD8 D2FC C3CDE5          10      JP  _PRINT
                                
       D2FF                     GETVRAM:
000CDB D2FF 2ADCF3          16      LD  HL,(CSRY)
       D302                     LOC0:
000CDE D302 2D               4      DEC L
000CDF D303 25               4      DEC H
000CE0 D304 4C               4      LD  C,H ;CSRX-1
000CE1 D305 5D               4      LD  E,L ;CSRY-1
       D306                     LOC1:
000CE2 D306 3AB0F3          13      LD  A,(LINLEN)
000CE5 D309 67               4      LD  H,A
000CE6 D30A 1600             7      LD  D,0
000CE8 D30C 6A               4      LD  L,D ;0
000CE9 D30D 0608             7      LD  B,8
       D30F                     LOC2:
000CEB D30F 29              11      ADD HL,HL
000CEC D310 3001            12      JR  NC,LOC3
000CEE D312 19              11      ADD HL,DE
       D313                     LOC3:
000CEF D313 10FA            13      DJNZ    LOC2
000CF1 D315 09              11      ADD HL,BC
000CF2 D316 C9              10      RET
                                
       D317                     CALSLT_R:
000CF3 D317 FDE5            15      PUSH    IY
000CF5 D319 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000CF9 D31D CD33D3          17      CALL    CALSLTR
000CFC D320 FDE1            14      POP IY
000CFE D322 C9              10      RET
                                
       D323                     CALLF:
000CFF D323 08               4      EX  AF,AF'
000D00 D324 E3              19      EX  (SP),HL
000D01 D325 7E               7      LD  A,(HL)
000D02 D326 FD67             9      LD  IYH,A
000D04 D328 23               6      INC HL
000D05 D329 7E               7      LD  A,(HL)
000D06 D32A DD6F             9      LD  IXL,A
000D08 D32C 23               6      INC HL
000D09 D32D 7E               7      LD  A,(HL)
000D0A D32E DD67             9      LD  IXH,A
000D0C D330 23               6      INC HL
000D0D D331 E3              19      EX  (SP),HL
000D0E D332 08               4      EX  AF,AF'
       D333                     CALSLTR:
000D0F D333 F3               4      DI
000D10 D334 ED736DD3        20      LD  (CSSP),SP
000D14 D338 F5              11      PUSH    AF
000D15 D339 3E1C             7      LD  A,_CALSLT
       D33B                     SLTCALL:
000D17 D33B 325AD3          13      LD  (SLTCALLX),A
000D1A D33E 3A6ED3          13      LD  A,(CSSP+1)
000D1D D341 FE41             7      CP  040H+1
000D1F D343 3005            12      JR  NC,CALSLTR1
000D21 D345 F1              10      POP AF
000D22 D346 315EF5          10      LD  SP,BUF
000D25 D349 F5              11      PUSH    AF
       D34A                     CALSLTR1:
000D26 D34A C5              11      PUSH    BC
000D27 D34B D5              11      PUSH    DE
000D28 D34C E5              11      PUSH    HL
000D29 D34D 2600             7      LD  H,0
000D2B D34F 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
000D2E D352 CD71D4          17      CALL    ENASLT
000D31 D355 E1              10      POP HL
000D32 D356 D1              10      POP DE
000D33 D357 C1              10      POP BC
000D34 D358 F1              10      POP AF
000D35 D359 CD1C00          17      CALL    _CALSLT
       D35A                     SLTCALLX    EQU $-2
000D38 D35C F5              11      PUSH    AF
000D39 D35D C5              11      PUSH    BC
000D3A D35E D5              11      PUSH    DE
000D3B D35F E5              11      PUSH    HL
000D3C D360 2600             7      LD  H,0
000D3E D362 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000D41 D365 CD71D4          17      CALL    ENASLT
000D44 D368 E1              10      POP HL
000D45 D369 D1              10      POP DE
000D46 D36A C1              10      POP BC
000D47 D36B F1              10      POP AF
000D48 D36C 310000          10      LD  SP,0
       D36D                     CSSP    EQU $-2
000D4B D36F FB               4      EI
000D4C D370 C9              10      RET
                                
       D371                     RDSLTR:
000D4D D371 ED736DD3        20      LD  (CSSP),SP
000D51 D375 F5              11      PUSH    AF
000D52 D376 3E0C             7      LD  A,_RDSLT
000D54 D378 18C1            12      JR  SLTCALL
                                
       D37A                     WRSLTR:
000D56 D37A ED736DD3        20      LD  (CSSP),SP
000D5A D37E F5              11      PUSH    AF
000D5B D37F 3E14             7      LD  A,_WRSLT
000D5D D381 18B8            12      JR  SLTCALL
                                
       D383                     INT38H:
000D5F D383 F5              11      PUSH    AF
000D60 D384 E5              11      PUSH    HL          ;メインROMを呼び出すのでスタックが被っていないかチェック
000D61 D385 2AAFD3          16      LD  HL,(INTSP)
000D64 D388 7C               4      LD  A,H
000D65 D389 B5               4      OR  L
000D66 D38A 202D            12      JR  NZ,INT38H2
000D68 D38C C5              11      PUSH    BC
000D69 D38D D5              11      PUSH    DE
000D6A D38E 2100BF          10      LD  HL,010000H-04100H   ;Page1
000D6D D391 39              11      ADD HL,SP
000D6E D392 ED73AFD3        20      LD  (INTSP),SP
000D72 D396 3803            12      JR  C,INT38H1
000D74 D398 315EF5          10      LD  SP,BUF
       D39B                     INT38H1:
000D77 D39B 2600             7      LD  H,0
000D79 D39D 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
000D7C D3A0 CD71D4          17      CALL    ENASLT
000D7F D3A3 CD3800          17      CALL    00038H
000D82 D3A6 2600             7      LD  H,0
000D84 D3A8 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000D87 D3AB CD71D4          17      CALL    ENASLT
000D8A D3AE 310000          10      LD  SP,0
       D3AF                     INTSP   EQU $-2
000D8D D3B1 210000          10      LD  HL,0
000D90 D3B4 22AFD3          16      LD  (INTSP),HL
000D93 D3B7 D1              10      POP DE
000D94 D3B8 C1              10      POP BC
       D3B9                     INT38H2:
000D95 D3B9 E1              10      POP HL
000D96 D3BA F1              10      POP AF
000D97 D3BB FB               4      EI
000D98 D3BC C9              10      RET
                                
[EOF:MSXIO.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\slot.asm"
                                ;-------------------------------------
                                ; 000Ch RDSLT
                                ; Reads a value from an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to read
                                ; Output:  A  = value read
                                ;          Interrupts disabled.
                                ; Changes: F, C, DE
       D3BD                     rdslt:
000D99 D3BD C5              11                  push    bc
000D9A D3BE E5              11                  push    hl
000D9B D3BF F5              11                  push    af
000D9C D3C0 57               4                  ld      d,a             ; init D in case call is not made
000D9D D3C1 A7               4                  and     a               ; expanded slot?
000D9E D3C2 F3               4                  di
000D9F D3C3 FCDCD4          17                  call    m,select_subslot
000DA2 D3C6 F1              10                  pop     af
000DA3 D3C7 E1              10                  pop     hl
                                
000DA4 D3C8 E5              11                  push    hl              ; HL = address
000DA5 D3C9 D5              11                  push    de              ; D = slot ID, E = saved SSL
000DA6 D3CA E5              11                  push    hl              ; HL = address
000DA7 D3CB F5              11                  push    af              ; A = slot ID
000DA8 D3CC 7C               4                  ld      a,h
000DA9 D3CD 07               4                  rlca
000DAA D3CE 07               4                  rlca
000DAB D3CF E603             7                  and     $03
000DAD D3D1 6F               4                  ld      l,a             ; L = page number
                                
000DAE D3D2 47               4                  ld      b,a
000DAF D3D3 3EFC             7                  ld      a,$FC
000DB1 D3D5 CDF6D3          17                  call    rdsft
000DB4 D3D8 5F               4                  ld      e,a             ; E = mask (shifted)
000DB5 D3D9 45               4                  ld      b,l             ; B = page number
000DB6 D3DA F1              10                  pop     af              ; A = slot ID
000DB7 D3DB E603             7                  and     $03
000DB9 D3DD CDF6D3          17                  call    rdsft
000DBC D3E0 47               4                  ld      b,a             ; B = primary slot (shifted)
000DBD D3E1 DBA8            11                  in      a,(PSL_STAT)
000DBF D3E3 57               4                  ld      d,a             ; D = primary slot select for restore
000DC0 D3E4 A3               4                  and     e
000DC1 D3E5 B0               4                  or      b               ; A = primary slot select for read
000DC2 D3E6 E1              10                  pop     hl              ; HL = address
                                
000DC3 D3E7 CD80F3          17                  call    rdprim
000DC6 D3EA 7B               4                  ld      a,e
000DC7 D3EB D1              10                  pop     de              ; D = slot ID, E = saved SSL
000DC8 D3EC F5              11                  push    af              ; A = value read
000DC9 D3ED CB7A             8                  bit     7,d             ; expanded slot?
000DCB D3EF C418D5          17                  call    nz,restore_subslot
000DCE D3F2 F1              10                  pop     af              ; A = value read
000DCF D3F3 E1              10                  pop     hl              ; HL = address
000DD0 D3F4 C1              10                  pop     bc
000DD1 D3F5 C9              10                  ret
                                
       D3F6                     rdsft:
000DD2 D3F6 04               4                  inc     b
000DD3 D3F7 05               4                  dec     b
000DD4 D3F8 C8              11                  ret     z
       D3F9                     rdsft_lp:
000DD5 D3F9 07               4                  rlca
000DD6 D3FA 07               4                  rlca
000DD7 D3FB 10FC            13                  djnz    rdsft_lp
000DD9 D3FD C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0014 WRSLT
                                ; Writes a value to an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to write
                                ;          E  = value to write
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, D
       D3FE                     wrslt:
000DDA D3FE E5              11                  push    hl
000DDB D3FF 57               4                  ld      d,a             ; D = slot ID
000DDC D400 D5              11                  push    de
000DDD D401 A7               4                  and     a               ; expanded slot?
000DDE D402 F3               4                  di
000DDF D403 FCDCD4          17                  call    m,select_subslot
000DE2 D406 C1              10                  pop     bc              ; B = slot ID, C = data
000DE3 D407 E1              10                  pop     hl
000DE4 D408 D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
000DE5 D409 E5              11                  push    hl              ; HL = address
000DE6 D40A 7C               4                  ld      a,h
000DE7 D40B 07               4                  rlca
000DE8 D40C 07               4                  rlca
000DE9 D40D E603             7                  and     $03
000DEB D40F 6F               4                  ld      l,a             ; L = page number
                                
000DEC D410 47               4                  ld      b,a             ; B = page number
000DED D411 3EFC             7                  ld      a,$FC
000DEF D413 CDF6D3          17                  call    rdsft
000DF2 D416 5F               4                  ld      e,a             ; E = mask (shifted)
                                
000DF3 D417 45               4                  ld      b,l             ; B = page number
000DF4 D418 7A               4                  ld      a,d
000DF5 D419 E603             7                  and     $03             ; A = 000000PP
000DF7 D41B CDF6D3          17                  call    rdsft
000DFA D41E 47               4                  ld      b,a             ; B = primary slot (shifted)
000DFB D41F DBA8            11                  in      a,(PSL_STAT)
000DFD D421 57               4                  ld      d,a             ; D = primary slot select for restore
000DFE D422 A3               4                  and     e
000DFF D423 B0               4                  or      b               ; A = primary slot select for write
000E00 D424 E1              10                  pop     hl              ; HL = address
000E01 D425 59               4                  ld      e,c             ; E = data
000E02 D426 CD85F3          17                  call    wrprim
                                
000E05 D429 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000E06 D42A E5              11                  push    hl              ; HL = address
000E07 D42B CB7A             8                  bit     7,d             ; expanded slot?
000E09 D42D C418D5          17                  call    nz,restore_subslot
000E0C D430 E1              10                  pop     hl
000E0D D431 C9              10                  ret
                                
                                ;-------------------------------------
                                ; $001C CALSLT
                                ; Function : Executes inter-slot call.
                                ; Input    : IY - High byte with input for A in RDSLT
                                ;            IX - The address that will be called
                                ; Remark   : Variables can never be given in alternative registers
                                ;            of the Z-80 or IX and IY
                                
       D432                     calslt:
000E0E D432 08               4                  ex      af,af'
000E0F D433 D9               4                  exx
                                
                                ; Select secondary slot of target:
                                ; Note: This approach fails if target is in page 0 of slot 0.1, 0.2 or 0.3.
                                ; TODO: Put slot 0 specific routine in page 3, on the stack if necessary.
000E10 D434 F3               4                  di
000E11 D435 FDE5            15                  push    iy
000E13 D437 F1              10                  pop     af              ; A = slot ID: E000SSPP
000E14 D438 DDE5            15                  push    ix
000E16 D43A E1              10                  pop     hl              ; HL = address to call
000E17 D43B 57               4                  ld      d,a             ; init D in case call is not made
000E18 D43C A7               4                  and     a               ; expanded slot?
000E19 D43D FCDCD4          17                  call    m,select_subslot
000E1C D440 D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
                                ; Calculate primary slot select value:
000E1D D441 7A               4                  ld      a,d             ; A = slot ID: E000SSPP
000E1E D442 E603             7                  and     $03
000E20 D444 47               4                  ld      b,a             ; B = primary slot
000E21 D445 0EFC             7                  ld      c,$FC           ; C = mask
                                                ; Calculate page that contains call address.
000E23 D447 DDE5            15                  push    ix
000E25 D449 F1              10                  pop     af              ; A = high byte call address
000E26 D44A 07               4                  rlca
000E27 D44B 07               4                  rlca
000E28 D44C E603             7                  and     $03             ; A = page
                                                ; Shift B and C page*2 positions to the left.
000E2A D44E 87               4                  add     a,a
000E2B D44F 2807            12                  jr      z,calslt_sh2
       D451                     calslt_sh1:
000E2D D451 CB00             4                  rlc     b
000E2F D453 CB01             4                  rlc     c
000E31 D455 3D               4                  dec     a
000E32 D456 20F9            12                  jr      nz,calslt_sh1
       D458                     calslt_sh2:
                                
                                ; Select primary slot of target and perform call:
000E34 D458 2165D4          10                  ld      hl,calslt_restore
000E37 D45B E5              11                  push    hl
000E38 D45C DBA8            11                  in      a,(PSL_STAT)
000E3A D45E F5              11                  push    af
000E3B D45F A1               4                  and     c               ; C = mask (shifted)
000E3C D460 B0               4                  or      b               ; B = primary slot (shifted)
000E3D D461 D9               4                  exx
000E3E D462 C38CF3          10                  jp      clprim
                                
       D465                     calslt_restore:
000E41 D465 08               4                  ex      af,af'
000E42 D466 D9               4                  exx
                                
                                ; Restore secondary slot:
000E43 D467 F3               4                  di
000E44 D468 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000E45 D469 CB7A             8                  bit     7,d             ; expanded slot?
000E47 D46B C418D5          17                  call    nz,restore_subslot
                                
                                ; Done:
000E4A D46E 08               4                  ex      af,af'
000E4B D46F D9               4                  exx
000E4C D470 C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0024 ENASLT
                                ; Selects a slot in the page specified by an address.
                                ; Input:   A  = slot ID: ExxxSSPP
                                ;               E  = expanded flag
                                ;               SS = secondary slot number (only if expanded)
                                ;               PP = primary slot number
                                ;          HL = address inside the page to change
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, DE
                                
       D471                     enaslt:
                                
                                ; A=(A >> 6)&0x3
000E4D D471 F3               4                  di
000E4E D472 E5              11                  push    hl
                                
000E4F D473 6F               4                  ld      l,a             ; L = ExxxSSPP
                                
000E50 D474 E603             7                  and     $03             ; A = 000000PP
000E52 D476 47               4                  ld      b,a
000E53 D477 3EAB             7                  ld      a,$AB
       D479                     psl_dup_lp:
000E55 D479 C655             7                  add     a,$55
000E57 D47B 05               4                  dec     b
000E58 D47C F279D4          10                  jp      p,psl_dup_lp
                                
000E5B D47F 57               4                  ld      d,a             ; D = PP PP PP PP
                                
000E5C D480 7C               4                  ld      a,h
000E5D D481 07               4                  rlca
000E5E D482 07               4                  rlca
000E5F D483 E603             7                  and     $03
                                
000E61 D485 67               4                  ld      h,a             ; H = page number (0-3)
                                
000E62 D486 47               4                  ld      b,a
                                
000E63 D487 3EC0             7                  ld      a,$C0
       D489                     page_msk_lp:
000E65 D489 07               4                  rlca
000E66 D48A 07               4                  rlca
000E67 D48B 05               4                  dec     b
000E68 D48C F289D4          10                  jp      p,page_msk_lp
                                
000E6B D48F 5F               4                  ld      e,a             ; E = page mask (00 00 00 11 << page)
000E6C D490 2F               4                  cpl
000E6D D491 4F               4                  ld      c,a             ; C = page mask complement
                                
000E6E D492 7A               4                  ld      a,d
000E6F D493 A3               4                  and     e
000E70 D494 47               4                  ld      b,a             ; B = 00 00 00 PP << page
                                
000E71 D495 7D               4                  ld      a,l
000E72 D496 A7               4                  and     a
000E73 D497 F2D4D4          10                  jp      p,chg_psl
                                
                                ;SSL-Change
000E76 D49A 0F               4                  rrca
000E77 D49B 0F               4                  rrca
000E78 D49C E603             7                  and     $03             ; A = 000000SS
                                
000E7A D49E E5              11                  push    hl
000E7B D49F C5              11                  push    bc
                                
000E7C D4A0 47               4                  ld      b,a
000E7D D4A1 3EAB             7                  ld      a,$AB
       D4A3                     ssl_dup_lp:
000E7F D4A3 C655             7                  add     a,$55
000E81 D4A5 05               4                  dec     b
000E82 D4A6 F2A3D4          10                  jp      p,ssl_dup_lp
                                
000E85 D4A9 A3               4                  and     e
000E86 D4AA 47               4                  ld      b,a             ; B = 00 00 00 SS << page
                                
000E87 D4AB 7A               4                  ld      a,d
000E88 D4AC E6C0             7                  and     $C0
000E8A D4AE 67               4                  ld      h,a
                                
000E8B D4AF DBA8            11                  in      a,(PSL_STAT)
000E8D D4B1 6F               4                  ld      l,a
000E8E D4B2 E6C0             7                  and     $C0
000E90 D4B4 B4               4                  or      h
000E91 D4B5 D3A8            11                  out     (PSL_STAT),a
                                
000E93 D4B7 3AFFFF          13                  ld      a,(SSL_REGS)
000E96 D4BA 2F               4                  cpl
000E97 D4BB A1               4                  and     c               ; preserve other pages
000E98 D4BC B0               4                  or      b
000E99 D4BD 4F               4                  ld      c,a
000E9A D4BE 32FFFF          13                  ld      (SSL_REGS),a
                                
000E9D D4C1 7D               4                  ld      a,l
000E9E D4C2 D3A8            11                  out     (PSL_STAT),a
                                
                                                ; (SLTTBL + PP) <- RegC
                                
000EA0 D4C4 21C5FC          10                  ld      hl,SLTTBL
                                
000EA3 D4C7 7A               4                  ld      a,d
000EA4 D4C8 E603             7                  and     $03             ; A = 000000PP
                                
000EA6 D4CA 85               4                  add     a,l
000EA7 D4CB 6F               4                  ld      l,a             ; L = L + A
                                
000EA8 D4CC 7C               4                  ld      a,h
000EA9 D4CD CE00             7                  adc     a,0
000EAB D4CF 67               4                  ld      h,a             ; H = H + Cy
                                
000EAC D4D0 79               4                  ld      a,c
000EAD D4D1 77               7                  ld      (hl),a
                                
000EAE D4D2 C1              10                  pop     bc
000EAF D4D3 E1              10                  pop     hl
                                
       D4D4                     chg_psl:
000EB0 D4D4 DBA8            11                  in      a,(PSL_STAT)
000EB2 D4D6 A1               4                  and     c
000EB3 D4D7 B0               4                  or      b
000EB4 D4D8 D3A8            11                  out     (PSL_STAT),a
                                
000EB6 D4DA E1              10                  pop     hl
000EB7 D4DB C9              10                  ret
                                
                                ;--------------------------------
                                ; Select subslot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address which specifies page to select
                                ;               (actually, only the highest 2 bits of H are relevant)
                                ; Output:  D  = slot ID (same as input)
                                ;          E  = original value of secondary slot select register
                                ;          SLTTBL[slot] = new value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D4DC                     select_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000EB8 D4DC 57               4                  ld      d,a             ; D = E000SSPP
000EB9 D4DD 0F               4                  rrca
000EBA D4DE 0F               4                  rrca
000EBB D4DF 5F               4                  ld      e,a             ; E = PPE000SS
000EBC D4E0 E6C0             7                  and     $C0
000EBE D4E2 6F               4                  ld      l,a             ; L = PP000000
000EBF D4E3 DBA8            11                  in      a,(PSL_STAT)
000EC1 D4E5 4F               4                  ld      c,a             ; C = saved PSL
000EC2 D4E6 E63F             7                  and     $3F
000EC4 D4E8 B5               4                  or      l
000EC5 D4E9 D3A8            11                  out     (PSL_STAT),a
                                                ; Shift mask and subslot according to page.
000EC7 D4EB 7B               4                  ld      a,e             ; A = PPE000SS
000EC8 D4EC E603             7                  and     $03
000ECA D4EE 6F               4                  ld      l,a             ; L = subslot
000ECB D4EF 7C               4                  ld      a,h             ; A = high byte of address
000ECC D4F0 2603             7                  ld      h,$03           ; H = mask
000ECE D4F2 1802            12                  jr      select_subslot_next
       D4F4                     select_subslot_lp:
000ED0 D4F4 29              11                  add     hl,hl           ; Shift 2 bits to the left.
000ED1 D4F5 29              11                  add     hl,hl
       D4F6                     select_subslot_next:
000ED2 D4F6 D640             7                  sub     $40             ; Subtract 1 page.
000ED4 D4F8 30FA            12                  jr      nc,select_subslot_lp
000ED6 D4FA 7C               4                  ld      a,h
000ED7 D4FB 2F               4                  cpl
000ED8 D4FC 67               4                  ld      h,a
                                                ; Select secondary slot of target.
000ED9 D4FD 3AFFFF          13                  ld      a,(SSL_REGS)
000EDC D500 2F               4                  cpl
000EDD D501 5F               4                  ld      e,a             ; E = saved SSL
000EDE D502 A4               4                  and     h               ; H = mask (shifted)
000EDF D503 B5               4                  or      l               ; L = subslot (shifted)
000EE0 D504 32FFFF          13                  ld      (SSL_REGS),a
000EE3 D507 6F               4                  ld      l,a             ; L = value written to SSL_REGS
                                                ; Restore original primary slot in page 3.
000EE4 D508 79               4                  ld      a,c
000EE5 D509 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000EE7 D50B 7A               4                  ld      a,d
000EE8 D50C E603             7                  and     $03             ; A = 000000SS
000EEA D50E 4F               4                  ld      c,a
000EEB D50F 0600             7                  ld      b,0
000EED D511 7D               4                  ld      a,l             ; A = value written to SSL_REGS
000EEE D512 21C5FC          10                  ld      hl,SLTTBL
000EF1 D515 09              11                  add     hl,bc
000EF2 D516 77               7                  ld      (hl),a
000EF3 D517 C9              10                  ret
                                
                                ;--------------------------------
                                ; Restore subslot, companion routine to select_subslot.
                                ; Input:   D  = slot ID: E000SSPP
                                ;          E  = original value of secondary slot select register
                                ; Output:  SLTTBL[slot] = original value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D518                     restore_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000EF4 D518 7A               4                  ld      a,d
000EF5 D519 0F               4                  rrca
000EF6 D51A 0F               4                  rrca
000EF7 D51B E6C0             7                  and     $C0
000EF9 D51D 47               4                  ld      b,a             ; B = PP000000
000EFA D51E DBA8            11                  in      a,(PSL_STAT)
000EFC D520 4F               4                  ld      c,a             ; C = saved PSL
000EFD D521 E63F             7                  and     $3F
000EFF D523 B0               4                  or      b
000F00 D524 D3A8            11                  out     (PSL_STAT),a
                                                ; Restore secondary slot.
000F02 D526 7B               4                  ld      a,e
000F03 D527 32FFFF          13                  ld      (SSL_REGS),a
                                                ; Restore original primary slot in page 3.
000F06 D52A 79               4                  ld      a,c
000F07 D52B D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000F09 D52D 7A               4                  ld      a,d
000F0A D52E E603             7                  and     $03             ; A = 000000SS
000F0C D530 4F               4                  ld      c,a
000F0D D531 0600             7                  ld      b,0
000F0F D533 21C5FC          10                  ld      hl,SLTTBL
000F12 D536 09              11                  add     hl,bc
000F13 D537 73               7                  ld      (hl),e
000F14 D538 C9              10                  ret
                                
                                ;--------------------------------
                                
       D539                     m_rdprim:
000F15 D539 D3A8            11                  out     (PSL_STAT),a
000F17 D53B 5E               7                  ld      e,(hl)
000F18 D53C 1803            12                  jr      m_wrprm1
       D53E                     m_wrprim:
000F1A D53E D3A8            11                  out     (PSL_STAT),a
000F1C D540 73               7                  ld      (hl),e
       D541                     m_wrprm1:
000F1D D541 7A               4                  ld      a,d
000F1E D542 D3A8            11                  out     (PSL_STAT),a
000F20 D544 C9              10                  ret
       D545                     m_clprim:
000F21 D545 D3A8            11                  out     (PSL_STAT),a
000F23 D547 08               4                  ex      af,af'
000F24 D548 CD98F3          17                  call    cl_jp
000F27 D54B 08               4                  ex      af,af'
000F28 D54C F1              10                  pop     af
000F29 D54D D3A8            11                  out     (PSL_STAT),a
000F2B D54F 08               4                  ex      af,af'
000F2C D550 C9              10                  ret
       D551                     m_cl_jp:
000F2D D551 DDE9             8                  jp      (ix)
       D553                     m_prim_end:
000F2F D553 00               4                  nop
                                
       F380                     rdprim:         equ     $F380
       F385                     wrprim:         equ     rdprim+(m_wrprim-m_rdprim)
       F38C                     clprim:         equ     rdprim+(m_clprim-m_rdprim)
       F398                     cl_jp:          equ     rdprim+(m_cl_jp-m_rdprim)
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:slot.asm:UTF_8]
                                    INCLUDE "LDFILE.ASM"
                                
                                ;   LSX-Dodgers FILE
                                
                                ;   【注意】バイナリサイズを下位1バイトを0丁度に調整する必要あり
                                
       D554                     FILEC:
000F30 D554 CD5FD5          17      CALL    FILE
       D557                     FILEC2:
000F33 D557 3A15E5          13      LD  A,(FDRV+1)
000F36 D55A FE20             7      CP  020H
000F38 D55C C8              11      RET Z
000F39 D55D 1839            12      JR  SETDIR1
                                
       D55F                     FILE:
000F3B D55F AF               4      XOR A
000F3C D560 3214E5          13      LD  (FDRV),A
000F3F D563 67               4      LD  H,A
000F40 D564 6F               4      LD  L,A
000F41 D565 2222E5          16      LD  (FDRV+14),HL
000F44 D568 CD36D6          17      CALL    SPCUT
000F47 D56B CD1BD6          17      CALL    CCHK3
000F4A D56E 2812            12      JR  Z,DEVI1
000F4C D570 13               6      INC DE
000F4D D571 1A               7      LD  A,(DE)
000F4E D572 1B               6      DEC DE
000F4F D573 FE3A             7      CP  ':'
000F51 D575 200B            12      JR  NZ,DEVI1
000F53 D577 1A               7      LD  A,(DE)      ;DRIVE
000F54 D578 CD76D8          17      CALL    CAP
000F57 D57B D640             7      SUB '@'
000F59 D57D 13               6      INC DE
000F5A D57E 13               6      INC DE
000F5B D57F 3214E5          13      LD  (FDRV),A
       D582                     DEVI1:
000F5E D582 1A               7      LD  A,(DE)
000F5F D583 D65C             7      SUB 05CH        ;\
000F61 D585 2009            12      JR  NZ,NOROOT
000F63 D587 6F               4      LD  L,A     ;A=0でH=0のはずなのでHL=0
000F64 D588 222EE5          16      LD  (FDRV+26),HL
000F67 D58B 2C               4      INC L
000F68 D58C 2222E5          16      LD  (FDRV+14),HL
000F6B D58F 13               6      INC DE
       D590                     NOROOT:
                                
       D590                     SETDIR:
000F6C D590 CDBCD5          17      CALL    FILED
000F6F D593 1A               7      LD  A,(DE)
000F70 D594 FE5C             7      CP  05CH        ;\
000F72 D596 C0              11      RET NZ
000F73 D597 13               6      INC DE
       D598                     SETDIR1:
000F74 D598 3E10             7      LD  A,010H      ;Directory
000F76 D59A 3221E5          13      LD  (FDRV+13),A
000F79 D59D D5              11      PUSH    DE
000F7A D59E 1114E5          10      LD  DE,FDRV
000F7D D5A1 2A1EE6          16      LD  HL,(STABLE+2*00FH)
000F80 D5A4 CD0F00          17      CALL    JP_HL
000F83 D5A7 D1              10      POP DE
000F84 D5A8 B7               4      OR  A
000F85 D5A9 C0              11      RET NZ
                                
000F86 D5AA 3A21E5          13      LD  A,(FDRV+13)
000F89 D5AD CB67             8      BIT 4,A
000F8B D5AF C8              11      RET Z
                                
000F8C D5B0 CD03D6          17      CALL    FILEI
000F8F D5B3 2A2EE5          16      LD  HL,(FDRV+26)
000F92 D5B6 23               6      INC HL
000F93 D5B7 2222E5          16      LD  (FDRV+14),HL
000F96 D5BA 18D4            12      JR  SETDIR
                                
       D5BC                     FILED:
000F98 D5BC CD03D6          17      CALL    FILEI
000F9B D5BF 2115E5          10      LD  HL,FNAME
                                
000F9E D5C2 0608             7      LD  B,8
       D5C4                     FILE2:
000FA0 D5C4 CD10D6          17      CALL    CCHKF
000FA3 D5C7 C8              11      RET Z
000FA4 D5C8 FE2A             7      CP  '*'
000FA6 D5CA 282E            12      JR  Z,FILE9
000FA8 D5CC FE2E             7      CP  '.'
000FAA D5CE 280C            12      JR  Z,FILE4
000FAC D5D0 77               7      LD  (HL),A
000FAD D5D1 23               6      INC HL
000FAE D5D2 10F0            13      DJNZ    FILE2
                                
       D5D4                     FILE3:
000FB0 D5D4 CD10D6          17      CALL    CCHKF
000FB3 D5D7 C8              11      RET Z
000FB4 D5D8 FE2E             7      CP  '.'
000FB6 D5DA 20F8            12      JR  NZ,FILE3
                                
       D5DC                     FILE4:
000FB8 D5DC 211DE5          10      LD  HL,FNAME+8
000FBB D5DF 0603             7      LD  B,3
                                
       D5E1                     FILE4L:
000FBD D5E1 CD10D6          17      CALL    CCHKF
000FC0 D5E4 C8              11      RET Z
000FC1 D5E5 FE2E             7      CP  '.'
000FC3 D5E7 2008            12      JR  NZ,FILE12
000FC5 D5E9 3215E5          13      LD  (FNAME),A   ;Parent directory(..)
000FC8 D5EC 3216E5          13      LD  (FNAME+1),A
000FCB D5EF 3E20             7      LD  A,020H
       D5F1                     FILE12:
000FCD D5F1 FE2A             7      CP  '*'
000FCF D5F3 280A            12      JR  Z,FILE10
000FD1 D5F5 77               7      LD  (HL),A
000FD2 D5F6 23               6      INC HL
000FD3 D5F7 10E8            13      DJNZ    FILE4L
000FD5 D5F9 C9              10      RET
                                
       D5FA                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000FD6 D5FA CDFFD5          17      CALL    FILE10
000FD9 D5FD 18D5            12      JR  FILE3
                                
       D5FF                     FILE10:
000FDB D5FF 3E3F             7      LD  A,'?'
000FDD D601 1808            12      JR  FILL_MEMORY
       D603                     FILEI:              ;名前＋拡張子をスペースで初期化
000FDF D603 3E20             7      LD  A,020H
000FE1 D605 01000B          10      LD  BC,11*256   ;C=0にしておく
000FE4 D608 2115E5          10      LD  HL,FNAME
       D60B                     FILL_MEMORY:            ;HLからBバイトAで埋める
000FE7 D60B 77               7      LD  (HL),A
000FE8 D60C 23               6      INC HL
000FE9 D60D 10FC            13      DJNZ    FILL_MEMORY
000FEB D60F C9              10      RET
                                
       D610                     CCHKF:
000FEC D610 1A               7      LD  A,(DE)
000FED D611 CD18D6          17      CALL    CCHK2
000FF0 D614 C8              11      RET Z
000FF1 D615 C383D9          10      JP  FKAN
                                
       D618                     CCHK2:
000FF4 D618 0C               4      INC C
000FF5 D619 0D               4      DEC C
000FF6 D61A C0              11      RET NZ
       D61B                     CCHK3:              ;ZF=1 で使えない文字
000FF7 D61B FE2B             7      CP  '+'
000FF9 D61D C8              11      RET Z
000FFA D61E FE2C             7      CP  ','
000FFC D620 C8              11      RET Z
000FFD D621 FE2F             7      CP  '/'
000FFF D623 C8              11      RET Z
001000 D624 FE3A             7      CP  ':'
001002 D626 C8              11      RET Z
001003 D627 FE3B             7      CP  ';'
001005 D629 C8              11      RET Z
001006 D62A FE3D             7      CP  '='
001008 D62C C8              11      RET Z
001009 D62D FE5C             7      CP  05CH    ;\
00100B D62F C8              11      RET Z
00100C D630 FE20             7      CP  020H
00100E D632 D0              11      RET NC
00100F D633 BF               4      CP  A       ;Z=1
001010 D634 C9              10      RET
                                
       D635                     SS1:
001011 D635 13               6      INC DE
       D636                     SPCUT:              ;スペースをカット
001012 D636 1A               7      LD  A,(DE)
001013 D637 FE20             7      CP  020H
001015 D639 28FA            12      JR  Z,SS1
001017 D63B C9              10      RET
                                
       D63C                     SETDRVF:
001018 D63C 1114E5          10      LD  DE,FDRV
       D63F                     SETDRV0:
00101B D63F CD48D6          17      CALL    SETDRV
00101E D642 FDE1            14      POP IY
001020 D644 C1              10      POP BC
001021 D645 D1              10      POP DE
001022 D646 E1              10      POP HL
001023 D647 C9              10      RET
                                
       D648                     SETDRV:
001024 D648 E3              19      EX  (SP),HL     ;HL=RETRN ADDRESS
001025 D649 D5              11      PUSH    DE      ;PUSH HL/DE/BC/IY
001026 D64A C5              11      PUSH    BC
001027 D64B 1A               7      LD  A,(DE)
001028 D64C D5              11      PUSH    DE
001029 D64D FDE3            23      EX  (SP),IY
                                
00102B D64F CD56D6          17      CALL    GETDRV
00102E D652 CDD9E5          17      CALL    _CHGDRV
                                
001031 D655 E9               4      JP  (HL)
                                
       D656                     GETDRV:
001032 D656 CD69D6          17      CALL    GETDRV1
001035 D659 3288E5          13      LD  (_DRV),A
001038 D65C C9              10      RET
                                
       D65D                     IS_SAME_DRV_A_DE:
                                ;   A と (DE) が同じドライブか調べる
                                ;   ZF=1ならば同じドライブ
001039 D65D CD69D6          17      CALL    GETDRV1
00103C D660 C5              11      PUSH    BC
00103D D661 4F               4      LD  C,A
00103E D662 1A               7      LD  A,(DE)
00103F D663 CD69D6          17      CALL    GETDRV1
001042 D666 A9               4      XOR C
001043 D667 C1              10      POP BC
001044 D668 C9              10      RET
       D669                     GETDRV1:
001045 D669 E67F             7      AND 07FH
001047 D66B D601             7      SUB 001H
001049 D66D D0              11      RET NC
00104A D66E 3A0400          13      LD  A,(_DVSW)   ;Current Drive
00104D D671 C9              10      RET
                                
       D672                     SOPENX:
00104E D672 1139E5          10      LD  DE,SFILE
001051 D675 FD7E00          19      LD  A,(IY+0)        ;(FCB)ドライブ番号
001054 D678 CD5DD6          17      CALL    IS_SAME_DRV_A_DE
001057 D67B 2024            12      JR  NZ,SOPEN
001059 D67D 13               6      INC DE
00105A D67E FDE5            15      PUSH    IY
00105C D680 E1              10      POP HL
00105D D681 23               6      INC HL
00105E D682 CD0ED8          17      CALL    CPFILE
001061 D685 201A            12      JR  NZ,SOPEN
                                
001063 D687 2AF4E6          16      LD  HL,(SCDIR)
001066 D68A FD750E          19      LD  (IY+14),L   ;(FCB)アクセスするディレクトリのクラスタ番号+1
001069 D68D FD740F          19      LD  (IY+15),H
                                
00106C D690 2AF8E6          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
00106F D693 229FE5          16      LD  (_FILEN),HL
                                
001072 D696 ED5BF6E6        20      LD  DE,(SFBPS)
001076 D69A 2139E5          10      LD  HL,SFILE
001079 D69D 36FF            10      LD  (HL),0FFH
00107B D69F 23               6      INC HL
00107C D6A0 C9              10      RET
       D6A1                     SOPEN:
00107D D6A1 21B6D7          10      LD  HL,FILESE
       D6A4                     SOPENC:
001080 D6A4 22DDD6          16      LD  (OPENPAT),HL
                                
001083 D6A7 CDE2E5          17      CALL    _RDFATX     ;Detect Media
001086 D6AA 3856            12      JR  C,RDDERR
                                
001088 D6AC AF               4      XOR A
001089 D6AD 329FE5          13      LD  (_FILEN),A
00108C D6B0 CDB6D8          17      CALL    LDDIRX1     ;A=0で呼び出す
00108F D6B3 2818            12      JR  Z,SDIRX1
                                
001091 D6B5 CDA7D7          17      CALL    READ_DIR    ;Sub Directory
001094 D6B8 3808            12      JR  C,SDIRX0
001096 D6BA 2A7EE6          16      LD  HL,(_DTBUF)
001099 D6BD 7E               7      LD  A,(HL)
00109A D6BE FE2E             7      CP  '.'
00109C D6C0 280F            12      JR  Z,SOPEN1
       D6C2                     SDIRX0:
00109E D6C2 AF               4      XOR A
00109F D6C3 32A0E5          13      LD  (_DIRF),A
0010A2 D6C6 FD360E01        19      LD  (IY+14),1   ;(FCB)レコードサイズ
0010A6 D6CA FD770F          19      LD  (IY+15),A
       D6CD                     SDIRX1:
0010A9 D6CD ED5BFCE6        20      LD  DE,(_DIRPS) ;Root Directory
       D6D1                     SOPEN1:
0010AD D6D1 0E20             7      LD  C,32        ;自己書き換え 1セクタ辺りのディレクトリエントリ数  1024=32 / 512=16 / 256=8
       D6D2                     SDECPAT EQU $-1
       D6D3                     SOPEN1X:
0010AF D6D3 CDA7D7          17      CALL    READ_DIR    ;FILE SEARCH
0010B2 D6D6 382A            12      JR  C,RDDERR
0010B4 D6D8 2A7EE6          16      LD  HL,(_DTBUF)
       D6DB                     SOPEN2:
0010B7 D6DB D5              11      PUSH    DE
0010B8 D6DC CDB6D7          17      CALL    FILESE      ;(self-modifying code)
       D6DD                     OPENPAT EQU $-2
0010BB D6DF D1              10      POP DE
0010BC D6E0 386D            12      JR  C,SOPENE
0010BE D6E2 281B            12      JR  Z,SCF_FF_RET
       D6E4                     SOPEN3:
0010C0 D6E4 3AA0E5          13      LD  A,(_DIRF)   ;ディレクトリか判別
0010C3 D6E7 B7               4      OR  A
0010C4 D6E8 200C            12      JR  NZ,SOPEN5
0010C6 D6EA 13               6      INC DE      ;ルートディレクトリ
0010C7 D6EB E5              11      PUSH    HL
0010C8 D6EC 210C00          10      LD  HL,12       ;(self-modifying code)MAXDIR
       D6ED                     MD_PAT  EQU $-2
0010CB D6EF ED52            15      SBC HL,DE       ;CF=0 なので SUB HL,DE
0010CD D6F1 E1              10      POP HL
0010CE D6F2 20DD            12      JR  NZ,SOPEN1
0010D0 D6F4 1807            12      JR  SOPEN6
       D6F6                     SOPEN5:
0010D2 D6F6 CDCCDF          17      CALL    GNCLX       ;END DIR
0010D5 D6F9 D8              11      RET C
0010D6 D6FA CD6ED8          17      CALL    ENDCL
       D6FD                     SOPEN6:
0010D9 D6FD 38D2            12      JR  C,SOPEN1
       D6FF                     SCF_FF_RET:
0010DB D6FF 37               4      SCF         ;CF=1
0010DC D700 9F               4      SBC A,A     ;A=0FFH
0010DD D701 C9              10      RET
                                
       D702                     RDDERR:
0010DE D702 BF               4      CP  A       ;READ ERR CF=1 ZF=1
0010DF D703 37               4      SCF
0010E0 D704 C9              10      RET
                                
       D705                     NOPEN:
0010E1 D705 21B6D7          10      LD  HL,FILESE
0010E4 D708 22DDD6          16      LD  (OPENPAT),HL
0010E7 D70B FD2A98E5        20      LD  IY,(_FCB)
0010EB D70F CD96D9          17      CALL    CHKWILDX
0010EE D712 30EB            12      JR  NC,SCF_FF_RET
0010F0 D714 FD7E00          19      LD  A,(IY+0)
0010F3 D717 CD56D6          17      CALL    GETDRV
0010F6 D71A CDD9E5          17      CALL    _CHGDRV
0010F9 D71D D8              11      RET C
0010FA D71E 2AF8E6          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
0010FD D721 229FE5          16      LD  (_FILEN),HL
                                
001100 D724 CDB1D8          17      CALL    LDDIRX
001103 D727 ED5B9AE5        20      LD  DE,(_FBPS)
001107 D72B CDA7D7          17      CALL    READ_DIR
00110A D72E 38D2            12      JR  C,RDDERR
00110C D730 3A9EE5          13      LD  A,(_FBCNT)
00110F D733 3D               4      DEC A
001110 D734 28AE            12      JR  Z,SOPEN3
       D736                     NOPEN2:
001112 D736 2A9CE5          16      LD  HL,(_FBAD)
001115 D739 012000          10      LD  BC,020H
001118 D73C 09              11      ADD HL,BC
001119 D73D 4F               4      LD  C,A
00111A D73E 189B            12      JR  SOPEN2
                                
       D740                     SOPENE2:
00111C D740 229CE5          16      LD  (_FBAD),HL
00111F D743 79               4      LD  A,C
001120 D744 329EE5          13      LD  (_FBCNT),A
001123 D747 ED539AE5        20      LD  (_FBPS),DE
001127 D74B FD2298E5        20      LD  (_FCB),IY
       D74F                     SOPENE:
00112B D74F AF               4      XOR A
00112C D750 C9              10      RET
                                
       D751                     COPEN:
00112D D751 FD360D20        19      LD  (IY+13),020H    ;(FCB)属性(アトリビュート)
                                
001131 D755 21D3D7          10      LD  HL,NEXTSE
001134 D758 CDA4D6          17      CALL    SOPENC
001137 D75B D0              11      RET NC
001138 D75C C8              11      RET Z
001139 D75D 3AA0E5          13      LD  A,(_DIRF)   ;ディレクトリか判別
00113C D760 B7               4      OR  A
00113D D761 37               4      SCF
00113E D762 C8              11      RET Z       ;ルートディレクトリ
00113F D763 0601             7      LD  B,1
001141 D765 CDF5D9          17      CALL    WRDF
001144 D768 D8              11      RET C
001145 D769 ED5BFEE6        20      LD  DE,(_CLPS)
001149 D76D D5              11      PUSH    DE
00114A D76E CD37D8          17      CALL    DCPAT
00114D D771 CD50DE          17      CALL    DRDNX
001150 D774 2A7EE6          16      LD  HL,(_DTBUF) ;ディレクトリエントリを0クリア
001153 D777 3A36DD          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
001156 D77A 47               4      LD  B,A
001157 D77B AF               4      XOR A
001158 D77C 4F               4      LD  C,A
       D77D                     COPENCL:
001159 D77D 77               7      LD  (HL),A
00115A D77E EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00115C D780 EA7DD7          10      JP  PE,COPENCL
                                
00115F D783 3A55D8          13      LD  A,(SPCPAT)  ;1クラスタの論理セクタ数
001162 D786 3D               4      DEC A
001163 D787 2819            12      JR  Z,COPENE
001165 D789 3E01             7      LD  A,1     ;1セクタ辺りのセクタ数が2以上の場合
001167 D78B 32C4DF          13      LD  (_SECPS),A
00116A D78E D1              10      POP DE      ;DE=(_CLPS)
00116B D78F D5              11      PUSH    DE
       D790                     COPEN1:
00116C D790 D5              11      PUSH    DE      ;データバッファに入らないセクタもゼロクリア
00116D D791 C5              11      PUSH    BC
00116E D792 2A7EE6          16      LD  HL,(_DTBUF)
001171 D795 CD51D8          17      CALL    CLUSTX
001174 D798 CD60E1          17      CALL    DWT24
001177 D79B C1              10      POP BC
001178 D79C D1              10      POP DE
001179 D79D CDC3DF          17      CALL    NEXTX
00117C D7A0 20EE            12      JR  NZ,COPEN1
       D7A2                     COPENE:
00117E D7A2 2A7EE6          16      LD  HL,(_DTBUF)
001181 D7A5 D1              10      POP DE
001182 D7A6 C9              10      RET
                                
       D7A7                     READ_DIR:
001183 D7A7 ED53FEE6        20      LD  (_CLPS),DE
001187 D7AB C5              11      PUSH    BC
001188 D7AC D5              11      PUSH    DE
001189 D7AD CD37D8          17      CALL    DCPAT
00118C D7B0 CD30DE          17      CALL    DRDX
00118F D7B3 D1              10      POP DE
001190 D7B4 C1              10      POP BC
001191 D7B5 C9              10      RET
                                
       D7B6                     FILESE:
001192 D7B6 7E               7      LD  A,(HL)
001193 D7B7 B7               4      OR  A
001194 D7B8 C8              11      RET Z       ;END:ZF=1 CF=0
001195 D7B9 FEE5             7      CP  0E5H
001197 D7BB 280E            12      JR  Z,FILESE1
001199 D7BD FDE5            15      PUSH    IY
00119B D7BF D1              10      POP DE
00119C D7C0 13               6      INC DE
00119D D7C1 E5              11      PUSH    HL
00119E D7C2 CD0ED8          17      CALL    CPFILE
0011A1 D7C5 CC2FD8          17      CALL    Z,CPFILE2
0011A4 D7C8 E1              10      POP HL
0011A5 D7C9 37               4      SCF
0011A6 D7CA C8              11      RET Z       ;!!!:(ZF=1) CF=1
       D7CB                     FILESE1:
0011A7 D7CB CDE2D7          17      CALL    FNEXT
0011AA D7CE 20E6            12      JR  NZ,FILESE
       D7D0                     ZF0_CF0_AFF_RET:
0011AC D7D0 F6FF             7      OR  0FFH        ;ZF=0 CF=0
0011AE D7D2 C9              10      RET
                                
       D7D3                     NEXTSE:
0011AF D7D3 7E               7      LD  A,(HL)
0011B0 D7D4 B7               4      OR  A
0011B1 D7D5 37               4      SCF
0011B2 D7D6 C8              11      RET Z       ;!!!:ZF=1 CF=1
0011B3 D7D7 FEE5             7      CP  0E5H
0011B5 D7D9 37               4      SCF
0011B6 D7DA C8              11      RET Z       ;!!!:(ZF=1) CF=1
0011B7 D7DB CDE2D7          17      CALL    FNEXT
0011BA D7DE 20F3            12      JR  NZ,NEXTSE
0011BC D7E0 18EE            12      JR  ZF0_CF0_AFF_RET
                                
       D7E2                     FNEXT:
0011BE D7E2 E5              11      PUSH    HL
0011BF D7E3 219FE5          10      LD  HL,_FILEN
0011C2 D7E6 34              11      INC (HL)
0011C3 D7E7 E1              10      POP HL
0011C4 D7E8 112000          10      LD  DE,020H
0011C7 D7EB 19              11      ADD HL,DE
0011C8 D7EC 0D               4      DEC C
0011C9 D7ED C9              10      RET
                                
       D7EE                     CPNAME:
0011CA D7EE C5              11      PUSH    BC
0011CB D7EF D5              11      PUSH    DE
0011CC D7F0 E5              11      PUSH    HL
0011CD D7F1 CD08D8          17      CALL    CPFILE4
0011D0 D7F4 E1              10      POP HL
0011D1 D7F5 23               6      INC HL
0011D2 D7F6 23               6      INC HL
0011D3 D7F7 23               6      INC HL
0011D4 D7F8 23               6      INC HL
0011D5 D7F9 D1              10      POP DE
0011D6 D7FA C1              10      POP BC
0011D7 D7FB 2005            12      JR  NZ,CPNAME1
0011D9 D7FD 7E               7      LD  A,(HL)
0011DA D7FE 23               6      INC HL
0011DB D7FF 66               7      LD  H,(HL)
0011DC D800 6F               4      LD  L,A
0011DD D801 C9              10      RET
       D802                     CPNAME1:
0011DE D802 23               6      INC HL
0011DF D803 23               6      INC HL
0011E0 D804 10E8            13      DJNZ    CPNAME
0011E2 D806 37               4      SCF
0011E3 D807 C9              10      RET
                                
       D808                     CPFILE4:
0011E4 D808 C5              11      PUSH    BC
0011E5 D809 010004          10      LD  BC,00400H
0011E8 D80C 1804            12      JR  CPSTR1
       D80E                     CPFILE:
0011EA D80E C5              11      PUSH    BC
0011EB D80F 01000B          10      LD  BC,00B00H
       D812                     CPSTR1:
0011EE D812 1A               7      LD  A,(DE)
0011EF D813 FE3F             7      CP  '?'     ;Wild card
0011F1 D815 2812            12      JR  Z,CPSTR2
0011F3 D817 7E               7      LD  A,(HL)
0011F4 D818 CD7CD9          17      CALL    FKANC
0011F7 D81B E5              11      PUSH    HL
0011F8 D81C 67               4      LD  H,A
0011F9 D81D 1A               7      LD  A,(DE)
0011FA D81E CB01             4      RLC C
0011FC D820 CD7CD9          17      CALL    FKANC
0011FF D823 CB09             4      RRC C
001201 D825 BC               4      CP  H       ;CP (HL),(DE)
001202 D826 E1              10      POP HL
001203 D827 2004            12      JR  NZ,CPSTR3
       D829                     CPSTR2:
001205 D829 13               6      INC DE
001206 D82A 23               6      INC HL
001207 D82B 10E5            13      DJNZ    CPSTR1
       D82D                     CPSTR3:
001209 D82D C1              10      POP BC
00120A D82E C9              10      RET
                                
       D82F                     CPFILE2:
00120B D82F FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
00120E D832 F6E1             7      OR  0E1H
001210 D834 2F               4      CPL
001211 D835 A6               7      AND (HL)
001212 D836 C9              10      RET
                                
       D837                     DCPAT:
001213 D837 0E00             7      LD  C,0
001215 D839 2A7EE6          16      LD  HL,(_DTBUF)
001218 D83C 3AA0E5          13      LD  A,(_DIRF)   ;ディレクトリか判別
00121B D83F B7               4      OR  A
00121C D840 C8              11      RET Z       ;ルートディレクトリの場合はCレジスタを0にしておく(CDEがセクタ番号)
00121D D841 3A55D8          13      LD  A,(SPCPAT)
001220 D844 4F               4      LD  C,A
001221 D845 3AC4DF          13      LD  A,(_SECPS)
001224 D848 B9               4      CP  C
001225 D849 3801            12      JR  C,DC1
001227 D84B AF               4      XOR A
       D84C                     DC1:
001228 D84C F680             7      OR  080H
00122A D84E 32A0E5          13      LD  (_DIRF),A   ;bit0-6:セクタインデックス
       D851                     CLUSTX:
00122D D851 E5              11      PUSH    HL
00122E D852 EB               4      EX  DE,HL
00122F D853 AF               4      XOR A
001230 D854 0E01             7      LD  C,1     ;自己書き換え（1クラスタの論理セクタ数）
       D855                     SPCPAT  EQU $-1
       D856                     L_CLDBL:
001232 D856 CB19             8      RR  C       ;->CF
001234 D858 3804            12      JR  C,E_CLDBL
001236 D85A 29              11      ADD HL,HL       ;*2
001237 D85B 8F               4      ADC A,A
001238 D85C 18F8            12      JR  L_CLDBL
       D85E                     E_CLDBL:
00123A D85E 4F               4      LD  C,A
00123B D85F 3AC4DF          13      LD  A,(_SECPS)
00123E D862 B5               4      OR  L
00123F D863 6F               4      LD  L,A
001240 D864 110800          10      LD  DE,8    ;+8 (2D)  !ADDCL (self-modifying code)
       D865                     CLSPAT  EQU $-2
001243 D867 AF               4      XOR A
001244 D868 19              11      ADD HL,DE   ;データ格納領域の先頭論理セクタ番号
001245 D869 89               4      ADC A,C
001246 D86A 4F               4      LD  C,A
001247 D86B EB               4      EX  DE,HL
001248 D86C E1              10      POP HL
001249 D86D C9              10      RET
                                
       D86E                     ENDCL:
00124A D86E 7A               4      LD  A,D ;END CLUSTER
00124B D86F FE01             7      CP  1   ;164=356    (self-modifying code)
       D870                     CLPAT1  EQU $-1
00124D D871 C0              11      RET NZ
00124E D872 7B               4      LD  A,E
00124F D873 FE64             7      CP  064H    ;       (self-modifying code)
       D874                     CLPAT2  EQU $-1
001251 D875 C9              10      RET
                                
       D876                     CAP:
001252 D876 FE61             7      CP  'a'
001254 D878 D8              11      RET C
001255 D879 FE7B             7      CP  'z'+1
001257 D87B D0              11      RET NC
001258 D87C D620             7      SUB 020H
00125A D87E C9              10      RET
       D87F                     CAP2:
00125B D87F CD76D8          17      CALL    CAP
       D882                     CAP3:               ;
00125E D882 FE05             7      CP  5
001260 D884 2803            12      JR  Z,CAP4
001262 D886 FE21             7      CP  021H
001264 D888 C9              10      RET
       D889                     CAP4:
001265 D889 3EE5             7      LD  A,0E5H
001267 D88B C9              10      RET
                                
       D88C                     CHDIR:
001268 D88C CD73E2          17      CALL    GETDPBD
00126B D88F 381D            12      JR  C,CHDIR2
00126D D891 DD751A          19      LD  (IX+DPB_SDIR),L
001270 D894 DD741B          19      LD  (IX+DPB_SDIR+1),H
001273 D897 1815            12      JR  CHDIR2      ;POP_IX_RET
                                
       D899                     LDDIR:
001275 D899 CD73E2          17      CALL    GETDPBD
001278 D89C DD5E1A          19      LD  E,(IX+DPB_SDIR)
00127B D89F DD561B          19      LD  D,(IX+DPB_SDIR+1)
00127E D8A2 13               6      INC DE
00127F D8A3 FD730E          19      LD  (IY+14),E   ;(FCB)アクセスするディレクトリのクラスタ番号+1
001282 D8A6 FD720F          19      LD  (IY+15),D
001285 D8A9 1B               6      DEC DE
001286 D8AA AF               4      XOR A
001287 D8AB 32A0E5          13      LD  (_DIRF),A
       D8AE                     CHDIR2:
00128A D8AE DDE1            14      POP IX
00128C D8B0 C9              10      RET
                                
       D8B1                     LDDIRX:
00128D D8B1 3AA0E5          13      LD  A,(_DIRF)   ;(FCB)アクセスするディレクトリのセクタインデックス
001290 D8B4 E67F             7      AND 07FH
       D8B6                     LDDIRX1:
001292 D8B6 32C4DF          13      LD  (_SECPS),A
001295 D8B9 FD5E0E          19      LD  E,(IY+14)   ;(FCB)アクセスするディレクトリのクラスタ番号+1
001298 D8BC FD560F          19      LD  D,(IY+15)
00129B D8BF 1B               6      DEC DE
00129C D8C0 CD6ED8          17      CALL    ENDCL
00129F D8C3 D499D8          17      CALL    NC,LDDIR
       D8C6                     LDDIRS:
0012A2 D8C6 7A               4      LD  A,D
0012A3 D8C7 B3               4      OR  E
0012A4 D8C8 32A0E5          13      LD  (_DIRF),A   ;ディレクトリか判別
0012A7 D8CB C9              10      RET
                                
       D8CC                     KILL:
0012A8 D8CC CD96D9          17      CALL    CHKWILDX
0012AB D8CF 3834            12      JR  C,KILLW
0012AD D8D1 CD72D6          17      CALL    SOPENX
       D8D4                     KILLS:
0012B0 D8D4 3E1F             7      LD  A,01FH
0012B2 D8D6 D418D9          17      CALL    NC,CHKATT
0012B5 D8D9 D8              11      RET C
       D8DA                     KILLSX:
0012B6 D8DA 36E5            10      LD  (HL),0E5H   ;DIR
0012B8 D8DC CD70D9          17      CALL    WTDB
0012BB D8DF 111A00          10      LD  DE,01AH
0012BE D8E2 19              11      ADD HL,DE
0012BF D8E3 5E               7      LD  E,(HL)
0012C0 D8E4 23               6      INC HL
0012C1 D8E5 56               7      LD  D,(HL)
       D8E6                     KILLS1:
0012C2 D8E6 CD6ED8          17      CALL    ENDCL
0012C5 D8E9 D0              11      RET NC      ;CF=0
0012C6 D8EA 21FEFF          10      LD  HL,0-2
0012C9 D8ED 19              11      ADD HL,DE
0012CA D8EE D0              11      RET NC      ;DE= 0 or 1
0012CB D8EF D5              11      PUSH    DE
0012CC D8F0 CDF7E5          17      CALL    _GNCL
0012CF D8F3 ED53FEE6        20      LD  (_CLPS),DE
0012D3 D8F7 D1              10      POP DE
0012D4 D8F8 210000          10      LD  HL,0
0012D7 D8FB D4FAE5          17      CALL    NC,_SNCL
0012DA D8FE D8              11      RET C
0012DB D8FF ED5BFEE6        20      LD  DE,(_CLPS)  ;FAT
0012DF D903 18E1            12      JR  KILLS1
                                
       D905                     KILLW:
0012E1 D905 CDA1D6          17      CALL    SOPEN
       D908                     KILLW1:
0012E4 D908 380B            12      JR  C,KILLW2
0012E6 D90A CD40D7          17      CALL    SOPENE2
0012E9 D90D CDD4D8          17      CALL    KILLS
0012EC D910 CD05D7          17      CALL    NOPEN
0012EF D913 18F3            12      JR  KILLW1
       D915                     KILLW2:
0012F1 D915 C8              11      RET Z
0012F2 D916 3F               4      CCF
0012F3 D917 C9              10      RET
                                
       D918                     CHKATT:
0012F4 D918 E5              11      PUSH    HL
0012F5 D919 110B00          10      LD  DE,00BH
0012F8 D91C 19              11      ADD HL,DE
0012F9 D91D A6               7      AND (HL)
0012FA D91E E1              10      POP HL
0012FB D91F C8              11      RET Z
0012FC D920 37               4      SCF
0012FD D921 C9              10      RET
                                
       D922                     NAME:
0012FE D922 CD96D9          17      CALL    CHKWILDX
001301 D925 D8              11      RET C
001302 D926 110400          10      LD  DE,4
001305 D929 19              11      ADD HL,DE
001306 D92A 223FD9          16      LD  (NAMEP),HL
001309 D92D 23               6      INC HL
00130A D92E CD9AD9          17      CALL    CHKWILD
00130D D931 D8              11      RET C
                                
00130E D932 CD72D6          17      CALL    SOPENX
001311 D935 3E0F             7      LD  A,00FH
001313 D937 D418D9          17      CALL    NC,CHKATT
001316 D93A D8              11      RET C
                                
001317 D93B FDE5            15      PUSH    IY
001319 D93D FD210000        14      LD  IY,0        ;自己書き換え
       D93F                     NAMEP   EQU $-2
00131D D941 CD72D6          17      CALL    SOPENX
001320 D944 FDE3            23      EX  (SP),IY
001322 D946 3F               4      CCF
001323 D947 D4A1D6          17      CALL    NC,SOPEN
001326 D94A EB               4      EX  DE,HL
001327 D94B E1              10      POP HL
001328 D94C D8              11      RET C
                                
       D94D                     SETNAME:
001329 D94D 01000B          10      LD  BC,11*256
00132C D950 23               6      INC HL
00132D D951 7E               7      LD  A,(HL)
00132E D952 FEE5             7      CP  0E5H
001330 D954 2004            12      JR  NZ,SNAME1
001332 D956 3E05             7      LD  A,5
001334 D958 180E            12      JR  SNAME3
       D95A                     SNAME1:
001336 D95A 7E               7      LD  A,(HL)
001337 D95B 0C               4      INC C
001338 D95C 0D               4      DEC C
001339 D95D 2009            12      JR  NZ,SNAME3
00133B D95F CD76D8          17      CALL    CAP
00133E D962 FEA0             7      CP  0A0H
001340 D964 2002            12      JR  NZ,SNAME3
001342 D966 3E20             7      LD  A,020H
       D968                     SNAME3:
001344 D968 12               7      LD  (DE),A
001345 D969 7E               7      LD  A,(HL)
001346 D96A 23               6      INC HL
001347 D96B CD83D9          17      CALL    FKAN
00134A D96E 10EA            13      DJNZ    SNAME1
       D970                     WTDB:
00134C D970 3EFF             7      LD  A,0FFH
00134E D972 3239E5          13      LD  (SFILE),A
001351 D975 3E01             7      LD  A,1
001353 D977 32A4E5          13      LD  (_WTDBF),A
001356 D97A AF               4      XOR A
001357 D97B C9              10      RET
                                
       D97C                     FKANC:
001358 D97C CB41             8      BIT 0,C
00135A D97E CC7FD8          17      CALL    Z,CAP2
00135D D981 1801            12      JR  FKANX
       D983                     FKAN:           ;漢字チェック
00135F D983 13               6      INC DE
       D984                     FKANX:
001360 D984 CB41             8      BIT 0,C
001362 D986 CB81             8      RES 0,C
001364 D988 C0              11      RET NZ
001365 D989 FE80             7      CP  080H
001367 D98B D8              11      RET C
001368 D98C FEA0             7      CP  0A0H
00136A D98E 3803            12      JR  C,FKAN1
00136C D990 FEE0             7      CP  0E0H
00136E D992 D8              11      RET C
       D993                     FKAN1:
00136F D993 0C               4      INC C
001370 D994 A7               4      AND A
001371 D995 C9              10      RET
                                
       D996                     CHKWILDX:
001372 D996 FDE5            15      PUSH    IY
001374 D998 E1              10      POP HL
001375 D999 23               6      INC HL
       D99A                     CHKWILD:
001376 D99A 060B             7      LD  B,11
001378 D99C 3E3F             7      LD  A,'?'
       D99E                     CHKWIL1:
00137A D99E BE               7      CP  (HL)
00137B D99F 23               6      INC HL
00137C D9A0 37               4      SCF
00137D D9A1 C8              11      RET Z
00137E D9A2 10FA            13      DJNZ    CHKWIL1
001380 D9A4 AF               4      XOR A
001381 D9A5 C9              10      RET
                                
       D9A6                     SDIRENT:        ;IY=FCB HL=DIR
001382 D9A6 D5              11      PUSH    DE
001383 D9A7 E5              11      PUSH    HL
001384 D9A8 FDE5            15      PUSH    IY
001386 D9AA D1              10      POP DE
001387 D9AB EB               4      EX  DE,HL
001388 D9AC CD4DD9          17      CALL    SETNAME
                                ;               Attribute
00138B D9AF FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
00138E D9B2 12               7      LD  (DE),A
00138F D9B3 13               6      INC DE
                                ;               Reserved
001390 D9B4 AF               4      XOR A
001391 D9B5 060A             7      LD  B,10
       D9B7                     SDE1:
001393 D9B7 12               7      LD  (DE),A
001394 D9B8 13               6      INC DE
001395 D9B9 10FC            13      DJNZ    SDE1
                                                    ;(FCB)更新時刻
001397 D9BB 21E4E6          10      LD  HL,SDDATA       ;(FCB)更新年月日
00139A D9BE 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       D9C0                     SDLOOP:                 ;(FCB)ファイルのサイズ(バイト単位)
00139C D9C0 7E               7      LD  A,(HL)
00139D D9C1 23               6      INC HL
00139E D9C2 32C7D9          13      LD  (SDPAT),A
0013A1 D9C5 FD7E00          19      LD  A,(IY+0)    ;LD A,(IY+A)
       D9C7                     SDPAT   EQU $-1
0013A4 D9C8 12               7      LD  (DE),A
0013A5 D9C9 13               6      INC DE
0013A6 D9CA 10F4            13      DJNZ    SDLOOP
                                
0013A8 D9CC AF               4      XOR A
0013A9 D9CD E1              10      POP HL
0013AA D9CE D1              10      POP DE
0013AB D9CF C9              10      RET
                                
       D9D0                     WOPEN:
0013AC D9D0 FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
0013AF D9D3 E61F             7      AND 01FH
0013B1 D9D5 37               4      SCF
0013B2 D9D6 C0              11      RET NZ
0013B3 D9D7 FD361CFE        19      LD  (IY+28),0FEH    ;(FCB)オープンモード
       D9DB                     TOPEN2:
0013B7 D9DB AF               4      XOR A
       D9DC                     TOPEN:              ;Initializes the time stamp
0013B8 D9DC FD3617FF        19      LD  (IY+23),0FFH    ;(FCB)更新時刻
0013BC D9E0 C9              10      RET
                                
       D9E1                     WRDFX:
0013BD D9E1 3A55D8          13      LD  A,(SPCPAT)  ;1クラスタの論理セクタ
       D9E4                     L_WRFX:
0013C0 D9E4 1F               4      RRA         ;->CF
0013C1 D9E5 3806            12      JR  C,E_WRFX
0013C3 D9E7 CB39             8      SRL C
0013C5 D9E9 CB1C             8      RR  H       ;CH=CH/2
0013C7 D9EB 18F7            12      JR  L_WRFX
       D9ED                     E_WRFX:
0013C9 D9ED 41               4      LD  B,C
0013CA D9EE 4C               4      LD  C,H
0013CB D9EF 03               6      INC BC
0013CC D9F0 3E37             7      LD  A,037H      ;SCF
0013CE D9F2 324DDE          13      LD  (DRDN1),A
                                
       D9F5                     WRDF:               ;BCクラスタ分FATを確保する
0013D1 D9F5 110200          10      LD  DE,2
0013D4 D9F8 AF               4      XOR A
0013D5 D9F9 32C4DF          13      LD  (_SECPS),A
       D9FC                     WRDF1:
0013D8 D9FC C5              11      PUSH    BC
0013D9 D9FD D5              11      PUSH    DE
0013DA D9FE CDF7E5          17      CALL    _GNCL
0013DD DA01 381C            12      JR  C,WRDF3
0013DF DA03 7A               4      LD  A,D     ;空いているかチェック
0013E0 DA04 B3               4      OR  E
0013E1 DA05 202A            12      JR  NZ,WRDF4
0013E3 DA07 E1              10      POP HL      ;HL=空いているクラスタ
0013E4 DA08 E5              11      PUSH    HL
0013E5 DA09 ED5BFEE6        20      LD  DE,(_CLPS)  ;DE=元の(_CLPS)
0013E9 DA0D 22FEE6          16      LD  (_CLPS),HL
0013EC DA10 7A               4      LD  A,D     ;元の(_CLPS)が 0 か?
0013ED DA11 B3               4      OR  E
0013EE DA12 2008            12      JR  NZ,WRDF2
0013F0 DA14 FD751A          19      LD  (IY+26),L   ;(FCB)ファイルの先頭クラスタ
0013F3 DA17 FD741B          19      LD  (IY+27),H   ;元が空の場合はFCBにクラスタをセットする
0013F6 DA1A 1803            12      JR  WRDF3
       DA1C                     WRDF2:
0013F8 DA1C CDFAE5          17      CALL    _SNCL
       DA1F                     WRDF3:
0013FB DA1F D1              10      POP DE
0013FC DA20 C1              10      POP BC
0013FD DA21 D8              11      RET C
0013FE DA22 0B               6      DEC BC
0013FF DA23 78               4      LD  A,B
001400 DA24 B1               4      OR  C
001401 DA25 200C            12      JR  NZ,WRDF5    ;ここでループカウンタチェック
001403 DA27 ED5BFEE6        20      LD  DE,(_CLPS)
001407 DA2B 21FFFF          10      LD  HL,0FFFFH   ;FATエントリ終了(EOCマーク)
00140A DA2E C3FAE5          10      JP  _SNCL
                                
       DA31                     WRDF4:              ;DEクラスタが空じゃないので次に移動する
00140D DA31 D1              10      POP DE
00140E DA32 C1              10      POP BC
       DA33                     WRDF5:
00140F DA33 13               6      INC DE
001410 DA34 CD6ED8          17      CALL    ENDCL
001413 DA37 38C3            12      JR  C,WRDF1
001415 DA39 37               4      SCF
001416 DA3A C9              10      RET
                                
       DA3B                     RWXR:
001417 DA3B 3A36DD          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       DA3E                     L_RWX:
00141A DA3E 1F               4      RRA     ;->CF
00141B DA3F 3808            12      JR  C,E_RWX
00141D DA41 CB38             8      SRL B   ;BCH=BCH/2
00141F DA43 CB19             8      RR  C   ;
001421 DA45 CB1C             8      RR  H   ;
001423 DA47 18F5            12      JR  L_RWX
       DA49                     E_RWX:
001425 DA49 FD5E1A          19      LD  E,(IY+26)   ;(FCB)ファイルの先頭クラスタ
001428 DA4C FD561B          19      LD  D,(IY+27)
00142B DA4F AF               4      XOR A
00142C DA50 32C4DF          13      LD  (_SECPS),A
       DA53                     RWX1:
00142F DA53 ED53FEE6        20      LD  (_CLPS),DE
001433 DA57 7A               4      LD  A,D
001434 DA58 B3               4      OR  E
001435 DA59 2813            12      JR  Z,SCF_RET   ;RET DE==0 => CF=1
                                
001437 DA5B 78               4      LD  A,B
001438 DA5C B1               4      OR  C
001439 DA5D B4               4      OR  H
00143A DA5E C8              11      RET Z       ;RET BCH==0 => CF=0
                                
00143B DA5F CDCCDF          17      CALL    GNCLX
00143E DA62 D8              11      RET C
00143F DA63 7C               4      LD  A,H     ;
001440 DA64 25               4      DEC H       ;
001441 DA65 B7               4      OR  A       ;DEC BCH
001442 DA66 2001            12      JR  NZ,RWX2     ;
001444 DA68 0B               6      DEC BC      ;
       DA69                     RWX2:
001445 DA69 CD6ED8          17      CALL    ENDCL
001448 DA6C 38E5            12      JR  C,RWX1
       DA6E                     SCF_RET:
00144A DA6E 37               4      SCF
00144B DA6F C9              10      RET
                                
       DA70                     DSKF:
00144C DA70 110000          10      LD  DE,0
       DA71                     MAXCLP  EQU $-2
00144F DA73 2AACE5          16      LD  HL,(_FAKEFREE)
001452 DA76 7C               4      LD  A,H
001453 DA77 B5               4      OR  L
001454 DA78 2803            12      JR  Z,DSKF1
001456 DA7A 110100          10      LD  DE,1
       DA7D                     DSKF1:
001459 DA7D D5              11      PUSH    DE
00145A DA7E CDF7E5          17      CALL    _GNCL
00145D DA81 380C            12      JR  C,POPSCF
00145F DA83 7A               4      LD  A,D
001460 DA84 B3               4      OR  E
001461 DA85 2001            12      JR  NZ,DSKF2
001463 DA87 23               6      INC HL
       DA88                     DSKF2:
001464 DA88 D1              10      POP DE
001465 DA89 1B               6      DEC DE
001466 DA8A 7A               4      LD  A,D
001467 DA8B B3               4      OR  E
001468 DA8C 20EF            12      JR  NZ,DSKF1
00146A DA8E C9              10      RET
                                
       DA8F                     POPSCF:
00146B DA8F F1              10      POP AF
00146C DA90 37               4      SCF
00146D DA91 C9              10      RET
                                
       DA92                     SETTMS:
00146E DA92 FD7E17          19      LD  A,(IY+23)   ;(FCB)ファイルを最後に変更した時刻
001471 DA95 3C               4      INC A
001472 DA96 C0              11      RET NZ      ;ファイルが更新されていない
       DA97                     SETTMSX:            ;FCBに日付時刻をセットする
001473 DA97 CD6FD2          17      CALL    _SYS2C      ;(BDOS)時刻の獲得
                                                ;H←時  L←分  D←秒
001476 DA9A CB25             8      SLA L       ;   *2
001478 DA9C CB25             8      SLA L       ;   *4
00147A DA9E 29              11      ADD HL,HL       ;*2 *8
00147B DA9F 29              11      ADD HL,HL       ;*4 *16
00147C DAA0 29              11      ADD HL,HL       ;*8 *32
00147D DAA1 7A               4      LD  A,D
00147E DAA2 0F               4      RRCA            ;bit.0->7->->->0->C
00147F DAA3 E61F             7      AND 01FH
001481 DAA5 B5               4      OR  L
001482 DAA6 FD7716          19      LD  (IY+22),A   ;(FCB)ファイルを最後に変更した時刻
001485 DAA9 FD7417          19      LD  (IY+23),H
                                
001488 DAAC CD69D2          17      CALL    _SYS2A      ;(BDOS)日付の獲得
                                                ;HL←年  D←月  E←日
00148B DAAF 0144F8          10      LD  BC,0-1980
00148E DAB2 09              11      ADD HL,BC
00148F DAB3 65               4      LD  H,L
                                
001490 DAB4 7A               4      LD  A,D
001491 DAB5 87               4      ADD A,A     ;*2
001492 DAB6 87               4      ADD A,A     ;*4
001493 DAB7 87               4      ADD A,A     ;*8
001494 DAB8 87               4      ADD A,A     ;*16
001495 DAB9 6F               4      LD  L,A
001496 DABA 29              11      ADD HL,HL       ;*32
001497 DABB 7D               4      LD  A,L
001498 DABC B3               4      OR  E
001499 DABD FD7714          19      LD  (IY+20),A   ;(FCB)ファイルを最後に変更した日付
00149C DAC0 FD7415          19      LD  (IY+21),H
00149F DAC3 C9              10      RET
                                
       DAC4                     PUSHRR:
0014A0 DAC4 3238DB          13      LD  (SETSEQ_SWC_RND),A
0014A3 DAC7 224ADB          16      LD  (SETSEQ_SWC_SEQ_RR),HL
0014A6 DACA CDEADA          17      CALL    GET_RR_AHL
0014A9 DACD 220FE5          16      LD  (RR_BUF_HL),HL
0014AC DAD0 3211E5          13      LD  (RR_BUF_A),A
0014AF DAD3 C9              10      RET
                                
       DAD4                     GET_CPM_R_SIZE:     ;バイト単位からCP/Mのレコード単位を求める（1レコード=128バイト）
0014B0 DAD4 87               4      ADD A,A     ;in BHLA => out AHL
0014B1 DAD5 ED6A            15      ADC HL,HL
0014B3 DAD7 CB18             8      RR  B
0014B5 DAD9 B7               4      OR  A
0014B6 DADA 78               4      LD  A,B     ;ここでフラグは変化しない
0014B7 DADB C8              11      RET Z
0014B8 DADC 2C               4      INC L       ;INC AHL
0014B9 DADD C0              11      RET NZ      ;
0014BA DADE 24               4      INC H       ;
0014BB DADF C0              11      RET NZ      ;
0014BC DAE0 3C               4      INC A       ;
0014BD DAE1 C9              10      RET
                                
       DAE2                     INIT_RND:
0014BE DAE2 3ECD             7      LD  A,0CDH      ;CALL ????
0014C0 DAE4 210DDB          10      LD  HL,POPRR
0014C3 DAE7 CDC4DA          17      CALL    PUSHRR
       DAEA                     GET_RR_AHL:
0014C6 DAEA FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
0014C9 DAED FD6622          19      LD  H,(IY+34)   ;
0014CC DAF0 FD7E23          19      LD  A,(IY+35)   ;
0014CF DAF3 C9              10      RET
       DAF4                     INIT_SEQ:
0014D0 DAF4 3E01             7      LD  A,1     ;LD BC,????
0014D2 DAF6 210ADB          10      LD  HL,SETSEQ
0014D5 DAF9 CDC4DA          17      CALL    PUSHRR
       DAFC                     GETSEQ:
0014D8 DAFC FD6E20          19      LD  L,(IY+32)   ;(FCB)カレントレコード
0014DB DAFF FD660C          19      LD  H,(IY+12)   ;(FCB)カレントブロック
0014DE DB02 AF               4      XOR A
                                
0014DF DB03 CB25             8      SLA L   ;L=L*2
                                
0014E1 DB05 CB3C             8      SRL H   ;HL=HL/2
0014E3 DB07 CB1D             8      RR  L   ;
0014E5 DB09 C9              10      RET
                                
       DB0A                     SETSEQ:
0014E6 DB0A CD16DE          17      CALL    SETSEQ1
       DB0D                     POPRR:
0014E9 DB0D F5              11      PUSH    AF
0014EA DB0E E5              11      PUSH    HL
0014EB DB0F 2A0FE5          16      LD  HL,(RR_BUF_HL)
0014EE DB12 3A11E5          13      LD  A,(RR_BUF_A)
0014F1 DB15 CD0CDE          17      CALL    SET_RR_AHL
0014F4 DB18 E1              10      POP HL
0014F5 DB19 F1              10      POP AF
0014F6 DB1A C9              10      RET
                                
       DB1B                     RB_WRITE:
0014F7 DB1B C5              11      PUSH    BC
0014F8 DB1C ED4B4CE6        20      LD  BC,(STABLE+2*026H)  ;(BDOS)ランダムブロック書き込み
0014FC DB20 1805            12      JR  RBRW
       DB22                     RB_READ:
0014FE DB22 C5              11      PUSH    BC
0014FF DB23 ED4B4EE6        20      LD  BC,(STABLE+2*027H)  ;(BDOS)ランダムブロック読み込み
       DB27                     RBRW:
001503 DB27 1F               4      RRA     ;AHL = AHL*128
001504 DB28 7C               4      LD  A,H ;AHL = AHL0/2
001505 DB29 1F               4      RRA     ;A
001506 DB2A 65               4      LD  H,L ;
001507 DB2B CB1C             8      RR  H   ;H
001509 DB2D 2E00             7      LD  L,0 ;
00150B DB2F CB1D             8      RR  L   ;L
00150D DB31 CD0CDE          17      CALL    SET_RR_AHL
001510 DB34 218000          10      LD  HL,128
001513 DB37 C5              11      PUSH    BC
       DB38                     SETSEQ_SWC_RND:
001514 DB38 CD16DE          17      CALL    SETSEQ1
001517 DB3B C1              10      POP BC
001518 DB3C FDCB20FE        23      SET 7,(IY+32)   ;(FCB)カレントレコード
00151C DB40 FDE5            15      PUSH    IY
00151E DB42 D1              10      POP DE
00151F DB43 D5              11      PUSH    DE
001520 DB44 CD52DB          17      CALL    JP_BC
001523 DB47 FDE1            14      POP IY
001525 DB49 CD0ADB          17      CALL    SETSEQ
       DB4A                     SETSEQ_SWC_SEQ_RR   EQU $-2
001528 DB4C FDCB20BE        23      RES 7,(IY+32)   ;(FCB)カレントレコード
                                
00152C DB50 C1              10      POP BC
00152D DB51 C9              10      RET
       DB52                     JP_BC:
00152E DB52 C5              11      PUSH    BC
00152F DB53 C9              10      RET
                                
       D6FF                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       D6FF                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       D6FF                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       D6FF                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       D6FF                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:LDFILE.ASM:SHIFT_JIS]
                                    INCLUDE "LDFILE2.ASM"
                                
                                ;   LSX-Dodgers FILE2
                                
                                                ;Write random block
       DB54                     _SYS26:     ;(BDOS)ランダムブロック書き込み
001530 DB54 AF               4      XOR A
001531 DB55 324DDE          13      LD  (DRDN1),A   ;NOP
001534 DB58 2279DD          16      LD  (RBSIZE),HL ;HL←書き込むレコード数
001537 DB5B 225DE5          16      LD  (LEFTX),HL
00153A DB5E CD48D6          17      CALL    SETDRV
                                
00153D DB61 CDD1DC          17      CALL    RBX0
001540 DB64 DAF1DB          10      JP  C,RBWERR
001543 DB67 CDD0D9          17      CALL    WOPEN
001546 DB6A DAF1DB          10      JP  C,RBWERR
001549 DB6D 7C               4      LD  A,H
00154A DB6E B5               4      OR  L
00154B DB6F CAEADB          10      JP  Z,RBW1
                                
00154E DB72 2B               6      DEC HL
                                
00154F DB73 CD8FDD          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
001552 DB76 19              11      ADD HL,DE       ;BCHL=HL+BCDE
001553 DB77 3001            12      JR  NC,S26X1    ;
001555 DB79 03               6      INC BC      ;
       DB7A                     S26X1:
001556 DB7A CD3BDA          17      CALL    RWXR
001559 DB7D DCE1D9          17      CALL    C,WRDFX
00155C DB80 DAF1DB          10      JP  C,RBWERR
                                
00155F DB83 CD00DD          17      CALL    RBX2
001562 DB86 281A            12      JR  Z,RBWB      ;NZ=セクタ以下の端数がある
001564 DB88 CD1FDD          17      CALL    RBXA
001567 DB8B 3864            12      JR  C,RBWERR
001569 DB8D EB               4      EX  DE,HL
00156A DB8E C5              11      PUSH    BC
00156B DB8F EDB0                    LDIR
00156D DB91 225FE5          16      LD  (DTAX),HL
                                
001570 DB94 CD70D9          17      CALL    WTDB        ;バッファデータは更新された
                                
001573 DB97 2A5DE5          16      LD  HL,(LEFTX)
001576 DB9A D1              10      POP DE
001577 DB9B ED52            15      SBC HL,DE
001579 DB9D 225DE5          16      LD  (LEFTX),HL
00157C DBA0 2831            12      JR  Z,RBWEND
                                
       DBA2                     RBWB:
00157E DBA2 CD54DD          17      CALL    RBXB
001581 DBA5 2814            12      JR  Z,RBWC
       DBA7                     RBWB1:
001583 DBA7 C5              11      PUSH    BC
001584 DBA8 D5              11      PUSH    DE
001585 DBA9 CD51D8          17      CALL    CLUSTX
001588 DBAC CDA3DD          17      CALL    DWTC
00158B DBAF D1              10      POP DE
00158C DBB0 C1              10      POP BC
00158D DBB1 D4CCDF          17      CALL    NC,GNCLX
001590 DBB4 383B            12      JR  C,RBWERR
001592 DBB6 10EF            13      DJNZ    RBWB1
001594 DBB8 CDF3DD          17      CALL    DRW_FLUSH
       DBBB                     RBWC:
001597 DBBB CD6CDD          17      CALL    RBXC
00159A DBBE 2813            12      JR  Z,RBWEND
00159C DBC0 C5              11      PUSH    BC
00159D DBC1 CD51D8          17      CALL    CLUSTX
0015A0 DBC4 CD4CDE          17      CALL    DRDN
0015A3 DBC7 C1              10      POP BC
0015A4 DBC8 3827            12      JR  C,RBWERR
0015A6 DBCA ED5B7EE6        20      LD  DE,(_DTBUF)
0015AA DBCE EDB0                    LDIR
0015AC DBD0 CD70D9          17      CALL    WTDB        ;バッファデータは更新された
       DBD3                     RBWEND:
0015AF DBD3 CD78DD          17      CALL    RBXEND
                                
0015B2 DBD6 CDE0DC          17      CALL    RBX1
0015B5 DBD9 300F            12      JR  NC,RBW1     ;ランダムレコードの方が大きい場合はサイズを合わせる
0015B7 DBDB CD8FDD          17      CALL    GET_RR_BCDE ;BCDE=Random record
0015BA DBDE FD7310          19      LD  (IY+16),E   ;ファイルのサイズ(バイト単位)
0015BD DBE1 FD7211          19      LD  (IY+17),D   ;
0015C0 DBE4 FD7112          19      LD  (IY+18),C   ;
0015C3 DBE7 FD7013          19      LD  (IY+19),B   ;
       DBEA                     RBW1:
0015C6 DBEA FDE1            14      POP IY
0015C8 DBEC C1              10      POP BC
0015C9 DBED D1              10      POP DE
0015CA DBEE E1              10      POP HL
       DBEF                     DD_NUL:
0015CB DBEF AF               4      XOR A
       DBF0                     DRDF0:
       DBF0                     DWTF0:
0015CC DBF0 C9              10      RET
                                
       DBF1                     RBWERR:
0015CD DBF1 FDE5            15      PUSH    IY
0015CF DBF3 D1              10      POP DE
0015D0 DBF4 2A20E6          16      LD  HL,(STABLE+2*010H)
0015D3 DBF7 CD0F00          17      CALL    JP_HL
       DBFA                     RBRERR1:
0015D6 DBFA 3E01             7      LD  A,001H
       DBFC                     RBRERR2:
0015D8 DBFC FDE1            14      POP IY
0015DA DBFE C1              10      POP BC
0015DB DBFF D1              10      POP DE
0015DC DC00 E1              10      POP HL
0015DD DC01 37               4      SCF
0015DE DC02 210000          10      LD  HL,0
0015E1 DC05 C9              10      RET
                                
       DC06                     RBRERR:
0015E2 DC06 3EFF             7      LD  A,0FFH
0015E4 DC08 18F2            12      JR  RBRERR2
                                
       DC0A                     RBRFL:
0015E6 DC0A 3E00             7  RBRFLP: LD  A,000H
0015E8 DC0C FE0D             7      CP  00DH
0015EA DC0E 2005            12      JR  NZ,RBRFL1
0015EC DC10 D5              11      PUSH    DE
0015ED DC11 1E0A             7      LD  E,00AH
0015EF DC13 1805            12      JR  RBRFL2
       DC15                     RBRFL1:
0015F1 DC15 D5              11      PUSH    DE
0015F2 DC16 CD09E5          17      CALL    _SYS07
0015F5 DC19 5F               4      LD  E,A
       DC1A                     RBRFL2:
0015F6 DC1A CDCDE5          17      CALL    _PRINT
0015F9 DC1D 7B               4      LD  A,E
0015FA DC1E D1              10      POP DE
0015FB DC1F 320BDC          13      LD  (RBRFLP+1),A
0015FE DC22 C9              10      RET
       DC23                     DDX:
0015FF DC23 FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
001602 DC26 CD76D8          17      CALL    CAP
001605 DC29 FE41             7      CP  'A'
001607 DC2B C9              10      RET
                                
                                                ;Read random block
       DC2C                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001608 DC2C 225DE5          16      LD  (LEFTX),HL
00160B DC2F CD48D6          17      CALL    SETDRV
                                
00160E DC32 FDCB0D66        20      BIT 4,(IY+13)   ;(FCB)属性(アトリビュート)
001612 DC36 C2BFDC          10      JP  NZ,RBRDIR   ;ディレクトリ
001615 DC39 CDD1DC          17      CALL    RBX0
001618 DC3C DA06DC          10      JP  C,RBRERR
00161B DC3F CDE0DC          17      CALL    RBX1
00161E DC42 D4F8DC          17      CALL    NC,RBX1R
001621 DC45 DAFADB          10      JP  C,RBRERR1
001624 DC48 EB               4      EX  DE,HL
001625 DC49 ED52            15      SBC HL,DE       ;CP 00HL,BCDE
001627 DC4B 19              11      ADD HL,DE
001628 DC4C 79               4      LD  A,C
001629 DC4D DE00             7      SBC A,0
00162B DC4F 78               4      LD  A,B
00162C DC50 DE00             7      SBC A,0
00162E DC52 3801            12      JR  C,RBR1
001630 DC54 EB               4      EX  DE,HL
       DC55                     RBR1:
001631 DC55 9F               4      SBC A,A
001632 DC56 E601             7      AND 1
001634 DC58 32BDDC          13      LD  (RBRA_SWC),A
                                
001637 DC5B 7C               4      LD  A,H
001638 DC5C B5               4      OR  L
001639 DC5D 2857            12      JR  Z,RBREND0
                                
00163B DC5F 2279DD          16      LD  (RBSIZE),HL ;HL←読み込むレコード数
00163E DC62 225DE5          16      LD  (LEFTX),HL
                                
001641 DC65 CD00DD          17      CALL    RBX2
001644 DC68 2819            12      JR  Z,RBRB
001646 DC6A CD1FDD          17      CALL    RBXA
001649 DC6D DA06DC          10      JP  C,RBRERR
00164C DC70 C5              11      PUSH    BC
00164D DC71 EDB0                    LDIR
00164F DC73 ED535FE5        20      LD  (DTAX),DE
001653 DC77 2A5DE5          16      LD  HL,(LEFTX)
001656 DC7A D1              10      POP DE
001657 DC7B A7               4      AND A
001658 DC7C ED52            15      SBC HL,DE
00165A DC7E 225DE5          16      LD  (LEFTX),HL
00165D DC81 2830            12      JR  Z,RBREND
                                
       DC83                     RBRB:
00165F DC83 CD54DD          17      CALL    RBXB
001662 DC86 2815            12      JR  Z,RBRC
       DC88                     RBRB1:
001664 DC88 C5              11      PUSH    BC
001665 DC89 D5              11      PUSH    DE
001666 DC8A CD51D8          17      CALL    CLUSTX
001669 DC8D CDA9DD          17      CALL    DRDC
00166C DC90 D1              10      POP DE
00166D DC91 C1              10      POP BC
00166E DC92 D4CCDF          17      CALL    NC,GNCLX
001671 DC95 DA06DC          10      JP  C,RBRERR
001674 DC98 10EE            13      DJNZ    RBRB1
001676 DC9A CDF3DD          17      CALL    DRW_FLUSH
       DC9D                     RBRC:
001679 DC9D CD6CDD          17      CALL    RBXC
00167C DCA0 2811            12      JR  Z,RBREND
00167E DCA2 C5              11      PUSH    BC
00167F DCA3 CD51D8          17      CALL    CLUSTX
001682 DCA6 CD30DE          17      CALL    DRDX
001685 DCA9 C1              10      POP BC
001686 DCAA DA06DC          10      JP  C,RBRERR
001689 DCAD EB               4      EX  DE,HL
00168A DCAE 2A7EE6          16      LD  HL,(_DTBUF)
00168D DCB1 EDB0                    LDIR
       DCB3                     RBREND:
00168F DCB3 CD78DD          17      CALL    RBXEND
       DCB6                     RBREND0:
001692 DCB6 FDE1            14      POP IY
001694 DCB8 C1              10      POP BC
001695 DCB9 D1              10      POP DE
001696 DCBA F1              10      POP AF  ;(HL)
001697 DCBB AF               4      XOR A
001698 DCBC 3E00             7      LD  A,000H
       DCBD                     RBRA_SWC    EQU $-1
00169A DCBE C9              10      RET
                                
       DCBF                     RBRDIR:
00169B DCBF FD6E1A          19      LD  L,(IY+26)   ;(FCB)ファイルの先頭クラスタ
00169E DCC2 FD661B          19      LD  H,(IY+27)
0016A1 DCC5 CD8CD8          17      CALL    CHDIR
0016A4 DCC8 AF               4      XOR A
0016A5 DCC9 67               4      LD  H,A
0016A6 DCCA 6F               4      LD  L,A
0016A7 DCCB 3C               4      INC A
0016A8 DCCC 32BDDC          13      LD  (RBRA_SWC),A
0016AB DCCF 18E5            12      JR  RBREND0
                                
       DCD1                     RBX0:
0016AD DCD1 2A8AE5          16      LD  HL,(_DTA)
0016B0 DCD4 225FE5          16      LD  (DTAX),HL
0016B3 DCD7 2A5DE5          16      LD  HL,(LEFTX)
0016B6 DCDA FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
0016B9 DCDD D6FD             7      SUB 0FDH
0016BB DCDF C9              10      RET
                                
       DCE0                     RBX1:               ;ファイルサイズとランダムレコードを比べる
0016BC DCE0 E5              11      PUSH    HL      ;Record byte
                                                ;AHL=File size
0016BD DCE1 FD6E10          19      LD  L,(IY+16)   ;ファイルのサイズ(バイト単位)
0016C0 DCE4 FD6611          19      LD  H,(IY+17)   ;
0016C3 DCE7 FD7E12          19      LD  A,(IY+18)   ;
                                
0016C6 DCEA CD8FDD          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
0016C9 DCED A7               4      AND A
0016CA DCEE ED52            15      SBC HL,DE
0016CC DCF0 99               4      SBC A,C
0016CD DCF1 4F               4      LD  C,A
0016CE DCF2 FD7E13          19      LD  A,(IY+19)   ;ファイルのサイズ
0016D1 DCF5 98               4      SBC A,B
0016D2 DCF6 D1              10      POP DE
0016D3 DCF7 C9              10      RET
       DCF8                     RBX1R:
0016D4 DCF8 47               4      LD  B,A
0016D5 DCF9 B1               4      OR  C
0016D6 DCFA EB               4      EX  DE,HL   ;BCDE=File byte HL=Record byte
0016D7 DCFB B2               4      OR  D
0016D8 DCFC B3               4      OR  E
0016D9 DCFD C0              11      RET NZ
0016DA DCFE 37               4      SCF
0016DB DCFF C9              10      RET
                                
       DD00                     RBX2:               ;Cluster settings
0016DC DD00 FD6622          19      LD  H,(IY+34)   ;(+33)(FCB)ランダムレコード
0016DF DD03 FD4E23          19      LD  C,(IY+35)
0016E2 DD06 0600             7      LD  B,0
0016E4 DD08 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
0016E8 DD0C 2003            12      JR  NZ,RBX3
0016EA DD0E FD4624          19      LD  B,(IY+36)
       DD11                     RBX3:
0016ED DD11 CD3BDA          17      CALL    RWXR
0016F0 DD14 3A36DD          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
0016F3 DD17 3D               4      DEC A
0016F4 DD18 FDA622          19      AND (IY+34)
0016F7 DD1B FDB621          19      OR  (IY+33)
0016FA DD1E C9              10      RET
                                
       DD1F                     RBXA:
0016FB DD1F C5              11      PUSH    BC
0016FC DD20 D5              11      PUSH    DE
0016FD DD21 CD51D8          17      CALL    CLUSTX
001700 DD24 CD30DE          17      CALL    DRDX
001703 DD27 D1              10      POP DE
001704 DD28 C1              10      POP BC
001705 DD29 D4CCDF          17      CALL    NC,GNCLX
001708 DD2C D8              11      RET C
001709 DD2D ED53FEE6        20      LD  (_CLPS),DE
                                
00170D DD31 FD4E21          19      LD  C,(IY+33)   ;(FCB)ランダムレコード
001710 DD34 210004          10  SECSZ:  LD  HL,0400H    ;自己書き換え 1024=0400H / 512=0200H ここに1セクタのサイズが格納される
001713 DD37 7C               4      LD  A,H
001714 DD38 3D               4      DEC A       ;1024=3 / 512=1
001715 DD39 FDA622          19      AND (IY+34)     ;(FCB)ランダムレコード
001718 DD3C 47               4      LD  B,A     ;BCに1セクタ以下の端数が入る
001719 DD3D ED42            15      SBC HL,BC       ;残りを計算
                                
00171B DD3F ED5B5DE5        20      LD  DE,(LEFTX)
00171F DD43 ED52            15      SBC HL,DE       ;CP HL,DE
001721 DD45 19              11      ADD HL,DE       ;
001722 DD46 3801            12      JR  C,RBXA1     ;DEとHLを比較して大きい方をHLに
001724 DD48 EB               4      EX  DE,HL
       DD49                     RBXA1:
001725 DD49 E5              11      PUSH    HL
001726 DD4A 2A7EE6          16      LD  HL,(_DTBUF)
001729 DD4D 09              11      ADD HL,BC
00172A DD4E ED5B5FE5        20      LD  DE,(DTAX)
00172E DD52 C1              10      POP BC
00172F DD53 C9              10      RET
                                
       DD54                     RBXB:
001730 DD54 2A5FE5          16      LD  HL,(DTAX)
001733 DD57 ED5BFEE6        20      LD  DE,(_CLPS)
001737 DD5B 3A5EE5          13      LD  A,(LEFTX+1)
00173A DD5E 47               4      LD  B,A
00173B DD5F 3A36DD          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       DD62                     RBXB1:
00173E DD62 1F               4      RRA     ;->CF
00173F DD63 3804            12      JR  C,RBXB2
001741 DD65 CB38             8      SRL B   ;B=B/2
001743 DD67 18F9            12      JR  RBXB1
       DD69                     RBXB2:
001745 DD69 78               4      LD  A,B
001746 DD6A B7               4      OR  A
001747 DD6B C9              10      RET
                                
       DD6C                     RBXC:
001748 DD6C ED4B5DE5        20      LD  BC,(LEFTX)
00174C DD70 3A36DD          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
00174F DD73 3D               4      DEC A
001750 DD74 A0               4      AND B
001751 DD75 47               4      LD  B,A     ;1セクタ以下の端数がない場合はZ
001752 DD76 B1               4      OR  C
001753 DD77 C9              10      RET
                                
       DD78                     RBXEND:             ;レコード数だけランダムレコードを進める
001754 DD78 110000          10      LD  DE,0        ;進めるレコード数(RBSIZE)
       DD79                     RBSIZE  EQU $-2
001757 DD7B CDEADA          17      CALL    GET_RR_AHL
00175A DD7E 19              11      ADD HL,DE
00175B DD7F CE00             7      ADC A,0
00175D DD81 CD0CDE          17      CALL    SET_RR_AHL
001760 DD84 EB               4      EX  DE,HL       ;HL=進めるレコード数
001761 DD85 D0              11      RET NC
001762 DD86 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
001766 DD8A C0              11      RET NZ
001767 DD8B FD3424          23      INC (IY+36)
00176A DD8E C9              10      RET
                                
       DD8F                     GET_RR_BCDE:            ;BCDE=Random record
00176B DD8F FD5E21          19      LD  E,(IY+33)   ;(FCB)ランダムレコード
00176E DD92 FD5622          19      LD  D,(IY+34)
001771 DD95 FD4E23          19      LD  C,(IY+35)
001774 DD98 0600             7      LD  B,0     ;CP/M互換のアクセスの場合はFCBは36バイト
001776 DD9A FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
00177A DD9E C0              11      RET NZ
00177B DD9F FD4624          19      LD  B,(IY+36)
00177E DDA2 C9              10      RET
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめる
                                
       DDA3                     DWTC:
00177F DDA3 E5              11      PUSH    HL
001780 DDA4 2162E1          10      LD  HL,DWT24B
001783 DDA7 1804            12      JR  DWTC1
       DDA9                     DRDC:
001785 DDA9 E5              11      PUSH    HL
001786 DDAA 2152E1          10      LD  HL,DRD24B
       DDAD                     DWTC1:
001789 DDAD 2207DE          16      LD  (DRWF_MODE),HL
00178C DDB0 E1              10      POP HL
00178D DDB1 3AF7DD          13      LD  A,(DRWF_B)
001790 DDB4 B7               4      OR  A
001791 DDB5 200F            12      JR  NZ,DRDC1
       DDB7                     SAVE_DRWC:
001793 DDB7 0601             7      LD  B,1
001795 DDB9 ED43F6DD        20      LD  (DRWF_C),BC
001799 DDBD ED53FDDD        20      LD  (DRWF_E),DE
00179D DDC1 2200DE          16      LD  (DRWF_HL),HL
0017A0 DDC4 1820            12      JR  INC_HL_DRWC
       DDC6                     DRDC1:
0017A2 DDC6 E5              11      PUSH    HL
0017A3 DDC7 21FDDD          10      LD  HL,DRWF_E
0017A6 DDCA 86               7      ADD A,(HL)
0017A7 DDCB F5              11      PUSH    AF
0017A8 DDCC BB               4      CP  E
0017A9 DDCD 201D            12      JR  NZ,DRDC2
0017AB DDCF F1              10      POP AF
0017AC DDD0 23               6      INC HL
0017AD DDD1 7E               7      LD  A,(HL)
0017AE DDD2 CE00             7      ADC A,0
0017B0 DDD4 F5              11      PUSH    AF
0017B1 DDD5 BA               4      CP  D
0017B2 DDD6 2014            12      JR  NZ,DRDC2
0017B4 DDD8 F1              10      POP AF
0017B5 DDD9 3AF6DD          13      LD  A,(DRWF_C)
0017B8 DDDC CE00             7      ADC A,0
0017BA DDDE B9               4      CP  C
0017BB DDDF 200C            12      JR  NZ,DRDC3
0017BD DDE1 21F7DD          10      LD  HL,DRWF_B
0017C0 DDE4 34              11      INC (HL)
0017C1 DDE5 E1              10      POP HL
       DDE6                     INC_HL_DRWC:
0017C2 DDE6 3A36DD          13      LD  A,(SECSZ+2)     ;1セクタのサイズの上位1バイト
0017C5 DDE9 84               4      ADD A,H
0017C6 DDEA 67               4      LD  H,A
0017C7 DDEB C9              10      RET
       DDEC                     DRDC2:
0017C8 DDEC F1              10      POP AF
       DDED                     DRDC3:
0017C9 DDED CDF3DD          17      CALL    DRW_FLUSH
0017CC DDF0 E1              10      POP HL
0017CD DDF1 18C4            12      JR  SAVE_DRWC
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめたものをフラッシュする
       DDF3                     DRW_FLUSH:
0017CF DDF3 C5              11      PUSH    BC
0017D0 DDF4 D5              11      PUSH    DE
0017D1 DDF5 010000          10      LD  BC,0
       DDF6                     DRWF_C  EQU $-2
       DDF7                     DRWF_B  EQU $-1
0017D4 DDF8 78               4      LD  A,B
0017D5 DDF9 B7               4      OR  A
0017D6 DDFA 280D            12      JR  Z,DRDF1
0017D8 DDFC 110000          10      LD  DE,0
       DDFD                     DRWF_E  EQU $-2
       DDFE                     DRWF_D  EQU $-1
0017DB DDFF 210000          10      LD  HL,0
       DE00                     DRWF_HL EQU $-2
0017DE DE02 AF               4      XOR A
0017DF DE03 32F7DD          13      LD  (DRWF_B),A
0017E2 DE06 CD52E1          17      CALL    DRD24B
       DE07                     DRWF_MODE   EQU $-2
       DE09                     DRDF1:
0017E5 DE09 D1              10      POP DE
0017E6 DE0A C1              10      POP BC
0017E7 DE0B C9              10      RET
                                
       DE0C                     SET_RR_AHL:
0017E8 DE0C FD7521          19      LD  (IY+33),L   ;(FCB)Random record
0017EB DE0F FD7422          19      LD  (IY+34),H
0017EE DE12 FD7723          19      LD  (IY+35),A
0017F1 DE15 C9              10      RET
                                
       DE16                     SETSEQ1:
0017F2 DE16 F5              11      PUSH    AF
0017F3 DE17 E5              11      PUSH    HL      ;AHL=Random record
0017F4 DE18 CDEADA          17      CALL    GET_RR_AHL
0017F7 DE1B 47               4      LD  B,A     ;AHL→HLA
0017F8 DE1C 7D               4      LD  A,L     ;(IY+33)(FCB)ランダムレコード
0017F9 DE1D 6C               4      LD  L,H     ;(IY+34)
0017FA DE1E 60               4      LD  H,B     ;(IY+35)
0017FB DE1F 0600             7      LD  B,0
                                
0017FD DE21 CDD4DA          17      CALL    GET_CPM_R_SIZE
                                
001800 DE24 29              11      ADD HL,HL
001801 DE25 CB3D             8      SRL L       ;L=L/2
001803 DE27 FD7520          19      LD  (IY+32),L   ;(FCB)カレントレコード
001806 DE2A FD740C          19      LD  (IY+12),H   ;(FCB)カレントブロック
001809 DE2D E1              10      POP HL
00180A DE2E F1              10      POP AF
00180B DE2F C9              10      RET
[EOF:LDFILE2.ASM:SHIFT_JIS]
                                    INCLUDE "LDDIO.ASM"
                                
                                ;   LSX-Dodgers DIO
                                
       DE30                     DRDX:
00180C DE30 CD6EDE          17      CALL    DRDY
00180F DE33 C8              11      RET Z
001810 DE34 CD54DE          17      CALL    DRDX1       ;データバッファの情報を保存
001813 DE37 D8              11      RET C
001814 DE38 E5              11      PUSH    HL
001815 DE39 C5              11      PUSH    BC
001816 DE3A D5              11      PUSH    DE
001817 DE3B 2A7EE6          16      LD  HL,(_DTBUF)
00181A DE3E 3A97DE          13      LD  A,(_DBS24)
00181D DE41 4F               4      LD  C,A
00181E DE42 CD50E1          17      CALL    DRD24
001821 DE45 DC69DE          17      CALL    C,DRDNE
       DE48                     POP_DE_BC_HL_RET:
001824 DE48 D1              10      POP DE
001825 DE49 C1              10      POP BC
001826 DE4A E1              10      POP HL
001827 DE4B C9              10      RET
                                
                                ;   CDE:セクタ番号
       DE4C                     DRDN:
001828 DE4C AF               4      XOR A
001829 DE4D 00               4  DRDN1:  NOP         ;自己書き換え NOP / SCF
00182A DE4E 30E0            12      JR  NC,DRDX
       DE50                     DRDNX:
00182C DE50 CD6EDE          17      CALL    DRDY
00182F DE53 C8              11      RET Z
       DE54                     DRDX1:
001830 DE54 CD84DE          17      CALL    DWTX
                                                ;データバッファの読み込んだドライブ・セクタ情報を保存
001833 DE57 ED53A6E5        20      LD  (_DBSEC),DE
001837 DE5B 79               4      LD  A,C
001838 DE5C 3297DE          13      LD  (_DBS24),A
                                
00183B DE5F 3A88E5          13      LD  A,(_DRV)
00183E DE62 32A5E5          13      LD  (_DBDRV),A
001841 DE65 CDD9E5          17      CALL    _CHGDRV
001844 DE68 D0              11      RET NC
       DE69                     DRDNE:
001845 DE69 9F               4      SBC A,A     ;CF=1ならばA=0FFH
001846 DE6A 32A5E5          13      LD  (_DBDRV),A
001849 DE6D C9              10      RET
                                
                                ;   CDE:セクタ番号
       DE6E                     DRDY:
00184A DE6E 3A97DE          13      LD  A,(_DBS24)
00184D DE71 B9               4      CP  C
00184E DE72 C0              11      RET NZ
                                
00184F DE73 E5              11      PUSH    HL
001850 DE74 3A88E5          13      LD  A,(_DRV)
001853 DE77 21A5E5          10      LD  HL,_DBDRV
001856 DE7A AE               7      XOR (HL)
001857 DE7B 2005            12      JR  NZ,POP_HL_RET
                                
001859 DE7D 2AA6E5          16      LD  HL,(_DBSEC)
00185C DE80 ED52            15      SBC HL,DE       ;上でXORを使っているのでCF=0のはず
       DE82                     POP_HL_RET:
00185E DE82 E1              10      POP HL
00185F DE83 C9              10      RET
                                
       DE84                     DWTX:
001860 DE84 3AA4E5          13      LD  A,(_WTDBF)
001863 DE87 B7               4      OR  A
001864 DE88 C8              11      RET Z
001865 DE89 AF               4      XOR A
001866 DE8A 32A4E5          13      LD  (_WTDBF),A
                                
001869 DE8D E5              11      PUSH    HL
00186A DE8E C5              11      PUSH    BC
00186B DE8F D5              11      PUSH    DE
00186C DE90 3AA5E5          13      LD  A,(_DBDRV)
00186F DE93 CDD9E5          17      CALL    _CHGDRV
001872 DE96 0E00             7      LD  C,0
       DE97                     _DBS24  EQU $-1
001874 DE98 ED5BA6E5        20      LD  DE,(_DBSEC)
001878 DE9C 2A7EE6          16      LD  HL,(_DTBUF)
00187B DE9F D460E1          17      CALL    NC,DWT24
       DEA2                     POP_DE_BC_HL_RET2:
00187E DEA2 18A4            12      JR  POP_DE_BC_HL_RET
                                
       DEA4                     RDFATX:
001880 DEA4 E5              11      PUSH    HL
001881 DEA5 3A88E5          13      LD  A,(_DRV)
001884 DEA8 21AAE5          10      LD  HL,_FATDRV
001887 DEAB AE               7      XOR (HL)
001888 DEAC 28D4            12      JR  Z,POP_HL_RET
                                
00188A DEAE C5              11      PUSH    BC
00188B DEAF D5              11      PUSH    DE
00188C DEB0 DDE5            15      PUSH    IX
00188E DEB2 CDCEDE          17      CALL    WTFATX
001891 DEB5 3813            12      JR  C,POP_IX_DE_BC_HL_RET
                                
001893 DEB7 AF               4      XOR A
001894 DEB8 32ABE5          13      LD  (_FATIX),A
001897 DEBB 3A88E5          13      LD  A,(_DRV)
00189A DEBE 32AAE5          13      LD  (_FATDRV),A
00189D DEC1 CDE5E5          17      CALL    _RDFAT
       DEC4                     RDFATE2:
0018A0 DEC4 3004            12      JR  NC,POP_IX_DE_BC_HL_RET
0018A2 DEC6 9F               4      SBC A,A     ;A=0xFF
0018A3 DEC7 32AAE5          13      LD  (_FATDRV),A
       DECA                     POP_IX_DE_BC_HL_RET:
0018A6 DECA DDE1            14      POP IX
0018A8 DECC 18D4            12      JR  POP_DE_BC_HL_RET2
                                
       DECE                     WTFATX:
0018AA DECE 3AA2E5          13      LD  A,(_WTFATF)
0018AD DED1 B7               4      OR  A
0018AE DED2 C8              11      RET Z
0018AF DED3 E5              11      PUSH    HL
0018B0 DED4 3AAAE5          13      LD  A,(_FATDRV)
0018B3 DED7 21A5E5          10      LD  HL,_DBDRV
0018B6 DEDA AE               7      XOR (HL)
0018B7 DEDB CC84DE          17      CALL    Z,DWTX
0018BA DEDE 38A2            12      JR  C,POP_HL_RET
0018BC DEE0 C5              11      PUSH    BC
0018BD DEE1 D5              11      PUSH    DE
0018BE DEE2 DDE5            15      PUSH    IX
0018C0 DEE4 CD6DE1          17      CALL    WTFAT
0018C3 DEE7 AF               4      XOR A
0018C4 DEE8 32A2E5          13      LD  (_WTFATF),A
0018C7 DEEB 18DD            12      JR  POP_IX_DE_BC_HL_RET
                                
       DEED                     N16CL1:
0018C9 DEED 7A               4      LD  A,D
0018CA DEEE B3               4      OR  E
0018CB DEEF 37               4      SCF
0018CC DEF0 C8              11      RET Z
                                
0018CD DEF1 7A               4      LD  A,D
0018CE DEF2 1807            12      JR  NCL1X
       DEF4                     NCL1:
0018D0 DEF4 7A               4      LD  A,D
0018D1 DEF5 B3               4      OR  E
0018D2 DEF6 37               4      SCF
0018D3 DEF7 C8              11      RET Z
                                
0018D4 DEF8 7A               4      LD  A,D
0018D5 DEF9 CB3F             8      SRL A   ;/2
       DEFB                     NCL1X:
0018D7 DEFB CB3F             8      SRL A   ;/2
                                
0018D9 DEFD E5              11      PUSH    HL
0018DA DEFE 321DDF          13      LD  (NCLPAT_FATIX),A    ;_FATIX
0018DD DF01 2AAAE5          16      LD  HL,(_FATDRV)    ;L=_FATDRV H=_FATIX
0018E0 DF04 BC               4      CP  H
0018E1 DF05 3A88E5          13      LD  A,(_DRV)    ;LDではフラグは変化しない
0018E4 DF08 321CDF          13      LD  (NCLPAT_FATDRV),A   ;_FATDRV
0018E7 DF0B 2005            12      JR  NZ,NCL2     ;FATIXが違う
0018E9 DF0D BD               4      CP  L
0018EA DF0E 2002            12      JR  NZ,NCL2     ;ドライブが違う
0018EC DF10 E1              10      POP HL
0018ED DF11 C9              10      RET
       DF12                     NCL2:
0018EE DF12 C5              11      PUSH    BC
0018EF DF13 D5              11      PUSH    DE
0018F0 DF14 DDE5            15      PUSH    IX
0018F2 DF16 CDCEDE          17      CALL    WTFATX
0018F5 DF19 38AF            12      JR  C,POP_IX_DE_BC_HL_RET
0018F7 DF1B 010000          10      LD  BC,0        ;自己書き換え C=_FATDRV B=_FATIX
       DF1D                     NCLPAT_FATIX    EQU $-1
       DF1C                     NCLPAT_FATDRV   EQU $-2
0018FA DF1E ED43AAE5        20      LD  (_FATDRV),BC
0018FE DF22 CD42E1          17      CALL    RDFATS
001901 DF25 189D            12      JR  RDFATE2
                                
       DF27                     NCL3:
001903 DF27 CB9A             8      RES 3,D
001905 DF29 CB92             8      RES 2,D
001907 DF2B 6B               4      LD  L,E
001908 DF2C 62               4      LD  H,D
001909 DF2D CB3C             8      SRL H   ;
00190B DF2F CB1D             8      RR  L   ;HLA=HLA/2
00190D DF31 1F               4      RRA     ;
00190E DF32 F5              11      PUSH    AF
00190F DF33 3AABE5          13      LD  A,(_FATIX)
001912 DF36 0F               4      RRCA
001913 DF37 300B            12      JR  NC,NCL3X1
001915 DF39 3A36DD          13      LD  A,(SECSZ+2)
001918 DF3C FE04             7      CP  4       ;1セクタ1024バイトの場合は奇数インデックスの場合に先頭を512バイトずらす
00191A DF3E 2004            12      JR  NZ,NCL3X1
00191C DF40 010002          10      LD  BC,512
00191F DF43 09              11      ADD HL,BC
       DF44                     NCL3X1:
001920 DF44 F1              10      POP AF
001921 DF45 ED4B7CE6        20      LD  BC,(_FATBF)
001925 DF49 19              11      ADD HL,DE
001926 DF4A 09              11      ADD HL,BC
001927 DF4B 17               4      RLA
001928 DF4C C9              10      RET
                                
       DF4D                     GNCL:
001929 DF4D CDF4DE          17      CALL    NCL1        ;GET NEXT CLUSTER
00192C DF50 D8              11      RET C
00192D DF51 C5              11      PUSH    BC
00192E DF52 E5              11      PUSH    HL
00192F DF53 CD27DF          17      CALL    NCL3
001932 DF56 3809            12      JR  C,GNC1
001934 DF58 5E               7      LD  E,(HL)
001935 DF59 23               6      INC HL
001936 DF5A 7E               7      LD  A,(HL)
001937 DF5B E60F             7      AND 00FH
001939 DF5D 57               4      LD  D,A
00193A DF5E E1              10      POP HL
00193B DF5F C1              10      POP BC
00193C DF60 C9              10      RET
       DF61                     GNC1:
00193D DF61 7E               7      LD  A,(HL)
00193E DF62 23               6      INC HL
00193F DF63 56               7      LD  D,(HL)
001940 DF64 0604             7      LD  B,4
       DF66                     GNC1L:
001942 DF66 CB3A             8      SRL D   ;DA=DA/2
001944 DF68 1F               4      RRA     ;
001945 DF69 10FB            13      DJNZ    GNC1L
                                
001947 DF6B 5F               4      LD  E,A
001948 DF6C E1              10      POP HL
001949 DF6D C1              10      POP BC
00194A DF6E A7               4      AND A
00194B DF6F C9              10      RET
                                
       DF70                     SNCL:
00194C DF70 CDF4DE          17      CALL    NCL1
00194F DF73 D8              11      RET C
                                ;               SET NEXT CLUSTER
001950 DF74 E5              11      PUSH    HL
001951 DF75 C5              11      PUSH    BC
001952 DF76 D5              11      PUSH    DE
001953 DF77 E5              11      PUSH    HL
001954 DF78 CD27DF          17      CALL    NCL3
001957 DF7B D1              10      POP DE
                                ;CF=ODD
001958 DF7C 7E               7      LD  A,(HL)
001959 DF7D 73               7      LD  (HL),E
00195A DF7E 3806            12      JR  C,SNC1
                                ;EVEN
                                ;M[0] = E
                                ;M[1] = (M[1] & 0xF0) | (D & 0x0F)
00195C DF80 23               6      INC HL
00195D DF81 ED67            18      RRD     ;M={A[3:0],E[3:0]}
00195F DF83 7A               4      LD  A,D
001960 DF84 1804            12      JR  SNC11
       DF86                     SNC1:
                                ;ODD
                                ;HL[0] = (HL[0]&0x0F) | (E<<4)
                                ;HL[1] = DE>>4
001962 DF86 ED6F            18      RLD     ;M={D[3:0],E[7:4]}
001964 DF88 23               6      INC HL
001965 DF89 72               7      LD  (HL),D  ;M={D[3:0],E[7:4]}
       DF8A                     SNC11:
001966 DF8A ED6F            18      RLD     ;M={M[7:4],D[3:0]}
001968 DF8C B7               4      OR  A
001969 DF8D D1              10      POP DE
00196A DF8E C1              10      POP BC
00196B DF8F E1              10      POP HL
       DF90                     FAT_CHANGED:
00196C DF90 3E01             7      LD  A,1
00196E DF92 32A2E5          13      LD  (_WTFATF),A
001971 DF95 C9              10      RET
                                
       DF96                     N16CL3:
001972 DF96 C5              11      PUSH    BC
001973 DF97 6B               4      LD  L,E
001974 DF98 7A               4      LD  A,D
001975 DF99 E601             7      AND 1
001977 DF9B 67               4      LD  H,A
001978 DF9C 29              11      ADD HL,HL
001979 DF9D ED4B7CE6        20      LD  BC,(_FATBF)
00197D DFA1 09              11      ADD HL,BC
00197E DFA2 C1              10      POP BC
00197F DFA3 C9              10      RET
                                
       DFA4                     GNCL16:
001980 DFA4 CDEDDE          17      CALL    N16CL1      ;GET NEXT CLUSTER for FAT16
001983 DFA7 D8              11      RET C
001984 DFA8 E5              11      PUSH    HL
001985 DFA9 CD96DF          17      CALL    N16CL3
001988 DFAC 5E               7      LD  E,(HL)
001989 DFAD 23               6      INC HL
00198A DFAE 56               7      LD  D,(HL)
00198B DFAF E1              10      POP HL
00198C DFB0 C9              10      RET
                                
       DFB1                     SNCL16:
00198D DFB1 CDEDDE          17      CALL    N16CL1      ;GET NEXT CLUSTER for FAT16
001990 DFB4 D8              11      RET C
001991 DFB5 D5              11      PUSH    DE
001992 DFB6 E5              11      PUSH    HL
001993 DFB7 CD96DF          17      CALL    N16CL3
001996 DFBA D1              10      POP DE      ;HL
001997 DFBB 73               7      LD  (HL),E
001998 DFBC 23               6      INC HL
001999 DFBD 72               7      LD  (HL),D
00199A DFBE 6B               4      LD  L,E
00199B DFBF 62               4      LD  H,D
00199C DFC0 D1              10      POP DE
00199D DFC1 18CD            12      JR  FAT_CHANGED
                                
                                ;------------------------
                                ;次のセクタを探す際に_SECPSの値をチェック
                                ;in
                                ;   DE : セクタ番号
                                ;out
                                ;   DE : 次のセクタ番号
                                ;note
                                ;
                                ;------------------------
       DFC3                     NEXTX:
00199F DFC3 3E00             7      LD  A,0 ;自己書き換え
       DFC4                     _SECPS  EQU $-1
0019A1 DFC5 3C               4      INC A
0019A2 DFC6 E600             7      AND 0   ;自己書き換え　1クラスタの論理セクタ数-1
       DFC7                     _NCPAT  EQU $-1
0019A4 DFC8 32C4DF          13      LD  (_SECPS),A
0019A7 DFCB C9              10      RET
                                
       DFCC                     GNCLX:
0019A8 DFCC CDC3DF          17      CALL    NEXTX
0019AB DFCF C0              11      RET NZ  ;1クラスタのセクタ未満の場合は戻る
0019AC DFD0 C3F7E5          10      JP  _GNCL   ;次のクラスタを探す
                                
       DFD3                     RDFAT:
0019AF DFD3 3E80             7      LD  A,080H
0019B1 DFD5 3270E5          13      LD  (CHECK),A
       DFD8                     RDFAT1:
0019B4 DFD8 3A88E5          13      LD  A,(_DRV)
0019B7 DFDB CD7CE2          17      CALL    CHGDRVR
0019BA DFDE D8              11      RET C
0019BB DFDF DD7E12          19      LD  A,(IX+DPB_DEVICE)
0019BE DFE2 CB6F             8      BIT 5,A
0019C0 DFE4 286C            12      JR  Z,RDFAT0X
0019C2 DFE6 2170E5          10      LD  HL,CHECK
0019C5 DFE9 A6               7      AND (HL)
0019C6 DFEA 77               7      LD  (HL),A
0019C7 DFEB 110000          10      LD  DE,0        ;BPB
0019CA DFEE 2A7CE6          16      LD  HL,(_FATBF)
0019CD DFF1 CD4EE1          17      CALL    DRD16
0019D0 DFF4 3024            12      JR  NC,GETBPB
0019D2 DFF6 2170E5          10      LD  HL,CHECK
0019D5 DFF9 CB06            15      RLC (HL)
0019D7 DFFB 3F               4      CCF
0019D8 DFFC D8              11      RET C
0019D9 DFFD DDCB0A1E        23      RR  (IX+DPB_FDMODE)
0019DD E001 3F               4      CCF         ;フロッピーディスクのFDモードを切り替える
0019DE E002 DDCB0A16        23      RL  (IX+DPB_FDMODE)
0019E2 E006 3EFF             7      LD  A,0FFH
0019E4 E008 3289E5          13      LD  (_DSK),A
0019E7 E00B 3A84E5          13      LD  A,(_DRIVE)
0019EA E00E E603             7      AND 3
0019EC E010 F680             7      OR  080H
0019EE E012 6F               4      LD  L,A
0019EF E013 26E5             7      LD  H,_CYL0/256
0019F1 E015 3EFF             7      LD  A,0FFH
0019F3 E017 77               7      LD  (HL),A
0019F4 E018 18BE            12      JR  RDFAT1
       E01A                     GETBPB:
0019F6 E01A FDE5            15      PUSH    IY
0019F8 E01C FD2A7CE6        20      LD  IY,(_FATBF) ;BPB
0019FC E020 CDF1E5          17      CALL    _BPB2DPB
0019FF E023 FDE1            14      POP IY
001A01 E025 DD7E12          19      LD  A,(IX+DPB_DEVICE)
001A04 E028 3025            12      JR  NC,GETBPBOK
001A06 E02A E60F             7      AND 00FH
001A08 E02C FE07             7      CP  7
001A0A E02E 37               4      SCF
001A0B E02F C0              11      RET NZ
001A0C E030 DDCB0A46        20      BIT 0,(IX+DPB_FDMODE)
001A10 E034 21C0E6          10      LD  HL,M2D
001A13 E037 2006            12      JR  NZ,SETFDMODE
001A15 E039 CD27E1          17      CALL    CHECK1024
001A18 E03C D8              11      RET C
001A19 E03D 2ED2             7      LD  L,M2HD-STABLE
       E03F                     SETFDMODE:
001A1B E03F DDE5            15      PUSH    IX
001A1D E041 D1              10      POP DE
001A1E E042 EDA0            16      LDI
001A20 E044 EDA0            16      LDI
001A22 E046 13               6      INC DE
001A23 E047 13               6      INC DE
001A24 E048 13               6      INC DE
001A25 E049 13               6      INC DE
001A26 E04A 010C00          10      LD  BC,12
001A29 E04D EDB0                    LDIR
       E04F                     GETBPBOK:
001A2B E04F CDE8E1          17      CALL    CHGDRV2
       E052                     RDFAT0X:
001A2E E052 CD42E1          17      CALL    RDFATS
001A31 E055 D8              11      RET C
001A32 E056 DDAE06          19      XOR (IX+DPB_FATID)
001A35 E059 C8              11      RET Z
001A36 E05A DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
001A3A E05E C0              11      RET NZ      ;BPBを取得している場合はFATIDをチェックしない
001A3B E05F 37               4      SCF
001A3C E060 C9              10      RET
                                
       E061                     POP_HL_SCF_RET:
001A3D E061 E1              10      POP HL
001A3E E062 37               4      SCF
001A3F E063 C9              10      RET
                                
       E064                     BPB2DPB:
001A40 E064 FD7E0B          19      LD  A,(IY+11)   ;BPB_BytsPerSec
001A43 E067 B7               4      OR  A
001A44 E068 37               4      SCF
001A45 E069 C0              11      RET NZ
       E06A                     BPBOK:
001A46 E06A FD7E0D          19      LD  A,(IY+13)   ;BPB_SecPerClus
001A49 E06D DD7707          19      LD  (IX+DPB_SECPCL),A
                                
001A4C E070 FD7E16          19      LD  A,(IY+22)   ;BPB_FATSz16
001A4F E073 DD7700          19      LD  (IX+DPB_FATLN),A
001A52 E076 FD7E17          19      LD  A,(IY+23)   ;BPB_FATSz16
001A55 E079 DD7701          19      LD  (IX+DPB_FATLN+1),A
                                
001A58 E07C FD6E0E          19      LD  L,(IY+14)   ;BPB_RsvdSecCnt
001A5B E07F FD660F          19      LD  H,(IY+15)
001A5E E082 DD750E          19      LD  (IX+DPB_FATPS),L
001A61 E085 FD5E16          19      LD  E,(IY+22)   ;BPB_FATSz16
001A64 E088 FD5617          19      LD  D,(IY+23)
001A67 E08B FD4610          19      LD  B,(IY+16)   ;BPB_NumFATs
       E08E                     BPBDP1:             ;BPB_FATSz16 * BPB_NumFATs
001A6A E08E 19              11      ADD HL,DE
001A6B E08F 10FD            13      DJNZ    BPBDP1
       E091                     BPBDP2:
001A6D E091 DD7510          19      LD  (IX+DPB_DIRPS),L
001A70 E094 DD7411          19      LD  (IX+DPB_DIRPS+1),H
001A73 E097 E5              11      PUSH    HL
                                
001A74 E098 FD6E11          19      LD  L,(IY+17)   ;BPB_RootEntCnt
001A77 E09B FD6612          19      LD  H,(IY+18)
001A7A E09E FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
001A7D E0A1 B7               4      OR  A
001A7E E0A2 28BD            12      JR  Z,POP_HL_SCF_RET
001A80 E0A4 0606             7      LD  B,6
       E0A6                     BPBBPS1:
001A82 E0A6 05               4      DEC B
001A83 E0A7 0F               4      RRCA
001A84 E0A8 30FC            12      JR  NC,BPBBPS1
       E0AA                     BPBDE1:
001A86 E0AA 29              11      ADD HL,HL
001A87 E0AB 10FD            13      DJNZ    BPBDE1
                                
001A89 E0AD 7C               4      LD  A,H
001A8A E0AE DD770B          19      LD  (IX+DPB_DIRSCNT),A  ;
                                
001A8D E0B1 D1              10      POP DE      ;DPB_DIRPS
001A8E E0B2 6C               4      LD  L,H
001A8F E0B3 2600             7      LD  H,0
001A91 E0B5 19              11      ADD HL,DE       ;MAXDIR
001A92 E0B6 E5              11      PUSH    HL
001A93 E0B7 FD4E0D          19      LD  C,(IY+13)   ;BPB_SecPerClus
001A96 E0BA CB21             8      SLA C       ;*2
001A98 E0BC AF               4      XOR A
001A99 E0BD 47               4      LD  B,A
001A9A E0BE ED42            15      SBC HL,BC
001A9C E0C0 DD7514          19      LD  (IX+DPB_ADDCL),L
001A9F E0C3 DD7415          19      LD  (IX+DPB_ADDCL+1),H
                                
001AA2 E0C6 D1              10      POP DE      ;DE=DPB_MAXDIR
001AA3 E0C7 FD6E13          19      LD  L,(IY+19)   ;BPB_TotSec16
001AA6 E0CA FD6614          19      LD  H,(IY+20)
                                
001AA9 E0CD DD7E12          19      LD  A,(IX+DPB_DEVICE)
001AAC E0D0 E60F             7      AND 00FH
001AAE E0D2 FE07             7      CP  7       ;フロッピー
001AB0 E0D4 2019            12      JR  NZ,NOT_FD
001AB2 E0D6 E5              11      PUSH    HL
001AB3 E0D7 FD4E18          19      LD  C,(IY+24)   ;BPB_SecPerTr
001AB6 E0DA DD710D          19      LD  (IX+DPB_MAXSEC),C
001AB9 E0DD AF               4      XOR A
001ABA E0DE CB21             8      SLA C       ;両面なのでセクタ数を２倍
001ABC E0E0 0610             7      LD  B,16
       E0E2                     DIVSEC:             ;MAXCYL = BPB_TotSec16 / (BPB_SecPerTr * 2)
001ABE E0E2 29              11      ADD HL,HL
001ABF E0E3 17               4      RLA
001AC0 E0E4 B9               4      CP  C
001AC1 E0E5 3802            12      JR  C,DIVSEC1
001AC3 E0E7 91               4      SUB C
001AC4 E0E8 2C               4      INC L
       E0E9                     DIVSEC1:
001AC5 E0E9 10F7            13      DJNZ    DIVSEC
001AC7 E0EB DD750C          19      LD  (IX+DPB_MAXCYL),L
001ACA E0EE E1              10      POP HL  ;ここまでフロッピー専用
       E0EF                     NOT_FD:
001ACB E0EF 7C               4      LD  A,H
001ACC E0F0 B5               4      OR  L
001ACD E0F1 3E00             7      LD  A,0     ;LDでフラグは変化しない。BPB_TotSec16を AHL で扱う為、Aに0を入れる
001ACF E0F3 200E            12      JR  NZ,BPB16BIT ;BPB_TotSec16が「0」の場合はBPB_TotSec32で計算
001AD1 E0F5 2F               4      CPL         ;A=0FFH
001AD2 E0F6 FD8623          19      ADD A,(IY+35)   ;念のために総セクタ数が24ビットを超える場合はエラーを返す
001AD5 E0F9 D8              11      RET C
001AD6 E0FA FD6E20          19      LD  L,(IY+32)   ;BPB_TotSec32 は AHL の24ビットで扱う
001AD9 E0FD FD6621          19      LD  H,(IY+33)   ;1クラスタの論理セクタ数(DPB_SECPCL)が最大128なので、
001ADC E100 FD7E22          19      LD  A,(IY+34)   ;FAT12,FAT16では総セクタ数が24ビットを超えることは無い
       E103                     BPB16BIT:
001ADF E103 ED52            15      SBC HL,DE       ;DE=DPB_MAXDIR
001AE1 E105 DE00             7      SBC A,0
001AE3 E107 FD460D          19      LD  B,(IY+13)   ;BPB_SecPerClus
       E10A                     BPBTC1:             ;総クラスタ数(AHL) = 総セクタ数(AHL) / セクタサイズ(B)
001AE6 E10A CB18             8      RR  B       ;->CY
001AE8 E10C 3808            12      JR  C,BPBTC2
001AEA E10E CB3F             8      SRL A
001AEC E110 CB1C             8      RR  H       ;AHL=AHL/2
001AEE E112 CB1D             8      RR  L
001AF0 E114 18F4            12      JR  BPBTC1
       E116                     BPBTC2:
001AF2 E116 C6FF             7      ADD A,0FFH
001AF4 E118 D8              11      RET C       ;念のため(クラスタ数が16ビットを超える場合)
001AF5 E119 23               6      INC HL
001AF6 E11A 23               6      INC HL
001AF7 E11B DD7508          19      LD  (IX+DPB_MAXCL),L
001AFA E11E DD7409          19      LD  (IX+DPB_MAXCL+1),H
                                
001AFD E121 FD7E15          19      LD  A,(IY+21)   ;BPB_Media
001B00 E124 DD7706          19      LD  (IX+DPB_FATID),A
       E127                     CHECK1024:
001B03 E127 FD7E10          19      LD  A,(IY+16)   ;BPB_NumFATs
001B06 E12A C6FE             7      ADD A,0-2       ;>2:CF=1
001B08 E12C FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
001B0B E12F 6F               4      LD  L,A
001B0C E130 3002            12      JR  NC,BPBFAT1
001B0E E132 F680             7      OR  080H
       E134                     BPBFAT1:            ;ここではCF=0
001B10 E134 DD770F          19      LD  (IX+DPB_BPS),A
001B13 E137 3A7BE6          13      LD  A,(_MAX_SEC_SZ_H)
001B16 E13A BD               4      CP  L
001B17 E13B C8              11      RET Z       ;1セクタ1024バイト
001B18 E13C 2D               4      DEC L       ;以下のセクタサイズに合致しない場合はCF=1でエラーにする
001B19 E13D C8              11      RET Z       ;1セクタ256バイト
001B1A E13E 2D               4      DEC L
001B1B E13F C8              11      RET Z       ;1セクタ512バイト
001B1C E140 37               4      SCF
001B1D E141 C9              10      RET
                                
       E142                     RDFATS:
001B1E E142 CD73E1          17      CALL    FATSETUP
001B21 E145 D8              11      RET C
001B22 E146 CD52E1          17      CALL    DRD24B
001B25 E149 2A7CE6          16      LD  HL,(_FATBF)
001B28 E14C 7E               7      LD  A,(HL)
001B29 E14D C9              10      RET
                                
       E14E                     DRD16:
001B2A E14E 0E00             7      LD  C,0
       E150                     DRD24:
001B2C E150 0601             7      LD  B,1
       E152                     DRD24B:
001B2E E152 DDE5            15      PUSH    IX
001B30 E154 DD2AA8E5        20      LD  IX,(_DPB)
001B34 E158 CDC1E2          17      CALL    FDRD        ;自己書き換え（ディスク読み込み）
       E159                     DRDPAT  EQU $-2
       E15B                     POP_IX_RET:
001B37 E15B DDE1            14      POP IX
001B39 E15D C9              10      RET
                                
       E15E                     DWT16:
001B3A E15E 0E00             7      LD  C,0
       E160                     DWT24:
001B3C E160 0601             7      LD  B,1
       E162                     DWT24B:
001B3E E162 DDE5            15      PUSH    IX
001B40 E164 DD2AA8E5        20      LD  IX,(_DPB)
001B44 E168 CDBFE2          17      CALL    FDWT        ;自己書き換え（ディスク書き込み）
       E169                     DWTPAT  EQU $-2
001B47 E16B 18EE            12      JR  POP_IX_RET
                                
       E16D                     WTFAT:
001B49 E16D CD73E1          17      CALL    FATSETUP
001B4C E170 30F0            12      JR  NC,DWT24B
001B4E E172 C9              10      RET
                                ;   CALL    NC,DWT24B   ;予備FATの保存ルーチン
                                ;   RET C
                                ;   BIT 7,(IX+DPB_BPS)
                                ;   RET Z       ;予備FATが無い
                                ;   CALL    FATS2
                                ;   PUSH    HL      ;予備FAT
                                ;   LD  L,(IX+DPB_FATLN)
                                ;   LD  H,(IX+DPB_FATLN+1)
                                ;   ADD HL,DE
                                ;   EX  DE,HL
                                ;   POP HL
                                ;   JR  DWT24B
                                ;------------------------
                                ;FATのセットアップ
                                ;out
                                ;   B  : FATセクタ数
                                ;   DE : FAT先頭セクタ番号
                                ;   HL : FATバッファポインタ
                                ;   CF : 1=ドライブ切り替えエラー
                                ;note
                                ;   FATサイズがFATバッファを超える場合は
                                ;   対象クラスタ領域==(_FATIX)によって
                                ;   FAT12:対象クラスタ1024毎に1.5KBを切り替える
                                ;   FAT16:対象クラスタ512毎に1KBを切り替える
                                ;------------------------
       E173                     FATSETUP:
001B4F E173 3AAAE5          13      LD  A,(_FATDRV)
001B52 E176 CD7CE2          17      CALL    CHGDRVR     ;ドライブ切り替え
001B55 E179 D8              11      RET C
       E17A                     FATS2:
001B56 E17A DD7E0F          19      LD  A,(IX+DPB_BPS)  ;512=2 1024=4
001B59 E17D 0F               4      RRCA
001B5A E17E CDAEE1          17      CALL    FATSETUP12  ;自己書き換え
       E17F                     FATSX   EQU $-2
001B5D E181 210000          10      LD  HL,0
001B60 E184 4A               4      LD  C,D
001B61 E185 54               4      LD  D,H
001B62 E186 3AABE5          13      LD  A,(_FATIX)  ;範囲FAT12:0-3/FAT16:0-127(0-07FH):65535*2/1024
001B65 E189 47               4      LD  B,A
001B66 E18A 04               4      INC B
001B67 E18B DD7E00          19      LD  A,(IX+DPB_FATLN)
       E18E                     FAT_SKP:
001B6A E18E 05               4      DEC B
001B6B E18F 2809            12      JR  Z,FAT1
001B6D E191 19              11      ADD HL,DE
001B6E E192 93               4      SUB E
001B6F E193 30F9            12      JR  NC,FAT_SKP
001B71 E195 DDCB0146        20      BIT 0,(IX+DPB_FATLN+1)  ;FATサイズが0100H(256)の場合
001B75 E199 C8              11      RET Z
       E19A                     FAT1:
001B76 E19A EB               4      EX  DE,HL
001B77 E19B B7               4      OR  A       ;0の場合は0100Hとして扱う
001B78 E19C 2803            12      JR  Z,FAT3
001B7A E19E B9               4      CP  C       ;C=FATバッファに読み込めるセクタ数
001B7B E19F 3801            12      JR  C,FAT2
       E1A1                     FAT3:
001B7D E1A1 79               4      LD  A,C
       E1A2                     FAT2:
001B7E E1A2 47               4      LD  B,A
                                
001B7F E1A3 2AFAE6          16      LD  HL,(_FATPS) ;fat sector pos
001B82 E1A6 19              11      ADD HL,DE
001B83 E1A7 EB               4      EX  DE,HL
001B84 E1A8 2A7CE6          16      LD  HL,(_FATBF)
001B87 E1AB AF               4      XOR A       ;CF=0
001B88 E1AC 4F               4      LD  C,A
001B89 E1AD C9              10      RET
                                ;
                                ;   FATバッファに読み込める最大のセクタ数と_FATIXで進めるセクタ数
                                ;   FATSETUP* (FAT12/FAT16)
                                ;out
                                ;   D : FATバッファに読み込める最大のセクタ数
                                ;   E : _FATIXで進めるセクタ数
       E1AE                     FATSETUP12:
001B8A E1AE 110606          10      LD  DE,0606H    ;256
001B8D E1B1 D8              11      RET C
001B8E E1B2 110303          10      LD  DE,0303H    ;512
001B91 E1B5 0F               4      RRCA
001B92 E1B6 D8              11      RET C
001B93 E1B7 110102          10      LD  DE,0201H    ;1024
001B96 E1BA C9              10      RET
                                
       E1BB                     FATSETUP16:
001B97 E1BB 110404          10      LD  DE,0404H    ;256
001B9A E1BE D8              11      RET C
001B9B E1BF 110202          10      LD  DE,0202H    ;512
001B9E E1C2 0F               4      RRCA
001B9F E1C3 D8              11      RET C
001BA0 E1C4 110101          10      LD  DE,0101H    ;1024
001BA3 E1C7 C9              10      RET
                                
       E1C8                     CHGDRV:
001BA4 E1C8 E5              11      PUSH    HL
001BA5 E1C9 2189E5          10      LD  HL,_DSK
001BA8 E1CC BE               7      CP  (HL)
001BA9 E1CD 280A            12      JR  Z,CHGDRVE
       E1CF                     CHGDRV1:
001BAB E1CF DDE5            15      PUSH    IX
001BAD E1D1 CDDBE1          17      CALL    CHGDRV0
001BB0 E1D4 3A89E5          13      LD  A,(_DSK)
001BB3 E1D7 DDE1            14      POP IX
       E1D9                     CHGDRVE:
001BB5 E1D9 E1              10      POP HL
001BB6 E1DA C9              10      RET
                                
       E1DB                     CHGDRV0:
001BB7 E1DB 6F               4      LD  L,A
001BB8 E1DC CDDCE5          17      CALL    _GETDPB
001BBB E1DF D8              11      RET C
001BBC E1E0 DD22A8E5        20      LD  (_DPB),IX
001BC0 E1E4 7D               4      LD  A,L
001BC1 E1E5 3289E5          13      LD  (_DSK),A
       E1E8                     CHGDRV2:
001BC4 E1E8 C5              11      PUSH    BC
001BC5 E1E9 D5              11      PUSH    DE
001BC6 E1EA ED7333E2        20      LD  (SPPAT2),SP
001BCA E1EE F3               4      DI
001BCB E1EF DDF9            10      LD  SP,IX
                                
001BCD E1F1 E1              10      POP HL      ;00:DPB_FATLN
001BCE E1F2 E1              10      POP HL      ;02:DPB_DRD
001BCF E1F3 2259E1          16      LD  (DRDPAT),HL
                                
001BD2 E1F6 E1              10      POP HL
001BD3 E1F7 2269E1          16      LD  (DWTPAT),HL ;04:DPB_DWT
                                
001BD6 E1FA E1              10      POP HL      ;L=06:DPB_FATID H=07:DPB_SECPCL
001BD7 E1FB 7C               4      LD  A,H
001BD8 E1FC 3255D8          13      LD  (SPCPAT),A  ;1クラスタの論理セクタ数
001BDB E1FF 3D               4      DEC A
001BDC E200 32C7DF          13      LD  (_NCPAT),A
                                
001BDF E203 E1              10      POP HL      ;08:DPB_MAXCL
001BE0 E204 7D               4      LD  A,L
001BE1 E205 3274D8          13      LD  (CLPAT2),A
001BE4 E208 7C               4      LD  A,H
001BE5 E209 3270D8          13      LD  (CLPAT1),A
001BE8 E20C 2B               6      DEC HL
001BE9 E20D 2271DA          16      LD  (MAXCLP),HL
                                
001BEC E210 E1              10      POP HL      ;L=0A:DPB_FDMODE H=0B:DPB_DIRSCNT
001BED E211 4C               4      LD  C,H
                                
001BEE E212 E1              10      POP HL      ;L=0C:DPB_MAXCYL H=0D:DPB_MAXSEC
                                
001BEF E213 E1              10      POP HL      ;L=0E:DPB_FATPS H=0F:DPB_BPS
001BF0 E214 7C               4      LD  A,H     ;DPB_BPS
001BF1 E215 E607             7      AND 7
001BF3 E217 3236DD          13      LD  (SECSZ+2),A ;1セクタのサイズの上位1バイト 0x400 - 0x200 - 0x100
                                                ;1セクタ512 2D/2DD/2HC/2HQ(2HD1.44MB)/EMM/BRAM/EMEM等
                                                ;1セクタ1024 2HD/2HDE98等
                                                ;1セクタ256 GRAM/RAMF/CMOS等
                                                ;1024   512 256
                                                ;4  2   1
001BF6 E21A 87               4      ADD A,A     ;8  4   2
001BF7 E21B 87               4      ADD A,A     ;010H   8   4
001BF8 E21C 87               4      ADD A,A     ;020H   010H    8
001BF9 E21D 32D2D6          13      LD  (SDECPAT),A ;1セクタ辺りのディレクトリエントリ数
                                
001BFC E220 2600             7      LD  H,0
001BFE E222 22FAE6          16      LD  (_FATPS),HL
                                
001C01 E225 E1              10      POP HL      ;10:DPB_DIRPS
001C02 E226 22FCE6          16      LD  (_DIRPS),HL
                                
001C05 E229 E1              10      POP HL      ;L=12:DPB_DEVICE H=13:DPB_UNITNO
001C06 E22A 7C               4      LD  A,H
001C07 E22B 3284E5          13      LD  (_DRIVE),A
                                
001C0A E22E E1              10      POP HL      ;14:DPB_ADDCL
001C0B E22F 2265D8          16      LD  (CLSPAT),HL
                                
001C0E E232 310000          10      LD  SP,0        ;元のSPを復元
       E233                     SPPAT2  EQU $-2
001C11 E235 FB               4      EI
001C12 E236 2AFCE6          16      LD  HL,(_DIRPS)
001C15 E239 0600             7      LD  B,0
001C17 E23B 09              11      ADD HL,BC       ;C=DPB_DIRSCNT
001C18 E23C 22EDD6          16      LD  (MD_PAT),HL
                                
001C1B E23F 2A71DA          16      LD  HL,(MAXCLP)
001C1E E242 110AF0          10      LD  DE,0-4086   ;クラスタ数が4086未満:FAT12 4086以上:FAT16
001C21 E245 19              11      ADD HL,DE
001C22 E246 380F            12      JR  C,SETFAT16
001C24 E248 214DDF          10      LD  HL,GNCL     ;FAT12
001C27 E24B 1170DF          10      LD  DE,SNCL
001C2A E24E 01AEE1          10      LD  BC,FATSETUP12
001C2D E251 DDCB0FAE        23      RES 5,(IX+DPB_BPS)  ;DPB_BPS(FAT12)
001C31 E255 180D            12      JR  EXTRA1
       E257                     SETFAT16:
001C33 E257 21A4DF          10      LD  HL,GNCL16   ;FAT16
001C36 E25A 11B1DF          10      LD  DE,SNCL16
001C39 E25D 01BBE1          10      LD  BC,FATSETUP16
001C3C E260 DDCB0FEE        23      SET 5,(IX+DPB_BPS)  ;DPB_BPS(FAT16)
       E264                     EXTRA1:
001C40 E264 22F8E5          16      LD  (GNCPAT),HL
001C43 E267 ED53FBE5        20      LD  (SNCPAT),DE
001C47 E26B ED437FE1        20      LD  (FATSX),BC
001C4B E26F D1              10      POP DE
001C4C E270 C1              10      POP BC
001C4D E271 AF               4      XOR A
001C4E E272 C9              10      RET
                                
       E273                     GETDPBD:
001C4F E273 DDE3            23      EX  (SP),IX
001C51 E275 DDE5            15      PUSH    IX
001C53 E277 3A88E5          13      LD  A,(_DRV)
001C56 E27A 1807            12      JR  GETDPB1
                                
       E27C                     CHGDRVR:
001C58 E27C CDD9E5          17      CALL    _CHGDRV
001C5B E27F D8              11      RET C
001C5C E280 3A89E5          13      LD  A,(_DSK)
       E283                     GETDPB1:
001C5F E283 C3DCE5          10      JP  _GETDPB
                                
       E286                     GETDPB:
001C62 E286 FE08             7      CP  8
001C64 E288 3F               4      CCF
001C65 E289 D8              11      RET C
001C66 E28A 0F               4      RRCA
001C67 E28B 0F               4      RRCA
001C68 E28C 0F               4      RRCA
001C69 E28D DD                      DB  0DDH        ;Z80未定義命令
001C6A E28E 6F               4      LD  L,A     ;LD IXL,A
001C6B E28F DD                      DB  0DDH        ;Z80未定義命令
001C6C E290 26E7             7      LD  H,_DEVICE/256   ;LD IXH,_DEVICE/256
001C6E E292 DD7E00          19      LD  A,(IX+DPB_FATLN)
001C71 E295 A7               4      AND A       ;CF=0の為
001C72 E296 DDCB0F6E        20      BIT 5,(IX+DPB_BPS)
001C76 E29A C0              11      RET NZ      ;FAT16
001C77 E29B DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
001C7B E29F C0              11      RET NZ      ;BPB
001C7C E2A0 FE01             7      CP  001H        ;A=0 THEN CF=1
001C7E E2A2 C9              10      RET
                                
       E2A3                     _SYS5F:
001C7F E2A3 AF               4      XOR A
       E2A4                     FFLUSH:
001C80 E2A4 F5              11      PUSH    AF
001C81 E2A5 CDCEDE          17      CALL    WTFATX
001C84 E2A8 AF               4      XOR A
001C85 E2A9 32ABE5          13      LD  (_FATIX),A
001C88 E2AC 2F               4      CPL         ;0FFH
001C89 E2AD 32AAE5          13      LD  (_FATDRV),A
001C8C E2B0 3E                      DB  03EH        ;次のPUSH AFをスキップ
       E2B1                     FFLUSHBUF:
001C8D E2B1 F5              11      PUSH    AF
001C8E E2B2 CD84DE          17      CALL    DWTX
001C91 E2B5 3EFF             7      LD  A,0FFH
001C93 E2B7 3239E5          13      LD  (SFILE),A
001C96 E2BA 32A5E5          13      LD  (_DBDRV),A
001C99 E2BD F1              10      POP AF
001C9A E2BE C9              10      RET
                                
[EOF:LDDIO.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDISK.ASM"
                                
                                ;   LSX-Dodgers DISK
                                ;   MSX
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ可変(256/512/1024)
                                
       E2BF                     WTTRK:
       E2BF                     FDWT:
001C9B E2BF 37               4      SCF
001C9C E2C0 C9              10      RET
       E2C1                     FDRD:
001C9D E2C1 ED7352E3        20      LD  (DRDSP),SP
001CA1 E2C5 3A53E3          13      LD  A,(DRDSPH)  ;スタックがカートリッジと被っていないかチェック
001CA4 E2C8 FE7F             7      CP  07FH
001CA6 E2CA 3807            12      JR  C,FDRD1
001CA8 E2CC FEC1             7      CP  0C1H
001CAA E2CE 3003            12      JR  NC,FDRD1
001CAC E2D0 315EF5          10      LD  SP,BUF
       E2D3                     FDRD1:
001CAF E2D3 C5              11      PUSH    BC
001CB0 E2D4 D5              11      PUSH    DE
                                
001CB1 E2D5 E5              11      PUSH    HL
001CB2 E2D6 EB               4      EX  DE,HL
001CB3 E2D7 DD460F          19      LD  B,(IX+DPB_BPS)
       E2DA                     EADR1:
001CB6 E2DA CB18             8      RR  B
001CB8 E2DC 3803            12      JR  C,EADR2
001CBA E2DE 29              11      ADD HL,HL
001CBB E2DF 18F9            12      JR  EADR1
       E2E1                     EADR2:
001CBD E2E1 E5              11      PUSH    HL  ;あとでDEで受け取る
001CBE E2E2 29              11      ADD HL,HL   ;64KB→32KB
001CBF E2E3 29              11      ADD HL,HL   ;32KB→16KB
       E2E4                     ASCII16K1:
001CC0 E2E4 29              11      ADD HL,HL   ;16KB→8KB  ;ASCII-16Kの場合はここがNOPに置き換えられる
                                
001CC1 E2E5 DD7E0C          19      LD  A,(IX+DPB_MAXCYL)   ;16KB単位でカートリッジ内のディスクが存在する位置を指定
       E2E8                     ASCII16K2:
001CC4 E2E8 87               4      ADD A,A         ;ASCII-16Kの場合はここがNOPに置き換えられる
001CC5 E2E9 84               4      ADD A,H
001CC6 E2EA 5F               4      LD  E,A
001CC7 E2EB 3A62E5          13      LD  A,(ROM_SLT)
001CCA E2EE 210070          10      LD  HL,BANK2_SEL
       E2EF                     ROM8000H    EQU $-2
001CCD E2F1 CDFED3          17      CALL    WRSLT
                                
001CD0 E2F4 2680             7      LD  H,080H
001CD2 E2F6 3A62E5          13      LD  A,(ROM_SLT) ;カートリッジROMに切り替える
001CD5 E2F9 CD71D4          17      CALL    ENASLT
                                
001CD8 E2FC D1              10      POP DE
001CD9 E2FD E1              10      POP HL      ;HLは読み出し先のメモリアドレス
                                
001CDA E2FE 7B               4      LD  A,E
001CDB E2FF E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F/16K:3F)
       E300                     ASCII16K3   EQU $-1
001CDD E301 1E00             7      LD  E,0     ;DEはROMディスクから読み出すアドレス
001CDF E303 C680             7      ADD A,080H
001CE1 E305 57               4      LD  D,A
                                
001CE2 E306 3E                      DB  03EH
001CE3 E307 A7               4      AND A
001CE4 E308 3235E3          13      LD  (DRD_SWC3),A
001CE7 E30B 7C               4      LD  A,H     ;読み出し先がカートリッジと被っていないかチェック
001CE8 E30C FE7B             7      CP  07BH
001CEA E30E 3812            12      JR  C,DRD2
001CEC E310 FEC1             7      CP  0C1H
001CEE E312 300E            12      JR  NC,DRD2
001CF0 E314 223CE3          16      LD  (DRD_SWC1),HL   ;被っている場合はデータバッファをフラッシュして一時的に使う
001CF3 E317 2100EE          10      LD  HL,DTBUF
001CF6 E31A 3E                      DB  03EH
001CF7 E31B 37               4      SCF
001CF8 E31C 3235E3          13      LD  (DRD_SWC3),A
001CFB E31F CDB1E2          17      CALL    FFLUSHBUF
       E322                     DRD2:
001CFE E322 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001D01 E325 E607             7      AND 7
001D03 E327 47               4      LD  B,A
001D04 E328 4B               4      LD  C,E ;E=0
                                
001D05 E329 EB               4      EX  DE,HL
001D06 E32A EDB0                    LDIR
001D08 E32C D5              11      PUSH    DE
001D09 E32D 2680             7      LD  H,080H
001D0B E32F 3A43F3          13      LD  A,(0F341H+2)    ;メインRAMに戻す
001D0E E332 CD71D4          17      CALL    ENASLT
       E335                     DRD_SWC3:
001D11 E335 A7               4      AND A       ;自己書き換え)被っている場合はSCFになる
001D12 E336 3012            12      JR  NC,DRD3
                                
001D14 E338 2100EE          10      LD  HL,DTBUF
001D17 E33B 110000          10      LD  DE,0
       E33C                     DRD_SWC1    EQU $-2
001D1A E33E DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001D1D E341 E607             7      AND 7
001D1F E343 47               4      LD  B,A
001D20 E344 0E00             7      LD  C,0
001D22 E346 EDB0                    LDIR
001D24 E348 E1              10      POP HL
001D25 E349 D5              11      PUSH    DE
       E34A                     DRD3:
001D26 E34A E1              10      POP HL
001D27 E34B D1              10      POP DE
001D28 E34C 13               6      INC DE
001D29 E34D C1              10      POP BC
001D2A E34E 1083            13      DJNZ    FDRD1
001D2C E350 AF               4      XOR A
001D2D E351 310000          10      LD  SP,0
       E352                     DRDSP   EQU $-2
       E353                     DRDSPH  EQU $-1
001D30 E354 FB               4      EI
001D31 E355 C9              10      RET
                                
       E356                     PDWT:
001D32 E356 37               4      SCF
001D33 E357 CB7C             8      BIT 7,H
001D35 E359 2057            12      JR  NZ,PDWX
001D37 E35B CDB1E2          17      CALL    FFLUSHBUF
       E35E                     PDWT1:
001D3A E35E C5              11      PUSH    BC
001D3B E35F D5              11      PUSH    DE
001D3C E360 1100EE          10      LD  DE,DTBUF
001D3F E363 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001D42 E366 E607             7      AND 7
001D44 E368 47               4      LD  B,A
001D45 E369 0E00             7      LD  C,0
001D47 E36B EDB0                    LDIR
001D49 E36D E3              19      EX  (SP),HL
001D4A E36E EB               4      EX  DE,HL
001D4B E36F D5              11      PUSH    DE
001D4C E370 2100EE          10      LD  HL,DTBUF
001D4F E373 0601             7      LD  B,1
001D51 E375 37               4      SCF
001D52 E376 CDB2E3          17      CALL    PDWX
001D55 E379 3832            12      JR  C,PDRWERR
001D57 E37B D1              10      POP DE
001D58 E37C 13               6      INC DE
001D59 E37D E1              10      POP HL
001D5A E37E C1              10      POP BC
001D5B E37F 10D5            13      DJNZ    PDWT
001D5D E381 AF               4      XOR A
001D5E E382 C9              10      RET
       E383                     PDRD:
001D5F E383 CB7C             8      BIT 7,H
001D61 E385 202A            12      JR  NZ,PDWXR
001D63 E387 CDB1E2          17      CALL    FFLUSHBUF
       E38A                     PDRD1:
001D66 E38A C5              11      PUSH    BC
001D67 E38B D5              11      PUSH    DE
001D68 E38C E5              11      PUSH    HL
001D69 E38D 2100EE          10      LD  HL,DTBUF
001D6C E390 0601             7      LD  B,1
001D6E E392 CDB1E3          17      CALL    PDWXR
001D71 E395 3816            12      JR  C,PDRWERR
001D73 E397 D1              10      POP DE
001D74 E398 2100EE          10      LD  HL,DTBUF
001D77 E39B DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001D7A E39E E607             7      AND 7
001D7C E3A0 47               4      LD  B,A
001D7D E3A1 0E00             7      LD  C,0
001D7F E3A3 EDB0                    LDIR
001D81 E3A5 EB               4      EX  DE,HL
001D82 E3A6 D1              10      POP DE
001D83 E3A7 13               6      INC DE
001D84 E3A8 C1              10      POP BC
001D85 E3A9 10D8            13      DJNZ    PDRD
001D87 E3AB AF               4      XOR A
001D88 E3AC C9              10      RET
       E3AD                     PDRWERR:
001D89 E3AD E1              10      POP HL
001D8A E3AE D1              10      POP DE
001D8B E3AF C1              10      POP BC
001D8C E3B0 C9              10      RET
       E3B1                     PDWXR:
001D8D E3B1 A7               4      AND A
       E3B2                     PDWX:                   ;CF=0 READ CF=1 WRITE
001D8E E3B2 DDCB1266        20      BIT 4,(IX+DPB_DEVICE)   ;デバイス情報
001D92 E3B6 2003            12      JR  NZ,PDWX1
001D94 E3B8 DD4E06          19      LD  C,(IX+DPB_FATID)    ;メディアバイト
       E3BB                     PDWX1:
001D97 E3BB DD7E13          19      LD  A,(IX+DPB_UNITNO)   ;デバイスドライバ内におけるユニット番号
001D9A E3BE C5              11      PUSH    BC
001D9B E3BF D5              11      PUSH    DE
001D9C E3C0 E5              11      PUSH    HL
001D9D E3C1 DDE5            15      PUSH    IX
001D9F E3C3 FDE5            15      PUSH    IY
001DA1 E3C5 CDA7FF          17      CALL    H_PHYD
001DA4 E3C8 FDE1            14      POP IY
                                ;   LD  IX,PHYDIO
                                ;   CALL    CALSLT_R
001DA6 E3CA DDE1            14      POP IX
001DA8 E3CC E1              10      POP HL
001DA9 E3CD D1              10      POP DE
001DAA E3CE C1              10      POP BC
001DAB E3CF D8              11      RET C
       E3D0                     PDWX2:
001DAC E3D0 13               6      INC DE
001DAD E3D1 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001DB0 E3D4 E607             7      AND 7
001DB2 E3D6 84               4      ADD A,H
001DB3 E3D7 67               4      LD  H,A
001DB4 E3D8 10F6            13      DJNZ    PDWX2
001DB6 E3DA AF               4      XOR A
001DB7 E3DB C9              10      RET
[EOF:MSXDISK.ASM:UTF_8]
                                    INCLUDE "LDCCPWK.ASM"
                                
                                ;   LSX-Dodgers CCP WORK
                                
       003B                     PATHX   EQU 59
001DB8 E3DC                     PATHD:  DS  PATHX
001DF3 E417 00                  PATHE:  DB  0
                                
       E418                     DTA_CCP:
001DF4 E418                         DS  37
                                
       E43D                     FCB_BAT:
001E19 E43D                         DS  37
                                
001E3E E462 2020203C4449523E    DIRMES: DB  "   <DIR>  $"
            202024              
001E49 E46D 20667265652024      FREE:   DB  " free $"
[EOF:LDCCPWK.ASM:UTF_8]
                                    INCLUDE "LDWORK.ASM"
                                
                                ;   LSX-Dodgers WORK0
                                ;
                                ;   CP/M互換BIOS
                                ;   BOOT:アドレス下位1バイトが0になるように
       E474                     AT_WORK:
001E50 E474                         DS  WORKAD-AT_WORK
                                
       E500                     CPM_BOOT:
001EDC E500 C30000          10      JP  0
       E503                     _SYS00:     ;(BDOS)プログラム終了
       E503                     CPM_WBOOT:
001EDF E503 C309CA          10      JP  WBOOT1
       E506                     CPM_CONST:
001EE2 E506 C357D2          10      JP  CONSTX
       E509                     _SYS07:     ;(BDOS)コンソール直接入力
       E509                     CPM_CONIN:
001EE5 E509 C378D1          10      JP  FLGET
       E50C                     CPM_CONOUT:
001EE8 E50C C3FBD2          10      JP  CONOUT1
                                
       E50F                     DECBF:              ;10進数表示時のバッファ(5バイト)
001EEB E50F                         DS  5
       E50F                     RR_BUF_HL   EQU DECBF   ;CP/M互換ファイルアクセスの際のランダムレコードの一時的な保管場所
       E511                     RR_BUF_A    EQU DECBF+2 ;計3バイト
                                
001EF0 E514 00                  FDRV:   DB  0
001EF1 E515                     FNAME:  DS  36
001F15 E539                     SFILE:  DS  33      ;DRV FILENAME
                                
001F36 E55A                         DS  3
                                
001F39 E55D 0000                LEFTX:  DW  0
001F3B E55F 0000                DTAX:   DW  0
                                
       E561                     ZERO:
       E561                     BEEPD:
001F3D E561 008E01000B000C10        DB  0,08EH,1,0,00BH,0,00CH,010H
001F45 E569 073E08100D00FF          DB  007H,03EH,008H,010H,00DH,0,0FFH
       E562                     RTC_YY  EQU BEEPD+1
       E563                     RTC_MW  EQU BEEPD+2
       E564                     RTC_DD  EQU BEEPD+3
       E565                     RTC_TT  EQU BEEPD+4
       E566                     RTC_MM  EQU BEEPD+5
       E567                     RTC_SS  EQU BEEPD+6
       E562                     ROM_SLT EQU BEEPD+1
                                
001F4C E570 00                  CHECK:  DB  0
                                
001F4D E571 4F4B24              OK: DB  "OK$"
001F50 E574                         DS  5
001F55 E579 4572726F722124      COMERM: DB  "Error!$"
                                ;   システムワークエリア
                                ;   _CYL0:アドレス下位1バイトが080Hになるように
001F5C E580 FF                  _CYL0:  DB  0FFH    ;Cylinder
001F5D E581 FF                  _CYL1:  DB  0FFH    ;Cylinder
001F5E E582 FF                  _CYL2:  DB  0FFH    ;Cylinder
001F5F E583 FF                  _CYL3:  DB  0FFH    ;Cylinder
001F60 E584 00                  _DRIVE: DB  0   ;unit number
       E585                     _SEEKSP:
001F61 E585 00                      DB  0   ;Seek speed
001F62 E586 FF                  _ISEEK: DB  0FFH    ;
001F63 E587                         DS  1
001F64 E588 00                  _DRV:   DB  0
001F65 E589 FF                  _DSK:   DB  0FFH
001F66 E58A 8000                _DTA:   DW  00080H
001F68 E58C 0000                _CTC:   DW  0
001F6A E58E 0000                _TXADR: DW  0
001F6C E590 0000                _KEYPS: DW  0
001F6E E592 00FF                _KEYD:  DW  0FF00H  ;キーデータ
001F70 E594 0000                _KEYSP: DB  KEYSP_L,KEYSP_H ;オートリピートの速度
       E596                     _COLORF:
001F72 E596 00                      DB  COLORF  ;色
001F73 E597 19                  _LINE:  DB  LINE
                                
001F74 E598 0000                _FCB:   DW  0   ;SEARCH FILES
001F76 E59A 0000                _FBPS:  DW  0   ;    //
001F78 E59C 0000                _FBAD:  DW  0   ;    //
001F7A E59E 00                  _FBCNT: DB  0   ;    //
001F7B E59F 00                  _FILEN: DB  0   ;    //
001F7C E5A0 00                  _DIRF:  DB  0   ;bit7:ディレクトリ bit0-6:セクタインデックス
001F7D E5A1                         DS  1
       E5A2                     _WTFATF:
001F7E E5A2 00                      DB  0   ;FATバッファの更新フラグ
001F7F E5A3                         DS  1
001F80 E5A4 00                  _WTDBF: DB  0   ;データバッファの更新フラグ
001F81 E5A5 FF                  _DBDRV: DB  0FFH    ;データバッファにあるデータを読み込んだドライブ
001F82 E5A6 0000                _DBSEC: DW  0   ;データバッファにあるデータを読み込んだセクタ番号
001F84 E5A8 0000                _DPB:   DW  0
       E5AA                     _FATDRV:
001F86 E5AA FF                      DB  0FFH    ;FATバッファに読み込んでいるドライブ
001F87 E5AB 00                  _FATIX: DB  0   ;FATバッファに読み込んでいるインデックス
       E5AC                     _FAKEFREE:
001F88 E5AC 0000                    DW  0   ;偽の残量（FATサイズが大きくなると重くなるのでその対策）
                                
001F8A E5AE                         DS  2
                                
       E5B0                     CRTCD:
001F8C E5B0 6F                      DB  06FH
       E5B1                     _WIDTH:
001F8D E5B1 28                      DB  WIDTH
       E5B2                     TVRAMTOP:
001F8E E5B2 5938                    DB  059H,038H
001F90 E5B4 1F02                    DB  01FH,002H
       E5B6                     _LINE2:
001F92 E5B6 19                      DB  019H
       E5B7                     WKE4:
001F93 E5B7 1C                      DB  01CH
       E5B8                     WKE6:
001F94 E5B8 00                      DB  000H
       E5B9                     WK40:
001F95 E5B9 07                      DB  007H
       E5BA                     _PAGE_MINUS:
001F96 E5BA 18FC                    DW  0-WIDTH*LINE
       E5BC                     _WIDTH_MINUS:
001F98 E5BC D8FF                    DW  0-WIDTH
       E5BE                     WK30:
001F9A E5BE 0C                      DB  00CH
       E5BF                     WK31:
       E5BF                     WK1FD0:
001F9B E5BF 20                      DB  020H
                                
001F9C E5C0 0000                CTC0:   DW  INTCTCE
001F9E E5C2 0000                CTC1:   DW  INTCTCE
001FA0 E5C4 0000                CTC2:   DW  INTCTCE
001FA2 E5C6 0000                CTC3:   DW  INTCTCE
001FA4 E5C8 0000                INTVEC: DW  INT
                                
                                ;   LSX-Dodgers 独自BIOS
                                
001FA6 E5CA C3BDD1          10  _INKEY: JP  INKEY
001FA9 E5CD C3FED0          10  _PRINT: JP  PRINT
001FAC E5D0 C395D2          10  _SCRN:  JP  SCRN
001FAF E5D3 C375D2          10  _POS:   JP  POS
001FB2 E5D6 C380D2          10  _LOC:   JP  LOC
       E5D9                     _CHGDRV:
001FB5 E5D9 C3C8E1          10      JP  CHGDRV
       E5DC                     _GETDPB:
001FB8 E5DC C386E2          10      JP  GETDPB
       E5DF                     _FFLUSH:
001FBB E5DF C3A4E2          10      JP  FFLUSH
       E5E2                     _RDFATX:
001FBE E5E2 C3A4DE          10      JP  RDFATX
001FC1 E5E5 C3D3DF          10  _RDFAT: JP  RDFAT
001FC4 E5E8 C3BFE2          10  _WTTRK: JP  WTTRK
001FC7 E5EB C3C1E2          10  _FDRD:  JP  FDRD
001FCA E5EE C3BFE2          10  _FDWT:  JP  FDWT
       E5F1                     _BPB2DPB:
001FCD E5F1 C364E0          10      JP  BPB2DPB
       E5F4                     _BREAK:
001FD0 E5F4 C388CB          10      JP  END_BATCH
       E5F7                     _GNCL:
001FD3 E5F7 C34DDF          10      JP  GNCL        ; self-modifying code
       E5F8                     GNCPAT  EQU $-2
       E5FA                     _SNCL:
001FD6 E5FA C370DF          10      JP  SNCL        ; self-modifying code
       E5FB                     SNCPAT  EQU $-2
       E5FD                     _COMANL:
001FD9 E5FD C341CA          10      JP  COMANL
                                
       E600                     _WE:
[EOF:LDWORK.ASM:SHIFT_JIS]
                                    INCLUDE "LDCALL.ASM"
                                
                                ;   LSX-Dodgers システムコール(BDOS)
                                ;
                                ;   LSX-Dodgers SYSTEM CALL
                                ;   STABLE:アドレス下位1バイトが0になるように
                                
       E600                     STABLE:
                                ;0
001FDC E600 03E501D132D1FFD6        DW  _SYS00,_SYS01,_SYS02,_SYS03
001FE4 E608 69CE69CE37D109E5        DW  _SYS04,_SYS05,_SYS06,_SYS07
001FEC E610 3FD16BCEC3D157D2        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001FF4 E618 80CE85CE94CEA5CE        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001FFC E620 F9CE40CF89CFBACF        DW  _SYS10,_SYS11,_SYS12,_SYS13
002004 E628 C2CFD8CFEDCFE5CF        DW  _SYS14,_SYS15,_SYS16,_SYS17
00200C E630 34D039D03ED044D0        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
002014 E638 69CE6AD069CE6ED0        DW  _SYS1C,_SYS1D,_SYS1E,_SYS1F
                                ;2
00201C E640 69CE24D02CD075D0        DW  _SYS20,_SYS21,_SYS22,_SYS23
002024 E648 9BD069CE54DB2CDC        DW  _SYS24,_ERROR,_SYS26,_SYS27
00202C E650 2CD0A5D069D2FFD6        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
002034 E658 6FD2FFD669CEC6D0        DW  _SYS2C,_SYS2D,_SYS2E,_SYS2F
                                ;3
00203C E660 C0D069CE69CE69CE        DW  _SYS30,_ERROR,_ERROR,_ERROR
002044 E668 69CE69CE69CE69CE        DW  _ERROR,_ERROR,_ERROR,_ERROR
00204C E670 69CEFFD6FFD6E7D0        DW  _ERROR,_SYS39,_SYS3A,_SYS5A
                                ;DOS2
002054 E678 4CCE                    DW  _DOS2
                                
002056 E67A                         DS  1
       E67B                     _MAX_SEC_SZ_H:
002057 E67B 02                      DB  MAX_SEC_SZ_H
       E67C                     _FATBF:
002058 E67C 00E8                    DW  FATBF
       E67E                     _DTBUF:
00205A E67E 00EE                    DW  DTBUF
                                
                                ;   コントロールコードテーブル
                                ;   CTRLTB:アドレス下位1バイトが080Hになるように
                                
       E680                     CTRLTB:
00205C E680 00000000A5D20000        DW  CTRL00,CTRL00,CTRL02,CTRL03 ;  A,B,C
002064 E688 0000000000000000        DW  CTRL04,CTRL05,CTRL06,CTRL07 ;D,E,F,G
00206C E690 0000000000000000        DW  CTRL08,CTRL09,CTRL0A,CTRL0B ;H,I,J,K
002074 E698 0000000000000000        DW  CTRL0C,CTRL0D,CTRL0E,CTRL00 ;L,M,N,O
00207C E6A0 0000000000000000        DW  CTRL00,CTRL00,CTRL12,CTRL00 ;P,Q,R,S
002084 E6A8 0000000000000000        DW  CTRL00,CTRL00,CTRL00,CTRL00 ;T,U,V,W
00208C E6B0 0000000000000000        DW  CTRL00,CTRL00,CTRL0C,CTRL1B ;X,Y,Z,ESC
002094 E6B8 0000000000000000        DW  CTRL1C,CTRL1D,CTRL1E,CTRL1F ;→,←,↑,↓
                                
00209C E6C0 0200                M2D:    DW  2
00209E E6C2 FD02                    DB  0FDH,2
0020A0 E6C4 6401                    DW  356
0020A2 E6C6 FF0728090182            DB  0FFH,7,40,9,1,082H
0020A8 E6CC 0500A7000800            DW  5,0A7H,8
                                
0020AE E6D2 0200                M2HD:   DW  2
0020B0 E6D4 FE01                    DB  0FEH,1
0020B2 E6D6 C704                    DW  1223
0020B4 E6D8 FE064D080184            DB  0FEH,6,77,8,1,084H
0020BA E6DE 0500A7000900            DW  5,0A7H,9
                                
0020C0 E6E4 1617                SDDATA: DB  22,23       ;(FCB)ファイルを最後に変更した時刻
0020C2 E6E6 1415                    DB  20,21       ;(FCB)ファイルを最後に変更した日付
0020C4 E6E8 1A1B                    DB  26,27       ;(FCB)ファイルの先頭クラスタ
0020C6 E6EA 10111213                DB  16,17,18,19 ;(FCB)ファイルのサイズ(バイト単位)
       E6EE                     SDDATAE:
                                
0020CA E6EE                         DS  2
       E6F0                     _FCB_BAT:
0020CC E6F0 3DE4                    DW  FCB_BAT
       E6F2                     _PATH:
0020CE E6F2 DCE3                    DW  PATHD
                                
0020D0 E6F4                     SCDIR:  DS  2       ;+14 +15
0020D2 E6F6                     SFBPS:  DS  2       ;FBPS
0020D4 E6F8                     SFNDF:  DS  2       ;FILEN DIRF
                                
0020D6 E6FA 0000                _FATPS: DW  0
0020D8 E6FC 0000                _DIRPS: DW  0
0020DA E6FE 0000                _CLPS:  DW  0
                                
       E700                     _PE:
[EOF:LDCALL.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDPB.ASM"
                                
                                ;   LSX-Dodgers DPB
                                ;   MSX
                                
       E700                     _DEVICE:
                                
                                ;   A:
                                
0020DC E700 0300                    DW  3   ;DPB_FATLN
0020DE E702 EBE5                    DW  _FDRD   ;DPB_DRD
0020E0 E704 EEE5                    DW  _FDWT   ;DPB_DWT
0020E2 E706 F9                      DB  0F9H    ;DPB_FATID
0020E3 E707 03                      DB  3   ;DPB_SECPCL
0020E4 E708 CB02                    DW  715 ;DPB_MAXCL
0020E6 E70A 00                      DB  0   ;DPB_FDMODE
0020E7 E70B 07                      DB  7   ;DPB_DIRSCNT
0020E8 E70C 01                      DB  1   ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
0020E9 E70D 00                      DB  0   ;DPB_MAXSEC
0020EA E70E 01                      DB  1   ;DPB_FATPS
0020EB E70F 82                      DB  082H    ;DPB_BPS
0020EC E710 0700                    DW  7   ;DPB_DIRPS
0020EE E712 2C                      DB  02CH    ;DPB_DEVICE
0020EF E713 00                      DB  0   ;DPB_UNITNO
0020F0 E714 0A00                    DW  10  ;DPB_ADDCL
0020F2 E716 0000                    DW  0   ;DPB_16
0020F4 E718 0000                    DW  0   ;DPB_18
0020F6 E71A 0000                    DW  0   ;DPB_SDIR
0020F8 E71C 524F4D30                DB  "ROM0"  ;DPB_NAME
                                
                                ;   B:
                                
0020FC E720 0300                    DW  3   ;DPB_FATLN
0020FE E722 EBE5                    DW  _FDRD   ;DPB_DRD
002100 E724 EEE5                    DW  _FDWT   ;DPB_DWT
002102 E726 F9                      DB  0F9H    ;DPB_FATID
002103 E727 03                      DB  3   ;DPB_SECPCL
002104 E728 CB02                    DW  715 ;DPB_MAXCL
002106 E72A 00                      DB  0   ;DPB_FDMODE
002107 E72B 07                      DB  7   ;DPB_DIRSCNT
002108 E72C 2E                      DB  46  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
002109 E72D 00                      DB  0   ;DPB_MAXSEC
00210A E72E 01                      DB  1   ;DPB_FATPS
00210B E72F 82                      DB  082H    ;DPB_BPS
00210C E730 0700                    DW  7   ;DPB_DIRPS
00210E E732 2C                      DB  02CH    ;DPB_DEVICE
00210F E733 01                      DB  1   ;DPB_UNITNO
002110 E734 0A00                    DW  10  ;DPB_ADDCL
002112 E736 0000                    DW  0   ;DPB_16
002114 E738 0000                    DW  0   ;DPB_18
002116 E73A 0000                    DW  0   ;DPB_SDIR
002118 E73C 524F4D31                DB  "ROM1"  ;DPB_NAME
                                
                                ;   C:
                                
00211C E740                         DS  32
                                
                                ;   D:
                                
00213C E760                         DS  32
                                
                                ;   E:
                                
00215C E780 0300                    DW  3   ;DPB_FATLN
00215E E782 83E3                    DW  PDRD    ;DPB_DRD
002160 E784 56E3                    DW  PDWT    ;DPB_DWT
002162 E786 F9                      DB  0F9H    ;DPB_FATID
002163 E787 03                      DB  3   ;DPB_SECPCL
002164 E788 CB02                    DW  715 ;DPB_MAXCL
002166 E78A FF                      DB  0FFH    ;DPB_FDMODE
002167 E78B 07                      DB  7   ;DPB_DIRSCNT
002168 E78C 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
002169 E78D 09                      DB  9   ;DPB_MAXSEC
00216A E78E 01                      DB  1   ;DPB_FATPS
00216B E78F 82                      DB  082H    ;DPB_BPS
00216C E790 0700                    DW  7   ;DPB_DIRPS
00216E E792 2C                      DB  02CH    ;DPB_DEVICE
00216F E793 00                      DB  0   ;DPB_UNITNO
002170 E794 0A00                    DW  10  ;DPB_ADDCL
002172 E796 0000                    DW  0   ;DPB_16
002174 E798 0000                    DW  0   ;DPB_18
002176 E79A 0000                    DW  0   ;DPB_SDIR
002178 E79C 44534B30                DB  "DSK0"  ;DPB_NAME
                                
                                ;   F:
                                
00217C E7A0 0300                    DW  3   ;DPB_FATLN
00217E E7A2 83E3                    DW  PDRD    ;DPB_DRD
002180 E7A4 56E3                    DW  PDWT    ;DPB_DWT
002182 E7A6 F9                      DB  0F9H    ;DPB_FATID
002183 E7A7 03                      DB  3   ;DPB_SECPCL
002184 E7A8 CB02                    DW  715 ;DPB_MAXCL
002186 E7AA FF                      DB  0FFH    ;DPB_FDMODE
002187 E7AB 07                      DB  7   ;DPB_DIRSCNT
002188 E7AC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
002189 E7AD 09                      DB  9   ;DPB_MAXSEC
00218A E7AE 01                      DB  1   ;DPB_FATPS
00218B E7AF 82                      DB  082H    ;DPB_BPS
00218C E7B0 0700                    DW  7   ;DPB_DIRPS
00218E E7B2 2C                      DB  02CH    ;DPB_DEVICE
00218F E7B3 01                      DB  1   ;DPB_UNITNO
002190 E7B4 0A00                    DW  10  ;DPB_ADDCL
002192 E7B6 0000                    DW  0   ;DPB_16
002194 E7B8 0000                    DW  0   ;DPB_18
002196 E7BA 0000                    DW  0   ;DPB_SDIR
002198 E7BC 44534B31                DB  "DSK1"  ;DPB_NAME
                                
                                ;   G:
                                
00219C E7C0 0300                    DW  3   ;DPB_FATLN
00219E E7C2 83E3                    DW  PDRD    ;DPB_DRD
0021A0 E7C4 56E3                    DW  PDWT    ;DPB_DWT
0021A2 E7C6 F9                      DB  0F9H    ;DPB_FATID
0021A3 E7C7 03                      DB  3   ;DPB_SECPCL
0021A4 E7C8 CB02                    DW  715 ;DPB_MAXCL
0021A6 E7CA FF                      DB  0FFH    ;DPB_FDMODE
0021A7 E7CB 07                      DB  7   ;DPB_DIRSCNT
0021A8 E7CC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
0021A9 E7CD 09                      DB  9   ;DPB_MAXSEC
0021AA E7CE 01                      DB  1   ;DPB_FATPS
0021AB E7CF 82                      DB  082H    ;DPB_BPS
0021AC E7D0 0700                    DW  7   ;DPB_DIRPS
0021AE E7D2 2C                      DB  02CH    ;DPB_DEVICE
0021AF E7D3 02                      DB  2   ;DPB_UNITNO
0021B0 E7D4 0A00                    DW  10  ;DPB_ADDCL
0021B2 E7D6 0000                    DW  0   ;DPB_16
0021B4 E7D8 0000                    DW  0   ;DPB_18
0021B6 E7DA 0000                    DW  0   ;DPB_SDIR
0021B8 E7DC 44534B32                DB  "DSK2"  ;DPB_NAME
                                
                                ;   H:
0021BC E7E0 0300                    DW  3   ;DPB_FATLN
0021BE E7E2 83E3                    DW  PDRD    ;DPB_DRD
0021C0 E7E4 56E3                    DW  PDWT    ;DPB_DWT
0021C2 E7E6 F9                      DB  0F9H    ;DPB_FATID
0021C3 E7E7 03                      DB  3   ;DPB_SECPCL
0021C4 E7E8 CB02                    DW  715 ;DPB_MAXCL
0021C6 E7EA FF                      DB  0FFH    ;DPB_FDMODE
0021C7 E7EB 07                      DB  7   ;DPB_DIRSCNT
0021C8 E7EC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
0021C9 E7ED 09                      DB  9   ;DPB_MAXSEC
0021CA E7EE 01                      DB  1   ;DPB_FATPS
0021CB E7EF 82                      DB  082H    ;DPB_BPS
0021CC E7F0 0700                    DW  7   ;DPB_DIRPS
0021CE E7F2 2C                      DB  02CH    ;DPB_DEVICE
0021CF E7F3 07                      DB  7   ;DPB_UNITNO
0021D0 E7F4 0A00                    DW  10  ;DPB_ADDCL
0021D2 E7F6 0000                    DW  0   ;DPB_16
0021D4 E7F8 0000                    DW  0   ;DPB_18
0021D6 E7FA 0000                    DW  0   ;DPB_SDIR
0021D8 E7FC 44534B37                DB  "DSK7"  ;DPB_NAME
       E800                     MSX_E:
[EOF:MSXDPB.ASM:UTF_8]
                                
0021DC E800                         DS  03FFFH - $$
003FFF 0623 00                      DB  0
       0624                     LAST_ADR:
                                
                                    END
[EOF:MSX.ASM:UTF_8]
