                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.0.0, LST:Full:4
                                ;   LSX-Dodgers for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "MSXDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       0003                     MAC EQU 3   ;MSX
       0001                     DEV EQU 1
                                
       001D                     VER_6F  EQU 0001DH
                                
       4000                     RUN EQU 04000H
                                
       C700                     START2  EQU 0C700H
       C906                     BDOS    EQU 0C906H
       E400                     WORKAD  EQU 0E400H
       E700                     FATBF   EQU 0E700H
       EF00                     DTBUF   EQU 0EF00H
       0028                     WIDTH   EQU 40
       0019                     LINE    EQU 25
       0000                     COLORF  EQU 0
       0000                     KEYSP_H EQU 0
       0000                     KEYSP_L EQU 0
       0008                     COMS    EQU 8
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
                                
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PINLIN  EQU 000AEH
       00B1                     INLIN   EQU 000B1H
       00B4                     QINLIN  EQU 000B4H
       00B7                     BREAKX  EQU 000B7H
       00C0                     BEEP    EQU 000C0H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0144                     PHYDIO  EQU 00144H  ;MAIN:BIOS:
       0156                     KILBUF  EQU 00156H
                                
       FEDA                     H_STKE  EQU 0FEDAH
       FFA7                     H_PHYD  EQU 0FFA7H
                                
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU 06000H
       6800                     BANK1_SEL EQU 06800H
       7000                     BANK2_SEL EQU 07000H
       7800                     BANK3_SEL EQU 07800H
                                            ;ASCII-16K
                                ;BANK0_SEL EQU 06000H
                                ;BANK1_SEL EQU 07000H
                                            ;KONAMI-8K
       8000                     KONAMI_BANK2_SEL EQU 08000H
       A000                     KONAMI_BANK3_SEL EQU 0A000H
[EOF:MSXDEF.ASM:UTF_8]
                                    INCLUDE "LDDEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                
       0001                     VER_1   EQU 1
       0005                     VER_2   EQU 5
       0008                     VER_3   EQU 8
       1D03                     MACW    EQU MAC + 01D00H    ;機種フラグとLD判別フラグ
       0103                     MACD    EQU MAC + DEV * 256 ;機種フラグとデバイスフラグ
       0158                     VER EQU VER_1 * 256 + VER_2 * 16 + VER_3
                                
       0005                     SYSTEM  EQU 00005H
       000F                     JP_HL   EQU 0000FH
       005C                     FCB1    EQU 0005CH
       006C                     FCB2    EQU 0006CH
       005D                     FCB1FN  EQU FCB1+1
       006D                     FCB2FN  EQU FCB2+1
       0080                     DTA1    EQU 00080H
                                
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       0000                     DPB_FATLN   EQU 00H
       0002                     DPB_DRD     EQU 02H
       0004                     DPB_DWT     EQU 04H
       0006                     DPB_FATID   EQU 06H
       0007                     DPB_SECPCL  EQU 07H
       0008                     DPB_MAXCL   EQU 08H
       000A                     DPB_FDMODE  EQU 0AH
       000B                     DPB_DIRSCNT EQU 0BH
       000C                     DPB_MAXCYL  EQU 0CH
       000D                     DPB_MAXSEC  EQU 0DH
       000E                     DPB_FATPS   EQU 0EH
       000F                     DPB_BPS     EQU 0FH
       0010                     DPB_DIRPS   EQU 10H
       0012                     DPB_DEVICE  EQU 12H
       0013                     DPB_UNITNO  EQU 13H
       0014                     DPB_ADDCL   EQU 14H
                                
       001A                     DPB_SDIR    EQU 1AH
       001C                     DPB_NAME    EQU 1CH
                                
[EOF:LDDEF.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\hardware.asm"
                                ; C-BIOS hardware related declarations
                                ;
                                ; Copyright (c) 2002-2005 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2004-2005 Joost Yervante Damad.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                ;---------------------------------------------------
                                ; I/O ports
                                
       002E                     DBG_CTRL:       equ     $2E             ; openMSX debugdevice control (mode)
       002F                     DBG_DATA:       equ     $2F             ; openMSX debugdevice data
                                
       0090                     PRN_STAT:       equ     $90             ; printer status
       0091                     PRN_DATA:       equ     $91             ; printer data
                                
       0098                     VDP_DATA:       equ     $98             ; VDP data port (VRAM read/write)
       0099                     VDP_ADDR:       equ     $99             ; VDP address (write only)
       0099                     VDP_STAT:       equ     $99             ; VDP status (read only)
       009A                     VDP_PALT:       equ     $9A             ; VDP palette latch (write only)
       009B                     VDP_REGS:       equ     $9B             ; VDP register access (write only)
                                
       00A0                     PSG_REGS:       equ     $A0             ; PSG register write port
       00A1                     PSG_DATA:       equ     $A1             ; PSG value write port
       00A2                     PSG_STAT:       equ     $A2             ; PSG value read port
                                
       00A8                     PSL_STAT:       equ     $A8             ; slot status
       00A9                     KBD_STAT:       equ     $A9             ; keyboard status
       00AA                     GIO_REGS:       equ     $AA             ; General IO Register
       00AB                     PPI_REGS:       equ     $AB             ; PPI register
                                
       00B4                     RTC_ADDR:       equ     $B4             ; RTC address
       00B5                     RTC_DATA:       equ     $B5             ; RTC data
                                
       00F4                     SYSFLAGS:       equ     $F4             ; MSX2+ System flags,
                                                                        ; preserved after reset
                                                                        ; bit 5: CPU boot mode (1=R800)
                                                                        ; bit 7: Boot method
                                                                        ;        (1=soft boot, no logo)
                                
       00FC                     MAP_REG1:       equ     $FC             ; memory mapper: bank in $0000-$3FFF
       00FD                     MAP_REG2:       equ     $FD             ; memory mapper: bank in $4000-$7FFF
       00FE                     MAP_REG3:       equ     $FE             ; memory mapper: bank in $8000-$BFFF
       00FF                     MAP_REG4:       equ     $FF             ; memory mapper: bank in $C000-$FFFF
                                
                                ;---------------------------------------------------
                                ; memory mapped I/O
                                
       FFFF                     SSL_REGS:       equ     $FFFF           ; secondary slot select registers
                                
                                ;---------------------------------------------------
                                ; Constants used to define which hardware the BIOS will run on.
                                ; Used by the main_<model>.asm sources.
                                
                                ; VDP models:
       9918                     TMS99X8:        equ     $9918
       9938                     V9938:          equ     $9938
       9958                     V9958:          equ     $9958
                                
                                ; MSX models:
       0000                     MODEL_MSX1:     equ     0
       0001                     MODEL_MSX2:     equ     1
       0002                     MODEL_MSX2P:    equ     2
       0003                     MODEL_MSXTR:    equ     3
                                
       0004                     MODEL_SUBROM:   equ     4
                                
                                ; Locales:
                                ; -- ID byte 0
       0000                     LOCAL_CHSET_JP  equ     $00
       0001                     LOCAL_CHSET_US  equ     $01
       0002                     LOCAL_CHSET_KO  equ     $02
                                
                                ; There are charsets which pretend to be INT, but are not... For now only BR:
       0000                     LOCAL_CHSET_VAR_NONE equ  $00
       0001                     LOCAL_CHSET_VAR_BR   equ  $01
                                
       0000                     LOCAL_DATE_YMD  equ     $00
       0010                     LOCAL_DATE_MDY  equ     $10
       0020                     LOCAL_DATE_DMY  equ     $20
                                
       0000                     LOCAL_INT_60HZ  equ     $00
       0080                     LOCAL_INT_50HZ  equ     $80
                                
                                ; -- ID byte 1
       0000                     LOCAL_KBD_JP    equ     $00
       0001                     LOCAL_KBD_US    equ     $01
       0002                     LOCAL_KBD_FR    equ     $02
       0003                     LOCAL_KBD_UK    equ     $03
       0004                     LOCAL_KBD_DE    equ     $04
                                
       0000                     LOCAL_BASIC_JP  equ     $00
       0001                     LOCAL_BASIC_US  equ     $01
                                
                                
                                ; BOOLEAN VALUES
       0001                     YES:            equ     1
       0000                     NO:             equ     0
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:hardware.asm:UTF_8]
                                    INCLUDE "msx_cbios\\systemvars.asm"
                                ;
                                ; C-BIOS system variable declarations
                                ;
                                ; Copyright (c) 2002-2003 BouKiCHi.  All rights reserved.
                                ; Copyright (c) 2003 Reikan.  All rights reserved.
                                ; Copyright (c) 2004-2005 Maarten ter Huurne.  All rights reserved.
                                ; Copyright (c) 2004 Manuel Bilderbeek.  All rights reserved.
                                ; Copyright (c) 2004-2006 Joost Yervante Damad.  All rights reserved.
                                ; Copyright (c) 2004-2005 Albert Beevendorp.  All rights reserved.
                                ; Copyright (c) 2005 Jussi Pitkänen.  All rights reserved.
                                ;
                                ; Redistribution and use in source and binary forms, with or without
                                ; modification, are permitted provided that the following conditions
                                ; are met:
                                ; 1. Redistributions of source code must retain the above copyright
                                ;    notice, this list of conditions and the following disclaimer.
                                ; 2. Redistributions in binary form must reproduce the above copyright
                                ;    notice, this list of conditions and the following disclaimer in the
                                ;    documentation and/or other materials provided with the distribution.
                                ;
                                ; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
                                ; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
                                ; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
                                ; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
                                ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                ; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
                                ; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
                                ; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                ; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
                                ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                ;
                                
                                
                                ;-------------------
                                ; help function area
                                ;-------------------
                                ; Note: Functions defined in "main.asm" are disabled here.
                                
                                ; F380-F384: interslot read
                                ;RDPRIM:         equ     $F380
                                
                                ; F385-F38B: interslot read
                                ;WRPRIM:         equ     $F385
                                
                                ; F38C-F399: interslot call
                                ;CLPRIM:         equ     $F38C
                                
                                ; F39A-F3AD: workarea for the DEF USR statement
                                ; this area is initialized with the 10 times the value $475A, which gives
                                ; the error 'Syntax Error'
       F39A                     USRTAB:         equ     $F39A
                                
                                ;----------------------
                                ; screen parameter area
                                ;----------------------
                                
                                ; F3AE: # of positions on a line in SCREEN 0 (ini:39)
       F3AE                     LINL40:         equ     $F3AE
                                
                                ; F3AF: # of positions on a line in SCREEN 1 (ini:29)
       F3AF                     LINL32:         equ     $F3AF
                                
                                ; F3B0: # of actually used positions in the current screenmodus (ini:39)
       F3B0                     LINLEN:         equ     $F3B0
                                
                                ; F3B1: # of used lines on screen (ini:24)
       F3B1                     CRTCNT:         equ     $F3B1
                                
                                ; F3B2: # of positions within a tabulator-column (ini:14)
       F3B2                     CLMLST:         equ     $F3B2
                                
                                ; F3B3-F3B4: BASE(0): name table address for SCREEN 0 (ini:$0000)
                                ; used to initialize NAMBAS when SCREEN 0 is activated
       F3B3                     TXTNAM:         equ     $F3B3
                                
                                ; F3B5-F3B6: BASE(1): color table address for SCREEN 0, unused? (ini:$0000)
       F3B5                     TXTCOL:         equ     $F3B5
                                
                                ; F3B7-F3B8: BASE(2): pattern table address for SCREEN 0 (ini:$0800)
                                ; used to initialize CGPBAS when SCREEN 0 is activated
       F3B7                     TXTCGP:         equ     $F3B7
                                
                                ; F3B9-F3BA: BASE(3): sprite attribute table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize ATRBAS when SCREEN 0 is activated
       F3B9                     TXTATR:         equ     $F3B9
                                
                                ; F3BB-F3BC: BASE(4): sprite pattern table address for SCREEN 0, unused (ini:$0000)
                                ; used to initialize PATBAS when SCREEN 0 is activated
       F3BB                     TXTPAT:         equ     $F3BB
                                
                                ; F3BD-F3BE: BASE(5): nametable address for SCREEN 1 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 1 is activated
       F3BD                     T32NAM:         equ     $F3BD
                                
                                ; F3BF-F3C0: BASE(6): color table address for SCREEN 1 (ini:$2000)
       F3BF                     T32COL:         equ     $F3BF
                                
                                ; F3C1-F3C2: BASE(7): pattern table address for SCREEN 1 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 1 is activated
       F3C1                     T32CGP:         equ     $F3C1
                                
                                ; F3C3-F3C4: BASE(8): sprite attribute table address for SCREEN 1 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 1 is activated
       F3C3                     T32ATR:         equ     $F3C3
                                
                                ; F3C5-F3C6: BASE(9): sprite pattern table address for SCREEN 1 (ini:$0800)
                                ; used to initialize PATBAS when SCREEN 1 is activated
       F3C5                     T32PAT:         equ     $F3C5
                                
                                ; F3C7-F3C8: BASE(10): name table address for SCREEN 2 (ini:$1800)
                                ; used to initialize NAMBAS when SCREEN 2 is activated
       F3C7                     GRPNAM:         equ     $F3C7
                                
                                ; F3C9-F3CA: BASE(11): color table address for SCREEN 2 (ini:$2000)
       F3C9                     GRPCOL:         equ     $F3C9           ; Screen2 Color
                                
                                ; F3CB-F3CC: BASE(12): pattern table address for SCREEN 2 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 2 is activated
       F3CB                     GRPCGP:         equ     $F3CB
                                
                                ; F3CD-F3CE: BASE(13): sprite attribute table address for SCREEN 2 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 2 is activated
       F3CD                     GRPATR:         equ     $F3CD
                                
                                ; F3CF-F3D0: BASE(14): sprite pattern table address for SCREEN 2 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 2 is activated
       F3CF                     GRPPAT:         equ     $F3CF
                                
                                ; F3D1-F3D2: BASE(15): name table address for SCREEN 3 (ini:$0800)
                                ; used to initialize NAMBAS when SCREEN 3 is activated
       F3D1                     MLTNAM:         equ     $F3D1
                                
                                ; F3D3-F3D4: BASE(16): color table address for SCREEN 3 (ini:$0000)
                                ; the color table is unused in SCREEN 3
       F3D3                     MLTCOL:         equ     $F3D3
                                
                                ; F3D5-F3D6: BASE(17): pattern table address for SCREEN 3 (ini:$0000)
                                ; used to initialize CGPBAS when SCREEN 3 is activated
       F3D5                     MLTCGP:         equ     $F3D5
                                
                                ; F3D7-F3D8: BASE(18): sprite attribute table address for SCREEN 3 (ini:$1B00)
                                ; used to initialize ATRBAS when SCREEN 3 is activated
       F3D7                     MLTATR:         equ     $F3D7
                                
                                ; F3D9-F3DA: BASE(19): sprite pattern table address for SCREEN 3 (ini:$3800)
                                ; used to initialize PATBAS when SCREEN 3 is activated
       F3D9                     MLTPAT:         equ     $F3D9
                                
                                ; F3DB: keyclick when a key is pressed: 0: no, 1: yes (ini: 1)
                                ; SCREEN ,,n will write to this address
       F3DB                     CLIKSW:         equ     $F3DB
                                
                                ; F3DC: line where the cursor is located
                                ; starts to count at 1 for the topmost line
       F3DC                     CSRY:           equ     $F3DC
                                
                                ; F3DD: column where the cursor is located
                                ; starts to count at 1 for the leftmost column
       F3DD                     CSRX:           equ     $F3DD
                                
                                ; F3DE: function key definition shown: 0: no, -1: yes
                                ; Note: MSX BIOS will mess up end-of-screen if this variable contains
                                ;       something other than $00 or $FF.
       F3DE                     CNSDFG:         equ     $F3DE
                                
                                ; F3DF-D3E6: storage for the last written value towards VDP registers 0 till 7
                                ; this is needed because these registers are write only
       F3DF                     RG0SAV:         equ     $F3DF
       F3E0                     RG1SAV:         equ     $F3E0
       F3E1                     RG2SAV:         equ     $F3E1
       F3E2                     RG3SAV:         equ     $F3E2
       F3E3                     RG4SAV:         equ     $F3E3
       F3E4                     RG5SAV:         equ     $F3E4
       F3E5                     RG6SAV:         equ     $F3E5
       F3E6                     RG7SAV:         equ     $F3E6
                                ; F3E7: last read value of VDP register 8
       F3E7                     STATFL:         equ     $F3E7
                                
                                ; F3E8: information about the joystick and space bar
                                ; 7 6 5 4 3 2 1 0
                                ; | | | |       +-- Space bar, trig(0) (0 = pressed)
                                ; | | | +---------- Stick 1, Trigger 1 (0 = pressed)
                                ; | | +------------ Stick 1, Trigger 2 (0 = pressed)
                                ; | +-------------- Stick 2, Trigger 1 (0 = pressed)
                                ; +---------------- Stick 2, Trigger 2 (0 = pressed)
       F3E8                     TRGFLG:         equ     $F3E8
                                
                                ; F3E9: code for the standard foreground color (ini:15)
       F3E9                     FORCLR:         equ     $F3E9
                                
                                ; F3EA: code for the standard background color (ini:4)
       F3EA                     BAKCLR:         equ     $F3EA
                                
                                ; F3EB: code for the standard border color (ini:7)
       F3EB                     BDRCLR:         equ     $F3EB
                                
                                ; F3EC-F3EE: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EC                     MAXUPD:         equ     $F3EC
                                
                                ; F3EF-F3F1: Jump instruction used by Basic LINE command.
                                ; The routines used are: RIGHTC, LEFTC, UPC and DOWNC
       F3EF                     MINUPD:         equ     $F3EF
                                
                                ; F3F2: working color, as used for graphical operations
                                ; normally equals to the foreground color (ini:15)
       F3F2                     ATRBYT:         equ     $F3F2
                                
                                ; F3F3-F3F4: starting value of the address of the queue-table
                                ; the queue-table contains 4 queue's: 3 for sound and one for RS232
                                ; (ini: QUETAB ($F959))
       F3F3                     QUEUES:         equ     $F3F3
                                
                                ; F3F5: CLOAD flag =0 when CLOAD =255 when CLOAD?
       F3F5                     FRCNEW:         equ     $F3F5
                                
                                ; F3F6: VDP-interupt counter that counts from 3 to 0, when it reaches zero, the
                                ; keyboard matrix is scanned, and the counters is reset at 3
       F3F6                     SCNCNT:         equ     $F3F6
                                
                                ; F3F7: key repeat counter. Runs from 13 to 0, and is changed when SCNCNT is changed
                                ; if the key remained the same. If it reaches 0, keyrepetition starts. If another key
                                ; is pressed the value is reset at 13.
       F3F7                     REPCNT:         equ     $F3F7
                                
                                ; F3F8-F3F9: first free space in the inputbuffer of the keyboard
                                ; everytime a key is added to the inputbuffer, this address is incremented,
                                ; when it equals to GETPNT, the buffer is full
                                ; the buffer is located at KEYBUF
       F3F8                     PUTPNT:         equ     $F3F8
                                
                                ; F3FA-F3FB: address in inputbuffer of first character that is not yet read
                                ; everytime a key is read from the buffer it is incremented
                                ; the buffer is located at KEYBUF
       F3FA                     GETPNT:         equ     $F3FA
                                
                                ; F3FC-F400: memory area for tape system parameters for 1200 baud
                                ; F3FC: length of  low signal for 0     (ini:83)
                                ; F3FD: length of high signal for 0     (ini:92)
                                ; F3FE: length of  low signal for 1     (ini:38)
                                ; F3FF: length of high signal for 1     (ini:45)
                                ; F400: length of synchronization block (ini:15)
       F3FC                     CS120:          equ     $F3FC
                                
                                ; F401-F405: memory area for tape system parameters for 1200 baud
                                ; F401: length of  low signal for 0     (ini:37)
                                ; F402: length of high signal for 0     (ini:45)
                                ; F403: length of  low signal for 1     (ini:14)
                                ; F404: length of high signal for 1     (ini:22)
                                ; F405: length of synchronization block (ini:31)
       F401                     CS240:          equ     $F401
                                
                                ; F406-F407: lenghts of signal for 0 for the current speed of the tape system
                                ; either equal to the content of F3FC-F3FD or the content of F401-F402
                                ; (ini: 83, 92)
       F406                     LOW_:           equ     $F406 ; real name: LOW, but doesn't compile?
                                
                                ; F408-F409: lenghts of signal for 1 for the current speed of the tape system
                                ; either equal to the content of F3FE-F3FF or the content of F403-F404
                                ; (ini: 38, 45)
       F408                     HIGH_:          equ     $F408 ; real name: HIGH, but doesn't compile?
                                
                                ; F40A: lenghts of synchronization block for the current speed of the tape system
                                ; either equal to the content of F400 or the content of F405 (ini: 15)
       F40A                     HEADER:         equ     $F40A
                                
                                ; F40B-F40C: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; only the byte in F40B is actually used
                                ; If ASPECT2 is larger then 255, the value of F40B is the number of horizontal
                                ; dots per 256 verical dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40B                     ASPCT1:         equ     $F40B
                                
                                ; F40D-F40E: standard setting for the height/width aspect of the
                                ; BASIC statement CIRCLE; If ASPCT2 is smaller then 512, then ASPCT2 is the
                                ; number of vertical dots per 256 horizontal dots of the radius (ini:$0100)
                                ; ! not verified :)
       F40D                     ASPCT2:         equ     $F40D
                                
                                ; F40F-F413: work area for the BASIC statement RESUME NEXT
                                ; contains a fake end of basic program
                                ; (ini: 58, 0, 0, 0, 0)
       F40F                     ENDPRG:         equ     $F40F
                                
                                ; F414: errornumber of last error that happened while executing a BASIC program
                                ; (ini:0)
       F414                     ERRFLG:         equ     $F414
                                
                                ; F415: number of characters in the writebuffer of the printer that still
                                ; need printing
       F415                     LPTPOS:         equ     $F415
                                
                                ; F416: switch indicating if output should be screen or printer
                                ; (think LIST vs LLIST) (ini:0) values: 0: screen, 1: printer
       F416                     PRTFLG:         equ     $F416
                                
                                ; F417: switch indicating if hooked up printer is an MSX printer or not
                                ; values: 0: MSX-Printer, 1: no MSX-Printer
                                ; if the printer is no MSX-Printer, non-ASCII (>=128) characters are replaced
                                ; by spaces before sending them to the printer (ini: 0)
       F417                     NTMSXP:         equ     $F417
                                
                                ; F418: switch indicating of printing routines should use raw-mode or
                                ; should convert:
                                ; =0 to convert tabs and unknown characters to spaces and remove graphical headers
                                ; =1 to send data just like it gets it (ini: 0)
                                ; if RAWPRT is 1, the value if NTMSXP is ignored
       F418                     RAWPRT:         equ     $F418
                                
                                ; ---------------------------
                                ; basic interpreter work area
                                ; ---------------------------
                                
                                ; F419-F41A: work area for the BASIC command VAL: contains address of character that
                                ; has temporarely been replaced by O by VAL
       F419                     VLZADR:         equ     $F419
                                
                                ; F41B: work area for the BASIC command VAL: contains the character originally at
                                ; the location of VLZADR
       F41B                     VLZDAT:         equ     $F41B
                                
                                ; F41C-F41D: line number of current BASIC line being executed, in direct modus this
                                ; contains $FFFF (ini:$FFFF)
       F41C                     CURLIN:         equ     $F41C
                                
                                ; F41E: error detection prefix for KBUF, always contains ":"
                                ; originally undocumented :)
       F41E                     KBFMIN:         equ     $F41E
                                
                                ; F41F-F55C: workarea for coding basic rules that have been typed in direct modus
                                ; this are contains the code for the line interpreted in direct modus
       F41F                     KBUF:           equ     $F41F
                                
                                ; F55D: byte used as first byte of BUF for input statements, giving them always
                                ; an extra ',' (ini:44 == ',')
       F55D                     BUFMIN:         equ     $F55D
                                
                                ; F55E-F65F: used in direct modus to store the ASCII codes of the line, or simulary
                                ; for INPUT or LINE INPUT BASIC statements
       F55E                     BUF:            equ     $F55E
                                
                                ; F562-F570: used by bitblit routines to store the register data
       F562                     SX:             equ     $F562
       F564                     SY:             equ     $F564
       F566                     DX:             equ     $F566
       F568                     DY:             equ     $F568
       F56A                     NX:             equ     $F56A
       F56C                     NY:             equ     $F56C
       F56E                     CDUMMY:         equ     $F56E
       F56F                     ARG_:           equ     $F56F
       F570                     L_OP:           equ     $F570
                                
                                ; F660: last usable byte of BUF
       F660                     ENDBUF:         equ     $F660
                                
                                ; F661: number of column of last written character on the screen
       F661                     TTYPOS:         equ     $F661
                                
                                ; F662: switch indicating during variable lookup for arrays, if this has not already
                                ; been done for a DIM BASIC statement
       F662                     DIMFLG:         equ     $F662
                                
                                ; F663: workarea for evaluation of expressions; contains type of last evaluated
                                ; expression; the value of the expression is in DAC, possible values of VALTYP:
                                ; 2: integer
                                ; 3: string
                                ; 4: normal real
                                ; 8: double real
       F663                     VALTYP:         equ     $F663
                                
                                ; F664: workarea for coding of BASIC statements. switch indicating if keywords have
                                ; to be encoded or not. E.g. in DATA fields they should not be encoded
                                ; 0: encoding on, 1: encoding off
       F664                     DORES:          equ     $F664
                                
                                ; F665: workarea for coding of BASIC statements. swithc indication of numbers have to be
                                ; encoded; values: $0: encode as const, $1: encode as line number, $FF: do not encode
       F665                     DONUM:          equ     $F665
                                
                                ; F666-F667: work area for evaluation of expressions: contains address of first character
                                ; after the code of the last evaluated expression
       F666                     CONTXT:         equ     $F666
                                
                                ; F668: work area for evaluation of expressions: contains information byte about the
                                ; encoding of the last evaluated constant number; value of this constant is in CONLO
                                ; values:
                                ; $0B: octal (2 bytes)
                                ; $0C: hexadecimal (2 bytes)
                                ; $0F: decimal 0<=value<256 (1 byte)
                                ; $11-$1B: short encoding for 0->10
                                ; $1C: decimal (2bytes, 2s-compliment)
                                ; $26: $42 binary as ASCII
                                ; $0E: line number
                                ; $0D: line pointer
                                ; $1D: normal real (1 byte exp, 3 bytes BCD)
                                ; $1F: double real (1 byte exp, 7 bytes BCD)
       F668                     CONSAV:         equ     $F668
                                
                                ; F669: work area for evaluation of expressions: contains type of last evaluated number
                                ; constant; the value is in CONLO, for values of CONTYP, see VALTYP
                                ; Strings are never contant in BASIC!
       F669                     CONTYP:         equ     $F669
                                
                                ; F66A-F671: work area for evaluation of expressions: contains the value of the last
                                ; evaluated number contant; value starts at F66A, and takes bytes as needed for the type
       F66A                     CONLO:          equ     $F66A
                                
                                ; F672-F673: upper limit of memory area reserved for strings, contains the upper address
                                ; that is allowed to be used
       F672                     MEMSIZ:         equ     $F672
                                
                                ; F674-F675: top of stack; also first byte below string area
       F674                     STKTOP:         equ     $F674
                                
                                ; F676-F677: start address of current basic program, set at initialization, and
                                ; not changed by OS (ini:$8001)
       F676                     TXTTAB:         equ     $F676
                                
                                ; F678-F679: address of first unused string-descriptor in TEMPST
                                ; (ini:value of TEMPST)
       F678                     TEMPPT:         equ     $F678
                                
                                ; F67A-F697: work area for evaluation of string expressions; this area has space
                                ; for 10 string descriptors of 3 bytes; these can be used for temporarely results
                                ; of string arythmetics
       F67A                     TEMPST:         equ     $F67A
                                
                                ; F698-F69A: work area for evaluation of string expressions; this contains the
                                ; string descriptor of the intermediate result
       F698                     DSCTMP:         equ     $F698
                                
                                ; F69B-F69C: first address within the string memory area that is still free
                                ; the string area is filled backwards, soo the lower the value, the less space
                                ; remains (ini: value of MEMSIZ)
       F69B                     FRETOP:         equ     $F69B
                                
                                ; F69D-F69E: temporarely storage for adminstration of the basic interpreter
       F69D                     TEMP3:          equ     $F69D
                                
                                ; F69F-F6A0: temporarely storage for garbage collection
       F69F                     TEMP8:          equ     $F69F
                                
                                ; F6A1-F6A2: address of first byte in BASIC-code after last FOR statement
       F6A1                     ENDFOR:         equ     $F6A1
                                
                                ; F6A3-F6A4: line number of last used line of DATA statements
       F6A3                     DATLIN:         equ     $F6A3
                                
                                ; F6A5: switch indicating if a variable is allowed to be an array variable.
                                ; This is e.g. not allowed for the loop variable of a FOR statement
                                ; 0 = allowed, 1 = not allowed
       F6A5                     SUBFLG:         equ     $F6A5
                                
                                ; F6A6: switch indicating if currently a READ or INPUT statement is being executed
       F6A6                     FLKINP:         equ     $F6A6
                                
                                ; F6A7-F6A8: temporarely storage for adminstration of the basic interpreter
       F6A7                     TEMP:           equ     $F6A7
                                
                                ; F6A9: switch indicating if there are still linenumber constants in the BASIC code
                                ; that are encoded as pointers?
       F6A9                     PTRFLG:         equ     $F6A9
                                
                                ; F6AA: switch indication if currently an AUTO statement is active
                                ; 0 = no auto, 1 = auto
       F6AA                     AUTFLG:         equ     $F6AA
                                
                                ; F6AB-F6AC: last generated AUTO line number
       F6AB                     AUTLIN:         equ     $F6AB
                                
                                ; F6AD-F6AE: last used AUTO increment
       F6AD                     AUTINC:         equ     $F6AD
                                
                                ; F6AF-F6B0: work area of the error system; contains address of first byte
                                ; of statement currently being executed
       F6AF                     SAVTXT:         equ     $F6AF
                                
                                ; F6B1-F6B2: work area of the error system; contains address of the stack
                                ; before executing of the current statement started
       F6B1                     SAVSTK:         equ     $F6B1
                                
                                ; F6B3-F6B4: line number of last failed line
       F6B3                     ERRLIN:         equ     $F6B3
                                
                                ; F6B5-F6B6: line number of last used (changed, listed, added) line
       F6B5                     DOT:            equ     $F6B5
                                
                                ; F6B7-F5B8: work area of the error system; contains the address of the first
                                ; byte of the statement that last failed; on failure it is stored with the
                                ; content of SAVTXT
       F6B7                     ERRTXT:         equ     $F6B7
                                
                                ; F6B9-F6BA: work area of the error system; contains the line number where
                                ; execution should go to on error (as in basic: ON ERROR GOTO x)
       F6B9                     ONELIN:         equ     $F6B9
                                
                                ; F6BB-F6BC: work area of the error system; indication if the interpreter is
                                ; currently executing an error catch routine
                                ; 0 = no, FF = yes
       F6BB                     ONEFLG:         equ     $F6BB
                                
                                ; F6BC-F6BD: temporarely storage for the interpreter
       F6BC                     TEMP2:          equ     $F6BC
                                
                                ; F6BE-F6BF: line number of last program break, reset at 0 at any program change
       F6BE                     OLDLIN:         equ     $F6BE
                                
                                ; F6C0-F6C1: address of first statement that is not executed due to a break
       F6C0                     OLDTXT:         equ     $F6C0
                                
                                ; F6C2-F6C3: begin address of storage of basic variables and function descriptors;
                                ; possibly adjusted when program changes in size
       F6C2                     VARTAB:         equ     $F6C2
                                
                                ; F6C4-F6C5: begin address of array variables; possibly adjusted when program
                                ; changes size or more variables are allocated
       F6C4                     ARYTAB:         equ     $F6C4
                                
                                ; F6C6-F6C7: address of first free byte not used for storage of code or variables
                                ; (ini: $8003)
       F6C6                     STREND:         equ     $F6C6
                                
                                ; F6C8-F6C9: address where data needs to be searched at next READ statement
       F6C8                     DATPTR:         equ     $F6C8
                                
                                ; F6CA-F6E3: table with variable types, one for each letter in the alphabet
                                ; possible values:
                                ;       2 = integer     3 = string      4 = single      8 = double
       F6CA                     DEFTBL:         equ     $F6CA
                                
                                ; F6E4-F7B4: work area for execution of self defined functions
                                
                                ; F6E4-F6E5: contains address ; of previous parameter block on the stack;
                                ; needed for garbage collection
       F6E4                     PRMSTK:         equ     $F6E4
                                
                                ; F6E6-F6E7:  amount of valid bytes in PARM1
       F6E6                     PRMLEN:         equ     $F6E6
                                
                                ; F6E8-F74B: contains definitions of the variables in the parameter lists
                                ; of self defined functions
       F6E8                     PARM1:          equ     $F6E8
                                
                                ; F74C-F74D: previous value of PRMSTK
       F74C                     PRMDRV:         equ     $F74C
                                
                                ; F74E-F74F: number of valid bytes in PARM2
       F74E                     PRMLN2:         equ     $F74E
                                
                                ; F750-F7B3: area used for calculation of values that end up in PARM1
       F750                     PARM2:          equ     $F750
                                
                                ; F7B4: switch indicating of while searching a variable name PARM1 has
                                ; been looked at; 0 = no, 1 = yes
       F7B4                     PRMFLG:         equ     $F7B4
                                
                                ; F7B5-F7B6: address of first byte where it is no longer needed to search
                                ; for a variable name; it is equal to ARYTAB when the normal variable area
                                ; is searched, and equal to PARM1+PRMLEN when PARM1 is searched
       F7B5                     ARYTA2:         equ     $F7B5
                                
                                ; F7B7-F7B8: switch indicating iif PARM1 contains a valid parameter block
                                ; 0 = no, 1 = yes
       F7B7                     NOFUNS:         equ     $F7B7
                                
                                ; F7B8-F7B9: temporarely memory used while searching parameter blocks on
                                ; the stack
       F7B8                     TEMP9:          equ     $F7B8
                                
                                ; F7BA-F7BB: counter of the nesting-dept of the function being evaluated
       F7BA                     FUNACT:         equ     $F7BA
                                
                                ; F7BC-F7C3: work area when executing the SWAP statement; the first variable
                                ; is stored here
       F7BC                     SWPTMP:         equ     $F7BC
                                
                                ; F7C4: switch indicating if TRON is on; 0 = off, >0 = on
       F7C4                     TRCFLG:         equ     $F7C4
                                
                                ; F7C5-F7F4: workarea when executing numeric operators
       F7C5                     FBUFFR:         equ     $F7C5
       F7F0                     DECTMP:         equ     $F7F0
       F7F2                     DECTM2:         equ     $F7F2
       F7F4                     DECCNT:         equ     $F7F4
                                
                                ; F7F6-F805: workarea when executing numeric operators; intermediate
                                ; results are stored here; also used for parameter transfer when using
                                ; the USR functions; VALTYPE then contains the type, and the value is
                                ; stored like this:
                                ; typename  type  where
                                ; integer   2     F7F8-F7F9
                                ; string    3     F7F8-F7F9 (address descriptor)
                                ; single    4     F7F6-F7F9
                                ; double    8     F7F6-F7FD
       F7F6                     DAC:            equ     $F7F6
                                
                                ; F806-F856: workarea when executing numeric operators
       F806                     HOLD8:          equ     $F806
       F836                     HOLD2:          equ     $F836
       F83E                     HOLD:           equ     $F83E
       F847                     ARG:            equ     $F847
                                
                                ; F857-F85E: last calculated random double
       F857                     RNDX:           equ     $F857
                                
                                ; --------------------
                                ; filesystem work area
                                ; --------------------
                                
                                ; F85F: # of filedescriptors reserved minus 1
                                ; this is also the maximum number of open files possible
       F85F                     MAXFIL:         equ     $F85F
                                
                                ; F860-F861: start address of the file information table
       F860                     FILTAB:         equ     $F860
                                
                                ; F862-F863: start address of the first file-buffer
       F862                     NULBUF:         equ     $F862
                                
                                ; F864-F865: during file I/O the start address of the active file-buffer
       F864                     PTRFIL:         equ     $F864
                                
                                ; F866: flag indicating if the file that is being loaded have to be started
                                ; immediately; 0 = no, FF = yes
       F866                     RUNFLG:         equ     $F866
                                
                                ; note that RUNFLG and FILNAM overlap!
                                
                                ; F866-F870: filename of last file that has been active;
                                ; first 8 chars are name, last 3 are extension
       F866                     FILNAM:         equ     $F866
                                
                                ; F871-F87B: second filename if needed, e.g. the NAME command
       F871                     FILNM2:         equ     $F871
                                
                                ; F87C: switch indicating if currently a BASIC program is being loaded
                                ; 0 = no, 1 = yes
       F87C                     NLONLY:         equ     $F87C
                                
                                ; F87D-F87E: workarea for BLOAD and BSAVE; when a part of normal memory
                                ; is written, it contains the end address of the written memory region
                                ; if video memory is written it contains $4BE5 + start address of the
                                ; written memory region ??
       F87D                     SAVEND:         equ     $F87D
                                
                                ; F87F-F91E: storage area for the text of the function keys 10x16 bytes,
                                ; but strings need to be zero-terminated, soo maximum length of command is
                                ; 15 characters
       F87F                     FNKSTR:         equ     $F87F
                                
                                ; ------------------------
                                ; screen routine work area
                                ; ------------------------
                                
                                ; F91F-F921: start address of the standard ASCII pattern table
                                ; at every change towards a text mode it is copied in the pattern table
                                ; of the VDP
                                ;   F91F: slot indication (ini: 0)
                                ;   F920-F921: address (ini: 1BBF)
                                ; TODO: make CBIOS use this value instead of hardcoded value
       F91F                     CGPNT:          equ     $F91F
                                
                                ; F922-F923: start address of the nametable in the VRAM
       F922                     NAMBAS:         equ     $F922
                                
                                ; F924-F925: start address of the pattern table in the VRAM
       F924                     CGPBAS:         equ     $F924
                                
                                ; F926-F927: start address of the sprite pattern table in the VRAM
       F926                     PATBAS:         equ     $F926
                                
                                ; F928-F929: start address of the sprite location table in the VRAM
       F928                     ATRBAS:         equ     $F928
                                
                                ; F92A-F92B: address in VRAM of the pattern of the current position
                                ; on screen
       F92A                     CLOC:           equ     $F92A
                                
                                ; F92C: mask for CLOC selecting the right bits that correspond with
                                ; the current position
       F92C                     CMASK:          equ     $F92C
                                
                                ; F92D-F930: work area for graphical calculations
       F92D                     MINDEL:         equ     $F92D
       F92F                     MAXDEL:         equ     $F92F
                                
                                ; ----------------------------------------------
                                ; F931-F941: work area for calculation of CIRCLE
                                ; ----------------------------------------------
                                
                                ; F931-F932: ratio of # of dots in the horizontal and vertical direction
                                ; if = $0100 then ASPCT1 and ASPCT2 are used
                                ; if < $0100 then it is the # of dots in one direction for each
                                ; $0100 # of dots in the other direction; the direction is indicated
                                ; by CSCLXY
       F931                     ASPECT:         equ     $F931
                                
                                ; F933:F934: ; distance, in # of dots from the center of the most
                                ; distant point of the circle
       F933                     CENCNT:         equ     $F933
                                
                                ; F935: switch indication if the start and/or end point need to be
                                ; connected to the center
                                ;  bit 7: connect end point; 1 = yes
                                ;  bit 0: connect start point; 1 = yes
       F935                     CLINEF:         equ     $F935
                                
                                ; F936-F937: used during calculation of CIRCLE
       F936                     CNPNTS:         equ     $F936
                                
                                ; F938: direction of drawing of circle:
                                ;  00 = from CSTCNT towards CENCNT
                                ;  FF = from CENCNT towards CSTCNT
       F938                     CPLOTF:         equ     $F938
                                
                                ; F939-F93A: used during calculation of CIRCLE
       F939                     CPCNT:          equ     $F939
                                
                                ; F93B-F93C: ; contains the total # of dots of the full circle,
                                ; even when only a part is drawn
       F93B                     CPCNT8:         equ     $F93B
                                
                                ; F93D-F93E: used during calculation of CIRCLE
       F93D                     CRCSUM:         equ     $F93D
                                
                                ; F93F-F940: ; distance in dots from the center towards the closest
                                ; circle point
       F93F                     CSTCNT:         equ     $F93F
                                
                                ; F941: switch indicating if the X or Y direction needs to be streched:
                                ; 0 = X, 1 = Y
       F941                     CSCLXY:         equ     $F941
                                
                                ; F942-F943: store of CLOC, also used for PAINT
       F942                     CSAVEA:         equ     $F942
                                
                                ; F944: storage of CMASK; also used for PAINT
       F944                     CSAVEM:         equ     $F944
                                
                                ; F945-F946: horizontal distance towards the center
       F945                     CXOFF:          equ     $F945
                                
                                ; F947-F948: vertical distance towards the center
       F947                     CYOFF:          equ     $F947
                                
                                ; -------------------------------------------
                                ; work area for executing the PAINT statement
                                ; -------------------------------------------
                                
                                ; F949: leftmost position of protrusion towards the left
       F949                     LOHMSK:         equ     $F949
                                
                                ; F94A: new workdirection for protrusion towards the left
       F94A                     LOHDIR:         equ     $F94A
                                
                                ;F94B-F94C: leftmost position of protrusion towards the left
       F94B                     LOHADR:         equ     $F94B
                                
                                ; F94D: size of protrusion towards the left
       F94D                     LOHCNT:         equ     $F94D
                                
                                ; F94F-F950: # of pixels that may be skipped
       F94F                     SKPCNT:         equ     $F94F
                                
                                ; F951-F952: # of movements
       F951                     MOVCNT:         equ     $F951
                                
                                ; F953: current direction; $40 = \/, $C0 = /\, $00 = stop
       F953                     PDIREC:         equ     $F953
                                
                                ; F954: indicate if paint towards the left worked
       F954                     LFPROG:         equ     $F954
                                
                                ; F955: indicate of a paint towards the right worked
       F955                     RTPROG:         equ     $F955
                                
                                ; F956-F957: start address of a jumptable for subcommands
                                ; contained in a string variable, used for both PLAY and DRAW
                                ; where this systemvar points to either the PLAY or the DRAW
                                ; table
       F956                     MCLTAB:         equ     $F956
                                
                                ; F958: switch indication if MCLTAB is for PLAY or DRAW
                                ; $0 = DRAW, $FF = PLAY
       F958                     MCLFLG:         equ     $F958
                                
                                ; ------------------------------------------
                                ; work area for sound and queueing and RS232
                                ; ------------------------------------------
                                
                                ; F959-F971: Variables for three music queues and one RS232 queue
                                ; F959: VOICAQ put position
                                ; F95A: VOICAQ get position
                                ; F95B: VOICAQ putback flag
                                ; F95C: VOICAQ size
                                ; F95D: VOICAQ address
                                ; F95F-F964: VOICBQ
                                ; F965-F96A: VOICCQ
                                ; F96B-F970: RS2IQ
       F959                     QUETAB:         equ     $F959
                                
                                ; Putback characters for queues. TODO: what purpose do these have exactly?
       F971                     QUEBAK:         equ     $F971
                                
                                ; Buffers for queues.
       F975                     VOICAQ:         equ     $F975           ; Voice A queue
       F9F5                     VOICBQ:         equ     $F9F5           ; Voice B queue
       FA75                     VOICCQ:         equ     $FA75           ; Voice C queue
       FAF5                     RS2IQ:          equ     $FAF5           ; RS232   queue
                                
                                ; in MSX2 the content of RS2IQ is used differently:
       FAF5                     DPPAGE:         equ     $FAF5           ; Display page (SCR5+)
       FAF6                     ACPAGE:         equ     $FAF6           ; Active page (SCR5+)
                                
                                ; FAF7: AV control port value storage
       FAF7                     AVCSAV:         equ     $FAF7
                                
                                ; FAF8: extended BASIC ROM slot address
       FAF8                     EXBRSA:         equ     $FAF8
                                
                                ; FAF9: character count for ROMA-KANA
       FAF9                     CHRCNT:         equ     $FAF9
                                
                                ; FAFA-FAFB: character save for ROMA-KANA
       FAFA                     ROMA:           equ     $FAFA
                                
                                ; ROMA-KANA extension mode switch or VRAM size??
       FAFC                     MODE:           equ     $FAFC
                                ;Reserved       equ     $FAFD
                                
                                ; FAFE-FAFF: x position for mouse or lightpen
       FAFE                     XSAVE:          equ     $FAFE
                                
                                ; FB00-FB01: y position for mouse or lightpen
       FB00                     YSAVE:          equ     $FB00
       FB02                     LOGOPR:         equ     $FB02
                                ; FB21-FB28: Table which contains info for up to 4 disk ROMs, 2 bytes each:
                                ; - first byte: number of drives connected to this interface
                                ; - second byte: slot ID of the disk ROM
       FB21                     DRVINF:         equ     $FB21
                                ; end of MSX2 only usage of RS2IQ
                                
                                ; --------------------------------
                                ; work area for the PLAY statement
                                ; --------------------------------
                                
                                ; FB35: status about the parsing of a PLAY string
                                ;  bit 7: only one time parsed; 1 = yes
                                ;  bit 1-0: number of parsed strings (0-3)
       FB35                     PRSCNT:         equ     $FB35
                                
                                ; FB36-FB37: storage of stack
       FB36                     SAVSP:          equ     $FB36
                                
                                ; FB38: # of voice currently being parsed (0-2)
       FB38                     VOICEN:         equ     $FB38
                                
                                ; FB39-FB3A: storage of volume of a muted voice
       FB39                     SAVVOL:         equ     $FB39
                                
                                ; FB3B: size of string being parsed (also used by DRAW)
       FB3B                     MCLLEN:         equ     $FB3B
                                
                                ; FB3C-FB3D: address of string being parsed (also used by DRAW)
       FB3C                     MCLPTR:         equ     $FB3C
                                
                                ; FB3E: temporarely storage of active queue # (0-2)
       FB3E                     QUEUEN:         equ     $FB3E
                                
                                ; FB3F: flag indicating which queues are active
                                ; bit 2 = queue 2; 1 = active
                                ; bit 1 = queue 1; 1 = active
                                ; bit 0 = queue 0; 1 = active
       FB3F                     MUSICF:         equ     $FB3F
                                
                                ; FB40: count of the # of PLAY statements parsed, but not executed yet
       FB40                     PLYCNT:         equ     $FB40
                                
                                ; FB41-FB65: Voice Control Block for voice A (queue 0)
       FB41                     VCBA:           equ     $FB41
                                ; FB66-FB8A: Voice Control Block for voice B (queue 1)
       FB66                     VCBB:           equ     $FB66
                                ; FB8B-FBAF: Voice Control Block for voice C (queue 2)
       FB8B                     VCBC:           equ     $FB8B
                                
                                ; each VCB has the following structure:
                                
                                ; name                  offset  length  purpose
       0000                     METREX:         equ     0 ;     2       interrupt counter
       0002                     VCXLEN:         equ     2 ;     1       MCLLEN for voice
       0003                     VCXPTR:         equ     3 ;     2       MCLPTR for voice
       0005                     VCXSTP:         equ     5 ;     2       stack pointer
       0007                     QLENGX:         equ     7 ;     1       # bytes in queue
       0008                     NTICSX:         equ     8 ;     2       new counter ?
       000A                     TONPRX:         equ     10;     2       pitch
       000C                     AMPLTX:         equ     12;     1       amplitude
       000D                     ENVPRX:         equ     13;     2       envelope speed
       000F                     OCTAVX:         equ     15;     1       octave
       0010                     NOTELX:         equ     16;     1       tone length
       0011                     TEMPOX:         equ     17;     1       tempo
       0012                     VOLUMX:         equ     18;     1       volume
       0013                     ENVLPX:         equ     19;     1       envelope shape
       0021                     MCLSTX:         equ     33;             space for stack storage
       0024                     MCLSEX:         equ     36;             start of stack
                                ; the stack mentioned above is used to store bytevalues
                                ; that are readied to be put on the voice queue
                                
                                ; -----------------------------------------------
                                ; settings for screen editor and interrupt system
                                ; -----------------------------------------------
                                
                                ; FBB0: switch indicating if software reset is enabled
                                ; 0 = n, 1 = yes; can be used to reset BASIC by pressing
                                ; SHIFT-CODE-GRAPH; does not erase the existing program
                                ; (ini: 0)
       FBB0                     ENSTOP:         equ     $FBB0
                                
                                ; FBB1: switch indicating if the current BASIC program is in a ROM
                                ; 0 = no; 1 = yes
       FBB1                     BASROM:         equ     $FBB1
                                
                                ; FBB2-FBC9: table containing for each line if it continues on the
                                ; next line; 0 = yes, >0 = no
       FBB2                     LINTTB:         equ     $FBB2
                                
                                ; FBCA-FBCB storage of location of cursor for INLIN and QINLIN
                                ;  FBCA: CSRY , FBCB: CSRX
       FBCA                     FSTPOS:         equ     $FBCA
                                
                                ; ASCII code of the character currently covered by the cursor
                                ; TODO: is the name CURSAV or CODSAV ?
       FBCC                     CURSAV:         equ     $FBCC
                                
                                ; FBCD: switch indicating which function keys are to be displayed
                                ; on the screen; 0 = F6-F10, 1 = F1-F5
       FBCD                     FNKSWI:         equ     $FBCD
                                
                                ; FBCE-FBD7: for each function key, a flag indicating if it has
                                ; interrupt facility enabled; 0 = disabled, 1 = enabled
       FBCE                     FNKFLG:         equ     $FBCE
                                
                                ; FBD8: counter of # of interrupts that still have a pending ON .. GOSUB
       FBD8                     ONGSBF:         equ     $FBD8
                                
                                ; FBD9: flag indicating if a keyclick has already been generated, to avoid
                                ; keyclicks for a key that generates two ASCII codes
                                ; $00 = no click, $0F = click
       FBD9                     CLIKFL:         equ     $FBD9
                                
                                ; FBDA-FBE4: storage of keyboard matrix, used for detection key repetition
       FBDA                     OLDKEY:         equ     $FBDA
                                
                                ; FBE5-FBEF: current state of the keyboard matrix
       FBE5                     NEWKEY:         equ     $FBE5
                                
                                ; keyboard buffer; each char entered via the keyboard ends up here
       FBF0                     KEYBUF:         equ     $FBF0
                                ; LIMPNT: something about "key buffer pointer"
       FC17                     LIMPNT:         equ     $FC17
                                
                                ; FC18-FC3F: work area for processing the last typed line
       FC18                     LINWRK:         equ     $FC18
                                
                                ; FC40-FC47: storage for the patter of an ASCII character
                                ; used when writing an ASCII character in a graphical mode
       FC40                     PATWRK:         equ     $FC40
                                
                                ; FC48-FC49: lowest address of the RAM memory; initialized at startup
                                ; and not changed normally
       FC48                     BOTTOM:         equ     $FC48
                                
                                ; FC4A-FC4B: highest address of the RAM memory that is not reserved by
                                ; the OS; string area, filebuffers and stack are below this address
                                ; initialized at startup and not changed normally
       FC4A                     HIMEM:          equ     $FC4A
                                
                                ; FC4C-FC99: table for interrupt facilities of MSX BASIC
                                ; each 3 bytes are used like this:
                                ; byte 1 is a flag:
                                ;  bit 2: interrupt happened; 1 = yes
                                ;  bit 1: interrupt stop; 1 = yes
                                ;  bit 0: interrupt off; 1 = no
                                ; byte 2-3 is the adress of the line in BASIC where should be
                                ; jumped too
                                ; the offsets in the table are:
                                ;  offset  address interrupt
                                ;       0  FC4C    F1
                                ;       3  FC4F    F2
                                ;       6  FC52    F3
                                ;       9  FC55    F4
                                ;      12  FC58    F5
                                ;      15  FC5B    F6
                                ;      18  FC5E    F7
                                ;      21  FC61    F8
                                ;      24  FC64    F9
                                ;      27  FC67    F10
                                ;      30  FC6A    STOP
                                ;      33  FC6D    sprite collision
                                ;      36  FC70    SPACE (trigger 0)
                                ;      39  FC73    joystick 1 button 1 (trigger 1)
                                ;      39  FC76    joystick 2 button 1 (trigger 2)
                                ;      39  FC79    joystick 1 button 2 (trigger 3)
                                ;      39  FC7C    joystick 2 button 2 (trigger 4)
                                ;      39  FC7F    interval
       FC4C                     TRPTBL:         equ     $FC4C
                                
                                ; FC9A: usage unknown
       FC9A                     RTYCNT:         equ     $FC9A
                                
                                ; FC9B: STOP indication
                                ; 0 = nothing; 3 = CTRL+STOP, 4 = STOP
       FC9B                     INTFLG:         equ     $FC9B
                                
                                ; FC9C: last read Y-position of a touchpad
       FC9C                     PADY:           equ     $FC9C
                                
                                ; FC9D: last read X-position of a touchpad
       FC9D                     PADX:           equ     $FC9D
                                
                                ; FC9E-FC9F: software clock, updated at each VDP interrupt
       FC9E                     JIFFY:          equ     $FC9E           ; timer counter
                                
                                ; FCA0-FCA1: initial value of INTCNT, used when INTCNT
                                ; reaches 0; used for ON INTERVAL GOSUB
       FCA0                     INTVAL:         equ     $FCA0
                                
                                ; FCA2-FCA3: interrupt counter; lowered at each VDP interrupt;
                                ; reset with value of INTVAL when it reaches zero; if interval
                                ; interrupt is needed, it is generated
       FCA2                     INTCNT:         equ     $FCA2
                                
                                ; FCA4-FCA5: parameter used at tap input, given a value during
                                ; reading of a headerblock from tape
       FCA4                     LOWLIM:         equ     $FCA4
       FCA5                     WINWID:         equ     $FCA5
                                
                                ; FCA6: flag indicating if the previous character written
                                ; to the screen was an extension character for graphical signs
                                ; (ASCII 1); 0 = no, 1 = yes
       FCA6                     GRPHED:         equ     $FCA6
                                
                                ; FCA7 ESCCNT State of a state machine that handles the printing of escape
                                ; sequences. A subset of the VT52 escape sequences is supported.
                                ; values:
                                ; $00: not inside an escape sequence
                                ; $01: seen <ESC>x
                                ; $02: seen <ESC>y
                                ; $03: seen <ESC>Y<row>
                                ; $04: seen <ESC>Y
                                ; $FF: seen <ESC>
       FCA7                     ESCCNT:         equ     $FCA7
                                
                                ; FCA8: switch indicating insert or overwrite mode
                                ; $00 = overwrite; $FF = insert
                                ; the value of INSFLG is changed each time the INS key is pressed
       FCA8                     INSFLG:         equ     $FCA8
                                
                                ; FCA9: show cursor; 0 = no, 1 = yes
                                ; can be changed with escape sequences x5 and y5
       FCA9                     CSRSW:          equ     $FCA9
                                
                                ; FCAA: shape of cursor; 0 = block; 1 = insert
                                ; pressing the INS key changes the value of CSTYLE
                                ; can be changed with escape sequences x4 and y4
       FCAA                     CSTYLE:         equ     $FCAA
                                
                                ; switch indicating if the CAPS-LOCK is on
                                ; $00 = off, $FF = on (unofficial: $80 = perma-on)
       FCAB                     CAPST:          equ     $FCAB
                                
                                ; FCAC: dead key control in non-japanese MSX models
                                ; adds a mark on the next char pressed, if applicable
                                ;  0 = no dead key
                                ;  1 = dead key                => accent grave
                                ;  2 = SHIFT + dead key        => accent aigu
                                ;  3 = CODE + dead key         => accent circumflex
                                ;  4 = SHIFT + CODE + dead key => trema
                                ; in japanese models it controls the charset used
       FCAC                     KANAST:         equ     $FCAC
                                
                                ; FCAD: only used in japanese MSX models; it defines
                                ; the used typeset (ini: $40)
       FCAD                     KANAMD:         equ     $FCAD
                                
                                ; ----
                                ; misc
                                ; ----
                                
       FCAE                     FLBMEM:         equ     $FCAE
       FCAF                     SCRMOD:         equ     $FCAF
       FCB0                     OLDSCR:         equ     $FCB0
       FCB1                     CASPRV:         equ     $FCB1
       FCB2                     BRDATR:         equ     $FCB2
       FCB3                     GXPOS:          equ     $FCB3
       FCB5                     GYPOS:          equ     $FCB5
       FCB7                     GRPACX:         equ     $FCB7
       FCB9                     GRPACY:         equ     $FCB9
       FCBB                     DRWFLG:         equ     $FCBB
       FCBD                     DRWANG:         equ     $FCBD
       FCBE                     RUNBNF:         equ     $FCBE
       FCBF                     SAVENT:         equ     $FCBF
                                
                                ; ---------------------------
                                ; storage of slot information
                                ; ---------------------------
                                
                                ; FCC1-FCC4: Information for each primary slot. The most significant bit is
                                ; set if the primary slot is found to be expanded.
       FCC1                     EXPTBL:         equ     $FCC1
                                
                                ; FCC5-FCC8: Duplicate the contents of the four possible secondary slot
                                ; registers.
       FCC5                     SLTTBL:         equ     $FCC5
                                
                                ; FCC9-FD08: Information for any extension ROMs found during the power-up
                                ; ROM search.
                                ; FCC9-FCCC: primary slot 0, secondary slot 0
                                ; FCCD-FCD0: primary slot 0, secondary slot 1
                                ; FCD1-FCD4: primary slot 0, secondary slot 2
                                ; FCD5-FCD8: primary slot 0, secondary slot 3
                                ; FCD9-FCE8: primary slot 1
                                ; FCE9-FCF8: primary slot 2
                                ; FCF9-FD08: primary slot 3
                                ; The information is stored as below.
                                ; bit 7 (set): BASIC program
                                ; bit 6 (set): device handler
                                ; bit 5 (set): statement handler
       FCC9                     SLTATR:         equ     $FCC9
                                
       FD09                     SLTWRK:         equ     $FD09
                                
                                ; ------------------------------
                                ; storage of ROM-page parameters
                                ; ------------------------------
                                
       FD89                     PROCNM:         equ     $FD89
       FD99                     DEVICE:         equ     $FD99
                                ; ------------
                                ; system hooks
                                ; ------------
                                
                                ; system hooks are defined in hooks.asm
                                
                                ; ------------------
                                ; storage of VDP8-23
                                ; ------------------
                                
                                ; FFE7-FFF6: storage of VDP 8-23
       FFE7                     RG8SAV:         equ     $FFE7
                                
                                ; ----------------------
                                ; extra slot information
                                ; ----------------------
                                
                                ; FFF7: slot address of main-rom
                                ;?????:         equ     $FFF7
                                
                                ; ------------------
                                ; storage of VDP25-27
                                ; ------------------
                                
                                ; FFFA-FFFC: storage of VDP 25-27
       FFFA                     RG25SAV:         equ     $FFFA
                                
                                ; ---------------------------
                                ; subslot switching addresses
                                ; ---------------------------
                                
                                ; FFFF: subslot switching address
                                ; This is not actually a system variable, it is a hardware register:
                                ;   SSL_REGS (see hardware.asm).
                                
                                ; -------
                                ; the end
                                ; -------
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:systemvars.asm:UTF_8]
                                
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"   ; ID for auto-executable ROM
000002 4002 1040                    DW  INIT_ROM   ; Main program execution address.
000004 4004 0000                    DW  0      ; STATEMENT
000006 4006 0000                    DW  0      ; DEVICE
000008 4008 0000                    DW  0      ; TEXT
00000A 400A 000000000000            DW  0,0,0  ; Reserved
                                    INCLUDE "MSXINIT.ASM"
                                
                                ;   LSX-Dodgers INIT
                                ;   MSX
                                
       4010                     INIT_ROM:
000010 4010 21DAFE          10      LD  HL,H_STKE
000013 4013 3E                      DB  03EH    ;LD A,??
000014 4014 F7              12      RST 30H
000015 4015 F3               4      DI
000016 4016 77               7      LD  (HL),A
000017 4017 CD2540          17      CALL    GTSL1_
00001A 401A 23               6      INC HL
00001B 401B 77               7      LD  (HL),A
00001C 401C 114F40          10      LD  DE,START
00001F 401F 23               6      INC HL
000020 4020 73               7      LD  (HL),E
000021 4021 23               6      INC HL
000022 4022 72               7      LD  (HL),D
000023 4023 FB               4      EI
000024 4024 C9              10      RET
                                
       4025                     GTSL1_:
000025 4025 E5              11      PUSH    HL      ;Save registers
000026 4026 D5              11      PUSH    DE
                                ;
000027 4027 CD3801          17      CALL    RSLREG      ;read primary slot #
00002A 402A 0F               4      RRCA
00002B 402B 0F               4      RRCA
00002C 402C E603             7      AND 11B     ;[A]=000000PP
00002E 402E 5F               4      LD  E,A
00002F 402F 1600             7      LD  D,0     ;[DE]=000000PP
000031 4031 21C1FC          10      LD  HL,EXPTBL
000034 4034 19              11      ADD HL,DE       ;[HL]=EXPTBL+000000PP
000035 4035 5F               4      LD  E,A     ;[E]=000000PP
000036 4036 7E               7      LD  A,(HL)      ;[A]=(EXPTBL+000000PP)
000037 4037 E680             7      AND 80H     ;Use only MSB
000039 4039 2811            12      JR  Z,GTSL1NOEXP
00003B 403B B3               4      OR  E       ;[A]=F00000PP
00003C 403C 5F               4      LD  E,A     ;save primary slot number
00003D 403D 23               6      INC HL      ;point to SLTTBL entry
00003E 403E 23               6      INC HL
00003F 403F 23               6      INC HL
000040 4040 23               6      INC HL
000041 4041 7E               7      LD  A,(HL)      ;get currently expansion slot register
000042 4042 0F               4      RRCA
000043 4043 0F               4      RRCA
000044 4044 E603             7      AND 11B     ;[A] = 000000SS
000046 4046 07               4      RLCA
000047 4047 07               4      RLCA            ;[A] = 0000SS00
000048 4048 B3               4      OR  E       ;[A] = F000SSPP
                                ;
       4049                     GTSL1END:
000049 4049 D1              10      POP DE
00004A 404A E1              10      POP HL
00004B 404B C9              10      RET
       404C                     GTSL1NOEXP:
00004C 404C 7B               4      LD  A,E     ;[A] = 000000PP
00004D 404D 18FA            12      JR  GTSL1END
                                
       404F                     START:
00004F 404F F3               4      DI
000050 4050 ED56             8      IM  1
000052 4052 216040          10      LD  HL,AT_START2
000055 4055 1100C7          10      LD  DE,START2
000058 4058 010020          10      LD  BC,MSX_E-START2
00005B 405B EDB0                    LDIR
00005D 405D C300C7          10      JP  START2
                                
       4060                     AT_START2:
000060 C700                         ORG START2,AT_START2-RUN
                                
000060 C700 3100C7          10      LD  SP,START2
000063 C703 CD11C7          17      CALL    INIT        ;NZならAUTOEXECを実行
000066 C706 210000          10      LD  HL,0
000069 C709 E5              11      PUSH    HL
00006A C70A C8              11      RET Z
00006B C70B 11A1C8          10      LD  DE,AUTOD
00006E C70E C3FDE4          10      JP  _COMANL
                                
       C711                     INIT:
000071 C711 DD21900D        14      LD  IX,0D90H
000075 C715 0600             7      LD  B,0
       C717                     CHECK_CBIOS1:
000077 C717 DD7E00          19      LD  A,(IX+0)
00007A C71A FE43             7      CP  'C'
00007C C71C 202B            12      JR  NZ,CHECK_CBIOS2
00007E C71E DD7E01          19      LD  A,(IX+1)
000081 C721 FE2D             7      CP  '-'
000083 C723 2024            12      JR  NZ,CHECK_CBIOS2
000085 C725 DD7E02          19      LD  A,(IX+2)
000088 C728 FE42             7      CP  'B'
00008A C72A 201D            12      JR  NZ,CHECK_CBIOS2
00008C C72C DD7E03          19      LD  A,(IX+3)
00008F C72F FE49             7      CP  'I'
000091 C731 2016            12      JR  NZ,CHECK_CBIOS2
000093 C733 DD7E04          19      LD  A,(IX+4)
000096 C736 FE4F             7      CP  'O'
000098 C738 200F            12      JR  NZ,CHECK_CBIOS2
00009A C73A DD7E05          19      LD  A,(IX+5)
00009D C73D EE53             7      XOR 'S'
00009F C73F 2008            12      JR  NZ,CHECK_CBIOS2
                                
0000A1 C741 327BD0          13      LD  (CBIOS_SWC1),A
0000A4 C744 329FD0          13      LD  (CBIOS_SWC2),A
                                
0000A7 C747 1804            12      JR  CHECK_CBIOS3
       C749                     CHECK_CBIOS2:
0000A9 C749 DD23            10      INC IX
0000AB C74B 10CA            13      DJNZ    CHECK_CBIOS1
       C74D                     CHECK_CBIOS3:
0000AD C74D 3ADBFE          13      LD  A,(H_STKE+1)
0000B0 C750 3262E4          13      LD  (ROM_SLT),A
0000B3 C753 2680             7      LD  H,080H
0000B5 C755 CD6BD3          17      CALL    ENASLT
                                
0000B8 C758 1141F3          10      LD  DE,0F341H
0000BB C75B 210000          10      LD  HL,00000H
0000BE C75E CD5FC8          17      CALL    INIT_RAM
                                
0000C1 C761 13               6      INC DE
0000C2 C762 210040          10      LD  HL,04000H
0000C5 C765 CD5FC8          17      CALL    INIT_RAM
                                
0000C8 C768 13               6      INC DE
0000C9 C769 210080          10      LD  HL,08000H
0000CC C76C CD5FC8          17      CALL    INIT_RAM
                                
0000CF C76F 210000          10      LD  HL,0
0000D2 C772 065C             7      LD  B,05CH
0000D4 C774 3E                      DB  03EH    ;LD A,??
0000D5 C775 EF              12      RST 28H
0000D6 C776 CD05D5          17      CALL    FILL_MEMORY
0000D9 C779 06A4             7      LD  B,0A4H
0000DB C77B AF               4      XOR A
0000DC C77C CD05D5          17      CALL    FILL_MEMORY
                                
0000DF C77F 3EC3             7      LD  A,0C3H      ;JP
0000E1 C781 2103E4          10      LD  HL,CPM_WBOOT
0000E4 C784 320000          13      LD  (00000H),A
0000E7 C787 220100          16      LD  (00001H),HL ;IPL
                                
0000EA C78A 21031D          10      LD  HL,MACW     ;3 bit7  DPB Compatible LA(1)
0000ED C78D 220300          16      LD  (00003H),HL ;  bit6-0 Machine
                                ;               ;4 LSX-Dodgers(01DH)
0000F0 C790 2106C9          10      LD  HL,BDOS
0000F3 C793 320500          13      LD  (00005H),A
0000F6 C796 220600          16      LD  (00006H),HL ;BDOS
                                
0000F9 C799 210000          10      LD  HL,0
0000FC C79C 322800          13      LD  (00028H),A
0000FF C79F 222900          16      LD  (00029H),HL ;BDOS
                                                ;インタースロットコール
000102 C7A2 216BD2          10      LD  HL,RDSLTR
000105 C7A5 320C00          13      LD  (_RDSLT),A
000108 C7A8 220D00          16      LD  (_RDSLT+1),HL
                                
00010B C7AB 2174D2          10      LD  HL,WRSLTR
00010E C7AE 321400          13      LD  (_WRSLT),A
000111 C7B1 221500          16      LD  (_WRSLT+1),HL
                                
000114 C7B4 212DD2          10      LD  HL,CALSLTR
000117 C7B7 321C00          13      LD  (_CALSLT),A
00011A C7BA 221D00          16      LD  (_CALSLT+1),HL
                                
00011D C7BD 216BD3          10      LD  HL,ENASLT
000120 C7C0 322400          13      LD  (_ENASLT),A
000123 C7C3 222500          16      LD  (_ENASLT+1),HL
                                
000126 C7C6 211DD2          10      LD  HL,CALLF
000129 C7C9 323000          13      LD  (_CALLF),A
00012C C7CC 223100          16      LD  (_CALLF+1),HL
                                
00012F C7CF 217DD2          10      LD  HL,INT38H
000132 C7D2 323800          13      LD  (00038H),A
000135 C7D5 223900          16      LD  (00038H+1),HL
                                                ;LSX-Dodgers
000138 C7D8 3EE4             7      LD  A,CPM_BOOT/256
00013A C7DA 320B00          13      LD  (0000BH),A
                                
00013D C7DD 3E                      DB  03EH    ;LD A,??
00013E C7DE E9               4      JP  (HL)
00013F C7DF 320F00          13      LD  (0000FH),A
                                                ;MSXワークエリア
000142 C7E2 3E03             7      LD  A,3
000144 C7E4 329BFC          13      LD  (INTFLG),A
                                
                                                ;ROMタイプ判別(ASCII-8K/ASCII-16K)
000147 C7E7 1E00             7      LD  E,0
000149 C7E9 3A62E4          13      LD  A,(ROM_SLT)
00014C C7EC 210068          10      LD  HL,BANK1_SEL
00014F C7EF CDF8D2          17      CALL    WRSLT
                                
000152 C7F2 210060          10      LD  HL,06000H
000155 C7F5 3A62E4          13      LD  A,(ROM_SLT)
000158 C7F8 CDB7D2          17      CALL    RDSLT
00015B C7FB FE41             7      CP  'A'
00015D C7FD 280F            12      JR  Z,ROM8K
                                                ;ASCII-8K/Konami-8Kではない(ASCII-16K)
00015F C7FF 3E                      DB  03EH    ;LD A,??
000160 C800 00               4      NOP
000161 C801 32E9E1          13      LD  (ASCII16K1),A
000164 C804 32EDE1          13      LD  (ASCII16K2),A
000167 C807 3E3F             7      LD  A,03FH
000169 C809 3205E2          13      LD  (ASCII16K3),A
00016C C80C 1829            12      JR  ROMCHECKED
       C80E                     ROM8K:              ;Konami-8Kチェック
00016E C80E 1E01             7      LD  E,1
000170 C810 3A62E4          13      LD  A,(ROM_SLT)
000173 C813 210070          10      LD  HL,BANK2_SEL
000176 C816 CDF8D2          17      CALL    WRSLT
                                
000179 C819 1E00             7      LD  E,0
00017B C81B 3A62E4          13      LD  A,(ROM_SLT)
00017E C81E 210080          10      LD  HL,KONAMI_BANK2_SEL
000181 C821 CDF8D2          17      CALL    WRSLT
                                
000184 C824 210080          10      LD  HL,08000H
000187 C827 3A62E4          13      LD  A,(ROM_SLT)
00018A C82A CDB7D2          17      CALL    RDSLT
00018D C82D FE41             7      CP  'A'
00018F C82F 2006            12      JR  NZ,ROMCHECKED
                                                ;Konami-8K
000191 C831 210080          10      LD  HL,KONAMI_BANK2_SEL
000194 C834 22F4E1          16      LD  (ROM8000H),HL
       C837                     ROMCHECKED:
                                                ;MSX2判別
000197 C837 3AF8FA          13      LD  A,(EXBRSA)
00019A C83A B7               4      OR  A
00019B C83B 3E28             7      LD  A,40
00019D C83D 2802            12      JR  Z,ISMSX1
00019F C83F 3E50             7      LD  A,80        ;MSX2以降は80桁で起動
       C841                     ISMSX1:
0001A1 C841 32AEF3          13      LD  (LINL40),A
0001A4 C844 32B1E4          13      LD  (_WIDTH),A
0001A7 C847 DD216C00        14      LD  IX,INITXT
0001AB C84B CD11D2          17      CALL    CALSLT_R
0001AE C84E DD217800        14      LD  IX,SETTXT
0001B2 C852 CD11D2          17      CALL    CALSLT_R
                                
0001B5 C855 21ADC8          10      LD  HL,INIMES
0001B8 C858 CD73CD          17      CALL    MSX
       C85B                     INIT1:
0001BB C85B AF               4      XOR A
0001BC C85C FE03             7      CP  3
0001BE C85E C9              10      RET
                                
       C85F                     INIT_RAM:
0001BF C85F 1A               7      LD  A,(DE)
0001C0 C860 E5              11      PUSH    HL
0001C1 C861 CD8CC8          17      CALL    INIT_RAMX
0001C4 C864 E1              10      POP HL
0001C5 C865 C8              11      RET Z
0001C6 C866 3E03             7      LD  A,3     ;SLOT3
0001C8 C868 12               7      LD  (DE),A
0001C9 C869 E5              11      PUSH    HL
0001CA C86A CD8CC8          17      CALL    INIT_RAMX
0001CD C86D E1              10      POP HL
0001CE C86E C8              11      RET Z
0001CF C86F 3E83             7      LD  A,083H      ;SLOT3-0
0001D1 C871 12               7      LD  (DE),A
0001D2 C872 E5              11      PUSH    HL
0001D3 C873 CD8CC8          17      CALL    INIT_RAMX
0001D6 C876 E1              10      POP HL
0001D7 C877 C8              11      RET Z
0001D8 C878 3E87             7      LD  A,087H      ;SLOT3-1
0001DA C87A 12               7      LD  (DE),A
0001DB C87B E5              11      PUSH    HL
0001DC C87C CD8CC8          17      CALL    INIT_RAMX
0001DF C87F E1              10      POP HL
0001E0 C880 C8              11      RET Z
0001E1 C881 3E8B             7      LD  A,08BH      ;SLOT3-2
0001E3 C883 12               7      LD  (DE),A
0001E4 C884 E5              11      PUSH    HL
0001E5 C885 CD8CC8          17      CALL    INIT_RAMX
0001E8 C888 E1              10      POP HL
0001E9 C889 C8              11      RET Z
0001EA C88A 3E8F             7      LD  A,08FH      ;SLOT3-3
       C88C                     INIT_RAMX:          ;スロットがRAMかチェック ZF=1ならばRAM
0001EC C88C D5              11      PUSH    DE
0001ED C88D CD6BD3          17      CALL    ENASLT
0001F0 C890 D1              10      POP DE
0001F1 C891 010040          10      LD  BC,04000H
       C894                     INIT_RAM1:
0001F4 C894 7E               7      LD  A,(HL)
0001F5 C895 2F               4      CPL
0001F6 C896 77               7      LD  (HL),A
0001F7 C897 BE               7      CP  (HL)
0001F8 C898 2F               4      CPL
0001F9 C899 77               7      LD  (HL),A
0001FA C89A C0              11      RET NZ
0001FB C89B EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0001FD C89D E0              11      RET PO
0001FE C89E C0              11      RET NZ
0001FF C89F 18F3            12      JR  INIT_RAM1
                                
000201 C8A1 4155544F45584543    AUTOD:  DB  "AUTOEXEC "
            20                  
00020A C8AA 413A00              AUTODV: DB  "A:",0
                                
00020D C8AD 0C4C53582D446F64    INIMES: DB  00CH,"LSX-Dodgers for MSX v"
            6765727320666F72    
            204D53582076        
000223 C8C3 312E                    DB  030H + VER_1, '.'
000225 C8C5 3538                    DB  030H + VER_2 ,030H + VER_3
                                ;   DB  ""
000227 C8C7 2047616B750D0A          DB  ' Gaku',0DH,0AH
00022E C8CE 00                      DB  0
                                
00022F C8CF 0300                M2DD:   DW  3
000231 C8D1 F902                    DB  0F9H,2
000233 C8D3 CB02                    DW  715
000235 C8D5 FF0750090182            DB  0FFH,7,80,9,1,082H
00023B C8DB 0700A7000A00            DW  7,0A7H,10
       C8E1                     M2DDE:
[EOF:MSXINIT.ASM:SHIFT_JIS]
                                    INCLUDE "MSXCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                ;   MSX
                                
       C8E1                     INITE:
000241 C8E1                         DS  BDOS-INITE
000266 C906 C332CD          10      JP  BDOS0
                                
       C909                     WBOOT1:
000269 C909 3E03             7      LD  A,3
00026B C90B CDFECF          17      CALL    MSG_A
       C90E                     WBOOT2:
[EOF:MSXCCP.ASM:UTF_8]
                                    INCLUDE "LDCCP.ASM"
                                
                                ;   LSX-Dodgers CCP
                                
       C90E                     COMMAND:
00026E C90E 3A41E3          13      LD  A,(FCB_BAT)
000271 C911 B7               4      OR  A
000272 C912 C253CA          10      JP  NZ,C_BAT1
000275 C915 CDC8C9          17      CALL    SETDTA1
000278 C918 3A87E4          13      LD  A,(_DVSW)
00027B C91B C641             7      ADD A,'A'
00027D C91D CDFECF          17      CALL    MSG_A
000280 C920 3E3E             7      LD  A,'>'
000282 C922 CDFECF          17      CALL    MSG_A
000285 C925 3E50             7      LD  A,80
000287 C927 12               7      LD  (DE),A
000288 C928 CDBDD0          17      CALL    _SYS0A      ;(BDOS)文字列入力
00028B C92B CD48CB          17      CALL    LTNL
       C92E                     COMMAND2:
00028E C92E 118200          10      LD  DE,DTA1+2
000291 C931 CDFDE4          17      CALL    _COMANL
000294 C934 30D8            12      JR  NC,COMMAND
000296 C936 1179E4          10      LD  DE,COMERM
000299 C939 CD64CD          17      CALL    _SYS09      ;(BDOS)文字列出力
00029C C93C C7              12      RST 0
                                
       C93D                     COMANL:
00029D C93D CD59D4          17      CALL    FILE
0002A0 C940 3A19E4          13      LD  A,(FNAME+4)
0002A3 C943 FE20             7      CP  020H
0002A5 C945 201C            12      JR  NZ,COMB2
0002A7 C947 D5              11      PUSH    DE
0002A8 C948 1115E4          10      LD  DE,FNAME
0002AB C94B 1A               7      LD  A,(DE)
0002AC C94C FE20             7      CP  020H
0002AE C94E 2844            12      JR  Z,SDVSW
0002B0 C950 1B               6      DEC DE
0002B1 C951 1A               7      LD  A,(DE)
0002B2 C952 C6FF             7      ADD A,0FFH
0002B4 C954 3809            12      JR  C,COMB
0002B6 C956 13               6      INC DE
                                
0002B7 C957 2102CD          10      LD  HL,COMTB
0002BA C95A 0608             7      LD  B,COMS
0002BC C95C CDDDD6          17      CALL    CPNAME
       C95F                     COMB:
0002BF C95F D1              10      POP DE
0002C0 C960 D20F00          10      JP  NC,JP_HL
       C963                     COMB2:
0002C3 C963 EB               4      EX  DE,HL
0002C4 C964 2230CA          16      LD  (COMPAT+1),HL
0002C7 C967 F5              11      PUSH    AF
0002C8 C968 CDE8C9          17      CALL    CEXE4
0002CB C96B F1              10      POP AF
0002CC C96C 2115E4          10      LD  HL,FNAME
0002CF C96F 116D00          10      LD  DE,FCB2+1   ;COMMAND NAME
0002D2 C972 010B00          10      LD  BC,11
0002D5 C975 EDB0                    LDIR
0002D7 C977 11E0E2          10      LD  DE,PATHD
       C97A                     CEX1:
0002DA C97A 1A               7      LD  A,(DE)
0002DB C97B FE20             7      CP  020H
0002DD C97D D8              11      RET C
0002DE C97E CD4ED4          17      CALL    FILEC
0002E1 C981 D5              11      PUSH    DE
0002E2 C982 216D00          10      LD  HL,FCB2+1   ;COMMAND NAME
0002E5 C985 1115E4          10      LD  DE,FNAME
0002E8 C988 010B00          10      LD  BC,11
0002EB C98B EDB0                    LDIR
0002ED C98D CDE8C9          17      CALL    CEXE4
0002F0 C990 D1              10      POP DE
0002F1 C991 13               6      INC DE
0002F2 C992 18E6            12      JR  CEX1
                                
       C994                     SDVSW:
0002F4 C994 F1              10      POP AF
0002F5 C995 3A14E4          13      LD  A,(FDRV)
0002F8 C998 3D               4      DEC A
0002F9 C999 5F               4      LD  E,A
0002FA C99A 0E0E             7      LD  C,00EH      ;(BDOS)カレントドライブの設定
0002FC C99C 1831            12      JR  SYSTEM0
                                
       C99E                     OPEN1:
0002FE C99E 2114E4          10      LD  HL,FDRV
       C9A1                     OPEN:
000301 C9A1 0E11             7      LD  C,011H      ;(BDOS)ファイルの検索
       C9A3                     OPEN3:
000303 C9A3 D5              11      PUSH    DE
000304 C9A4 111CE3          10      LD  DE,DTA_CCP
000307 C9A7 CDC5C9          17      CALL    SETDTA
00030A C9AA EB               4      EX  DE,HL
00030B C9AB CDCFC9          17      CALL    SYSTEM0
00030E C9AE D1              10      POP DE
00030F C9AF C9              10      RET
                                
       C9B0                     OPEN2:
000310 C9B0 0E12             7      LD  C,012H
000312 C9B2 18EF            12      JR  OPEN3
                                
       C9B4                     DEFCB:              ;Z=Ok NZ=Error
000314 C9B4 111CE3          10      LD  DE,DTA_CCP
000317 C9B7 CDCDC9          17      CALL    SYSC0F
                                
00031A C9BA 113DE3          10      LD  DE,DTA_CCP+33   ;(FCB)ランダムレコード
00031D C9BD 0604             7      LD  B,4
00031F C9BF CD16CC          17      CALL    ZERO_MEMORY_DE
       C9C2                     SETDTA100:
000322 C9C2 110001          10      LD  DE,00100H
       C9C5                     SETDTA:
000325 C9C5 C33CCF          10      JP  _SYS1A      ;(BDOS)DTAの設定
                                
       C9C8                     SETDTA1:
000328 C9C8 118000          10      LD  DE,DTA1
00032B C9CB 18F8            12      JR  SETDTA
                                
       C9CD                     SYSC0F:
00032D C9CD 0E0F             7      LD  C,00FH      ;(BDOS)ファイルのオープン
       C9CF                     SYSTEM0:
00032F C9CF CD0500          17      CALL    SYSTEM
000332 C9D2 B7               4      OR  A
000333 C9D3 C9              10      RET
                                
       C9D4                     C_CD:
000334 C9D4 0E5A             7      LD  C,5AH
000336 C9D6 18F7            12      JR  SYSTEM0
                                
       C9D8                     S27BUF:
000338 C9D8 3A0700          13      LD  A,(SYSTEM+2)
00033B C9DB 3D               4      DEC A
00033C C9DC E6F8             7      AND 0F8H
00033E C9DE 67               4      LD  H,A
00033F C9DF 2E00             7      LD  L,0
       C9E1                     S27DTA:
000341 C9E1 111CE3          10      LD  DE,DTA_CCP
       C9E4                     S27:
000344 C9E4 0E27             7      LD  C,027H      ;(BDOS)ランダムブロック読み込み
000346 C9E6 18E7            12      JR  SYSTEM0
                                
       C9E8                     CEXE4:
000348 C9E8 211DE4          10      LD  HL,FNAME+8
00034B C9EB 7E               7      LD  A,(HL)
00034C C9EC FE20             7      CP  020H
00034E C9EE 2007            12      JR  NZ,CEXE7
000350 C9F0 3E3F             7      LD  A,'?'
000352 C9F2 77               7      LD  (HL),A
000353 C9F3 23               6      INC HL
000354 C9F4 77               7      LD  (HL),A
000355 C9F5 23               6      INC HL
000356 C9F6 77               7      LD  (HL),A
       C9F7                     CEXE7:
000357 C9F7 CD9EC9          17      CALL    OPEN1
       C9FA                     CEXE5:
00035A C9FA C0              11      RET NZ
00035B C9FB 2A26E3          16      LD  HL,(DTA_CCP+1+9)
00035E C9FE 7C               4      LD  A,H
00035F C9FF CD65D7          17      CALL    CAP
000362 CA02 67               4      LD  H,A
000363 CA03 7D               4      LD  A,L
000364 CA04 CD65D7          17      CALL    CAP
000367 CA07 6F               4      LD  L,A
000368 CA08 3A25E3          13      LD  A,(DTA_CCP+1+8)
00036B CA0B CD65D7          17      CALL    CAP
00036E CA0E D642             7      SUB 'B'
000370 CA10 282C            12      JR  Z,C_BAT
000372 CA12 3D               4      DEC A       ;'C'
000373 CA13 2805            12      JR  Z,C_EXE
       CA15                     CEXE6:
000375 CA15 CDB0C9          17      CALL    OPEN2
000378 CA18 18E0            12      JR  CEXE5
                                
       CA1A                     C_EXE:
00037A CA1A 7C               4      LD  A,H
00037B CA1B FE4D             7      CP  'M'
00037D CA1D 20F6            12      JR  NZ,CEXE6
                                
00037F CA1F CDB4C9          17      CALL    DEFCB
000382 CA22 CDD8C9          17      CALL    S27BUF
000385 CA25 3D               4      DEC A
000386 CA26 37               4      SCF
000387 CA27 C0              11      RET NZ
000388 CA28 7C               4      LD  A,H
000389 CA29 B5               4      OR  L
00038A CA2A 37               4      SCF
00038B CA2B C8              11      RET Z
00038C CA2C CDC8C9          17      CALL    SETDTA1
00038F CA2F 110000          10  COMPAT: LD  DE,0                ; self-modifying code
000392 CA32 ED7B0600        20      LD  SP,(SYSTEM+1)
000396 CA36 67               4      LD  H,A             ; A=0 in SETDTA1(_SYS1A)
000397 CA37 6F               4      LD  L,A
000398 CA38 E5              11      PUSH    HL              ; push $0000 (reboot address)
000399 CA39 24               4      INC H
00039A CA3A E5              11      PUSH    HL              ; push $0100 (TPA address)
00039B CA3B C3E1CB          10      JP  SETFCB              ; and JP $0100
                                
       CA3E                     C_BAT:
00039E CA3E 114154          10      LD  DE,'A'+'T'*256
0003A1 CA41 ED52            15      SBC HL,DE
0003A3 CA43 20D0            12      JR  NZ,CEXE6
                                
0003A5 CA45 CDB4C9          17      CALL    DEFCB
                                
0003A8 CA48 211CE3          10      LD  HL,DTA_CCP
0003AB CA4B 1141E3          10      LD  DE,FCB_BAT
0003AE CA4E 012500          10      LD  BC,37
0003B1 CA51 EDB0                    LDIR
       CA53                     C_BAT1:
0003B3 CA53 CDC2C9          17      CALL    SETDTA100
0003B6 CA56 CD8ACA          17      CALL    FGETC_BAT
0003B9 CA59 218100          10      LD  HL,DTA1+1
0003BC CA5C 2025            12      JR  NZ,END_BATCH
0003BE CA5E FE21             7      CP  021H        ;スペースや改行など制御文字を飛ばす
0003C0 CA60 38F1            12      JR  C,C_BAT1
0003C2 CA62 3620            10      LD  (HL),' '
0003C4 CA64 23               6      INC HL
       CA65                     C_BAT2:
0003C5 CA65 77               7      LD  (HL),A
0003C6 CA66 23               6      INC HL
0003C7 CA67 7D               4      LD  A,L
0003C8 CA68 3C               4      INC A       ;L==0FFH
0003C9 CA69 2809            12      JR  Z,RUN_BATCH
0003CB CA6B CD8ACA          17      CALL    FGETC_BAT
0003CE CA6E 2004            12      JR  NZ,RUN_BATCH
0003D0 CA70 FE20             7      CP  020H
0003D2 CA72 30F1            12      JR  NC,C_BAT2
       CA74                     RUN_BATCH:
0003D4 CA74 7D               4      LD  A,L
0003D5 CA75 D67F             7      SUB DTA1-1
0003D7 CA77 328000          13      LD  (DTA1),A
0003DA CA7A FE04             7      CP  4
0003DC CA7C 3805            12      JR  C,END_BATCH
0003DE CA7E 3600            10      LD  (HL),0
0003E0 CA80 C32EC9          10      JP  COMMAND2
       CA83                     END_BATCH:
0003E3 CA83 AF               4      XOR A       ;バッチファイルを閉じる
0003E4 CA84 3241E3          13      LD  (FCB_BAT),A
0003E7 CA87 C300E4          10      JP  CPM_BOOT
                                
       CA8A                     FGETC_BAT:
0003EA CA8A 1141E3          10      LD  DE,FCB_BAT
       CA8D                     FGETC:              ;1文字ずつ読み込む
0003ED CA8D E5              11      PUSH    HL      ;Z:成功
0003EE CA8E 210100          10      LD  HL,1
0003F1 CA91 CDE4C9          17      CALL    S27
0003F4 CA94 E1              10      POP HL
0003F5 CA95 3A0001          13      LD  A,(00100H)
0003F8 CA98 C9              10      RET
                                
       CA99                     C_DEL:
0003F9 CA99 CDE1CB          17      CALL    SETFCB
0003FC CA9C CD39D0          17      CALL    _SYS08      ;(BDOS)エコーなしコンソール入力
                                
0003FF CA9F 0E13             7      LD  C,013H
000401 CAA1 180A            12      JR  CDEL1       ;(BDOS)ファイルの削除
                                
       CAA3                     C_REN:
000403 CAA3 CDE1CB          17      CALL    SETFCB
000406 CAA6 3E10             7      LD  A,010H      ;ディレクトリも対象にする
000408 CAA8 326900          13      LD  (FCB1+13),A ;属性
00040B CAAB 0E17             7      LD  C,017H      ;(BDOS)ファイル名の変更
       CAAD                     CDEL1:
00040D CAAD 115C00          10      LD  DE,FCB1
000410 CAB0 CD0500          17      CALL    SYSTEM
000413 CAB3 C6FF             7      ADD A,0FFH
000415 CAB5 C9              10      RET
                                
       CAB6                     C_DIR:
000416 CAB6 CD4ED4          17      CALL    FILEC
000419 CAB9 2115E4          10      LD  HL,FDRV+1
00041C CABC CDF7CC          17      CALL    CWILD1
00041F CABF 3EF1             7      LD  A,0F1H
000421 CAC1 3221E4          13      LD  (FDRV+13),A
000424 CAC4 CD9EC9          17      CALL    OPEN1
       CAC7                     CDIR1:
000427 CAC7 B7               4      OR  A
000428 CAC8 2008            12      JR  NZ,PDSKF
00042A CACA CD15CB          17      CALL    P_NAME
00042D CACD CDB0C9          17      CALL    OPEN2
000430 CAD0 18F5            12      JR  CDIR1
       CAD2                     PDSKF:
000432 CAD2 3A14E4          13      LD  A,(FDRV)
000435 CAD5 5F               4      LD  E,A
000436 CAD6 0E1B             7      LD  C,01BH      ;(BDOS)ディスク情報の獲得
000438 CAD8 CD0500          17      CALL    SYSTEM
00043B CADB 4F               4      LD  C,A     ;C←1クラスタ辺りの論理セクタ数
00043C CADC C601             7      ADD A,001H
00043E CADE D8              11      RET C       ;Aが0FFHだった場合
00043F CADF 3E06             7      LD  A,8-2
       CAE1                     PDS1:               ;HL=未使用クラスタの総数
000441 CAE1 3C               4      INC A
000442 CAE2 CB19             8      RR  C
000444 CAE4 30FB            12      JR  NC,PDS1
       CAE6                     PDS2:               ;B←論理セクタのサイズの上位8ビット
000446 CAE6 3C               4      INC A
000447 CAE7 CB18             8      RR  B
000449 CAE9 30FB            12      JR  NC,PDS2
00044B CAEB 47               4      LD  B,A
                                
00044C CAEC 110000          10      LD  DE,0
       CAEF                     PDS3:
00044F CAEF 29              11      ADD HL,HL
000450 CAF0 EB               4      EX  DE,HL
000451 CAF1 ED6A            15      ADC HL,HL
000453 CAF3 EB               4      EX  DE,HL
000454 CAF4 10F9            13      DJNZ    PDS3
       CAF6                     PDSKF1:
000456 CAF6 CD7FCB          17      CALL    PRDEC_DEHL
000459 CAF9 1171E3          10      LD  DE,FREE
00045C CAFC CD64CD          17      CALL    _SYS09      ;(BDOS)文字列出力
00045F CAFF CD6FCB          17      CALL    PUTDRV
000462 CB02 3E5C             7      LD  A,05CH      ;\
000464 CB04 CDFECF          17      CALL    MSG_A
000467 CB07 2A22E4          16      LD  HL,(FDRV+14)    ;ディレクトリのクラスタ番号
00046A CB0A AF               4      XOR A
00046B CB0B 11FEFF          10      LD  DE,0-2
00046E CB0E 19              11      ADD HL,DE
00046F CB0F 23               6      INC HL
000470 CB10 DC7CCB          17      CALL    C,PRDEC_HL
000473 CB13 1833            12      JR  LTNL
                                
       CB15                     P_NAME:
000475 CB15 3A1DE3          13      LD  A,(DTA_CCP+1)
000478 CB18 FE2E             7      CP  '.'
00047A CB1A C8              11      RET Z
                                
00047B CB1B 3A28E3          13      LD  A,(DTA_CCP+1+00BH)
00047E CB1E F5              11      PUSH    AF
00047F CB1F CB67             8      BIT 4,A
000481 CB21 2808            12      JR  Z,DIR3
000483 CB23 1166E3          10      LD  DE,DIRMES
000486 CB26 CD64CD          17      CALL    _SYS09      ;(BDOS)文字列出力
000489 CB29 180A            12      JR  DIR6
       CB2B                     DIR3:
00048B CB2B ED5B3BE3        20      LD  DE,(DTA_CCP+1+01EH)
00048F CB2F 2A39E3          16      LD  HL,(DTA_CCP+1+01CH)
000492 CB32 CD7FCB          17      CALL    PRDEC_DEHL
       CB35                     DIR6:
000495 CB35 F1              10      POP AF
000496 CB36 0F               4      RRCA
000497 CB37 9F               4      SBC A,A
000498 CB38 E60A             7      AND '*'-020H
00049A CB3A C620             7      ADD A,020H
00049C CB3C CDFECF          17      CALL    MSG_A
00049F CB3F CD6FCB          17      CALL    PUTDRV
0004A2 CB42 211DE3          10      LD  HL,DTA_CCP+1
0004A5 CB45 CDBFCB          17      CALL    FPRNT
                                
       CB48                     LTNL:
0004A8 CB48 1E03             7      LD  E,3
0004AA CB4A C3CDE4          10      JP  _PRINT
                                
       CB4D                     C_PATH:
0004AD CB4D CD30D5          17      CALL    SPCUT
0004B0 CB50 21E0E2          10      LD  HL,PATHD
0004B3 CB53 FE21             7      CP  021H
0004B5 CB55 300C            12      JR  NC,CPATH0
       CB57                     CPATHP:
0004B7 CB57 7E               7      LD  A,(HL)
0004B8 CB58 23               6      INC HL
0004B9 CB59 FE20             7      CP  020H
0004BB CB5B 3F               4      CCF
0004BC CB5C 30EA            12      JR  NC,LTNL
0004BE CB5E CDFECF          17      CALL    MSG_A
0004C1 CB61 18F4            12      JR  CPATHP
       CB63                     CPATH0:
0004C3 CB63 FE3B             7      CP  ';'
0004C5 CB65 2001            12      JR  NZ,CPATH1
0004C7 CB67 13               6      INC DE
       CB68                     CPATH1:
0004C8 CB68 EB               4      EX  DE,HL
0004C9 CB69 013B00          10      LD  BC,PATHX
0004CC CB6C EDB0                    LDIR
0004CE CB6E C9              10      RET
                                
       CB6F                     PUTDRV:
0004CF CB6F 3A14E4          13      LD  A,(FDRV)
0004D2 CB72 C640             7      ADD A,'A'-1
0004D4 CB74 CDFECF          17      CALL    MSG_A
0004D7 CB77 3E3A             7      LD  A,':'
       CB79                     MSG_AR:
0004D9 CB79 C3FECF          10      JP  MSG_A
                                
       CB7C                     PRDEC_HL:
0004DC CB7C AF               4      XOR A
0004DD CB7D 5F               4      LD  E,A
0004DE CB7E 57               4      LD  D,A
       CB7F                     PRDEC_DEHL:
0004DF CB7F D5              11      PUSH    DE
0004E0 CB80 110FE4          10      LD  DE,DECBF
0004E3 CB83 0605             7      LD  B,5
0004E5 CB85 CD16CC          17      CALL    ZERO_MEMORY_DE  ;A=0
0004E8 CB88 D1              10      POP DE
                                
0004E9 CB89 0E20             7      LD  C,32
       CB8B                     DEC1:
0004EB CB8B 29              11      ADD HL,HL
0004EC CB8C EB               4      EX  DE,HL
0004ED CB8D ED6A            15      ADC HL,HL
0004EF CB8F EB               4      EX  DE,HL
0004F0 CB90 E5              11      PUSH    HL
0004F1 CB91 2113E4          10      LD  HL,DECBF+4
0004F4 CB94 0605             7      LD  B,5
       CB96                     DEC2:
0004F6 CB96 7E               7      LD  A,(HL)
0004F7 CB97 8F               4      ADC A,A
0004F8 CB98 27               4      DAA
0004F9 CB99 77               7      LD  (HL),A
0004FA CB9A 2B               6      DEC HL
0004FB CB9B 10F9            13      DJNZ    DEC2
0004FD CB9D E1              10      POP HL
0004FE CB9E 0D               4      DEC C
0004FF CB9F 20EA            12      JR  NZ,DEC1
                                
000501 CBA1 210FE4          10      LD  HL,DECBF
000504 CBA4 3E20             7      LD  A,020H
000506 CBA6 0604             7      LD  B,4
       CBA8                     DEC3:
000508 CBA8 CDB5CB          17      CALL    DEC4
00050B CBAB CDB5CB          17      CALL    DEC4
00050E CBAE 23               6      INC HL
00050F CBAF 10F7            13      DJNZ    DEC3
       CBB1                     DECX:
000511 CBB1 CDB5CB          17      CALL    DEC4
000514 CBB4 AF               4      XOR A
       CBB5                     DEC4:
000515 CBB5 ED6F            18      RLD
000517 CBB7 FE20             7      CP  020H
000519 CBB9 2802            12      JR  Z,DEC5
00051B CBBB F630             7      OR  030H
       CBBD                     DEC5:
00051D CBBD 18BA            12      JR  MSG_AR
                                
       CBBF                     FPRNT:
00051F CBBF 0608             7      LD  B,8 ;ファイル名を表示
000521 CBC1 CDD0CB          17      CALL    P_N1
000524 CBC4 7E               7      LD  A,(HL)
000525 CBC5 CD71D7          17      CALL    CAP3
000528 CBC8 D8              11      RET C   ;拡張子が無い
                                
000529 CBC9 3E2E             7      LD  A,'.'
00052B CBCB CDFECF          17      CALL    MSG_A
00052E CBCE 0603             7      LD  B,3 ;拡張子を表示
       CBD0                     P_N1:
000530 CBD0 7E               7      LD  A,(HL)
000531 CBD1 CD71D7          17      CALL    CAP3
000534 CBD4 3807            12      JR  C,P_N2
000536 CBD6 CDFECF          17      CALL    MSG_A
000539 CBD9 23               6      INC HL
00053A CBDA 10F4            13      DJNZ    P_N1
00053C CBDC C9              10      RET
       CBDD                     P_N2:
00053D CBDD 23               6      INC HL
00053E CBDE 10FD            13      DJNZ    P_N2
000540 CBE0 C9              10      RET
                                
       CBE1                     SETFCB:
000541 CBE1 CD30D5          17      CALL    SPCUT
000544 CBE4 1A               7      LD  A,(DE)
000545 CBE5 FE20             7      CP  020H
000547 CBE7 3801            12      JR  C,SETFCBA
000549 CBE9 1B               6      DEC DE
       CBEA                     SETFCBA:
00054A CBEA 0624             7      LD  B,36
00054C CBEC 215C00          10      LD  HL,FCB1
00054F CBEF E5              11      PUSH    HL
000550 CBF0 AF               4      XOR A
000551 CBF1 CD05D5          17      CALL    FILL_MEMORY
000554 CBF4 E1              10      POP HL
000555 CBF5 D5              11      PUSH    DE
000556 CBF6 CDA2CF          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
000559 CBF9 216C00          10      LD  HL,FCB2
00055C CBFC CDA2CF          17      CALL    _SYS29      ;(BDOS)ファイル名の解析
00055F CBFF E1              10      POP HL
000560 CC00 010050          10      LD  BC,05000H
000563 CC03 118100          10      LD  DE,00081H
       CC06                     SETFCB1:
000566 CC06 7E               7      LD  A,(HL)
000567 CC07 23               6      INC HL
000568 CC08 FE20             7      CP  020H
00056A CC0A 3805            12      JR  C,SETFCB2
00056C CC0C 12               7      LD  (DE),A
00056D CC0D 13               6      INC DE
00056E CC0E 0C               4      INC C
00056F CC0F 10F5            13      DJNZ    SETFCB1
       CC11                     SETFCB2:
000571 CC11 79               4      LD  A,C
000572 CC12 328000          13      LD  (DTA1),A
000575 CC15 04               4      INC B
       CC16                     ZERO_MEMORY_DE:
000576 CC16 AF               4      XOR A
       CC17                     FILL_MEMORY_DE:
000577 CC17 12               7      LD  (DE),A
000578 CC18 13               6      INC DE
000579 CC19 10FC            13      DJNZ    FILL_MEMORY_DE
00057B CC1B C9              10      RET
                                
       CC1C                     C_COPY:
00057C CC1C CDE1CB          17      CALL    SETFCB
                                
00057F CC1F 1161E4          10      LD  DE,ZERO
000582 CC22 CD51D4          17      CALL    FILEC2
000585 CC25 216C00          10      LD  HL,FCB2
000588 CC28 CDA9CF          17      CALL    S29X1
                                
00058B CC2B 3E10             7      LD  A,010H
00058D CC2D 326900          13      LD  (FCB1+13),A
000590 CC30 216D00          10      LD  HL,FCB2+1
000593 CC33 CDF7CC          17      CALL    CWILD1
       CC36                     COPY0:
000596 CC36 CDF4CC          17      CALL    CWILD
000599 CC39 215C00          10      LD  HL,FCB1
00059C CC3C CDA1C9          17      CALL    OPEN
00059F CC3F 37               4      SCF
       CC40                     COPY1:
0005A0 CC40 C0              11      RET NZ
0005A1 CC41 CDB4C9          17      CALL    DEFCB
                                
0005A4 CC44 3A29E3          13      LD  A,(DTA_CCP+13)
0005A7 CC47 CB67             8      BIT 4,A
0005A9 CC49 2821            12      JR  Z,COPY1A
                                
0005AB CC4B 215D00          10      LD  HL,FCB1+1
0005AE CC4E CD8FD8          17      CALL    CHKWILD
0005B1 CC51 3814            12      JR  C,COPY9
                                
0005B3 CC53 3E20             7      LD  A,020H
0005B5 CC55 325D00          13      LD  (FCB1+1),A
0005B8 CC58 2A36E3          16      LD  HL,(DTA_CCP+26)
0005BB CC5B 23               6      INC HL
0005BC CC5C 226A00          16      LD  (FCB1+14),HL
0005BF CC5F 18D5            12      JR  COPY0
                                
       CC61                     COPY8:
0005C1 CC61 CD64CD          17      CALL    _SYS09      ;(BDOS)文字列出力
0005C4 CC64 CD48CB          17      CALL    LTNL
       CC67                     COPY9:
0005C7 CC67 CDB0C9          17      CALL    OPEN2
0005CA CC6A 18D4            12      JR  COPY1
                                
       CC6C                     COPY1A:
0005CC CC6C 216C00          10      LD  HL,FCB2
0005CF CC6F 1114E4          10      LD  DE,FDRV
0005D2 CC72 011EE3          10      LD  BC,DTA_CCP+2
0005D5 CC75 EDA0            16      LDI
0005D7 CC77 3E0B             7      LD  A,11
       CC79                     COPY2:
0005D9 CC79 F5              11      PUSH    AF
0005DA CC7A 7E               7      LD  A,(HL)
0005DB CC7B FE3F             7      CP  '?'
0005DD CC7D 2001            12      JR  NZ,COPY3
0005DF CC7F 0A               7      LD  A,(BC)
       CC80                     COPY3:
0005E0 CC80 12               7      LD  (DE),A
0005E1 CC81 03               6      INC BC
0005E2 CC82 13               6      INC DE
0005E3 CC83 23               6      INC HL
0005E4 CC84 F1              10      POP AF
0005E5 CC85 3D               4      DEC A
0005E6 CC86 20F1            12      JR  NZ,COPY2
0005E8 CC88 010500          10      LD  BC,16-11
0005EB CC8B EDB0                    LDIR
       CC8D                     PUTNAME:
0005ED CC8D 215D00          10      LD  HL,FCB1+1
0005F0 CC90 CD8FD8          17      CALL    CHKWILD
0005F3 CC93 300B            12      JR  NC,PUTN1
0005F5 CC95 2115E4          10      LD  HL,FDRV+1
0005F8 CC98 CDBFCB          17      CALL    FPRNT
0005FB CC9B 3E20             7      LD  A,020H
0005FD CC9D CDFECF          17      CALL    MSG_A
       CCA0                     PUTN1:
000600 CCA0 1114E4          10      LD  DE,FDRV
000603 CCA3 0E16             7      LD  C,016H      ;(BDOS)ファイルの作成
000605 CCA5 CDCFC9          17      CALL    SYSTEM0
000608 CCA8 2048            12      JR  NZ,COPYE2
00060A CCAA 67               4      LD  H,A     ;A=0
00060B CCAB 6F               4      LD  L,A
00060C CCAC 2235E4          16      LD  (FDRV+33),HL    ;(FCB)ランダムレコード
00060F CCAF 2237E4          16      LD  (FDRV+35),HL
       CCB2                     COPY6:
000612 CCB2 CDD8C9          17      CALL    S27BUF
000615 CCB5 47               4      LD  B,A
000616 CCB6 3C               4      INC A
000617 CCB7 2831            12      JR  Z,COPYE
000619 CCB9 7C               4      LD  A,H
00061A CCBA B5               4      OR  L
00061B CCBB 280C            12      JR  Z,COPY7
00061D CCBD 1114E4          10      LD  DE,FDRV
000620 CCC0 0E26             7      LD  C,026H      ;(BDOS)ランダムブロック書き込み
000622 CCC2 CDCFC9          17      CALL    SYSTEM0
000625 CCC5 2023            12      JR  NZ,COPYE
000627 CCC7 10E9            13      DJNZ    COPY6
       CCC9                     COPY7:
000629 CCC9 3A29E3          13      LD  A,(DTA_CCP+13)  ;(FCB)属性
00062C CCCC 3221E4          13      LD  (FDRV+13),A
00062F CCCF 2130E3          10      LD  HL,DTA_CCP+20   ;(FCB)タイムスタンプ
000632 CCD2 1128E4          10      LD  DE,FDRV+20
000635 CCD5 010400          10      LD  BC,4
000638 CCD8 EDB0                    LDIR
                                
00063A CCDA 1114E4          10      LD  DE,FDRV
00063D CCDD 0E10             7      LD  C,010H      ;(BDOS)ファイルのクローズ
00063F CCDF CDCFC9          17      CALL    SYSTEM0
000642 CCE2 2006            12      JR  NZ,COPYE
                                
000644 CCE4 1171E4          10      LD  DE,OK
000647 CCE7 C361CC          10      JP  COPY8
                                
       CCEA                     COPYE:
00064A CCEA 1114E4          10      LD  DE,FDRV
00064D CCED 0E13             7      LD  C,013H      ;(BDOS)ファイルの削除
00064F CCEF CD0500          17      CALL    SYSTEM
       CCF2                     COPYE2:
000652 CCF2 37               4      SCF
000653 CCF3 C9              10      RET
                                
       CCF4                     CWILD:
000654 CCF4 215D00          10      LD  HL,FCB1+1
       CCF7                     CWILD1:
000657 CCF7 7E               7      LD  A,(HL)
000658 CCF8 FE20             7      CP  020H
00065A CCFA C0              11      RET NZ
       CCFB                     CWILD2:
00065B CCFB 3E3F             7      LD  A,'?'
00065D CCFD 060B             7      LD  B,11
00065F CCFF C305D5          10      JP  FILL_MEMORY
                                
       CD02                     COMTB:
000662 CD02 44202020                DB  "D   "  ;1
000666 CD06 B6CA                    DW  C_DIR
000668 CD08 44495220                DB  "DIR "  ;2
00066C CD0C B6CA                    DW  C_DIR
00066E CD0E 434F5059                DB  "COPY"  ;3
000672 CD12 1CCC                    DW  C_COPY
000674 CD14 43442020                DB  "CD  "  ;4
000678 CD18 D4C9                    DW  C_CD
00067A CD1A 44454C20                DB  "DEL "  ;5
00067E CD1E 99CA                    DW  C_DEL
000680 CD20 50415448                DB  "PATH"  ;6
000684 CD24 4DCB                    DW  C_PATH
000686 CD26 52454E20                DB  "REN "  ;7
00068A CD2A A3CA                    DW  C_REN
00068C CD2C 52454D20                DB  "REM "  ;8
000690 CD30 61CD                    DW  C_REM
[EOF:LDCCP.ASM:SHIFT_JIS]
                                    INCLUDE "LDOS.ASM"
                                
                                ;   LSX-Dodgers OS
                                
       CD32                     BDOS0:
000692 CD32 E5              11      PUSH    HL
000693 CD33 79               4      LD  A,C
000694 CD34 FE3C             7      CP  03CH
000696 CD36 3802            12      JR  C,DOS1
000698 CD38 3E3C             7      LD  A,03CH
       CD3A                     DOS1:
00069A CD3A 87               4      ADD A,A
00069B CD3B 6F               4      LD  L,A
00069C CD3C 26E5             7      LD  H,STABLE/256
00069E CD3E 7E               7      LD  A,(HL)
00069F CD3F 2C               4      INC L
0006A0 CD40 66               7      LD  H,(HL)
0006A1 CD41 6F               4      LD  L,A
0006A2 CD42 E3              19      EX  (SP),HL
0006A3 CD43 79               4      LD  A,C
                                ;確認用
                                ;   LD  (0050H),A
0006A4 CD44 C9              10      RET
       CD45                     _DOS2:
0006A5 CD45 FE5A             7      CP  05AH        ;(BDOS)カレントディレクトリの変更(_CHDIR)
0006A7 CD47 CAE4CF          10      JP  Z,_SYS5A
0006AA CD4A FE5C             7      CP  05CH        ;(BDOS)ファイル名の解析(_PFILE)
0006AC CD4C CAA2CF          10      JP  Z,_SYS29
0006AF CD4F FE5F             7      CP  05FH        ;(BDOS)ディスクバッファのフラッシュ(_FLUSH)
0006B1 CD51 CAA8E1          10      JP  Z,_SYS5F
0006B4 CD54 FE6F             7      CP  06FH        ;(BDOS)MSX-DOS のバージョン番号の獲得(_DOSVER)
0006B6 CD56 200A            12      JR  NZ,_ERROR
0006B8 CD58 011D00          10      LD  BC,VER_6F
0006BB CD5B 115801          10      LD  DE,VER
0006BE CD5E 210301          10      LD  HL,MACD
       CD61                     C_REM:
0006C1 CD61 AF               4      XOR A
       CD62                     _ERROR:
0006C2 CD62 A7               4      AND A
0006C3 CD63 C9              10      RET
                                
       CD64                     _SYS09:     ;文字列出力
0006C4 CD64 D5              11      PUSH    DE
       CD65                     _SX09:
0006C5 CD65 1A               7      LD  A,(DE)
0006C6 CD66 13               6      INC DE
0006C7 CD67 FE24             7      CP  '$'
0006C9 CD69 2831            12      JR  Z,SX0E2
0006CB CD6B CDFECF          17      CALL    MSG_A
0006CE CD6E 18F5            12      JR  _SX09
                                
       CD70                     MSX1:
0006D0 CD70 CDFECF          17      CALL    MSG_A
       CD73                     MSX:
0006D3 CD73 7E               7      LD  A,(HL)
0006D4 CD74 23               6      INC HL
0006D5 CD75 B7               4      OR  A
0006D6 CD76 20F8            12      JR  NZ,MSX1
0006D8 CD78 C9              10      RET
                                
       CD79                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0006D9 CD79 212200          10      LD  HL,00022H
0006DC CD7C 7D               4      LD  A,L
0006DD CD7D C9              10      RET
                                
       CD7E                     _SYS0D:     ;(BDOS)ディスクリセット
0006DE CD7E CDDFE4          17      CALL    _FFLUSH
0006E1 CD81 E5              11      PUSH    HL
0006E2 CD82 218000          10      LD  HL,00080H
0006E5 CD85 228AE4          16      LD  (_DTA),HL
0006E8 CD88 E1              10      POP HL
0006E9 CD89 D5              11      PUSH    DE
0006EA CD8A 1E00             7      LD  E,0
0006EC CD8C 3E                      DB  03EH    ;次の PUSH DE をスキップ
                                
       CD8D                     _SYS0E:     ;(BDOS)カレントドライブの設定
0006ED CD8D D5              11      PUSH    DE
0006EE CD8E 7B               4      LD  A,E
0006EF CD8F DDE5            15      PUSH    IX
0006F1 CD91 CDDCE4          17      CALL    _GETDPB
0006F4 CD94 DDE1            14      POP IX
0006F6 CD96 3804            12      JR  C,SX0E2
0006F8 CD98 7B               4      LD  A,E
0006F9 CD99 3287E4          13      LD  (_DVSW),A
       CD9C                     SX0E2:
0006FC CD9C D1              10      POP DE
0006FD CD9D C9              10      RET
                                
       CD9E                     _SYS0F:     ;(BDOS)ファイルのオープン
0006FE CD9E CD42D5          17      CALL    SETDRV
000701 CDA1 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
000704 CDA4 C602             7      ADD A,002H      ;Write
000706 CDA6 2848            12      JR  Z,FEND0F
000708 CDA8 CD8BD8          17      CALL    CHKWILDX
                                
00070B CDAB D462D5          17      CALL    NC,SOPENX
       CDAE                     _S16XX:
00070E CDAE 3840            12      JR  C,FEND0F
                                                ;Directory location
000710 CDB0 3A9FE4          13      LD  A,(_FILEN)
000713 CDB3 FD7719          19      LD  (IY+25),A   ;(FCB)ディレクトリロケーション
                                ;               _DIRF
000716 CDB6 3AA0E4          13      LD  A,(_DIRF)
000719 CDB9 FD771D          19      LD  (IY+29),A   ;(FCB)ディレクトリモード
                                ;               _FBPS
00071C CDBC FD731E          19      LD  (IY+30),E   ;(FCB)ディレクトリポジション
00071F CDBF FD721F          19      LD  (IY+31),D
                                ;               Open(Read)
000722 CDC2 FD361CFF        19      LD  (IY+28),0FFH    ;(FCB)オープンモード
                                ;               FILENAME
000726 CDC6 FDE5            15      PUSH    IY
000728 CDC8 D1              10      POP DE
000729 CDC9 13               6      INC DE
00072A CDCA 010B00          10      LD  BC,11
00072D CDCD EDB0                    LDIR
                                ;               Attribute
00072F CDCF 7E               7      LD  A,(HL)
000730 CDD0 FD770D          19      LD  (IY+13),A   ;(FCB)属性(アトリビュート)
000733 CDD3 110B00          10      LD  DE,11       ;Reserved
000736 CDD6 19              11      ADD HL,DE
                                                    ;(FCB)ファイルを最後に変更した時刻
000737 CDD7 11E4E5          10      LD  DE,SDDATA       ;(FCB)ファイルを最後に変更した日付
00073A CDDA 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       CDDC                     S16LOOP:                ;(FCB)ファイルのサイズ(バイト単位)
00073C CDDC 1A               7      LD  A,(DE)
00073D CDDD 13               6      INC DE
00073E CDDE 32E5CD          13      LD  (S16PAT+2),A
000741 CDE1 7E               7      LD  A,(HL)
000742 CDE2 23               6      INC HL
000743 CDE3 FD7700          19  S16PAT: LD  (IY+0),A
000746 CDE6 10F4            13      DJNZ    S16LOOP
                                
000748 CDE8 AF               4      XOR A
000749 CDE9 FD770C          19      LD  (IY+12),A   ;(FCB)カレントブロック
00074C CDEC FD2294CE        20      LD  (OFCB+1),IY
       CDF0                     FEND0F:
000750 CDF0 1845            12      JR  FEND10
                                
       CDF2                     _SYS10:     ;(BDOS)ファイルのクローズ
000752 CDF2 CD42D5          17      CALL    SETDRV
000755 CDF5 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
000758 CDF8 D6FE             7      SUB 0FEH
00075A CDFA 37               4      SCF
00075B CDFB 3F               4      CCF
00075C CDFC 2039            12      JR  NZ,FEND10
       CDFE                     _S10A:              ;Write
00075E CDFE FD770E          19      LD  (IY+14),A   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
000761 CE01 FD770F          19      LD  (IY+15),A
                                
000764 CE04 FD341C          23      INC (IY+28)     ;0FEH->0FFH ;オープンモード
000767 CE07 CD87D9          17      CALL    SETTMS
                                
00076A CE0A FD7E1D          19      LD  A,(IY+29)   ;(FCB)ディレクトリモード
00076D CE0D 32A0E4          13      LD  (_DIRF),A
000770 CE10 E67F             7      AND 07FH
000772 CE12 32B2DE          13      LD  (_SECPS),A
000775 CE15 FD5E1E          19      LD  E,(IY+30)   ;(FCB)ディレクトリポジション
000778 CE18 FD561F          19      LD  D,(IY+31)
00077B CE1B CD96D6          17      CALL    READ_DIR
00077E CE1E 3817            12      JR  C,FEND10
                                
000780 CE20 3AC0D5          13  SDECM1: LD  A,(SDECPAT) ;1セクタ辺りのディレクトリエントリ数
000783 CE23 3D               4      DEC A       ;1024=01FH / 512=00FH / 256=7
000784 CE24 FDA619          19      AND (IY+25)     ;(FCB)ディレクトリロケーション
000787 CE27 6F               4      LD  L,A
000788 CE28 2600             7      LD  H,0
00078A CE2A 29              11      ADD HL,HL       ;*2
00078B CE2B 29              11      ADD HL,HL       ;*4
00078C CE2C 29              11      ADD HL,HL       ;*8
00078D CE2D 29              11      ADD HL,HL       ;*16
00078E CE2E 29              11      ADD HL,HL       ;*32
00078F CE2F ED4B7EE5        20      LD  BC,(_DTBUF)
000793 CE33 09              11      ADD HL,BC
                                
000794 CE34 CD9BD8          17      CALL    SDIRENT
       CE37                     FEND10:
000797 CE37 1842            12      JR  FEND
                                
       CE39                     _SYS11:     ;(BDOS)最初のファイルの検索
000799 CE39 CD42D5          17      CALL    SETDRV
00079C CE3C CD8FD5          17      CALL    SOPEN
       CE3F                     _S12X1:
00079F CE3F 383A            12      JR  C,FEND
0007A1 CE41 CD2FD6          17      CALL    SOPENE2
0007A4 CE44 ED5B8AE4        20      LD  DE,(_DTA)
0007A8 CE48 3A88E4          13      LD  A,(_DRV)
0007AB CE4B 3C               4      INC A
0007AC CE4C 12               7      LD  (DE),A
0007AD CE4D D5              11      PUSH    DE
0007AE CE4E 13               6      INC DE
0007AF CE4F 012000          10      LD  BC,32
0007B2 CE52 EDB0                    LDIR
0007B4 CE54 FD6E0E          19      LD  L,(IY+14)   ;(FCB)レコードサイズ/アクセスするディレクトリのクラスタ番号+1
0007B7 CE57 FD660F          19      LD  H,(IY+15)
0007BA CE5A 22F4E5          16      LD  (SCDIR),HL
0007BD CE5D 2A9AE4          16      LD  HL,(_FBPS)
0007C0 CE60 22F6E5          16      LD  (SFBPS),HL
0007C3 CE63 2A9FE4          16      LD  HL,(_FILEN)
0007C6 CE66 7C               4      LD  A,H
0007C7 CE67 B7               4      OR  A
0007C8 CE68 2806            12      JR  Z,_S12DIR
0007CA CE6A 3AB2DE          13      LD  A,(_SECPS)
0007CD CE6D F680             7      OR  080H
0007CF CE6F 67               4      LD  H,A
       CE70                     _S12DIR:
0007D0 CE70 22F8E5          16      LD  (SFNDF),HL  ;Directory position and Flags
0007D3 CE73 E1              10      POP HL
0007D4 CE74 1139E4          10      LD  DE,SFILE
0007D7 CE77 0E21             7      LD  C,33
       CE79                     _S11B:
0007D9 CE79 EDB0                    LDIR
       CE7B                     FEND:
0007DB CE7B 9F               4      SBC A,A     ;CF=0 A=0 : CF=1 A=0FFH
       CE7C                     FENDE:
0007DC CE7C FDE1            14      POP IY
0007DE CE7E C1              10      POP BC
0007DF CE7F D1              10      POP DE
0007E0 CE80 E1              10      POP HL
0007E1 CE81 C9              10      RET
                                
       CE82                     _SYS12:     ;(BDOS)次のファイルの検索
0007E2 CE82 E5              11      PUSH    HL
0007E3 CE83 D5              11      PUSH    DE
0007E4 CE84 C5              11      PUSH    BC
0007E5 CE85 FDE5            15      PUSH    IY
0007E7 CE87 CDF3D5          17      CALL    NOPEN
0007EA CE8A 18B3            12      JR  _S12X1
                                
       CE8C                     _S16K:
0007EC CE8C FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
0007EF CE8F FEFD             7      CP  0FDH        ;Device(0FDH)
0007F1 CE91 37               4      SCF
0007F2 CE92 C8              11      RET Z
                                
0007F3 CE93 110000          10  OFCB:   LD  DE,0
0007F6 CE96 D5              11      PUSH    DE
0007F7 CE97 061A             7      LD  B,26        ;First cluster
       CE99                     S16K1:
0007F9 CE99 13               6      INC DE
0007FA CE9A 23               6      INC HL
0007FB CE9B 10FC            13      DJNZ    S16K1
                                
0007FD CE9D 1A               7      LD  A,(DE)
0007FE CE9E BE               7      CP  (HL)
0007FF CE9F 2013            12      JR  NZ,S16K2
000801 CEA1 13               6      INC DE
000802 CEA2 23               6      INC HL
000803 CEA3 1A               7      LD  A,(DE)
000804 CEA4 BE               7      CP  (HL)
000805 CEA5 200D            12      JR  NZ,S16K2
                                
000807 CEA7 E1              10      POP HL
000808 CEA8 FDE5            15      PUSH    IY
00080A CEAA D1              10      POP DE
00080B CEAB 1A               7      LD  A,(DE)      ;Drive
00080C CEAC BE               7      CP  (HL)
00080D CEAD 2006            12      JR  NZ,S16K3
                                                ;ここはCFが必ず0
00080F CEAF ED52            15      SBC HL,DE       ;CP HL,DE
000811 CEB1 37               4      SCF
000812 CEB2 C0              11      RET NZ
000813 CEB3 E5              11      PUSH    HL
       CEB4                     S16K2:
000814 CEB4 E1              10      POP HL
       CEB5                     S16K3:
000815 CEB5 FDE5            15      PUSH    IY
000817 CEB7 D1              10      POP DE
       CEB8                     _SYS13:     ;(BDOS)ファイルの削除
000818 CEB8 CD42D5          17      CALL    SETDRV
00081B CEBB CDBBD7          17      CALL    KILL
       CEBE                     FEND13:
00081E CEBE 18BB            12      JR  FEND
                                
       CEC0                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
000820 CEC0 CD42D5          17      CALL    SETDRV
000823 CEC3 CDF3D9          17      CALL    INIT_SEQ
       CEC6                     SREAD:
000826 CEC6 CD3BDA          17      CALL    RB_READ
                                
000829 CEC9 C601             7      ADD A,001H
00082B CECB 38AE            12      JR  C,FEND
                                
00082D CECD 7D               4      LD  A,L
00082E CECE D601             7      SUB 001H
       CED0                     FENDX:
000830 CED0 9F               4      SBC A,A
000831 CED1 E603             7      AND 3
000833 CED3 1F               4      RRA
000834 CED4 18A6            12      JR  FENDE
                                
       CED6                     _SYS15:     ;(BDOS)シーケンシャルな書き込み
000836 CED6 CD42D5          17      CALL    SETDRV
000839 CED9 CDF3D9          17      CALL    INIT_SEQ
       CEDC                     SWRITE:
00083C CEDC CD34DA          17      CALL    RB_WRITE
                                
00083F CEDF C6FF             7      ADD A,0FFH
000841 CEE1 18ED            12      JR  FENDX
                                
       CEE3                     _SYS17:     ;(BDOS)ファイル名の変更
000843 CEE3 CD42D5          17      CALL    SETDRV
000846 CEE6 CD11D8          17      CALL    NAME
000849 CEE9 18D3            12      JR  FEND13
                                
       CEEB                     _SYS16:     ;(BDOS)ファイルの作成
00084B CEEB CD42D5          17      CALL    SETDRV
                                
00084E CEEE CD8BD8          17      CALL    CHKWILDX
000851 CEF1 38CB            12      JR  C,FEND13
000853 CEF3 FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
000856 CEF6 FE05             7      CP  5
000858 CEF8 2805            12      JR  Z,_S16X2
00085A CEFA FE21             7      CP  021H
00085C CEFC DABECE          10      JP  C,FEND13
       CEFF                     _S16X2:
                                ;               Clear FCB
00085F CEFF FDE5            15      PUSH    IY
000861 CF01 E1              10      POP HL
000862 CF02 011000          10      LD  BC,16
000865 CF05 09              11      ADD HL,BC
       CF06                     _S16X1:
000866 CF06 70               7      LD  (HL),B      ;B=0
000867 CF07 23               6      INC HL
000868 CF08 0D               4      DEC C
000869 CF09 20FB            12      JR  NZ,_S16X1
                                
00086B CF0B CD8CD9          17      CALL    SETTMSX
00086E CF0E FD360DFF        19      LD  (IY+13),0FFH    ;(FCB)Attribute
000872 CF12 CD62D5          17      CALL    SOPENX
000875 CF15 3F               4      CCF
000876 CF16 CC8CCE          17      CALL    Z,_S16K
000879 CF19 D440D6          17      CALL    NC,COPEN
00087C CF1C D49BD8          17      CALL    NC,SDIRENT
00087F CF1F C3AECD          10      JP  _S16XX
                                
       CF22                     _SYS21:     ;(BDOS)ランダムな読み出し
000882 CF22 CD42D5          17      CALL    SETDRV
000885 CF25 CDD7D9          17      CALL    INIT_RND
000888 CF28 189C            12      JR  SREAD
                                
       CF2A                     _SYS22:     ;(BDOS)ランダムな書き込み
       CF2A                     _SYS28:     ;(BDOS)ランダムな書き込み・その2
00088A CF2A CD42D5          17      CALL    SETDRV
00088D CF2D CDD7D9          17      CALL    INIT_RND
000890 CF30 18AA            12      JR  SWRITE
                                
       CF32                     _SYS18:     ;(BDOS)ログインベクトルの獲得
000892 CF32 21FF00          10      LD  HL,000FFH
000895 CF35 AF               4      XOR A
000896 CF36 C9              10      RET
                                
       CF37                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
000897 CF37 3A87E4          13      LD  A,(_DVSW)
00089A CF3A A7               4      AND A
00089B CF3B C9              10      RET
                                
       CF3C                     _SYS1A:     ;(BDOS)DTAの設定
00089C CF3C ED538AE4        20      LD  (_DTA),DE
0008A0 CF40 AF               4      XOR A
0008A1 CF41 C9              10      RET
                                
       CF42                     _SYS1B:     ;(BDOS)ディスク情報の獲得
0008A2 CF42 7B               4      LD  A,E
0008A3 CF43 CD55D5          17      CALL    GETDRV
0008A6 CF46 CDDCE4          17      CALL    _GETDPB
0008A9 CF49 D4E2E4          17      CALL    NC,_RDFATX
0008AC CF4C 210000          10      LD  HL,0
0008AF CF4F D465D9          17      CALL    NC,DSKF
                                
0008B2 CF52 ED5B66D9        20      LD  DE,(MAXCLP) ;DPB_MAXCL-1
0008B6 CF56 1B               6      DEC DE      ;DE←クラスタの総数
0008B7 CF57 FD2A7CE5        20      LD  IY,(_FATBF) ;IY←メモリ上のFATの先頭アドレス
0008BB CF5B 9F               4      SBC A,A
0008BC CF5C D8              11      RET C
0008BD CF5D 4F               4      LD  C,A     ;C=0
0008BE CF5E DD7E0F          19      LD  A,(IX+DPB_BPS)
0008C1 CF61 E607             7      AND 7
0008C3 CF63 47               4      LD  B,A
0008C4 CF64 DD7E07          19      LD  A,(IX+DPB_SECPCL)
0008C7 CF67 C9              10      RET
                                
       CF68                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
0008C8 CF68 AF               4      XOR A
0008C9 CF69 67               4      LD  H,A
0008CA CF6A 6F               4      LD  L,A
0008CB CF6B C9              10      RET
                                
       CF6C                     _SYS1F:     ;(BDOS)ディスク装置のパラメータの読み出し
0008CC CF6C 2100E6          10      LD  HL,_DEVICE
0008CF CF6F 7B               4      LD  A,E
0008D0 CF70 C3DCE4          10      JP  _GETDPB
                                
       CF73                     _SYS23:     ;(BDOS)ファイルサイズの獲得
0008D3 CF73 E5              11      PUSH    HL
0008D4 CF74 2A1EE5          16      LD  HL,(STABLE+2*00FH)  ;ファイルのオープン
0008D7 CF77 CD0F00          17      CALL    JP_HL
0008DA CF7A 381B            12      JR  C,_S23X1
                                
0008DC CF7C D5              11      PUSH    DE      ;EX DE,IY
0008DD CF7D FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0008DF CF7F FD7E10          19      LD  A,(IY+16)   ;(FCB)ファイルのサイズ(バイト単位)
0008E2 CF82 FD6E11          19      LD  L,(IY+17)   ;
0008E5 CF85 FD6612          19      LD  H,(IY+18)   ;
0008E8 CF88 C5              11      PUSH    BC      ;
0008E9 CF89 FD4613          19      LD  B,(IY+19)   ;
0008EC CF8C CDC9D9          17      CALL    GET_CPM_R_SIZE
0008EF CF8F C1              10      POP BC
       CF90                     _S24X1:
0008F0 CF90 CDE9D9          17      CALL    SET_RR_AHL
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
0008F3 CF93 FDE3            23      EX  (SP),IY     ;
0008F5 CF95 D1              10      POP DE      ;
                                
0008F6 CF96 AF               4      XOR A
       CF97                     _S23X1:
0008F7 CF97 E1              10      POP HL
0008F8 CF98 C9              10      RET
                                
       CF99                     _SYS24:     ;(BDOS)ランダムレコードフィールドの設定
0008F9 CF99 E5              11      PUSH    HL
0008FA CF9A D5              11      PUSH    DE      ;EX DE,IY
0008FB CF9B FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0008FD CF9D CDFBD9          17      CALL    GETSEQ
000900 CFA0 18EE            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       CFA2                     _SYS29:     ;(BDOS)ファイル名の解析(_PPATH)
000902 CFA2 C5              11      PUSH    BC
000903 CFA3 E5              11      PUSH    HL
000904 CFA4 CD59D4          17      CALL    FILE
000907 CFA7 E1              10      POP HL
000908 CFA8 C1              10      POP BC
       CFA9                     S29X1:
000909 CFA9 C5              11      PUSH    BC
00090A CFAA D5              11      PUSH    DE
00090B CFAB E5              11      PUSH    HL
00090C CFAC EB               4      EX  DE,HL
00090D CFAD AF               4      XOR A
00090E CFAE 3221E4          13      LD  (FDRV+13),A
000911 CFB1 2114E4          10      LD  HL,FDRV
000914 CFB4 011000          10      LD  BC,16
000917 CFB7 EDB0                    LDIR
000919 CFB9 E1              10      POP HL
00091A CFBA D1              10      POP DE
00091B CFBB C1              10      POP BC
00091C CFBC C9              10      RET
                                
       CFBD                     _SYS30:     ;(BDOS)論理セクタを用いた書き込み
00091D CFBD C5              11      PUSH    BC
00091E CFBE 014CE0          10      LD  BC,DWT24B
000921 CFC1 1804            12      JR  S2FX
       CFC3                     _SYS2F:
000923 CFC3 C5              11      PUSH    BC
000924 CFC4 013CE0          10      LD  BC,DRD24B
       CFC7                     S2FX:
000927 CFC7 ED43DDCF        20      LD  (S2FPAT+1),BC
00092B CFCB CDDFE4          17      CALL    _FFLUSH
                                
00092E CFCE D5              11      PUSH    DE
00092F CFCF E5              11      PUSH    HL
000930 CFD0 7D               4      LD  A,L     ;Drive
000931 CFD1 CDD9E4          17      CALL    _CHGDRV
000934 CFD4 3809            12      JR  C,S30X2
000936 CFD6 44               4      LD  B,H     ;Number of clusters
000937 CFD7 2A8AE4          16      LD  HL,(_DTA)
                                
00093A CFDA 0E00             7      LD  C,0
00093C CFDC CD3CE0          17  S2FPAT: CALL    DRD24B
       CFDF                     S30X2:
00093F CFDF E1              10      POP HL
000940 CFE0 D1              10      POP DE
000941 CFE1 C1              10      POP BC
000942 CFE2 9F               4      SBC A,A
000943 CFE3 C9              10      RET
                                
       CFE4                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
000944 CFE4 C5              11      PUSH    BC
000945 CFE5 D5              11      PUSH    DE
000946 CFE6 E5              11      PUSH    HL
000947 CFE7 CD4ED4          17      CALL    FILEC
00094A CFEA 210000          10      LD  HL,0
00094D CFED 1114E4          10      LD  DE,FDRV
000950 CFF0 2A4EE5          16      LD  HL,(STABLE+2*027H)  ;ランダムブロック読み込み
000953 CFF3 CD0F00          17      CALL    JP_HL
000956 CFF6 18E7            12      JR  S30X2
[EOF:LDOS.ASM:SHIFT_JIS]
                                    INCLUDE "MSXIO.ASM"
                                
                                ;   LSX-Dodgers IO
                                ;   MSX
                                
       CD62                     _SYS04  EQU _ERROR      ;(BDOS)外部出力
       CD62                     _SYS05  EQU _ERROR      ;(BDOS)プリンタ出力
       CD62                     _SYS1C  EQU _ERROR      ;(BDOS)ディスクの書き込み禁止化
       CD62                     _SYS1E  EQU _ERROR      ;(BDOS)ファイル属性の設定
       CD62                     _SYS20  EQU _ERROR      ;(BDOS)利用者番号の設定と読み出し
       CD62                     _SYS2E  EQU _ERROR      ;(BDOS)ベリファイ・フラグの設定
                                
       0000                     INT EQU 0
       0000                     INTCTCE EQU 0
       0000                     INTCTC2 EQU 0
                                
       0000                     CTRL00  EQU 0
       0000                     CTRL03  EQU 0
       0000                     CTRL04  EQU 0
       0000                     CTRL05  EQU 0
       0000                     CTRL06  EQU 0
       0000                     CTRL07  EQU 0
       0000                     CTRL08  EQU 0
       0000                     CTRL09  EQU 0
       0000                     CTRL0A  EQU 0
       0000                     CTRL0B  EQU 0
       0000                     CTRL0C  EQU 0
       0000                     CTRL0D  EQU 0
       0000                     CTRL0E  EQU 0
       0000                     CTRL12  EQU 0
       0000                     CTRL1B  EQU 0
       0000                     CTRL1C  EQU 0
       0000                     CTRL1D  EQU 0
       0000                     CTRL1E  EQU 0
       0000                     CTRL1F  EQU 0
                                
       CFF8                     PRINT:
000958 CFF8 7B               4      LD  A,E
000959 CFF9 1803            12      JR  MSG_A
                                
       CFFB                     _SYS01:     ;(BDOS)コンソール入力
00095B CFFB CD09E4          17      CALL    _SYS07
       CFFE                     MSG_A:
00095E CFFE FE03             7      CP  3
000960 D000 2814            12      JR  Z,MSG_BR
       D002                     MSGA1:
000962 D002 F5              11      PUSH    AF
000963 D003 C5              11      PUSH    BC
000964 D004 D5              11      PUSH    DE
000965 D005 E5              11      PUSH    HL
000966 D006 DDE5            15      PUSH    IX
000968 D008 DD21A200        14      LD  IX,CHPUT
00096C D00C CD11D2          17      CALL    CALSLT_R
00096F D00F DDE1            14      POP IX
000971 D011 E1              10      POP HL
000972 D012 D1              10      POP DE
000973 D013 C1              10      POP BC
       D014                     MSGA2:
000974 D014 F1              10      POP AF
000975 D015 C9              10      RET
       D016                     MSG_BR:
000976 D016 F5              11      PUSH    AF
000977 D017 3ADDF3          13      LD  A,(CSRX)
00097A D01A FE02             7      CP  2
00097C D01C 38F6            12      JR  C,MSGA2
00097E D01E F1              10      POP AF
       D01F                     MSG_CR:
00097F D01F F5              11      PUSH    AF
000980 D020 3E0D             7      LD  A,00DH
000982 D022 CD02D0          17      CALL    MSGA1
000985 D025 3E0A             7      LD  A,00AH
000987 D027 CD02D0          17      CALL    MSGA1
00098A D02A F1              10      POP AF
00098B D02B C9              10      RET
                                
       D02C                     _SYS02:     ;(BDOS)コンソール出力
00098C D02C CD47D0          17      CALL    BREAK
00098F D02F 1805            12      JR  PRINTX
                                
       D031                     _SYS06:     ;(BDOS)コンソール直接入出力
000991 D031 7B               4      LD  A,E
000992 D032 3C               4      INC A
000993 D033 CACAE4          10      JP  Z,_INKEY
       D036                     PRINTX:
000996 D036 C3CDE4          10      JP  _PRINT
                                
       D039                     _SYS08:     ;(BDOS)エコーなしコンソール入力
000999 D039 CD09E4          17      CALL    _SYS07
00099C D03C FE03             7      CP  3
00099E D03E CCF4E4          17      CALL    Z,_BREAK
0009A1 D041 FE13             7      CP  013H        ;CTRL+S
0009A3 D043 C0              11      RET NZ
       D044                     PAUSE:
0009A4 D044 CD5ED0          17      CALL    KEYBC
                                
       D047                     BREAK:
0009A7 D047 F5              11      PUSH    AF
0009A8 D048 C5              11      PUSH    BC
0009A9 D049 D5              11      PUSH    DE
0009AA D04A E5              11      PUSH    HL
0009AB D04B DDE5            15      PUSH    IX
0009AD D04D DD21B700        14      LD  IX,BREAKX
0009B1 D051 CD11D2          17      CALL    CALSLT_R
0009B4 D054 DDE1            14      POP IX
0009B6 D056 E1              10      POP HL
0009B7 D057 D1              10      POP DE
0009B8 D058 C1              10      POP BC
0009B9 D059 DCF4E4          17      CALL    C,_BREAK
0009BC D05C F1              10      POP AF
0009BD D05D C9              10      RET
       D05E                     KEYBC:
0009BE D05E F5              11      PUSH    AF
0009BF D05F C5              11      PUSH    BC
0009C0 D060 D5              11      PUSH    DE
0009C1 D061 E5              11      PUSH    HL
0009C2 D062 DDE5            15      PUSH    IX
0009C4 D064 DD215601        14      LD  IX,KILBUF
0009C8 D068 CD11D2          17      CALL    CALSLT_R
0009CB D06B DDE1            14      POP IX
0009CD D06D E1              10      POP HL
0009CE D06E D1              10      POP DE
0009CF D06F C1              10      POP BC
0009D0 D070 F1              10      POP AF
0009D1 D071 C9              10      RET
       D072                     FLGET:
0009D2 D072 C5              11      PUSH    BC
0009D3 D073 D5              11      PUSH    DE
0009D4 D074 E5              11      PUSH    HL
0009D5 D075 DDE5            15      PUSH    IX
0009D7 D077 CDDFE4          17      CALL    _FFLUSH
0009DA D07A 181B            12      JR  FLGET1
       D07B                     CBIOS_SWC1  EQU $-1
0009DC D07C CDF9D1          17      CALL    GETVRAM
                                
0009DF D07F E5              11      PUSH    HL
0009E0 D080 DD214A00        14      LD  IX,RDVRM
0009E4 D084 CD11D2          17      CALL    CALSLT_R
0009E7 D087 E1              10      POP HL
0009E8 D088 32A3D0          13      LD  (SWCCHR),A
                                
0009EB D08B E5              11      PUSH    HL
0009EC D08C 3EFF             7      LD  A,0FFH
0009EE D08E DD214D00        14      LD  IX,WRTVRM
0009F2 D092 CD11D2          17      CALL    CALSLT_R
0009F5 D095 E1              10      POP HL
                                
0009F6 D096 E5              11      PUSH    HL
       D097                     FLGET1:
0009F7 D097 DD219F00        14      LD  IX,CHGET
0009FB D09B CD11D2          17      CALL    CALSLT_R
0009FE D09E 180C            12      JR  FLGET2
       D09F                     CBIOS_SWC2  EQU $-1
000A00 D0A0 E1              10      POP HL
                                
000A01 D0A1 F5              11      PUSH    AF
000A02 D0A2 3E00             7      LD  A,0
       D0A3                     SWCCHR  EQU $-1
000A04 D0A4 DD214D00        14      LD  IX,WRTVRM
000A08 D0A8 CD11D2          17      CALL    CALSLT_R
000A0B D0AB F1              10      POP AF
       D0AC                     FLGET2:
000A0C D0AC DDE1            14      POP IX
000A0E D0AE E1              10      POP HL
000A0F D0AF D1              10      POP DE
000A10 D0B0 C1              10      POP BC
000A11 D0B1 FE03             7      CP  3
000A13 D0B3 C0              11      RET NZ
000A14 D0B4 C300E4          10      JP  CPM_BOOT
                                
       D0B7                     INKEY:
000A17 D0B7 CD06E4          17      CALL    CPM_CONST
000A1A D0BA C8              11      RET Z
000A1B D0BB 18B5            12      JR  FLGET
                                
       D0BD                     _SYS0A:     ;(BDOS)文字列入力
000A1D D0BD C5              11      PUSH    BC
000A1E D0BE E5              11      PUSH    HL
000A1F D0BF D5              11      PUSH    DE
000A20 D0C0 CDE9D0          17      CALL    GETL
000A23 D0C3 111FF4          10      LD  DE,KBUF
000A26 D0C6 E1              10      POP HL
000A27 D0C7 E5              11      PUSH    HL
000A28 D0C8 0E00             7      LD  C,0
000A2A D0CA 3004            12      JR  NC,SAX0
000A2C D0CC 23               6      INC HL
000A2D D0CD 23               6      INC HL
000A2E D0CE 1808            12      JR  SAX4
       D0D0                     SAX0:
000A30 D0D0 46               7      LD  B,(HL)
000A31 D0D1 23               6      INC HL
       D0D2                     SAX1:
000A32 D0D2 23               6      INC HL
000A33 D0D3 1A               7      LD  A,(DE)
000A34 D0D4 13               6      INC DE
000A35 D0D5 B7               4      OR  A
000A36 D0D6 2004            12      JR  NZ,SAX2
       D0D8                     SAX4:
000A38 D0D8 360D            10      LD  (HL),00DH
000A3A D0DA 1804            12      JR  SAX3
       D0DC                     SAX2:
000A3C D0DC 77               7      LD  (HL),A
000A3D D0DD 0C               4      INC C
000A3E D0DE 10F2            13      DJNZ    SAX1
       D0E0                     SAX3:
000A40 D0E0 D1              10      POP DE
000A41 D0E1 79               4      LD  A,C
000A42 D0E2 13               6      INC DE
000A43 D0E3 12               7      LD  (DE),A
000A44 D0E4 1B               6      DEC DE
000A45 D0E5 E1              10      POP HL
000A46 D0E6 C1              10      POP BC
000A47 D0E7 A7               4      AND A
000A48 D0E8 C9              10      RET
       D0E9                     GETL:
000A49 D0E9 DDE5            15      PUSH    IX
000A4B D0EB FDE5            15      PUSH    IY
                                
000A4D D0ED 2ADCF3          16      LD  HL,(CSRY)
000A50 D0F0 22CAFB          16      LD  (FSTPOS),HL
       D0F3                     GETL1:
000A53 D0F3 CD39D0          17      CALL    _SYS08
000A56 D0F6 FE09             7      CP  9
000A58 D0F8 2008            12      JR  NZ,GETL1V
000A5A D0FA 211FF4          10      LD  HL,KBUF
000A5D D0FD CD73CD          17      CALL    MSX
000A60 D100 18F1            12      JR  GETL1
       D102                     GETL1V:
000A62 D102 5F               4      LD  E,A
000A63 D103 FE08             7      CP  8
000A65 D105 CC9FD1          17      CALL    Z,CTRL02
000A68 D108 FE20             7      CP  020H
000A6A D10A D4CBD1          17      CALL    NC,INSERT
000A6D D10D CD02D0          17      CALL    MSGA1
                                
000A70 D110 7B               4      LD  A,E
000A71 D111 FE0D             7      CP  00DH
000A73 D113 20DE            12      JR  NZ,GETL1
                                
000A75 D115 111FF4          10      LD  DE,KBUF
000A78 D118 3AB0F3          13      LD  A,(LINLEN)
000A7B D11B 47               4      LD  B,A
000A7C D11C CD16CC          17      CALL    ZERO_MEMORY_DE
                                
000A7F D11F 2ACAFB          16      LD  HL,(FSTPOS)
000A82 D122 3ADCF3          13      LD  A,(CSRY)
000A85 D125 6F               4      LD  L,A
000A86 D126 E5              11      PUSH    HL
000A87 D127 CDFCD1          17      CALL    LOC0
000A8A D12A 4D               4      LD  C,L
000A8B D12B 44               4      LD  B,H
000A8C D12C E1              10      POP HL
000A8D D12D 3AB0F3          13      LD  A,(LINLEN)
000A90 D130 94               4      SUB H
000A91 D131 3D               4      DEC A
000A92 D132 5F               4      LD  E,A
000A93 D133 211FF4          10      LD  HL,KBUF
       D136                     GETL2:
000A96 D136 CDD0E4          17      CALL    _SCRN
000A99 D139 03               6      INC BC
000A9A D13A 77               7      LD  (HL),A
000A9B D13B 23               6      INC HL
000A9C D13C 1D               4      DEC E
000A9D D13D 20F7            12      JR  NZ,GETL2
000A9F D13F CD1FD0          17      CALL    MSG_CR
                                
000AA2 D142 FDE1            14      POP IY
000AA4 D144 DDE1            14      POP IX
       D146                     GETL3:
000AA6 D146 2B               6      DEC HL
000AA7 D147 7E               7      LD  A,(HL)
000AA8 D148 FE21             7      CP  021H
000AAA D14A D0              11      RET NC
000AAB D14B 3600            10      LD  (HL),0
000AAD D14D 15               4      DEC D
000AAE D14E 20F6            12      JR  NZ,GETL3
000AB0 D150 C9              10      RET
                                
       D151                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       D151                     CONSTX:
000AB1 D151 C5              11      PUSH    BC
000AB2 D152 D5              11      PUSH    DE
000AB3 D153 E5              11      PUSH    HL
000AB4 D154 DDE5            15      PUSH    IX
000AB6 D156 DD219C00        14      LD  IX,CHSNS
000ABA D15A CD11D2          17      CALL    CALSLT_R
000ABD D15D DDE1            14      POP IX
000ABF D15F E1              10      POP HL
000AC0 D160 D1              10      POP DE
000AC1 D161 C1              10      POP BC
000AC2 D162 C9              10      RET
                                
       D163                     _SYS2A:     ;(BDOS)日付の獲得
000AC3 D163 AF               4      XOR A
000AC4 D164 57               4      LD  D,A
000AC5 D165 5F               4      LD  E,A
000AC6 D166 67               4      LD  H,A
000AC7 D167 6F               4      LD  L,A
000AC8 D168 C9              10      RET
                                
       D169                     _SYS2C:     ;(BDOS)時刻の獲得
000AC9 D169 AF               4      XOR A
000ACA D16A 57               4      LD  D,A
000ACB D16B 5F               4      LD  E,A
000ACC D16C 67               4      LD  H,A
000ACD D16D 6F               4      LD  L,A
000ACE D16E C9              10      RET
                                
       D16F                     POS:
000ACF D16F F5              11      PUSH    AF
000AD0 D170 2ADCF3          16      LD  HL,(CSRY)
000AD3 D173 7D               4      LD  A,L
000AD4 D174 6C               4      LD  L,H
000AD5 D175 67               4      LD  H,A
000AD6 D176 2C               4      INC L
000AD7 D177 24               4      INC H
000AD8 D178 F1              10      POP AF
000AD9 D179 C9              10      RET
                                
       D17A                     LOC:
000ADA D17A F5              11      PUSH    AF
000ADB D17B E5              11      PUSH    HL
000ADC D17C 7D               4      LD  A,L
000ADD D17D 6C               4      LD  L,H
000ADE D17E 67               4      LD  H,A
000ADF D17F 2D               4      DEC L
000AE0 D180 25               4      DEC H
000AE1 D181 DDE5            15      PUSH    IX
000AE3 D183 DD21C600        14      LD  IX,POSIT
000AE7 D187 CD11D2          17      CALL    CALSLT_R
000AEA D18A DDE1            14      POP IX
000AEC D18C E1              10      POP HL
000AED D18D F1              10      POP AF
000AEE D18E C9              10      RET
       D18F                     SCRN:
000AEF D18F E5              11      PUSH    HL
000AF0 D190 DDE5            15      PUSH    IX
                                
000AF2 D192 69               4      LD  L,C
000AF3 D193 60               4      LD  H,B
000AF4 D194 DD214A00        14      LD  IX,RDVRM
000AF8 D198 CD11D2          17      CALL    CALSLT_R
                                
000AFB D19B DDE1            14      POP IX
000AFD D19D E1              10      POP HL
000AFE D19E C9              10      RET
                                
       D19F                     CTRL02:
000AFF D19F F5              11      PUSH    AF
000B00 D1A0 D5              11      PUSH    DE
000B01 D1A1 2ADCF3          16      LD  HL,(CSRY)
000B04 D1A4 3AB0F3          13      LD  A,(LINLEN)
000B07 D1A7 4F               4      LD  C,A
000B08 D1A8 94               4      SUB H   ;CSRX
000B09 D1A9 C602             7      ADD A,2
000B0B D1AB 47               4      LD  B,A ;カーソルより右の文字数
000B0C D1AC 61               4      LD  H,C ;LINLEN
000B0D D1AD C5              11      PUSH    BC
000B0E D1AE CDFCD1          17      CALL    LOC0
000B11 D1B1 C1              10      POP BC
                                
000B12 D1B2 1620             7      LD  D,020H
       D1B4                     C8X1:
000B14 D1B4 DD214A00        14      LD  IX,RDVRM
000B18 D1B8 CD11D2          17      CALL    CALSLT_R
000B1B D1BB 4F               4      LD  C,A
000B1C D1BC 7A               4      LD  A,D
000B1D D1BD DD214D00        14      LD  IX,WRTVRM
000B21 D1C1 CD11D2          17      CALL    CALSLT_R
000B24 D1C4 2B               6      DEC HL
000B25 D1C5 51               4      LD  D,C
000B26 D1C6 10EC            13      DJNZ    C8X1
000B28 D1C8 D1              10      POP DE
000B29 D1C9 F1              10      POP AF
000B2A D1CA C9              10      RET
                                
       D1CB                     INSERT:
000B2B D1CB F5              11      PUSH    AF
000B2C D1CC D5              11      PUSH    DE
000B2D D1CD 2ADCF3          16      LD  HL,(CSRY)
000B30 D1D0 3AB0F3          13      LD  A,(LINLEN)
000B33 D1D3 4F               4      LD  C,A
000B34 D1D4 94               4      SUB H   ;CSRX
000B35 D1D5 3C               4      INC A
000B36 D1D6 47               4      LD  B,A ;カーソルより右の文字数
000B37 D1D7 C5              11      PUSH    BC
000B38 D1D8 CDFCD1          17      CALL    LOC0
000B3B D1DB C1              10      POP BC
                                
000B3C D1DC 1620             7      LD  D,020H
       D1DE                     INS1:
000B3E D1DE DD214A00        14      LD  IX,RDVRM
000B42 D1E2 CD11D2          17      CALL    CALSLT_R
000B45 D1E5 4F               4      LD  C,A
000B46 D1E6 7A               4      LD  A,D
000B47 D1E7 DD214D00        14      LD  IX,WRTVRM
000B4B D1EB CD11D2          17      CALL    CALSLT_R
000B4E D1EE 23               6      INC HL
000B4F D1EF 51               4      LD  D,C
000B50 D1F0 10EC            13      DJNZ    INS1
000B52 D1F2 D1              10      POP DE
000B53 D1F3 F1              10      POP AF
000B54 D1F4 C9              10      RET
                                
       D1F5                     CONOUT1:
000B55 D1F5 59               4      LD  E,C
000B56 D1F6 C3CDE4          10      JP  _PRINT
                                
       D1F9                     GETVRAM:
000B59 D1F9 2ADCF3          16      LD  HL,(CSRY)
       D1FC                     LOC0:
000B5C D1FC 2D               4      DEC L
000B5D D1FD 25               4      DEC H
000B5E D1FE 4C               4      LD  C,H ;CSRX-1
000B5F D1FF 5D               4      LD  E,L ;CSRY-1
       D200                     LOC1:
000B60 D200 3AB0F3          13      LD  A,(LINLEN)
000B63 D203 67               4      LD  H,A
000B64 D204 1600             7      LD  D,0
000B66 D206 6A               4      LD  L,D ;0
000B67 D207 0608             7      LD  B,8
       D209                     LOC2:
000B69 D209 29              11      ADD HL,HL
000B6A D20A 3001            12      JR  NC,LOC3
000B6C D20C 19              11      ADD HL,DE
       D20D                     LOC3:
000B6D D20D 10FA            13      DJNZ    LOC2
000B6F D20F 09              11      ADD HL,BC
000B70 D210 C9              10      RET
                                
       D211                     CALSLT_R:
000B71 D211 FDE5            15      PUSH    IY
000B73 D213 FD2AC1FC        20      LD  IY,(EXPTBL) ;メインROMスロット
000B77 D217 CD2DD2          17      CALL    CALSLTR
000B7A D21A FDE1            14      POP IY
000B7C D21C C9              10      RET
                                
       D21D                     CALLF:
000B7D D21D 08               4      EX  AF,AF'
000B7E D21E E3              19      EX  (SP),HL
000B7F D21F 7E               7      LD  A,(HL)
000B80 D220 FD67             9      LD  IYH,A
000B82 D222 23               6      INC HL
000B83 D223 7E               7      LD  A,(HL)
000B84 D224 DD6F             9      LD  IXL,A
000B86 D226 23               6      INC HL
000B87 D227 7E               7      LD  A,(HL)
000B88 D228 DD67             9      LD  IXH,A
000B8A D22A 23               6      INC HL
000B8B D22B E3              19      EX  (SP),HL
000B8C D22C 08               4      EX  AF,AF'
       D22D                     CALSLTR:
000B8D D22D F3               4      DI
000B8E D22E ED7367D2        20      LD  (CSSP),SP
000B92 D232 F5              11      PUSH    AF
000B93 D233 3E1C             7      LD  A,_CALSLT
       D235                     SLTCALL:
000B95 D235 3254D2          13      LD  (SLTCALLX),A
000B98 D238 3A68D2          13      LD  A,(CSSP+1)
000B9B D23B FE41             7      CP  040H+1
000B9D D23D 3005            12      JR  NC,CALSLTR1
000B9F D23F F1              10      POP AF
000BA0 D240 315EF5          10      LD  SP,BUF
000BA3 D243 F5              11      PUSH    AF
       D244                     CALSLTR1:
000BA4 D244 C5              11      PUSH    BC
000BA5 D245 D5              11      PUSH    DE
000BA6 D246 E5              11      PUSH    HL
000BA7 D247 2600             7      LD  H,0
000BA9 D249 3AC0FC          13      LD  A,(EXPTBL-1)    ;メインROMに切り替える
000BAC D24C CD6BD3          17      CALL    ENASLT
000BAF D24F E1              10      POP HL
000BB0 D250 D1              10      POP DE
000BB1 D251 C1              10      POP BC
000BB2 D252 F1              10      POP AF
000BB3 D253 CD1C00          17      CALL    _CALSLT
       D254                     SLTCALLX    EQU $-2
000BB6 D256 F5              11      PUSH    AF
000BB7 D257 C5              11      PUSH    BC
000BB8 D258 D5              11      PUSH    DE
000BB9 D259 E5              11      PUSH    HL
000BBA D25A 2600             7      LD  H,0
000BBC D25C 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000BBF D25F CD6BD3          17      CALL    ENASLT
000BC2 D262 E1              10      POP HL
000BC3 D263 D1              10      POP DE
000BC4 D264 C1              10      POP BC
000BC5 D265 F1              10      POP AF
000BC6 D266 310000          10      LD  SP,0
       D267                     CSSP    EQU $-2
000BC9 D269 FB               4      EI
000BCA D26A C9              10      RET
                                
       D26B                     RDSLTR:
000BCB D26B ED7367D2        20      LD  (CSSP),SP
000BCF D26F F5              11      PUSH    AF
000BD0 D270 3E0C             7      LD  A,_RDSLT
000BD2 D272 18C1            12      JR  SLTCALL
                                
       D274                     WRSLTR:
000BD4 D274 ED7367D2        20      LD  (CSSP),SP
000BD8 D278 F5              11      PUSH    AF
000BD9 D279 3E14             7      LD  A,_WRSLT
000BDB D27B 18B8            12      JR  SLTCALL
                                
       D27D                     INT38H:
000BDD D27D F5              11      PUSH    AF
000BDE D27E E5              11      PUSH    HL          ;メインROMを呼び出すのでスタックが被っていないかチェック
000BDF D27F 2AA9D2          16      LD  HL,(INTSP)
000BE2 D282 7C               4      LD  A,H
000BE3 D283 B5               4      OR  L
000BE4 D284 202D            12      JR  NZ,INT38H2
000BE6 D286 C5              11      PUSH    BC
000BE7 D287 D5              11      PUSH    DE
000BE8 D288 2100BF          10      LD  HL,010000H-04100H   ;Page1
000BEB D28B 39              11      ADD HL,SP
000BEC D28C ED73A9D2        20      LD  (INTSP),SP
000BF0 D290 3803            12      JR  C,INT38H1
000BF2 D292 315EF5          10      LD  SP,BUF
       D295                     INT38H1:
000BF5 D295 2600             7      LD  H,0
000BF7 D297 3AC0FC          13      LD  A,(EXPTBL-1)    ;メインROMに切り替える
000BFA D29A CD6BD3          17      CALL    ENASLT
000BFD D29D CD3800          17      CALL    00038H
000C00 D2A0 2600             7      LD  H,0
000C02 D2A2 3A41F3          13      LD  A,(0F341H)  ;メインRAMに戻す
000C05 D2A5 CD6BD3          17      CALL    ENASLT
000C08 D2A8 310000          10      LD  SP,0
       D2A9                     INTSP   EQU $-2
000C0B D2AB 210000          10      LD  HL,0
000C0E D2AE 22A9D2          16      LD  (INTSP),HL
000C11 D2B1 D1              10      POP DE
000C12 D2B2 C1              10      POP BC
       D2B3                     INT38H2:
000C13 D2B3 E1              10      POP HL
000C14 D2B4 F1              10      POP AF
000C15 D2B5 FB               4      EI
000C16 D2B6 C9              10      RET
                                
[EOF:MSXIO.ASM:SHIFT_JIS]
                                    INCLUDE "msx_cbios\\slot.asm"
                                ;-------------------------------------
                                ; 000Ch RDSLT
                                ; Reads a value from an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to read
                                ; Output:  A  = value read
                                ;          Interrupts disabled.
                                ; Changes: F, C, DE
       D2B7                     rdslt:
000C17 D2B7 C5              11                  push    bc
000C18 D2B8 E5              11                  push    hl
000C19 D2B9 F5              11                  push    af
000C1A D2BA 57               4                  ld      d,a             ; init D in case call is not made
000C1B D2BB A7               4                  and     a               ; expanded slot?
000C1C D2BC F3               4                  di
000C1D D2BD FCD6D3          17                  call    m,select_subslot
000C20 D2C0 F1              10                  pop     af
000C21 D2C1 E1              10                  pop     hl
                                
000C22 D2C2 E5              11                  push    hl              ; HL = address
000C23 D2C3 D5              11                  push    de              ; D = slot ID, E = saved SSL
000C24 D2C4 E5              11                  push    hl              ; HL = address
000C25 D2C5 F5              11                  push    af              ; A = slot ID
000C26 D2C6 7C               4                  ld      a,h
000C27 D2C7 07               4                  rlca
000C28 D2C8 07               4                  rlca
000C29 D2C9 E603             7                  and     $03
000C2B D2CB 6F               4                  ld      l,a             ; L = page number
                                
000C2C D2CC 47               4                  ld      b,a
000C2D D2CD 3EFC             7                  ld      a,$FC
000C2F D2CF CDF0D2          17                  call    rdsft
000C32 D2D2 5F               4                  ld      e,a             ; E = mask (shifted)
000C33 D2D3 45               4                  ld      b,l             ; B = page number
000C34 D2D4 F1              10                  pop     af              ; A = slot ID
000C35 D2D5 E603             7                  and     $03
000C37 D2D7 CDF0D2          17                  call    rdsft
000C3A D2DA 47               4                  ld      b,a             ; B = primary slot (shifted)
000C3B D2DB DBA8            11                  in      a,(PSL_STAT)
000C3D D2DD 57               4                  ld      d,a             ; D = primary slot select for restore
000C3E D2DE A3               4                  and     e
000C3F D2DF B0               4                  or      b               ; A = primary slot select for read
000C40 D2E0 E1              10                  pop     hl              ; HL = address
                                
000C41 D2E1 CD80F3          17                  call    rdprim
000C44 D2E4 7B               4                  ld      a,e
000C45 D2E5 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000C46 D2E6 F5              11                  push    af              ; A = value read
000C47 D2E7 CB7A             8                  bit     7,d             ; expanded slot?
000C49 D2E9 C412D4          17                  call    nz,restore_subslot
000C4C D2EC F1              10                  pop     af              ; A = value read
000C4D D2ED E1              10                  pop     hl              ; HL = address
000C4E D2EE C1              10                  pop     bc
000C4F D2EF C9              10                  ret
                                
       D2F0                     rdsft:
000C50 D2F0 04               4                  inc     b
000C51 D2F1 05               4                  dec     b
000C52 D2F2 C8              11                  ret     z
       D2F3                     rdsft_lp:
000C53 D2F3 07               4                  rlca
000C54 D2F4 07               4                  rlca
000C55 D2F5 10FC            13                  djnz    rdsft_lp
000C57 D2F7 C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0014 WRSLT
                                ; Writes a value to an address in another slot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address to write
                                ;          E  = value to write
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, D
       D2F8                     wrslt:
000C58 D2F8 E5              11                  push    hl
000C59 D2F9 57               4                  ld      d,a             ; D = slot ID
000C5A D2FA D5              11                  push    de
000C5B D2FB A7               4                  and     a               ; expanded slot?
000C5C D2FC F3               4                  di
000C5D D2FD FCD6D3          17                  call    m,select_subslot
000C60 D300 C1              10                  pop     bc              ; B = slot ID, C = data
000C61 D301 E1              10                  pop     hl
000C62 D302 D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
000C63 D303 E5              11                  push    hl              ; HL = address
000C64 D304 7C               4                  ld      a,h
000C65 D305 07               4                  rlca
000C66 D306 07               4                  rlca
000C67 D307 E603             7                  and     $03
000C69 D309 6F               4                  ld      l,a             ; L = page number
                                
000C6A D30A 47               4                  ld      b,a             ; B = page number
000C6B D30B 3EFC             7                  ld      a,$FC
000C6D D30D CDF0D2          17                  call    rdsft
000C70 D310 5F               4                  ld      e,a             ; E = mask (shifted)
                                
000C71 D311 45               4                  ld      b,l             ; B = page number
000C72 D312 7A               4                  ld      a,d
000C73 D313 E603             7                  and     $03             ; A = 000000PP
000C75 D315 CDF0D2          17                  call    rdsft
000C78 D318 47               4                  ld      b,a             ; B = primary slot (shifted)
000C79 D319 DBA8            11                  in      a,(PSL_STAT)
000C7B D31B 57               4                  ld      d,a             ; D = primary slot select for restore
000C7C D31C A3               4                  and     e
000C7D D31D B0               4                  or      b               ; A = primary slot select for write
000C7E D31E E1              10                  pop     hl              ; HL = address
000C7F D31F 59               4                  ld      e,c             ; E = data
000C80 D320 CD85F3          17                  call    wrprim
                                
000C83 D323 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000C84 D324 E5              11                  push    hl              ; HL = address
000C85 D325 CB7A             8                  bit     7,d             ; expanded slot?
000C87 D327 C412D4          17                  call    nz,restore_subslot
000C8A D32A E1              10                  pop     hl
000C8B D32B C9              10                  ret
                                
                                ;-------------------------------------
                                ; $001C CALSLT
                                ; Function : Executes inter-slot call.
                                ; Input    : IY - High byte with input for A in RDSLT
                                ;            IX - The address that will be called
                                ; Remark   : Variables can never be given in alternative registers
                                ;            of the Z-80 or IX and IY
                                
       D32C                     calslt:
000C8C D32C 08               4                  ex      af,af'
000C8D D32D D9               4                  exx
                                
                                ; Select secondary slot of target:
                                ; Note: This approach fails if target is in page 0 of slot 0.1, 0.2 or 0.3.
                                ; TODO: Put slot 0 specific routine in page 3, on the stack if necessary.
000C8E D32E F3               4                  di
000C8F D32F FDE5            15                  push    iy
000C91 D331 F1              10                  pop     af              ; A = slot ID: E000SSPP
000C92 D332 DDE5            15                  push    ix
000C94 D334 E1              10                  pop     hl              ; HL = address to call
000C95 D335 57               4                  ld      d,a             ; init D in case call is not made
000C96 D336 A7               4                  and     a               ; expanded slot?
000C97 D337 FCD6D3          17                  call    m,select_subslot
000C9A D33A D5              11                  push    de              ; D = slot ID, E = saved SSL
                                
                                ; Calculate primary slot select value:
000C9B D33B 7A               4                  ld      a,d             ; A = slot ID: E000SSPP
000C9C D33C E603             7                  and     $03
000C9E D33E 47               4                  ld      b,a             ; B = primary slot
000C9F D33F 0EFC             7                  ld      c,$FC           ; C = mask
                                                ; Calculate page that contains call address.
000CA1 D341 DDE5            15                  push    ix
000CA3 D343 F1              10                  pop     af              ; A = high byte call address
000CA4 D344 07               4                  rlca
000CA5 D345 07               4                  rlca
000CA6 D346 E603             7                  and     $03             ; A = page
                                                ; Shift B and C page*2 positions to the left.
000CA8 D348 87               4                  add     a,a
000CA9 D349 2807            12                  jr      z,calslt_sh2
       D34B                     calslt_sh1:
000CAB D34B CB00             4                  rlc     b
000CAD D34D CB01             4                  rlc     c
000CAF D34F 3D               4                  dec     a
000CB0 D350 20F9            12                  jr      nz,calslt_sh1
       D352                     calslt_sh2:
                                
                                ; Select primary slot of target and perform call:
000CB2 D352 215FD3          10                  ld      hl,calslt_restore
000CB5 D355 E5              11                  push    hl
000CB6 D356 DBA8            11                  in      a,(PSL_STAT)
000CB8 D358 F5              11                  push    af
000CB9 D359 A1               4                  and     c               ; C = mask (shifted)
000CBA D35A B0               4                  or      b               ; B = primary slot (shifted)
000CBB D35B D9               4                  exx
000CBC D35C C38CF3          10                  jp      clprim
                                
       D35F                     calslt_restore:
000CBF D35F 08               4                  ex      af,af'
000CC0 D360 D9               4                  exx
                                
                                ; Restore secondary slot:
000CC1 D361 F3               4                  di
000CC2 D362 D1              10                  pop     de              ; D = slot ID, E = saved SSL
000CC3 D363 CB7A             8                  bit     7,d             ; expanded slot?
000CC5 D365 C412D4          17                  call    nz,restore_subslot
                                
                                ; Done:
000CC8 D368 08               4                  ex      af,af'
000CC9 D369 D9               4                  exx
000CCA D36A C9              10                  ret
                                
                                ;-------------------------------------
                                ; $0024 ENASLT
                                ; Selects a slot in the page specified by an address.
                                ; Input:   A  = slot ID: ExxxSSPP
                                ;               E  = expanded flag
                                ;               SS = secondary slot number (only if expanded)
                                ;               PP = primary slot number
                                ;          HL = address inside the page to change
                                ; Output:  Interrupts disabled.
                                ; Changes: AF, BC, DE
                                
       D36B                     enaslt:
                                
                                ; A=(A >> 6)&0x3
000CCB D36B F3               4                  di
000CCC D36C E5              11                  push    hl
                                
000CCD D36D 6F               4                  ld      l,a             ; L = ExxxSSPP
                                
000CCE D36E E603             7                  and     $03             ; A = 000000PP
000CD0 D370 47               4                  ld      b,a
000CD1 D371 3EAB             7                  ld      a,$AB
       D373                     psl_dup_lp:
000CD3 D373 C655             7                  add     a,$55
000CD5 D375 05               4                  dec     b
000CD6 D376 F273D3          10                  jp      p,psl_dup_lp
                                
000CD9 D379 57               4                  ld      d,a             ; D = PP PP PP PP
                                
000CDA D37A 7C               4                  ld      a,h
000CDB D37B 07               4                  rlca
000CDC D37C 07               4                  rlca
000CDD D37D E603             7                  and     $03
                                
000CDF D37F 67               4                  ld      h,a             ; H = page number (0-3)
                                
000CE0 D380 47               4                  ld      b,a
                                
000CE1 D381 3EC0             7                  ld      a,$C0
       D383                     page_msk_lp:
000CE3 D383 07               4                  rlca
000CE4 D384 07               4                  rlca
000CE5 D385 05               4                  dec     b
000CE6 D386 F283D3          10                  jp      p,page_msk_lp
                                
000CE9 D389 5F               4                  ld      e,a             ; E = page mask (00 00 00 11 << page)
000CEA D38A 2F               4                  cpl
000CEB D38B 4F               4                  ld      c,a             ; C = page mask complement
                                
000CEC D38C 7A               4                  ld      a,d
000CED D38D A3               4                  and     e
000CEE D38E 47               4                  ld      b,a             ; B = 00 00 00 PP << page
                                
000CEF D38F 7D               4                  ld      a,l
000CF0 D390 A7               4                  and     a
000CF1 D391 F2CED3          10                  jp      p,chg_psl
                                
                                ;SSL-Change
000CF4 D394 0F               4                  rrca
000CF5 D395 0F               4                  rrca
000CF6 D396 E603             7                  and     $03             ; A = 000000SS
                                
000CF8 D398 E5              11                  push    hl
000CF9 D399 C5              11                  push    bc
                                
000CFA D39A 47               4                  ld      b,a
000CFB D39B 3EAB             7                  ld      a,$AB
       D39D                     ssl_dup_lp:
000CFD D39D C655             7                  add     a,$55
000CFF D39F 05               4                  dec     b
000D00 D3A0 F29DD3          10                  jp      p,ssl_dup_lp
                                
000D03 D3A3 A3               4                  and     e
000D04 D3A4 47               4                  ld      b,a             ; B = 00 00 00 SS << page
                                
000D05 D3A5 7A               4                  ld      a,d
000D06 D3A6 E6C0             7                  and     $C0
000D08 D3A8 67               4                  ld      h,a
                                
000D09 D3A9 DBA8            11                  in      a,(PSL_STAT)
000D0B D3AB 6F               4                  ld      l,a
000D0C D3AC E6C0             7                  and     $C0
000D0E D3AE B4               4                  or      h
000D0F D3AF D3A8            11                  out     (PSL_STAT),a
                                
000D11 D3B1 3AFFFF          13                  ld      a,(SSL_REGS)
000D14 D3B4 2F               4                  cpl
000D15 D3B5 A1               4                  and     c               ; preserve other pages
000D16 D3B6 B0               4                  or      b
000D17 D3B7 4F               4                  ld      c,a
000D18 D3B8 32FFFF          13                  ld      (SSL_REGS),a
                                
000D1B D3BB 7D               4                  ld      a,l
000D1C D3BC D3A8            11                  out     (PSL_STAT),a
                                
                                                ; (SLTTBL + PP) <- RegC
                                
000D1E D3BE 21C5FC          10                  ld      hl,SLTTBL
                                
000D21 D3C1 7A               4                  ld      a,d
000D22 D3C2 E603             7                  and     $03             ; A = 000000PP
                                
000D24 D3C4 85               4                  add     a,l
000D25 D3C5 6F               4                  ld      l,a             ; L = L + A
                                
000D26 D3C6 7C               4                  ld      a,h
000D27 D3C7 CE00             7                  adc     a,0
000D29 D3C9 67               4                  ld      h,a             ; H = H + Cy
                                
000D2A D3CA 79               4                  ld      a,c
000D2B D3CB 77               7                  ld      (hl),a
                                
000D2C D3CC C1              10                  pop     bc
000D2D D3CD E1              10                  pop     hl
                                
       D3CE                     chg_psl:
000D2E D3CE DBA8            11                  in      a,(PSL_STAT)
000D30 D3D0 A1               4                  and     c
000D31 D3D1 B0               4                  or      b
000D32 D3D2 D3A8            11                  out     (PSL_STAT),a
                                
000D34 D3D4 E1              10                  pop     hl
000D35 D3D5 C9              10                  ret
                                
                                ;--------------------------------
                                ; Select subslot.
                                ; Input:   A  = slot ID: E000SSPP
                                ;          HL = address which specifies page to select
                                ;               (actually, only the highest 2 bits of H are relevant)
                                ; Output:  D  = slot ID (same as input)
                                ;          E  = original value of secondary slot select register
                                ;          SLTTBL[slot] = new value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D3D6                     select_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000D36 D3D6 57               4                  ld      d,a             ; D = E000SSPP
000D37 D3D7 0F               4                  rrca
000D38 D3D8 0F               4                  rrca
000D39 D3D9 5F               4                  ld      e,a             ; E = PPE000SS
000D3A D3DA E6C0             7                  and     $C0
000D3C D3DC 6F               4                  ld      l,a             ; L = PP000000
000D3D D3DD DBA8            11                  in      a,(PSL_STAT)
000D3F D3DF 4F               4                  ld      c,a             ; C = saved PSL
000D40 D3E0 E63F             7                  and     $3F
000D42 D3E2 B5               4                  or      l
000D43 D3E3 D3A8            11                  out     (PSL_STAT),a
                                                ; Shift mask and subslot according to page.
000D45 D3E5 7B               4                  ld      a,e             ; A = PPE000SS
000D46 D3E6 E603             7                  and     $03
000D48 D3E8 6F               4                  ld      l,a             ; L = subslot
000D49 D3E9 7C               4                  ld      a,h             ; A = high byte of address
000D4A D3EA 2603             7                  ld      h,$03           ; H = mask
000D4C D3EC 1802            12                  jr      select_subslot_next
       D3EE                     select_subslot_lp:
000D4E D3EE 29              11                  add     hl,hl           ; Shift 2 bits to the left.
000D4F D3EF 29              11                  add     hl,hl
       D3F0                     select_subslot_next:
000D50 D3F0 D640             7                  sub     $40             ; Subtract 1 page.
000D52 D3F2 30FA            12                  jr      nc,select_subslot_lp
000D54 D3F4 7C               4                  ld      a,h
000D55 D3F5 2F               4                  cpl
000D56 D3F6 67               4                  ld      h,a
                                                ; Select secondary slot of target.
000D57 D3F7 3AFFFF          13                  ld      a,(SSL_REGS)
000D5A D3FA 2F               4                  cpl
000D5B D3FB 5F               4                  ld      e,a             ; E = saved SSL
000D5C D3FC A4               4                  and     h               ; H = mask (shifted)
000D5D D3FD B5               4                  or      l               ; L = subslot (shifted)
000D5E D3FE 32FFFF          13                  ld      (SSL_REGS),a
000D61 D401 6F               4                  ld      l,a             ; L = value written to SSL_REGS
                                                ; Restore original primary slot in page 3.
000D62 D402 79               4                  ld      a,c
000D63 D403 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000D65 D405 7A               4                  ld      a,d
000D66 D406 E603             7                  and     $03             ; A = 000000SS
000D68 D408 4F               4                  ld      c,a
000D69 D409 0600             7                  ld      b,0
000D6B D40B 7D               4                  ld      a,l             ; A = value written to SSL_REGS
000D6C D40C 21C5FC          10                  ld      hl,SLTTBL
000D6F D40F 09              11                  add     hl,bc
000D70 D410 77               7                  ld      (hl),a
000D71 D411 C9              10                  ret
                                
                                ;--------------------------------
                                ; Restore subslot, companion routine to select_subslot.
                                ; Input:   D  = slot ID: E000SSPP
                                ;          E  = original value of secondary slot select register
                                ; Output:  SLTTBL[slot] = original value of secondary slot select register
                                ; Changes: AF, HL, BC
                                ; Note:    Interrupts must be disabled before calling this routine.
       D412                     restore_subslot:
                                                ; Select primary slot of target in page 3.
                                                ; Note: Stack is unavailable until primary slot is restored.
000D72 D412 7A               4                  ld      a,d
000D73 D413 0F               4                  rrca
000D74 D414 0F               4                  rrca
000D75 D415 E6C0             7                  and     $C0
000D77 D417 47               4                  ld      b,a             ; B = PP000000
000D78 D418 DBA8            11                  in      a,(PSL_STAT)
000D7A D41A 4F               4                  ld      c,a             ; C = saved PSL
000D7B D41B E63F             7                  and     $3F
000D7D D41D B0               4                  or      b
000D7E D41E D3A8            11                  out     (PSL_STAT),a
                                                ; Restore secondary slot.
000D80 D420 7B               4                  ld      a,e
000D81 D421 32FFFF          13                  ld      (SSL_REGS),a
                                                ; Restore original primary slot in page 3.
000D84 D424 79               4                  ld      a,c
000D85 D425 D3A8            11                  out     (PSL_STAT),a
                                                ; Update SLTTBL.
000D87 D427 7A               4                  ld      a,d
000D88 D428 E603             7                  and     $03             ; A = 000000SS
000D8A D42A 4F               4                  ld      c,a
000D8B D42B 0600             7                  ld      b,0
000D8D D42D 21C5FC          10                  ld      hl,SLTTBL
000D90 D430 09              11                  add     hl,bc
000D91 D431 73               7                  ld      (hl),e
000D92 D432 C9              10                  ret
                                
                                ;--------------------------------
                                
       D433                     m_rdprim:
000D93 D433 D3A8            11                  out     (PSL_STAT),a
000D95 D435 5E               7                  ld      e,(hl)
000D96 D436 1803            12                  jr      m_wrprm1
       D438                     m_wrprim:
000D98 D438 D3A8            11                  out     (PSL_STAT),a
000D9A D43A 73               7                  ld      (hl),e
       D43B                     m_wrprm1:
000D9B D43B 7A               4                  ld      a,d
000D9C D43C D3A8            11                  out     (PSL_STAT),a
000D9E D43E C9              10                  ret
       D43F                     m_clprim:
000D9F D43F D3A8            11                  out     (PSL_STAT),a
000DA1 D441 08               4                  ex      af,af'
000DA2 D442 CD98F3          17                  call    cl_jp
000DA5 D445 08               4                  ex      af,af'
000DA6 D446 F1              10                  pop     af
000DA7 D447 D3A8            11                  out     (PSL_STAT),a
000DA9 D449 08               4                  ex      af,af'
000DAA D44A C9              10                  ret
       D44B                     m_cl_jp:
000DAB D44B DDE9             8                  jp      (ix)
       D44D                     m_prim_end:
000DAD D44D 00               4                  nop
                                
       F380                     rdprim:         equ     $F380
       F385                     wrprim:         equ     rdprim+(m_wrprim-m_rdprim)
       F38C                     clprim:         equ     rdprim+(m_clprim-m_rdprim)
       F398                     cl_jp:          equ     rdprim+(m_cl_jp-m_rdprim)
                                
                                ; vim:ts=8:expandtab:filetype=z8a:syntax=z8a:
[EOF:slot.asm:UTF_8]
                                    INCLUDE "LDFILE.ASM"
                                
                                ;   LSX-Dodgers FILE
                                
       D44E                     FILEC:
000DAE D44E CD59D4          17      CALL    FILE
       D451                     FILEC2:
000DB1 D451 3A15E4          13      LD  A,(FDRV+1)
000DB4 D454 FE20             7      CP  020H
000DB6 D456 C8              11      RET Z
000DB7 D457 1839            12      JR  SETDIR1
                                
       D459                     FILE:
000DB9 D459 AF               4      XOR A
000DBA D45A 3214E4          13      LD  (FDRV),A
000DBD D45D 67               4      LD  H,A
000DBE D45E 6F               4      LD  L,A
000DBF D45F 2222E4          16      LD  (FDRV+14),HL
000DC2 D462 CD30D5          17      CALL    SPCUT
000DC5 D465 CD15D5          17      CALL    CCHK3
000DC8 D468 2812            12      JR  Z,DEVI1
000DCA D46A 13               6      INC DE
000DCB D46B 1A               7      LD  A,(DE)
000DCC D46C 1B               6      DEC DE
000DCD D46D FE3A             7      CP  ':'
000DCF D46F 200B            12      JR  NZ,DEVI1
000DD1 D471 1A               7      LD  A,(DE)      ;DRIVE
000DD2 D472 CD65D7          17      CALL    CAP
000DD5 D475 D640             7      SUB '@'
000DD7 D477 13               6      INC DE
000DD8 D478 13               6      INC DE
000DD9 D479 3214E4          13      LD  (FDRV),A
       D47C                     DEVI1:
000DDC D47C 1A               7      LD  A,(DE)
000DDD D47D D65C             7      SUB 05CH        ;\
000DDF D47F 2009            12      JR  NZ,NOROOT
000DE1 D481 6F               4      LD  L,A     ;A=0でH=0のはずなのでHL=0
000DE2 D482 222EE4          16      LD  (FDRV+26),HL
000DE5 D485 2C               4      INC L
000DE6 D486 2222E4          16      LD  (FDRV+14),HL
000DE9 D489 13               6      INC DE
       D48A                     NOROOT:
                                
       D48A                     SETDIR:
000DEA D48A CDB6D4          17      CALL    FILED
000DED D48D 1A               7      LD  A,(DE)
000DEE D48E FE5C             7      CP  05CH        ;\
000DF0 D490 C0              11      RET NZ
000DF1 D491 13               6      INC DE
       D492                     SETDIR1:
000DF2 D492 3E10             7      LD  A,010H      ;Directory
000DF4 D494 3221E4          13      LD  (FDRV+13),A
000DF7 D497 D5              11      PUSH    DE
000DF8 D498 1114E4          10      LD  DE,FDRV
000DFB D49B 2A1EE5          16      LD  HL,(STABLE+2*00FH)
000DFE D49E CD0F00          17      CALL    JP_HL
000E01 D4A1 D1              10      POP DE
000E02 D4A2 B7               4      OR  A
000E03 D4A3 C0              11      RET NZ
                                
000E04 D4A4 3A21E4          13      LD  A,(FDRV+13)
000E07 D4A7 CB67             8      BIT 4,A
000E09 D4A9 C8              11      RET Z
                                
000E0A D4AA CDFDD4          17      CALL    FILEI
000E0D D4AD 2A2EE4          16      LD  HL,(FDRV+26)
000E10 D4B0 23               6      INC HL
000E11 D4B1 2222E4          16      LD  (FDRV+14),HL
000E14 D4B4 18D4            12      JR  SETDIR
                                
       D4B6                     FILED:
000E16 D4B6 CDFDD4          17      CALL    FILEI
000E19 D4B9 2115E4          10      LD  HL,FNAME
                                
000E1C D4BC 0608             7      LD  B,8
       D4BE                     FILE2:
000E1E D4BE CD0AD5          17      CALL    CCHKF
000E21 D4C1 C8              11      RET Z
000E22 D4C2 FE2A             7      CP  '*'
000E24 D4C4 282E            12      JR  Z,FILE9
000E26 D4C6 FE2E             7      CP  '.'
000E28 D4C8 280C            12      JR  Z,FILE4
000E2A D4CA 77               7      LD  (HL),A
000E2B D4CB 23               6      INC HL
000E2C D4CC 10F0            13      DJNZ    FILE2
                                
       D4CE                     FILE3:
000E2E D4CE CD0AD5          17      CALL    CCHKF
000E31 D4D1 C8              11      RET Z
000E32 D4D2 FE2E             7      CP  '.'
000E34 D4D4 20F8            12      JR  NZ,FILE3
                                
       D4D6                     FILE4:
000E36 D4D6 211DE4          10      LD  HL,FNAME+8
000E39 D4D9 0603             7      LD  B,3
                                
       D4DB                     FILE4L:
000E3B D4DB CD0AD5          17      CALL    CCHKF
000E3E D4DE C8              11      RET Z
000E3F D4DF FE2E             7      CP  '.'
000E41 D4E1 2008            12      JR  NZ,FILE12
000E43 D4E3 3215E4          13      LD  (FNAME),A   ;Parent directory(..)
000E46 D4E6 3216E4          13      LD  (FNAME+1),A
000E49 D4E9 3E20             7      LD  A,020H
       D4EB                     FILE12:
000E4B D4EB FE2A             7      CP  '*'
000E4D D4ED 280A            12      JR  Z,FILE10
000E4F D4EF 77               7      LD  (HL),A
000E50 D4F0 23               6      INC HL
000E51 D4F1 10E8            13      DJNZ    FILE4L
000E53 D4F3 C9              10      RET
                                
       D4F4                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000E54 D4F4 CDF9D4          17      CALL    FILE10
000E57 D4F7 18D5            12      JR  FILE3
                                
       D4F9                     FILE10:
000E59 D4F9 3E3F             7      LD  A,'?'
000E5B D4FB 1808            12      JR  FILL_MEMORY
       D4FD                     FILEI:              ;名前＋拡張子をスペースで初期化
000E5D D4FD 3E20             7      LD  A,020H
000E5F D4FF 01000B          10      LD  BC,11*256   ;C=0にしておく
000E62 D502 2115E4          10      LD  HL,FNAME
       D505                     FILL_MEMORY:            ;HLからBバイトAで埋める
000E65 D505 77               7      LD  (HL),A
000E66 D506 23               6      INC HL
000E67 D507 10FC            13      DJNZ    FILL_MEMORY
000E69 D509 C9              10      RET
                                
       D50A                     CCHKF:
000E6A D50A 1A               7      LD  A,(DE)
000E6B D50B CD12D5          17      CALL    CCHK2
000E6E D50E C8              11      RET Z
000E6F D50F C378D8          10      JP  FKAN
                                
       D512                     CCHK2:
000E72 D512 0C               4      INC C
000E73 D513 0D               4      DEC C
000E74 D514 C0              11      RET NZ
       D515                     CCHK3:              ;ZF=1 で使えない文字
000E75 D515 FE2B             7      CP  '+'
000E77 D517 C8              11      RET Z
000E78 D518 FE2C             7      CP  ','
000E7A D51A C8              11      RET Z
000E7B D51B FE2F             7      CP  '/'
000E7D D51D C8              11      RET Z
000E7E D51E FE3A             7      CP  ':'
000E80 D520 C8              11      RET Z
000E81 D521 FE3B             7      CP  ';'
000E83 D523 C8              11      RET Z
000E84 D524 FE3D             7      CP  '='
000E86 D526 C8              11      RET Z
000E87 D527 FE5C             7      CP  05CH    ;\
000E89 D529 C8              11      RET Z
000E8A D52A FE20             7      CP  020H
000E8C D52C D0              11      RET NC
000E8D D52D BF               4      CP  A       ;Z=1
000E8E D52E C9              10      RET
                                
       D52F                     SS1:
000E8F D52F 13               6      INC DE
       D530                     SPCUT:              ;スペースをカット
000E90 D530 1A               7      LD  A,(DE)
000E91 D531 FE20             7      CP  020H
000E93 D533 28FA            12      JR  Z,SS1
000E95 D535 C9              10      RET
                                
       D536                     SETDRVF:
000E96 D536 1114E4          10      LD  DE,FDRV
       D539                     SETDRV0:
000E99 D539 CD42D5          17      CALL    SETDRV
000E9C D53C FDE1            14      POP IY
000E9E D53E C1              10      POP BC
000E9F D53F D1              10      POP DE
000EA0 D540 E1              10      POP HL
000EA1 D541 C9              10      RET
                                
       D542                     SETDRV:
000EA2 D542 E3              19      EX  (SP),HL     ;HL=RETRN ADDRESS
000EA3 D543 D5              11      PUSH    DE      ;PUSH HL/DE/BC/IY
000EA4 D544 C5              11      PUSH    BC
000EA5 D545 1A               7      LD  A,(DE)
000EA6 D546 D5              11      PUSH    DE
000EA7 D547 FDE3            23      EX  (SP),IY
                                
000EA9 D549 CD55D5          17      CALL    GETDRV
000EAC D54C 3C               4      INC A
000EAD D54D FD7700          19      LD  (IY+0),A    ;(FCB)ドライブ番号
000EB0 D550 3D               4      DEC A
000EB1 D551 CDD9E4          17      CALL    _CHGDRV
                                
000EB4 D554 E9               4      JP  (HL)
                                
       D555                     GETDRV:
000EB5 D555 E67F             7      AND 07FH
000EB7 D557 D601             7      SUB 001H
000EB9 D559 3003            12      JR  NC,GETDRV1
000EBB D55B 3A87E4          13      LD  A,(_DVSW)   ;Current Drive
       D55E                     GETDRV1:
000EBE D55E 3288E4          13      LD  (_DRV),A
000EC1 D561 C9              10      RET
                                
       D562                     SOPENX:
000EC2 D562 1139E4          10      LD  DE,SFILE
000EC5 D565 1A               7      LD  A,(DE)
000EC6 D566 FDBE00           7      CP  (IY+0)      ;(FCB)ドライブ番号
000EC9 D569 2024            12      JR  NZ,SOPEN
000ECB D56B 13               6      INC DE
000ECC D56C FDE5            15      PUSH    IY
000ECE D56E E1              10      POP HL
000ECF D56F 23               6      INC HL
000ED0 D570 CDFDD6          17      CALL    CPFILE
000ED3 D573 201A            12      JR  NZ,SOPEN
                                
000ED5 D575 2AF4E5          16      LD  HL,(SCDIR)
000ED8 D578 FD750E          19      LD  (IY+14),L   ;(FCB)アクセスするディレクトリのクラスタ番号+1
000EDB D57B FD740F          19      LD  (IY+15),H
                                
000EDE D57E 2AF8E5          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
000EE1 D581 229FE4          16      LD  (_FILEN),HL
                                
000EE4 D584 ED5BF6E5        20      LD  DE,(SFBPS)
000EE8 D588 2139E4          10      LD  HL,SFILE
000EEB D58B 36FF            10      LD  (HL),0FFH
000EED D58D 23               6      INC HL
000EEE D58E C9              10      RET
       D58F                     SOPEN:
000EEF D58F 21A5D6          10      LD  HL,FILESE
       D592                     SOPENC:
000EF2 D592 22CBD5          16      LD  (OPENPAT+1),HL
                                
000EF5 D595 CDE2E4          17      CALL    _RDFATX     ;Detect Media
000EF8 D598 3856            12      JR  C,RDDERR
                                
000EFA D59A AF               4      XOR A
000EFB D59B 329FE4          13      LD  (_FILEN),A
000EFE D59E CDA5D7          17      CALL    LDDIRX1     ;A=0で呼び出す
000F01 D5A1 2818            12      JR  Z,SDIRX1
                                
000F03 D5A3 CD96D6          17      CALL    READ_DIR    ;Sub Directory
000F06 D5A6 3808            12      JR  C,SDIRX0
000F08 D5A8 2A7EE5          16      LD  HL,(_DTBUF)
000F0B D5AB 7E               7      LD  A,(HL)
000F0C D5AC FE2E             7      CP  '.'
000F0E D5AE 280F            12      JR  Z,SOPEN1
       D5B0                     SDIRX0:
000F10 D5B0 AF               4      XOR A
000F11 D5B1 32A0E4          13      LD  (_DIRF),A
000F14 D5B4 FD360E01        19      LD  (IY+14),1   ;(FCB)レコードサイズ
000F18 D5B8 FD770F          19      LD  (IY+15),A
       D5BB                     SDIRX1:
000F1B D5BB ED5BFCE5        20      LD  DE,(_DIRPS) ;Root Directory
       D5BF                     SOPEN1:
000F1F D5BF 0E20             7      LD  C,32        ;自己書き換え 1セクタ辺りのディレクトリエントリ数  1024=32 / 512=16 / 256=8
       D5C0                     SDECPAT EQU $-1
       D5C1                     SOPEN1X:
000F21 D5C1 CD96D6          17      CALL    READ_DIR    ;FILE SEARCH
000F24 D5C4 382A            12      JR  C,RDDERR
000F26 D5C6 2A7EE5          16      LD  HL,(_DTBUF)
       D5C9                     SOPEN2:
000F29 D5C9 D5              11      PUSH    DE
000F2A D5CA CDA5D6          17  OPENPAT:CALL    FILESE      ;(self-modifying code)
000F2D D5CD D1              10      POP DE
000F2E D5CE 386E            12      JR  C,SOPENE
000F30 D5D0 281B            12      JR  Z,SCF_FF_RET
       D5D2                     SOPEN3:
000F32 D5D2 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
000F35 D5D5 B7               4      OR  A
000F36 D5D6 200C            12      JR  NZ,SOPEN5
000F38 D5D8 13               6      INC DE      ;ルートディレクトリ
000F39 D5D9 E5              11      PUSH    HL
000F3A D5DA 210C00          10      LD  HL,12       ;(self-modifying code)MAXDIR
       D5DB                     MD_PAT  EQU $-2
000F3D D5DD ED52            15      SBC HL,DE       ;CF=0 なので SUB HL,DE
000F3F D5DF E1              10      POP HL
000F40 D5E0 20DD            12      JR  NZ,SOPEN1
000F42 D5E2 1807            12      JR  SOPEN6
       D5E4                     SOPEN5:
000F44 D5E4 CDBADE          17      CALL    GNCLX       ;END DIR
000F47 D5E7 D8              11      RET C
000F48 D5E8 CD5DD7          17      CALL    ENDCL
       D5EB                     SOPEN6:
000F4B D5EB 38D2            12      JR  C,SOPEN1
       D5ED                     SCF_FF_RET:
000F4D D5ED 37               4      SCF         ;CF=1
000F4E D5EE 9F               4      SBC A,A     ;A=0FFH
000F4F D5EF C9              10      RET
                                
       D5F0                     RDDERR:
000F50 D5F0 BF               4      CP  A       ;READ ERR CF=1 ZF=1
000F51 D5F1 37               4      SCF
000F52 D5F2 C9              10      RET
                                
       D5F3                     NOPEN:
000F53 D5F3 21A5D6          10      LD  HL,FILESE
000F56 D5F6 22CBD5          16      LD  (OPENPAT+1),HL
000F59 D5F9 FD2A98E4        20      LD  IY,(_FCB)
000F5D D5FD CD8BD8          17      CALL    CHKWILDX
000F60 D600 30EB            12      JR  NC,SCF_FF_RET
000F62 D602 FD7E00          19      LD  A,(IY+0)    ;(FCB)ドライブ番号
000F65 D605 3D               4      DEC A
000F66 D606 3288E4          13      LD  (_DRV),A
000F69 D609 CDD9E4          17      CALL    _CHGDRV
000F6C D60C D8              11      RET C
000F6D D60D 2AF8E5          16      LD  HL,(SFNDF)  ;Direcroty location and Flags
000F70 D610 229FE4          16      LD  (_FILEN),HL
                                
000F73 D613 CDA0D7          17      CALL    LDDIRX
000F76 D616 ED5B9AE4        20      LD  DE,(_FBPS)
000F7A D61A CD96D6          17      CALL    READ_DIR
000F7D D61D 38D1            12      JR  C,RDDERR
000F7F D61F 3A9EE4          13      LD  A,(_FBCNT)
000F82 D622 3D               4      DEC A
000F83 D623 28AD            12      JR  Z,SOPEN3
       D625                     NOPEN2:
000F85 D625 2A9CE4          16      LD  HL,(_FBAD)
000F88 D628 012000          10      LD  BC,020H
000F8B D62B 09              11      ADD HL,BC
000F8C D62C 4F               4      LD  C,A
000F8D D62D 189A            12      JR  SOPEN2
                                
       D62F                     SOPENE2:
000F8F D62F 229CE4          16      LD  (_FBAD),HL
000F92 D632 79               4      LD  A,C
000F93 D633 329EE4          13      LD  (_FBCNT),A
000F96 D636 ED539AE4        20      LD  (_FBPS),DE
000F9A D63A FD2298E4        20      LD  (_FCB),IY
       D63E                     SOPENE:
000F9E D63E AF               4      XOR A
000F9F D63F C9              10      RET
                                
       D640                     COPEN:
000FA0 D640 FD360D20        19      LD  (IY+13),020H    ;(FCB)属性(アトリビュート)
                                
000FA4 D644 21C2D6          10      LD  HL,NEXTSE
000FA7 D647 CD92D5          17      CALL    SOPENC
000FAA D64A D0              11      RET NC
000FAB D64B C8              11      RET Z
000FAC D64C 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
000FAF D64F B7               4      OR  A
000FB0 D650 37               4      SCF
000FB1 D651 C8              11      RET Z       ;ルートディレクトリ
000FB2 D652 0601             7      LD  B,1
000FB4 D654 CDEAD8          17      CALL    WRDF
000FB7 D657 D8              11      RET C
000FB8 D658 ED5BFEE5        20      LD  DE,(_CLPS)
000FBC D65C D5              11      PUSH    DE
000FBD D65D CD26D7          17      CALL    DCPAT
000FC0 D660 CD45DD          17      CALL    DRDNX
000FC3 D663 2A7EE5          16      LD  HL,(_DTBUF) ;ディレクトリエントリを0クリア
000FC6 D666 3A4FDC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
000FC9 D669 47               4      LD  B,A
000FCA D66A AF               4      XOR A
000FCB D66B 4F               4      LD  C,A
       D66C                     COPENCL:
000FCC D66C 77               7      LD  (HL),A
000FCD D66D EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000FCF D66F EA6CD6          10      JP  PE,COPENCL
                                
000FD2 D672 3A44D7          13      LD  A,(SPCPAT)  ;1クラスタの論理セクタ数
000FD5 D675 3D               4      DEC A
000FD6 D676 2819            12      JR  Z,COPENE
000FD8 D678 3E01             7      LD  A,1     ;1セクタ辺りのセクタ数が2以上の場合
000FDA D67A 32B2DE          13      LD  (_SECPS),A
000FDD D67D D1              10      POP DE      ;DE=(_CLPS)
000FDE D67E D5              11      PUSH    DE
       D67F                     COPEN1:
000FDF D67F D5              11      PUSH    DE      ;データバッファに入らないセクタもゼロクリア
000FE0 D680 C5              11      PUSH    BC
000FE1 D681 2A7EE5          16      LD  HL,(_DTBUF)
000FE4 D684 CD40D7          17      CALL    CLUSTX
000FE7 D687 CD4AE0          17      CALL    DWT24
000FEA D68A C1              10      POP BC
000FEB D68B D1              10      POP DE
000FEC D68C CDB1DE          17      CALL    NEXTX
000FEF D68F 20EE            12      JR  NZ,COPEN1
       D691                     COPENE:
000FF1 D691 2A7EE5          16      LD  HL,(_DTBUF)
000FF4 D694 D1              10      POP DE
000FF5 D695 C9              10      RET
                                
       D696                     READ_DIR:
000FF6 D696 ED53FEE5        20      LD  (_CLPS),DE
000FFA D69A C5              11      PUSH    BC
000FFB D69B D5              11      PUSH    DE
000FFC D69C CD26D7          17      CALL    DCPAT
000FFF D69F CD25DD          17      CALL    DRDX
001002 D6A2 D1              10      POP DE
001003 D6A3 C1              10      POP BC
001004 D6A4 C9              10      RET
                                
       D6A5                     FILESE:
001005 D6A5 7E               7      LD  A,(HL)
001006 D6A6 B7               4      OR  A
001007 D6A7 C8              11      RET Z       ;END:ZF=1 CF=0
001008 D6A8 FEE5             7      CP  0E5H
00100A D6AA 280E            12      JR  Z,FILESE1
00100C D6AC FDE5            15      PUSH    IY
00100E D6AE D1              10      POP DE
00100F D6AF 13               6      INC DE
001010 D6B0 E5              11      PUSH    HL
001011 D6B1 CDFDD6          17      CALL    CPFILE
001014 D6B4 CC1ED7          17      CALL    Z,CPFILE2
001017 D6B7 E1              10      POP HL
001018 D6B8 37               4      SCF
001019 D6B9 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       D6BA                     FILESE1:
00101A D6BA CDD1D6          17      CALL    FNEXT
00101D D6BD 20E6            12      JR  NZ,FILESE
       D6BF                     ZF0_CF0_AFF_RET:
00101F D6BF F6FF             7      OR  0FFH        ;ZF=0 CF=0
001021 D6C1 C9              10      RET
                                
       D6C2                     NEXTSE:
001022 D6C2 7E               7      LD  A,(HL)
001023 D6C3 B7               4      OR  A
001024 D6C4 37               4      SCF
001025 D6C5 C8              11      RET Z       ;!!!:ZF=1 CF=1
001026 D6C6 FEE5             7      CP  0E5H
001028 D6C8 37               4      SCF
001029 D6C9 C8              11      RET Z       ;!!!:(ZF=1) CF=1
00102A D6CA CDD1D6          17      CALL    FNEXT
00102D D6CD 20F3            12      JR  NZ,NEXTSE
00102F D6CF 18EE            12      JR  ZF0_CF0_AFF_RET
                                
       D6D1                     FNEXT:
001031 D6D1 E5              11      PUSH    HL
001032 D6D2 219FE4          10      LD  HL,_FILEN
001035 D6D5 34              11      INC (HL)
001036 D6D6 E1              10      POP HL
001037 D6D7 112000          10      LD  DE,020H
00103A D6DA 19              11      ADD HL,DE
00103B D6DB 0D               4      DEC C
00103C D6DC C9              10      RET
                                
       D6DD                     CPNAME:
00103D D6DD C5              11      PUSH    BC
00103E D6DE D5              11      PUSH    DE
00103F D6DF E5              11      PUSH    HL
001040 D6E0 CDF7D6          17      CALL    CPFILE4
001043 D6E3 E1              10      POP HL
001044 D6E4 23               6      INC HL
001045 D6E5 23               6      INC HL
001046 D6E6 23               6      INC HL
001047 D6E7 23               6      INC HL
001048 D6E8 D1              10      POP DE
001049 D6E9 C1              10      POP BC
00104A D6EA 2005            12      JR  NZ,CPNAME1
00104C D6EC 7E               7      LD  A,(HL)
00104D D6ED 23               6      INC HL
00104E D6EE 66               7      LD  H,(HL)
00104F D6EF 6F               4      LD  L,A
001050 D6F0 C9              10      RET
       D6F1                     CPNAME1:
001051 D6F1 23               6      INC HL
001052 D6F2 23               6      INC HL
001053 D6F3 10E8            13      DJNZ    CPNAME
001055 D6F5 37               4      SCF
001056 D6F6 C9              10      RET
                                
       D6F7                     CPFILE4:
001057 D6F7 C5              11      PUSH    BC
001058 D6F8 010004          10      LD  BC,00400H
00105B D6FB 1804            12      JR  CPSTR1
       D6FD                     CPFILE:
00105D D6FD C5              11      PUSH    BC
00105E D6FE 01000B          10      LD  BC,00B00H
       D701                     CPSTR1:
001061 D701 1A               7      LD  A,(DE)
001062 D702 FE3F             7      CP  '?'     ;Wild card
001064 D704 2812            12      JR  Z,CPSTR2
001066 D706 7E               7      LD  A,(HL)
001067 D707 CD71D8          17      CALL    FKANC
00106A D70A E5              11      PUSH    HL
00106B D70B 67               4      LD  H,A
00106C D70C 1A               7      LD  A,(DE)
00106D D70D CB01             4      RLC C
00106F D70F CD71D8          17      CALL    FKANC
001072 D712 CB09             4      RRC C
001074 D714 BC               4      CP  H       ;CP (HL),(DE)
001075 D715 E1              10      POP HL
001076 D716 2004            12      JR  NZ,CPSTR3
       D718                     CPSTR2:
001078 D718 13               6      INC DE
001079 D719 23               6      INC HL
00107A D71A 10E5            13      DJNZ    CPSTR1
       D71C                     CPSTR3:
00107C D71C C1              10      POP BC
00107D D71D C9              10      RET
                                
       D71E                     CPFILE2:
00107E D71E FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
001081 D721 F6E1             7      OR  0E1H
001083 D723 2F               4      CPL
001084 D724 A6               7      AND (HL)
001085 D725 C9              10      RET
                                
       D726                     DCPAT:
001086 D726 0E00             7      LD  C,0
001088 D728 2A7EE5          16      LD  HL,(_DTBUF)
00108B D72B 3AA0E4          13      LD  A,(_DIRF)   ;ディレクトリか判別
00108E D72E B7               4      OR  A
00108F D72F C8              11      RET Z       ;ルートディレクトリの場合はCレジスタを0にしておく(CDEがセクタ番号)
001090 D730 3A44D7          13      LD  A,(SPCPAT)
001093 D733 4F               4      LD  C,A
001094 D734 3AB2DE          13      LD  A,(_SECPS)
001097 D737 B9               4      CP  C
001098 D738 3801            12      JR  C,DC1
00109A D73A AF               4      XOR A
       D73B                     DC1:
00109B D73B F680             7      OR  080H
00109D D73D 32A0E4          13      LD  (_DIRF),A   ;bit0-6:セクタインデックス
       D740                     CLUSTX:
0010A0 D740 E5              11      PUSH    HL
0010A1 D741 EB               4      EX  DE,HL
0010A2 D742 AF               4      XOR A
0010A3 D743 0E01             7      LD  C,1     ;自己書き換え（1クラスタの論理セクタ数）
       D744                     SPCPAT  EQU $-1
       D745                     L_CLDBL:
0010A5 D745 CB19             8      RR  C       ;->CF
0010A7 D747 3804            12      JR  C,E_CLDBL
0010A9 D749 29              11      ADD HL,HL       ;*2
0010AA D74A 8F               4      ADC A,A
0010AB D74B 18F8            12      JR  L_CLDBL
       D74D                     E_CLDBL:
0010AD D74D 4F               4      LD  C,A
0010AE D74E 3AB2DE          13      LD  A,(_SECPS)
0010B1 D751 B5               4      OR  L
0010B2 D752 6F               4      LD  L,A
0010B3 D753 110800          10      LD  DE,8    ;+8 (2D)  !ADDCL (self-modifying code)
       D754                     CLSPAT  EQU $-2
0010B6 D756 AF               4      XOR A
0010B7 D757 19              11      ADD HL,DE   ;データ格納領域の先頭論理セクタ番号
0010B8 D758 89               4      ADC A,C
0010B9 D759 4F               4      LD  C,A
0010BA D75A EB               4      EX  DE,HL
0010BB D75B E1              10      POP HL
0010BC D75C C9              10      RET
                                
       D75D                     ENDCL:
0010BD D75D 7A               4      LD  A,D ;END CLUSTER
0010BE D75E FE01             7      CP  1   ;164=356    (self-modifying code)
       D75F                     CLPAT1  EQU $-1
0010C0 D760 C0              11      RET NZ
0010C1 D761 7B               4      LD  A,E
0010C2 D762 FE64             7      CP  064H    ;       (self-modifying code)
       D763                     CLPAT2  EQU $-1
0010C4 D764 C9              10      RET
                                
       D765                     CAP:
0010C5 D765 FE61             7      CP  'a'
0010C7 D767 D8              11      RET C
0010C8 D768 FE7B             7      CP  'z'+1
0010CA D76A D0              11      RET NC
0010CB D76B D620             7      SUB 020H
0010CD D76D C9              10      RET
       D76E                     CAP2:
0010CE D76E CD65D7          17      CALL    CAP
       D771                     CAP3:               ;
0010D1 D771 FE05             7      CP  5
0010D3 D773 2803            12      JR  Z,CAP4
0010D5 D775 FE21             7      CP  021H
0010D7 D777 C9              10      RET
       D778                     CAP4:
0010D8 D778 3EE5             7      LD  A,0E5H
0010DA D77A C9              10      RET
                                
       D77B                     CHDIR:
0010DB D77B CD78E1          17      CALL    GETDPBD
0010DE D77E 381D            12      JR  C,CHDIR2
0010E0 D780 DD751A          19      LD  (IX+DPB_SDIR),L
0010E3 D783 DD741B          19      LD  (IX+DPB_SDIR+1),H
0010E6 D786 1815            12      JR  CHDIR2      ;POP_IX_RET
                                
       D788                     LDDIR:
0010E8 D788 CD78E1          17      CALL    GETDPBD
0010EB D78B DD5E1A          19      LD  E,(IX+DPB_SDIR)
0010EE D78E DD561B          19      LD  D,(IX+DPB_SDIR+1)
0010F1 D791 13               6      INC DE
0010F2 D792 FD730E          19      LD  (IY+14),E   ;(FCB)アクセスするディレクトリのクラスタ番号+1
0010F5 D795 FD720F          19      LD  (IY+15),D
0010F8 D798 1B               6      DEC DE
0010F9 D799 AF               4      XOR A
0010FA D79A 32A0E4          13      LD  (_DIRF),A
       D79D                     CHDIR2:
0010FD D79D DDE1            14      POP IX
0010FF D79F C9              10      RET
                                
       D7A0                     LDDIRX:
001100 D7A0 3AA0E4          13      LD  A,(_DIRF)   ;(FCB)アクセスするディレクトリのセクタインデックス
001103 D7A3 E67F             7      AND 07FH
       D7A5                     LDDIRX1:
001105 D7A5 32B2DE          13      LD  (_SECPS),A
001108 D7A8 FD5E0E          19      LD  E,(IY+14)   ;(FCB)アクセスするディレクトリのクラスタ番号+1
00110B D7AB FD560F          19      LD  D,(IY+15)
00110E D7AE 1B               6      DEC DE
00110F D7AF CD5DD7          17      CALL    ENDCL
001112 D7B2 D488D7          17      CALL    NC,LDDIR
       D7B5                     LDDIRS:
001115 D7B5 7A               4      LD  A,D
001116 D7B6 B3               4      OR  E
001117 D7B7 32A0E4          13      LD  (_DIRF),A   ;ディレクトリか判別
00111A D7BA C9              10      RET
                                
       D7BB                     KILL:
00111B D7BB CD8BD8          17      CALL    CHKWILDX
00111E D7BE 3834            12      JR  C,KILLW
001120 D7C0 CD62D5          17      CALL    SOPENX
       D7C3                     KILLS:
001123 D7C3 3E1F             7      LD  A,01FH
001125 D7C5 D407D8          17      CALL    NC,CHKATT
001128 D7C8 D8              11      RET C
       D7C9                     KILLSX:
001129 D7C9 36E5            10      LD  (HL),0E5H   ;DIR
00112B D7CB CD65D8          17      CALL    WTDB
00112E D7CE 111A00          10      LD  DE,01AH
001131 D7D1 19              11      ADD HL,DE
001132 D7D2 5E               7      LD  E,(HL)
001133 D7D3 23               6      INC HL
001134 D7D4 56               7      LD  D,(HL)
       D7D5                     KILLS1:
001135 D7D5 CD5DD7          17      CALL    ENDCL
001138 D7D8 D0              11      RET NC      ;CF=0
001139 D7D9 21FEFF          10      LD  HL,0-2
00113C D7DC 19              11      ADD HL,DE
00113D D7DD D0              11      RET NC      ;DE= 0 or 1
00113E D7DE D5              11      PUSH    DE
00113F D7DF CDF7E4          17      CALL    _GNCL
001142 D7E2 ED53FEE5        20      LD  (_CLPS),DE
001146 D7E6 D1              10      POP DE
001147 D7E7 210000          10      LD  HL,0
00114A D7EA D4FAE4          17      CALL    NC,_SNCL
00114D D7ED D8              11      RET C
00114E D7EE ED5BFEE5        20      LD  DE,(_CLPS)  ;FAT
001152 D7F2 18E1            12      JR  KILLS1
                                
       D7F4                     KILLW:
001154 D7F4 CD8FD5          17      CALL    SOPEN
       D7F7                     KILLW1:
001157 D7F7 380B            12      JR  C,KILLW2
001159 D7F9 CD2FD6          17      CALL    SOPENE2
00115C D7FC CDC3D7          17      CALL    KILLS
00115F D7FF CDF3D5          17      CALL    NOPEN
001162 D802 18F3            12      JR  KILLW1
       D804                     KILLW2:
001164 D804 C8              11      RET Z
001165 D805 3F               4      CCF
001166 D806 C9              10      RET
                                
       D807                     CHKATT:
001167 D807 E5              11      PUSH    HL
001168 D808 110B00          10      LD  DE,00BH
00116B D80B 19              11      ADD HL,DE
00116C D80C A6               7      AND (HL)
00116D D80D E1              10      POP HL
00116E D80E C8              11      RET Z
00116F D80F 37               4      SCF
001170 D810 C9              10      RET
                                
       D811                     NAME:
001171 D811 CD8BD8          17      CALL    CHKWILDX
001174 D814 D8              11      RET C
001175 D815 110400          10      LD  DE,4
001178 D818 19              11      ADD HL,DE
001179 D819 2231D8          16      LD  (NAMEP+2),HL
00117C D81C 23               6      INC HL
00117D D81D CD8FD8          17      CALL    CHKWILD
001180 D820 D8              11      RET C
                                
001181 D821 CD62D5          17      CALL    SOPENX
001184 D824 3E0F             7      LD  A,00FH
001186 D826 D407D8          17      CALL    NC,CHKATT
001189 D829 D8              11      RET C
                                
00118A D82A FD7E00          19      LD  A,(IY+0)
00118D D82D FDE5            15      PUSH    IY
00118F D82F FD210000        14  NAMEP:  LD  IY,0        ;自己書き換え
001193 D833 FD7700          19      LD  (IY+0),A
001196 D836 CD62D5          17      CALL    SOPENX
001199 D839 FDE3            23      EX  (SP),IY
00119B D83B 3F               4      CCF
00119C D83C D48FD5          17      CALL    NC,SOPEN
00119F D83F EB               4      EX  DE,HL
0011A0 D840 E1              10      POP HL
0011A1 D841 D8              11      RET C
                                
       D842                     SETNAME:
0011A2 D842 01000B          10      LD  BC,11*256
0011A5 D845 23               6      INC HL
0011A6 D846 7E               7      LD  A,(HL)
0011A7 D847 FEE5             7      CP  0E5H
0011A9 D849 2004            12      JR  NZ,SNAME1
0011AB D84B 3E05             7      LD  A,5
0011AD D84D 180E            12      JR  SNAME3
       D84F                     SNAME1:
0011AF D84F 7E               7      LD  A,(HL)
0011B0 D850 0C               4      INC C
0011B1 D851 0D               4      DEC C
0011B2 D852 2009            12      JR  NZ,SNAME3
0011B4 D854 CD65D7          17      CALL    CAP
0011B7 D857 FEA0             7      CP  0A0H
0011B9 D859 2002            12      JR  NZ,SNAME3
0011BB D85B 3E20             7      LD  A,020H
       D85D                     SNAME3:
0011BD D85D 12               7      LD  (DE),A
0011BE D85E 7E               7      LD  A,(HL)
0011BF D85F 23               6      INC HL
0011C0 D860 CD78D8          17      CALL    FKAN
0011C3 D863 10EA            13      DJNZ    SNAME1
       D865                     WTDB:
0011C5 D865 3EFF             7      LD  A,0FFH
0011C7 D867 3239E4          13      LD  (SFILE),A
       D86A                     SWTDBF:
0011CA D86A 3E01             7      LD  A,1
0011CC D86C 32A4E4          13      LD  (_WTDBF),A
0011CF D86F AF               4      XOR A
0011D0 D870 C9              10      RET
                                
       D871                     FKANC:
0011D1 D871 CB41             8      BIT 0,C
0011D3 D873 CC6ED7          17      CALL    Z,CAP2
0011D6 D876 1801            12      JR  FKANX
       D878                     FKAN:           ;漢字チェック
0011D8 D878 13               6      INC DE
       D879                     FKANX:
0011D9 D879 CB41             8      BIT 0,C
0011DB D87B CB81             8      RES 0,C
0011DD D87D C0              11      RET NZ
0011DE D87E FE80             7      CP  080H
0011E0 D880 D8              11      RET C
0011E1 D881 FEA0             7      CP  0A0H
0011E3 D883 3803            12      JR  C,FKAN1
0011E5 D885 FEE0             7      CP  0E0H
0011E7 D887 D8              11      RET C
       D888                     FKAN1:
0011E8 D888 0C               4      INC C
0011E9 D889 A7               4      AND A
0011EA D88A C9              10      RET
                                
       D88B                     CHKWILDX:
0011EB D88B FDE5            15      PUSH    IY
0011ED D88D E1              10      POP HL
0011EE D88E 23               6      INC HL
       D88F                     CHKWILD:
0011EF D88F 060B             7      LD  B,11
0011F1 D891 3E3F             7      LD  A,'?'
       D893                     CHKWIL1:
0011F3 D893 BE               7      CP  (HL)
0011F4 D894 23               6      INC HL
0011F5 D895 37               4      SCF
0011F6 D896 C8              11      RET Z
0011F7 D897 10FA            13      DJNZ    CHKWIL1
0011F9 D899 AF               4      XOR A
0011FA D89A C9              10      RET
                                
       D89B                     SDIRENT:        ;IY=FCB HL=DIR
0011FB D89B D5              11      PUSH    DE
0011FC D89C E5              11      PUSH    HL
0011FD D89D FDE5            15      PUSH    IY
0011FF D89F D1              10      POP DE
001200 D8A0 EB               4      EX  DE,HL
001201 D8A1 CD42D8          17      CALL    SETNAME
                                ;               Attribute
001204 D8A4 FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
001207 D8A7 12               7      LD  (DE),A
001208 D8A8 13               6      INC DE
                                ;               Reserved
001209 D8A9 AF               4      XOR A
00120A D8AA 060A             7      LD  B,10
       D8AC                     SDE1:
00120C D8AC 12               7      LD  (DE),A
00120D D8AD 13               6      INC DE
00120E D8AE 10FC            13      DJNZ    SDE1
                                                    ;(FCB)更新時刻
001210 D8B0 21E4E5          10      LD  HL,SDDATA       ;(FCB)更新年月日
001213 D8B3 060A             7      LD  B,SDDATAE-SDDATA    ;(FCB)ファイルの先頭クラスタ
       D8B5                     SDLOOP:                 ;(FCB)ファイルのサイズ(バイト単位)
001215 D8B5 7E               7      LD  A,(HL)
001216 D8B6 23               6      INC HL
001217 D8B7 32BCD8          13      LD  (SDPAT+2),A
00121A D8BA FD7E00          19  SDPAT:  LD  A,(IY+0)    ;LD A,(IY+A)
00121D D8BD 12               7      LD  (DE),A
00121E D8BE 13               6      INC DE
00121F D8BF 10F4            13      DJNZ    SDLOOP
                                
001221 D8C1 AF               4      XOR A
001222 D8C2 E1              10      POP HL
001223 D8C3 D1              10      POP DE
001224 D8C4 C9              10      RET
                                
       D8C5                     WOPEN:
001225 D8C5 FD7E0D          19      LD  A,(IY+13)   ;(FCB)属性(アトリビュート)
001228 D8C8 E61F             7      AND 01FH
00122A D8CA 37               4      SCF
00122B D8CB C0              11      RET NZ
00122C D8CC FD361CFE        19      LD  (IY+28),0FEH    ;(FCB)オープンモード
       D8D0                     TOPEN2:
001230 D8D0 AF               4      XOR A
       D8D1                     TOPEN:              ;Initializes the time stamp
001231 D8D1 FD3617FF        19      LD  (IY+23),0FFH    ;(FCB)更新時刻
001235 D8D5 C9              10      RET
                                
       D8D6                     WRDFX:
001236 D8D6 3A44D7          13      LD  A,(SPCPAT)  ;1クラスタの論理セクタ
       D8D9                     L_WRFX:
001239 D8D9 1F               4      RRA         ;->CF
00123A D8DA 3806            12      JR  C,E_WRFX
00123C D8DC CB39             8      SRL C
00123E D8DE CB1C             8      RR  H       ;CH=CH/2
001240 D8E0 18F7            12      JR  L_WRFX
       D8E2                     E_WRFX:
001242 D8E2 41               4      LD  B,C
001243 D8E3 4C               4      LD  C,H
001244 D8E4 03               6      INC BC
001245 D8E5 3E37             7      LD  A,037H      ;SCF
001247 D8E7 3242DD          13      LD  (DRDN1),A
                                
       D8EA                     WRDF:               ;BCクラスタ分FATを確保する
00124A D8EA 110200          10      LD  DE,2
00124D D8ED AF               4      XOR A
00124E D8EE 32B2DE          13      LD  (_SECPS),A
       D8F1                     WRDF1:
001251 D8F1 C5              11      PUSH    BC
001252 D8F2 D5              11      PUSH    DE
001253 D8F3 CDF7E4          17      CALL    _GNCL
001256 D8F6 381C            12      JR  C,WRDF3
001258 D8F8 7A               4      LD  A,D     ;空いているかチェック
001259 D8F9 B3               4      OR  E
00125A D8FA 202A            12      JR  NZ,WRDF4
00125C D8FC E1              10      POP HL      ;HL=空いているクラスタ
00125D D8FD E5              11      PUSH    HL
00125E D8FE ED5BFEE5        20      LD  DE,(_CLPS)  ;DE=元の(_CLPS)
001262 D902 22FEE5          16      LD  (_CLPS),HL
001265 D905 7A               4      LD  A,D     ;元の(_CLPS)が 0 か?
001266 D906 B3               4      OR  E
001267 D907 2008            12      JR  NZ,WRDF2
001269 D909 FD751A          19      LD  (IY+26),L   ;(FCB)ファイルの先頭クラスタ
00126C D90C FD741B          19      LD  (IY+27),H   ;元が空の場合はFCBにクラスタをセットする
00126F D90F 1803            12      JR  WRDF3
       D911                     WRDF2:
001271 D911 CDFAE4          17      CALL    _SNCL
       D914                     WRDF3:
001274 D914 D1              10      POP DE
001275 D915 C1              10      POP BC
001276 D916 D8              11      RET C
001277 D917 0B               6      DEC BC
001278 D918 78               4      LD  A,B
001279 D919 B1               4      OR  C
00127A D91A 200C            12      JR  NZ,WRDF5    ;ここでループカウンタチェック
00127C D91C ED5BFEE5        20      LD  DE,(_CLPS)
001280 D920 21FFFF          10      LD  HL,0FFFFH   ;FATエントリ終了(EOCマーク)
001283 D923 C3FAE4          10      JP  _SNCL
                                
       D926                     WRDF4:              ;DEクラスタが空じゃないので次に移動する
001286 D926 D1              10      POP DE
001287 D927 C1              10      POP BC
       D928                     WRDF5:
001288 D928 13               6      INC DE
001289 D929 CD5DD7          17      CALL    ENDCL
00128C D92C 38C3            12      JR  C,WRDF1
00128E D92E 37               4      SCF
00128F D92F C9              10      RET
                                
       D930                     RWXR:
001290 D930 3A4FDC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       D933                     L_RWX:
001293 D933 1F               4      RRA     ;->CF
001294 D934 3808            12      JR  C,E_RWX
001296 D936 CB38             8      SRL B   ;BCH=BCH/2
001298 D938 CB19             8      RR  C   ;
00129A D93A CB1C             8      RR  H   ;
00129C D93C 18F5            12      JR  L_RWX
       D93E                     E_RWX:
00129E D93E FD5E1A          19      LD  E,(IY+26)   ;(FCB)ファイルの先頭クラスタ
0012A1 D941 FD561B          19      LD  D,(IY+27)
0012A4 D944 AF               4      XOR A
0012A5 D945 32B2DE          13      LD  (_SECPS),A
       D948                     RWX1:
0012A8 D948 ED53FEE5        20      LD  (_CLPS),DE
0012AC D94C 7A               4      LD  A,D
0012AD D94D B3               4      OR  E
0012AE D94E 2813            12      JR  Z,SCF_RET   ;RET DE==0 => CF=1
                                
0012B0 D950 78               4      LD  A,B
0012B1 D951 B1               4      OR  C
0012B2 D952 B4               4      OR  H
0012B3 D953 C8              11      RET Z       ;RET BCH==0 => CF=0
                                
0012B4 D954 CDBADE          17      CALL    GNCLX
0012B7 D957 D8              11      RET C
0012B8 D958 7C               4      LD  A,H     ;
0012B9 D959 25               4      DEC H       ;
0012BA D95A B7               4      OR  A       ;DEC BCH
0012BB D95B 2001            12      JR  NZ,RWX2     ;
0012BD D95D 0B               6      DEC BC      ;
       D95E                     RWX2:
0012BE D95E CD5DD7          17      CALL    ENDCL
0012C1 D961 38E5            12      JR  C,RWX1
       D963                     SCF_RET:
0012C3 D963 37               4      SCF
0012C4 D964 C9              10      RET
                                
       D965                     DSKF:
0012C5 D965 110000          10      LD  DE,0
       D966                     MAXCLP  EQU $-2
0012C8 D968 2AACE4          16      LD  HL,(_FAKEFREE)
0012CB D96B 7C               4      LD  A,H
0012CC D96C B5               4      OR  L
0012CD D96D 2803            12      JR  Z,DSKF1
0012CF D96F 110100          10      LD  DE,1
       D972                     DSKF1:
0012D2 D972 D5              11      PUSH    DE
0012D3 D973 CDF7E4          17      CALL    _GNCL
0012D6 D976 380C            12      JR  C,POPSCF
0012D8 D978 7A               4      LD  A,D
0012D9 D979 B3               4      OR  E
0012DA D97A 2001            12      JR  NZ,DSKF2
0012DC D97C 23               6      INC HL
       D97D                     DSKF2:
0012DD D97D D1              10      POP DE
0012DE D97E 1B               6      DEC DE
0012DF D97F 7A               4      LD  A,D
0012E0 D980 B3               4      OR  E
0012E1 D981 20EF            12      JR  NZ,DSKF1
0012E3 D983 C9              10      RET
                                
       D984                     POPSCF:
0012E4 D984 F1              10      POP AF
0012E5 D985 37               4      SCF
0012E6 D986 C9              10      RET
                                
       D987                     SETTMS:
0012E7 D987 FD7E17          19      LD  A,(IY+23)   ;(FCB)ファイルを最後に変更した時刻
0012EA D98A 3C               4      INC A
0012EB D98B C0              11      RET NZ      ;ファイルが更新されていない
       D98C                     SETTMSX:            ;FCBに日付時刻をセットする
0012EC D98C CD69D1          17      CALL    _SYS2C      ;(BDOS)時刻の獲得
                                                ;H←時  L←分  D←秒
0012EF D98F CB25             8      SLA L       ;   *2
0012F1 D991 CB25             8      SLA L       ;   *4
0012F3 D993 29              11      ADD HL,HL       ;*2 *8
0012F4 D994 29              11      ADD HL,HL       ;*4 *16
0012F5 D995 29              11      ADD HL,HL       ;*8 *32
0012F6 D996 7A               4      LD  A,D
0012F7 D997 0F               4      RRCA            ;bit.0->7->->->0->C
0012F8 D998 E61F             7      AND 01FH
0012FA D99A B5               4      OR  L
0012FB D99B FD7716          19      LD  (IY+22),A   ;(FCB)ファイルを最後に変更した時刻
0012FE D99E FD7417          19      LD  (IY+23),H
                                
001301 D9A1 CD63D1          17      CALL    _SYS2A      ;(BDOS)日付の獲得
                                                ;HL←年  D←月  E←日
001304 D9A4 0144F8          10      LD  BC,0-1980
001307 D9A7 09              11      ADD HL,BC
001308 D9A8 65               4      LD  H,L
                                
001309 D9A9 7A               4      LD  A,D
00130A D9AA 87               4      ADD A,A     ;*2
00130B D9AB 87               4      ADD A,A     ;*4
00130C D9AC 87               4      ADD A,A     ;*8
00130D D9AD 87               4      ADD A,A     ;*16
00130E D9AE 6F               4      LD  L,A
00130F D9AF 29              11      ADD HL,HL       ;*32
001310 D9B0 7D               4      LD  A,L
001311 D9B1 B3               4      OR  E
001312 D9B2 FD7714          19      LD  (IY+20),A   ;(FCB)ファイルを最後に変更した日付
001315 D9B5 FD7415          19      LD  (IY+21),H
001318 D9B8 C9              10      RET
                                
       D9B9                     PUSHRR:
001319 D9B9 3251DA          13      LD  (SETSEQ_SWC_RND),A
00131C D9BC 2263DA          16      LD  (SETSEQ_SWC_SEQ_RR),HL
00131F D9BF CDDFD9          17      CALL    GET_RR_AHL
001322 D9C2 220FE4          16      LD  (RR_BUF_HL),HL
001325 D9C5 3211E4          13      LD  (RR_BUF_A),A
001328 D9C8 C9              10      RET
                                
       D9C9                     GET_CPM_R_SIZE:     ;バイト単位からCP/Mのレコード単位を求める（1レコード=128バイト）
001329 D9C9 87               4      ADD A,A     ;in BHLA => out AHL
00132A D9CA ED6A            15      ADC HL,HL
00132C D9CC CB18             8      RR  B
00132E D9CE B7               4      OR  A
00132F D9CF 78               4      LD  A,B     ;ここでフラグは変化しない
001330 D9D0 C8              11      RET Z
001331 D9D1 2C               4      INC L       ;INC AHL
001332 D9D2 C0              11      RET NZ      ;
001333 D9D3 24               4      INC H       ;
001334 D9D4 C0              11      RET NZ      ;
001335 D9D5 3C               4      INC A       ;
001336 D9D6 C9              10      RET
                                
       D9D7                     INIT_RND:
001337 D9D7 3ECD             7      LD  A,0CDH      ;CALL ????
001339 D9D9 2126DA          10      LD  HL,POPRR
00133C D9DC CDB9D9          17      CALL    PUSHRR
       D9DF                     GET_RR_AHL:
00133F D9DF FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001342 D9E2 FD6622          19      LD  H,(IY+34)   ;
001345 D9E5 FD7E23          19      LD  A,(IY+35)   ;
001348 D9E8 C9              10      RET
       D9E9                     SET_RR_AHL:
001349 D9E9 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
00134C D9EC FD7422          19      LD  (IY+34),H
00134F D9EF FD7723          19      LD  (IY+35),A
001352 D9F2 C9              10      RET
       D9F3                     INIT_SEQ:
001353 D9F3 3E01             7      LD  A,1     ;LD BC,????
001355 D9F5 2123DA          10      LD  HL,SETSEQ
001358 D9F8 CDB9D9          17      CALL    PUSHRR
       D9FB                     GETSEQ:
00135B D9FB FD6E20          19      LD  L,(IY+32)   ;(FCB)カレントレコード
00135E D9FE FD660C          19      LD  H,(IY+12)   ;(FCB)カレントブロック
001361 DA01 AF               4      XOR A
                                
001362 DA02 CB25             8      SLA L   ;L=L*2
                                
001364 DA04 CB3C             8      SRL H   ;HL=HL/2
001366 DA06 CB1D             8      RR  L   ;
001368 DA08 C9              10      RET
                                
       DA09                     SETSEQ1:
001369 DA09 F5              11      PUSH    AF
00136A DA0A E5              11      PUSH    HL      ;AHL=Random record
00136B DA0B CDDFD9          17      CALL    GET_RR_AHL
00136E DA0E 47               4      LD  B,A     ;AHL→HLA
00136F DA0F 7D               4      LD  A,L     ;(IY+33)(FCB)ランダムレコード
001370 DA10 6C               4      LD  L,H     ;(IY+34)
001371 DA11 60               4      LD  H,B     ;(IY+35)
001372 DA12 0600             7      LD  B,0
                                
001374 DA14 CDC9D9          17      CALL    GET_CPM_R_SIZE
                                
001377 DA17 29              11      ADD HL,HL
001378 DA18 CB3D             8      SRL L       ;L=L/2
00137A DA1A FD7520          19      LD  (IY+32),L   ;(FCB)カレントレコード
00137D DA1D FD740C          19      LD  (IY+12),H   ;(FCB)カレントブロック
001380 DA20 E1              10      POP HL
001381 DA21 F1              10      POP AF
001382 DA22 C9              10      RET
       DA23                     SETSEQ:
001383 DA23 CD09DA          17      CALL    SETSEQ1
       DA26                     POPRR:
001386 DA26 F5              11      PUSH    AF
001387 DA27 E5              11      PUSH    HL
001388 DA28 2A0FE4          16      LD  HL,(RR_BUF_HL)
00138B DA2B 3A11E4          13      LD  A,(RR_BUF_A)
00138E DA2E CDE9D9          17      CALL    SET_RR_AHL
001391 DA31 E1              10      POP HL
001392 DA32 F1              10      POP AF
001393 DA33 C9              10      RET
                                
       DA34                     RB_WRITE:
001394 DA34 C5              11      PUSH    BC
001395 DA35 ED4B4CE5        20      LD  BC,(STABLE+2*026H)  ;(BDOS)ランダムブロック書き込み
001399 DA39 1805            12      JR  RBRW
       DA3B                     RB_READ:
00139B DA3B C5              11      PUSH    BC
00139C DA3C ED4B4EE5        20      LD  BC,(STABLE+2*027H)  ;(BDOS)ランダムブロック読み込み
       DA40                     RBRW:
0013A0 DA40 1F               4      RRA     ;AHL = AHL*128
0013A1 DA41 7C               4      LD  A,H ;AHL = AHL0/2
0013A2 DA42 1F               4      RRA     ;A
0013A3 DA43 65               4      LD  H,L ;
0013A4 DA44 CB1C             8      RR  H   ;H
0013A6 DA46 2E00             7      LD  L,0 ;
0013A8 DA48 CB1D             8      RR  L   ;L
0013AA DA4A CDE9D9          17      CALL    SET_RR_AHL
0013AD DA4D 218000          10      LD  HL,128
0013B0 DA50 C5              11      PUSH    BC
       DA51                     SETSEQ_SWC_RND:
0013B1 DA51 CD09DA          17      CALL    SETSEQ1
0013B4 DA54 C1              10      POP BC
0013B5 DA55 FDCB20FE        23      SET 7,(IY+32)   ;(FCB)カレントレコード
0013B9 DA59 FDE5            15      PUSH    IY
0013BB DA5B D1              10      POP DE
0013BC DA5C D5              11      PUSH    DE
0013BD DA5D CD6BDA          17      CALL    JP_BC
0013C0 DA60 FDE1            14      POP IY
0013C2 DA62 CD23DA          17      CALL    SETSEQ
       DA63                     SETSEQ_SWC_SEQ_RR   EQU $-2
0013C5 DA65 FDCB20BE        23      RES 7,(IY+32)   ;(FCB)カレントレコード
                                
0013C9 DA69 C1              10      POP BC
0013CA DA6A C9              10      RET
       DA6B                     JP_BC:
0013CB DA6B C5              11      PUSH    BC
0013CC DA6C C9              10      RET
                                
       D5ED                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       D5ED                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       D5ED                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       D5ED                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       D5ED                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:LDFILE.ASM:SHIFT_JIS]
                                    INCLUDE "LDFILE2.ASM"
                                
                                ;   LSX-Dodgers FILE2
                                
                                                ;Write random block
       DA6D                     _SYS26:     ;(BDOS)ランダムブロック書き込み
0013CD DA6D AF               4      XOR A
0013CE DA6E 3242DD          13      LD  (DRDN1),A   ;NOP
0013D1 DA71 2292DC          16      LD  (RBSIZE),HL ;HL←書き込むレコード数
0013D4 DA74 225DE4          16      LD  (LEFTX),HL
0013D7 DA77 CD42D5          17      CALL    SETDRV
                                
0013DA DA7A CDEADB          17      CALL    RBX0
0013DD DA7D DA0ADB          10      JP  C,RBWERR
0013E0 DA80 CDC5D8          17      CALL    WOPEN
0013E3 DA83 DA0ADB          10      JP  C,RBWERR
0013E6 DA86 7C               4      LD  A,H
0013E7 DA87 B5               4      OR  L
0013E8 DA88 CA03DB          10      JP  Z,RBW1
                                
0013EB DA8B 2B               6      DEC HL
                                
0013EC DA8C CDA8DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
0013EF DA8F 19              11      ADD HL,DE       ;BCHL=HL+BCDE
0013F0 DA90 3001            12      JR  NC,S26X1    ;
0013F2 DA92 03               6      INC BC      ;
       DA93                     S26X1:
0013F3 DA93 CD30D9          17      CALL    RWXR
0013F6 DA96 DCD6D8          17      CALL    C,WRDFX
0013F9 DA99 DA0ADB          10      JP  C,RBWERR
                                
0013FC DA9C CD19DC          17      CALL    RBX2
0013FF DA9F 281A            12      JR  Z,RBWB      ;NZ=セクタ以下の端数がある
001401 DAA1 CD38DC          17      CALL    RBXA
001404 DAA4 3864            12      JR  C,RBWERR
001406 DAA6 EB               4      EX  DE,HL
001407 DAA7 C5              11      PUSH    BC
001408 DAA8 EDB0                    LDIR
00140A DAAA 225FE4          16      LD  (DTAX),HL
                                
00140D DAAD CD6AD8          17      CALL    SWTDBF      ;バッファデータは更新された
                                
001410 DAB0 2A5DE4          16      LD  HL,(LEFTX)
001413 DAB3 D1              10      POP DE
001414 DAB4 ED52            15      SBC HL,DE
001416 DAB6 225DE4          16      LD  (LEFTX),HL
001419 DAB9 2831            12      JR  Z,RBWEND
                                
       DABB                     RBWB:
00141B DABB CD6DDC          17      CALL    RBXB
00141E DABE 2814            12      JR  Z,RBWC
       DAC0                     RBWB1:
001420 DAC0 C5              11      PUSH    BC
001421 DAC1 D5              11      PUSH    DE
001422 DAC2 CD40D7          17      CALL    CLUSTX
001425 DAC5 CDBCDC          17      CALL    DWTC
001428 DAC8 D1              10      POP DE
001429 DAC9 C1              10      POP BC
00142A DACA D4BADE          17      CALL    NC,GNCLX
00142D DACD 383B            12      JR  C,RBWERR
00142F DACF 10EF            13      DJNZ    RBWB1
001431 DAD1 CD0CDD          17      CALL    DRW_FLUSH
       DAD4                     RBWC:
001434 DAD4 CD85DC          17      CALL    RBXC
001437 DAD7 2813            12      JR  Z,RBWEND
001439 DAD9 C5              11      PUSH    BC
00143A DADA CD40D7          17      CALL    CLUSTX
00143D DADD CD41DD          17      CALL    DRDN
001440 DAE0 C1              10      POP BC
001441 DAE1 3827            12      JR  C,RBWERR
001443 DAE3 ED5B7EE5        20      LD  DE,(_DTBUF)
001447 DAE7 EDB0                    LDIR
001449 DAE9 CD6AD8          17      CALL    SWTDBF      ;バッファデータは更新された
       DAEC                     RBWEND:
00144C DAEC CD91DC          17      CALL    RBXEND
                                
00144F DAEF CDF9DB          17      CALL    RBX1
001452 DAF2 300F            12      JR  NC,RBW1     ;ランダムレコードの方が大きい場合はサイズを合わせる
001454 DAF4 CDA8DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
001457 DAF7 FD7310          19      LD  (IY+16),E   ;ファイルのサイズ(バイト単位)
00145A DAFA FD7211          19      LD  (IY+17),D   ;
00145D DAFD FD7112          19      LD  (IY+18),C   ;
001460 DB00 FD7013          19      LD  (IY+19),B   ;
       DB03                     RBW1:
001463 DB03 FDE1            14      POP IY
001465 DB05 C1              10      POP BC
001466 DB06 D1              10      POP DE
001467 DB07 E1              10      POP HL
       DB08                     DD_NUL:
001468 DB08 AF               4      XOR A
       DB09                     DRDF0:
       DB09                     DWTF0:
001469 DB09 C9              10      RET
                                
       DB0A                     RBWERR:
00146A DB0A FDE5            15      PUSH    IY
00146C DB0C D1              10      POP DE
00146D DB0D 2A20E5          16      LD  HL,(STABLE+2*010H)
001470 DB10 CD0F00          17      CALL    JP_HL
       DB13                     RBRERR1:
001473 DB13 3E01             7      LD  A,001H
       DB15                     RBRERR2:
001475 DB15 FDE1            14      POP IY
001477 DB17 C1              10      POP BC
001478 DB18 D1              10      POP DE
001479 DB19 E1              10      POP HL
00147A DB1A 37               4      SCF
00147B DB1B 210000          10      LD  HL,0
00147E DB1E C9              10      RET
                                
       DB1F                     RBRERR:
00147F DB1F 3EFF             7      LD  A,0FFH
001481 DB21 18F2            12      JR  RBRERR2
                                
       DB23                     RBRFL:
001483 DB23 3E00             7  RBRFLP: LD  A,000H
001485 DB25 FE0D             7      CP  00DH
001487 DB27 2005            12      JR  NZ,RBRFL1
001489 DB29 D5              11      PUSH    DE
00148A DB2A 1E0A             7      LD  E,00AH
00148C DB2C 1805            12      JR  RBRFL2
       DB2E                     RBRFL1:
00148E DB2E D5              11      PUSH    DE
00148F DB2F CD09E4          17      CALL    _SYS07
001492 DB32 5F               4      LD  E,A
       DB33                     RBRFL2:
001493 DB33 CDCDE4          17      CALL    _PRINT
001496 DB36 7B               4      LD  A,E
001497 DB37 D1              10      POP DE
001498 DB38 3224DB          13      LD  (RBRFLP+1),A
00149B DB3B C9              10      RET
       DB3C                     DDX:
00149C DB3C FD7E01          19      LD  A,(IY+1)    ;(FCB)主ファイル名
00149F DB3F CD65D7          17      CALL    CAP
0014A2 DB42 FE41             7      CP  'A'
0014A4 DB44 C9              10      RET
                                
                                                ;Read random block
       DB45                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0014A5 DB45 225DE4          16      LD  (LEFTX),HL
0014A8 DB48 CD42D5          17      CALL    SETDRV
                                
0014AB DB4B FDCB0D66        20      BIT 4,(IY+13)   ;(FCB)属性(アトリビュート)
0014AF DB4F C2D8DB          10      JP  NZ,RBRDIR   ;ディレクトリ
0014B2 DB52 CDEADB          17      CALL    RBX0
0014B5 DB55 DA1FDB          10      JP  C,RBRERR
0014B8 DB58 CDF9DB          17      CALL    RBX1
0014BB DB5B D411DC          17      CALL    NC,RBX1R
0014BE DB5E DA13DB          10      JP  C,RBRERR1
0014C1 DB61 EB               4      EX  DE,HL
0014C2 DB62 ED52            15      SBC HL,DE       ;CP 00HL,BCDE
0014C4 DB64 19              11      ADD HL,DE
0014C5 DB65 79               4      LD  A,C
0014C6 DB66 DE00             7      SBC A,0
0014C8 DB68 78               4      LD  A,B
0014C9 DB69 DE00             7      SBC A,0
0014CB DB6B 3801            12      JR  C,RBR1
0014CD DB6D EB               4      EX  DE,HL
       DB6E                     RBR1:
0014CE DB6E 9F               4      SBC A,A
0014CF DB6F E601             7      AND 1
0014D1 DB71 32D6DB          13      LD  (RBRAP+1),A
                                
0014D4 DB74 7C               4      LD  A,H
0014D5 DB75 B5               4      OR  L
0014D6 DB76 2857            12      JR  Z,RBREND0
                                
0014D8 DB78 2292DC          16      LD  (RBSIZE),HL ;HL←読み込むレコード数
0014DB DB7B 225DE4          16      LD  (LEFTX),HL
                                
0014DE DB7E CD19DC          17      CALL    RBX2
0014E1 DB81 2819            12      JR  Z,RBRB
0014E3 DB83 CD38DC          17      CALL    RBXA
0014E6 DB86 DA1FDB          10      JP  C,RBRERR
0014E9 DB89 C5              11      PUSH    BC
0014EA DB8A EDB0                    LDIR
0014EC DB8C ED535FE4        20      LD  (DTAX),DE
0014F0 DB90 2A5DE4          16      LD  HL,(LEFTX)
0014F3 DB93 D1              10      POP DE
0014F4 DB94 A7               4      AND A
0014F5 DB95 ED52            15      SBC HL,DE
0014F7 DB97 225DE4          16      LD  (LEFTX),HL
0014FA DB9A 2830            12      JR  Z,RBREND
                                
       DB9C                     RBRB:
0014FC DB9C CD6DDC          17      CALL    RBXB
0014FF DB9F 2815            12      JR  Z,RBRC
       DBA1                     RBRB1:
001501 DBA1 C5              11      PUSH    BC
001502 DBA2 D5              11      PUSH    DE
001503 DBA3 CD40D7          17      CALL    CLUSTX
001506 DBA6 CDC2DC          17      CALL    DRDC
001509 DBA9 D1              10      POP DE
00150A DBAA C1              10      POP BC
00150B DBAB D4BADE          17      CALL    NC,GNCLX
00150E DBAE DA1FDB          10      JP  C,RBRERR
001511 DBB1 10EE            13      DJNZ    RBRB1
001513 DBB3 CD0CDD          17      CALL    DRW_FLUSH
       DBB6                     RBRC:
001516 DBB6 CD85DC          17      CALL    RBXC
001519 DBB9 2811            12      JR  Z,RBREND
00151B DBBB C5              11      PUSH    BC
00151C DBBC CD40D7          17      CALL    CLUSTX
00151F DBBF CD25DD          17      CALL    DRDX
001522 DBC2 C1              10      POP BC
001523 DBC3 DA1FDB          10      JP  C,RBRERR
001526 DBC6 EB               4      EX  DE,HL
001527 DBC7 2A7EE5          16      LD  HL,(_DTBUF)
00152A DBCA EDB0                    LDIR
       DBCC                     RBREND:
00152C DBCC CD91DC          17      CALL    RBXEND
       DBCF                     RBREND0:
00152F DBCF FDE1            14      POP IY
001531 DBD1 C1              10      POP BC
001532 DBD2 D1              10      POP DE
001533 DBD3 F1              10      POP AF  ;(HL)
001534 DBD4 AF               4      XOR A
001535 DBD5 3E00             7  RBRAP:  LD  A,000H
001537 DBD7 C9              10      RET
                                
       DBD8                     RBRDIR:
001538 DBD8 FD6E1A          19      LD  L,(IY+26)   ;(FCB)ファイルの先頭クラスタ
00153B DBDB FD661B          19      LD  H,(IY+27)
00153E DBDE CD7BD7          17      CALL    CHDIR
001541 DBE1 AF               4      XOR A
001542 DBE2 67               4      LD  H,A
001543 DBE3 6F               4      LD  L,A
001544 DBE4 3C               4      INC A
001545 DBE5 32D6DB          13      LD  (RBRAP+1),A
001548 DBE8 18E5            12      JR  RBREND0
                                
       DBEA                     RBX0:
00154A DBEA 2A8AE4          16      LD  HL,(_DTA)
00154D DBED 225FE4          16      LD  (DTAX),HL
001550 DBF0 2A5DE4          16      LD  HL,(LEFTX)
001553 DBF3 FD7E1C          19      LD  A,(IY+28)   ;(FCB)オープンモード
001556 DBF6 D6FD             7      SUB 0FDH
001558 DBF8 C9              10      RET
                                
       DBF9                     RBX1:               ;ファイルサイズとランダムレコードを比べる
001559 DBF9 E5              11      PUSH    HL      ;Record byte
                                                ;AHL=File size
00155A DBFA FD6E10          19      LD  L,(IY+16)   ;ファイルのサイズ(バイト単位)
00155D DBFD FD6611          19      LD  H,(IY+17)   ;
001560 DC00 FD7E12          19      LD  A,(IY+18)   ;
                                
001563 DC03 CDA8DC          17      CALL    GET_RR_BCDE ;BCDE=Random record
                                
001566 DC06 A7               4      AND A
001567 DC07 ED52            15      SBC HL,DE
001569 DC09 99               4      SBC A,C
00156A DC0A 4F               4      LD  C,A
00156B DC0B FD7E13          19      LD  A,(IY+19)   ;ファイルのサイズ
00156E DC0E 98               4      SBC A,B
00156F DC0F D1              10      POP DE
001570 DC10 C9              10      RET
       DC11                     RBX1R:
001571 DC11 47               4      LD  B,A
001572 DC12 B1               4      OR  C
001573 DC13 EB               4      EX  DE,HL   ;BCDE=File byte HL=Record byte
001574 DC14 B2               4      OR  D
001575 DC15 B3               4      OR  E
001576 DC16 C0              11      RET NZ
001577 DC17 37               4      SCF
001578 DC18 C9              10      RET
                                
       DC19                     RBX2:               ;Cluster settings
001579 DC19 FD6622          19      LD  H,(IY+34)   ;(+33)(FCB)ランダムレコード
00157C DC1C FD4E23          19      LD  C,(IY+35)
00157F DC1F 0600             7      LD  B,0
001581 DC21 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
001585 DC25 2003            12      JR  NZ,RBX3
001587 DC27 FD4624          19      LD  B,(IY+36)
       DC2A                     RBX3:
00158A DC2A CD30D9          17      CALL    RWXR
00158D DC2D 3A4FDC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
001590 DC30 3D               4      DEC A
001591 DC31 FDA622          19      AND (IY+34)
001594 DC34 FDB621          19      OR  (IY+33)
001597 DC37 C9              10      RET
                                
       DC38                     RBXA:
001598 DC38 C5              11      PUSH    BC
001599 DC39 D5              11      PUSH    DE
00159A DC3A CD40D7          17      CALL    CLUSTX
00159D DC3D CD25DD          17      CALL    DRDX
0015A0 DC40 D1              10      POP DE
0015A1 DC41 C1              10      POP BC
0015A2 DC42 D4BADE          17      CALL    NC,GNCLX
0015A5 DC45 D8              11      RET C
0015A6 DC46 ED53FEE5        20      LD  (_CLPS),DE
                                
0015AA DC4A FD4E21          19      LD  C,(IY+33)   ;(FCB)ランダムレコード
0015AD DC4D 210004          10  SECSZ:  LD  HL,0400H    ;自己書き換え 1024=0400H / 512=0200H ここに1セクタのサイズが格納される
0015B0 DC50 7C               4      LD  A,H
0015B1 DC51 3D               4      DEC A       ;1024=3 / 512=1
0015B2 DC52 FDA622          19      AND (IY+34)     ;(FCB)ランダムレコード
0015B5 DC55 47               4      LD  B,A     ;BCに1セクタ以下の端数が入る
0015B6 DC56 ED42            15      SBC HL,BC       ;残りを計算
                                
0015B8 DC58 ED5B5DE4        20      LD  DE,(LEFTX)
0015BC DC5C ED52            15      SBC HL,DE       ;CP HL,DE
0015BE DC5E 19              11      ADD HL,DE       ;
0015BF DC5F 3801            12      JR  C,RBXA1     ;DEとHLを比較して大きい方をHLに
0015C1 DC61 EB               4      EX  DE,HL
       DC62                     RBXA1:
0015C2 DC62 E5              11      PUSH    HL
0015C3 DC63 2A7EE5          16      LD  HL,(_DTBUF)
0015C6 DC66 09              11      ADD HL,BC
0015C7 DC67 ED5B5FE4        20      LD  DE,(DTAX)
0015CB DC6B C1              10      POP BC
0015CC DC6C C9              10      RET
                                
       DC6D                     RBXB:
0015CD DC6D 2A5FE4          16      LD  HL,(DTAX)
0015D0 DC70 ED5BFEE5        20      LD  DE,(_CLPS)
0015D4 DC74 3A5EE4          13      LD  A,(LEFTX+1)
0015D7 DC77 47               4      LD  B,A
0015D8 DC78 3A4FDC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
       DC7B                     RBXB1:
0015DB DC7B 1F               4      RRA     ;->CF
0015DC DC7C 3804            12      JR  C,RBXB2
0015DE DC7E CB38             8      SRL B   ;B=B/2
0015E0 DC80 18F9            12      JR  RBXB1
       DC82                     RBXB2:
0015E2 DC82 78               4      LD  A,B
0015E3 DC83 B7               4      OR  A
0015E4 DC84 C9              10      RET
                                
       DC85                     RBXC:
0015E5 DC85 ED4B5DE4        20      LD  BC,(LEFTX)
0015E9 DC89 3A4FDC          13      LD  A,(SECSZ+2) ;1024=4 / 512=2 / 256=1
0015EC DC8C 3D               4      DEC A
0015ED DC8D A0               4      AND B
0015EE DC8E 47               4      LD  B,A     ;1セクタ以下の端数がない場合はZ
0015EF DC8F B1               4      OR  C
0015F0 DC90 C9              10      RET
                                
       DC91                     RBXEND:             ;レコード数だけランダムレコードを進める
0015F1 DC91 110000          10      LD  DE,0        ;進めるレコード数(RBSIZE)
       DC92                     RBSIZE  EQU $-2
0015F4 DC94 CDDFD9          17      CALL    GET_RR_AHL
0015F7 DC97 19              11      ADD HL,DE
0015F8 DC98 CE00             7      ADC A,0
0015FA DC9A CDE9D9          17      CALL    SET_RR_AHL
0015FD DC9D EB               4      EX  DE,HL       ;HL=進めるレコード数
0015FE DC9E D0              11      RET NC
0015FF DC9F FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
001603 DCA3 C0              11      RET NZ
001604 DCA4 FD3424          23      INC (IY+36)
001607 DCA7 C9              10      RET
                                
       DCA8                     GET_RR_BCDE:            ;BCDE=Random record
001608 DCA8 FD5E21          19      LD  E,(IY+33)   ;(FCB)ランダムレコード
00160B DCAB FD5622          19      LD  D,(IY+34)
00160E DCAE FD4E23          19      LD  C,(IY+35)
001611 DCB1 0600             7      LD  B,0     ;CP/M互換のアクセスの場合はFCBは36バイト
001613 DCB3 FDCB207E        20      BIT 7,(IY+32)   ;(FCB)カレントレコード
001617 DCB7 C0              11      RET NZ
001618 DCB8 FD4624          19      LD  B,(IY+36)
00161B DCBB C9              10      RET
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめる
                                
       DCBC                     DWTC:
00161C DCBC E5              11      PUSH    HL
00161D DCBD 214CE0          10      LD  HL,DWT24B
001620 DCC0 1804            12      JR  DWTC1
       DCC2                     DRDC:
001622 DCC2 E5              11      PUSH    HL
001623 DCC3 213CE0          10      LD  HL,DRD24B
       DCC6                     DWTC1:
001626 DCC6 2220DD          16      LD  (DRWF_MODE),HL
001629 DCC9 E1              10      POP HL
00162A DCCA 3A10DD          13      LD  A,(DRWF_B)
00162D DCCD B7               4      OR  A
00162E DCCE 200F            12      JR  NZ,DRDC1
       DCD0                     SAVE_DRWC:
001630 DCD0 0601             7      LD  B,1
001632 DCD2 ED430FDD        20      LD  (DRWF_C),BC
001636 DCD6 ED5316DD        20      LD  (DRWF_E),DE
00163A DCDA 2219DD          16      LD  (DRWF_HL),HL
00163D DCDD 1820            12      JR  INC_HL_DRWC
       DCDF                     DRDC1:
00163F DCDF E5              11      PUSH    HL
001640 DCE0 2116DD          10      LD  HL,DRWF_E
001643 DCE3 86               7      ADD A,(HL)
001644 DCE4 F5              11      PUSH    AF
001645 DCE5 BB               4      CP  E
001646 DCE6 201D            12      JR  NZ,DRDC2
001648 DCE8 F1              10      POP AF
001649 DCE9 23               6      INC HL
00164A DCEA 7E               7      LD  A,(HL)
00164B DCEB CE00             7      ADC A,0
00164D DCED F5              11      PUSH    AF
00164E DCEE BA               4      CP  D
00164F DCEF 2014            12      JR  NZ,DRDC2
001651 DCF1 F1              10      POP AF
001652 DCF2 3A0FDD          13      LD  A,(DRWF_C)
001655 DCF5 CE00             7      ADC A,0
001657 DCF7 B9               4      CP  C
001658 DCF8 200C            12      JR  NZ,DRDC3
00165A DCFA 2110DD          10      LD  HL,DRWF_B
00165D DCFD 34              11      INC (HL)
00165E DCFE E1              10      POP HL
       DCFF                     INC_HL_DRWC:
00165F DCFF 3A4FDC          13      LD  A,(SECSZ+2)     ;1セクタのサイズの上位1バイト
001662 DD02 84               4      ADD A,H
001663 DD03 67               4      LD  H,A
001664 DD04 C9              10      RET
       DD05                     DRDC2:
001665 DD05 F1              10      POP AF
       DD06                     DRDC3:
001666 DD06 CD0CDD          17      CALL    DRW_FLUSH
001669 DD09 E1              10      POP HL
00166A DD0A 18C4            12      JR  SAVE_DRWC
                                
                                ;   ランダムブロックアクセスの連続したセクタをまとめたものをフラッシュする
       DD0C                     DRW_FLUSH:
00166C DD0C C5              11      PUSH    BC
00166D DD0D D5              11      PUSH    DE
00166E DD0E 010000          10      LD  BC,0
       DD0F                     DRWF_C  EQU $-2
       DD10                     DRWF_B  EQU $-1
001671 DD11 78               4      LD  A,B
001672 DD12 B7               4      OR  A
001673 DD13 280D            12      JR  Z,DRDF1
001675 DD15 110000          10      LD  DE,0
       DD16                     DRWF_E  EQU $-2
       DD17                     DRWF_D  EQU $-1
001678 DD18 210000          10      LD  HL,0
       DD19                     DRWF_HL EQU $-2
00167B DD1B AF               4      XOR A
00167C DD1C 3210DD          13      LD  (DRWF_B),A
00167F DD1F CD3CE0          17      CALL    DRD24B
       DD20                     DRWF_MODE   EQU $-2
       DD22                     DRDF1:
001682 DD22 D1              10      POP DE
001683 DD23 C1              10      POP BC
001684 DD24 C9              10      RET
[EOF:LDFILE2.ASM:SHIFT_JIS]
                                    INCLUDE "LDDIO.ASM"
                                
                                ;   LSX-Dodgers DIO
                                
       DD25                     DRDX:
001685 DD25 CD63DD          17      CALL    DRDY
001688 DD28 C8              11      RET Z
001689 DD29 CD49DD          17      CALL    DRDX1       ;データバッファの情報を保存
00168C DD2C D8              11      RET C
00168D DD2D E5              11      PUSH    HL
00168E DD2E C5              11      PUSH    BC
00168F DD2F D5              11      PUSH    DE
001690 DD30 2A7EE5          16      LD  HL,(_DTBUF)
001693 DD33 3A8CDD          13      LD  A,(_DBS24)
001696 DD36 4F               4      LD  C,A
001697 DD37 CD3AE0          17      CALL    DRD24
00169A DD3A DC5EDD          17      CALL    C,DRDNE
       DD3D                     POP_DE_BC_HL_RET:
00169D DD3D D1              10      POP DE
00169E DD3E C1              10      POP BC
00169F DD3F E1              10      POP HL
0016A0 DD40 C9              10      RET
                                
                                ;   CDE:セクタ番号
       DD41                     DRDN:
0016A1 DD41 AF               4      XOR A
0016A2 DD42 00               4  DRDN1:  NOP         ;自己書き換え NOP / SCF
0016A3 DD43 30E0            12      JR  NC,DRDX
       DD45                     DRDNX:
0016A5 DD45 CD63DD          17      CALL    DRDY
0016A8 DD48 C8              11      RET Z
       DD49                     DRDX1:
0016A9 DD49 CD79DD          17      CALL    DWTX
                                                ;データバッファの読み込んだドライブ・セクタ情報を保存
0016AC DD4C ED53A6E4        20      LD  (_DBSEC),DE
0016B0 DD50 79               4      LD  A,C
0016B1 DD51 328CDD          13      LD  (_DBS24),A
                                
0016B4 DD54 3A88E4          13      LD  A,(_DRV)
0016B7 DD57 32A5E4          13      LD  (_DBDRV),A
0016BA DD5A CDD9E4          17      CALL    _CHGDRV
0016BD DD5D D0              11      RET NC
       DD5E                     DRDNE:
0016BE DD5E 9F               4      SBC A,A     ;CF=1ならばA=0FFH
0016BF DD5F 32A5E4          13      LD  (_DBDRV),A
0016C2 DD62 C9              10      RET
                                
                                ;   CDE:セクタ番号
       DD63                     DRDY:
0016C3 DD63 3A8CDD          13      LD  A,(_DBS24)
0016C6 DD66 B9               4      CP  C
0016C7 DD67 C0              11      RET NZ
                                
0016C8 DD68 E5              11      PUSH    HL
0016C9 DD69 3A88E4          13      LD  A,(_DRV)
0016CC DD6C 21A5E4          10      LD  HL,_DBDRV
0016CF DD6F AE               7      XOR (HL)
0016D0 DD70 2005            12      JR  NZ,POP_HL_RET
                                
0016D2 DD72 2AA6E4          16      LD  HL,(_DBSEC)
0016D5 DD75 ED52            15      SBC HL,DE       ;上でXORを使っているのでCF=0のはず
       DD77                     POP_HL_RET:
0016D7 DD77 E1              10      POP HL
0016D8 DD78 C9              10      RET
                                
       DD79                     DWTX:
0016D9 DD79 3AA4E4          13      LD  A,(_WTDBF)
0016DC DD7C B7               4      OR  A
0016DD DD7D C8              11      RET Z
0016DE DD7E AF               4      XOR A
0016DF DD7F 32A4E4          13      LD  (_WTDBF),A
                                
0016E2 DD82 E5              11      PUSH    HL
0016E3 DD83 C5              11      PUSH    BC
0016E4 DD84 D5              11      PUSH    DE
0016E5 DD85 3AA5E4          13      LD  A,(_DBDRV)
0016E8 DD88 CDD9E4          17      CALL    _CHGDRV
0016EB DD8B 0E00             7      LD  C,0
       DD8C                     _DBS24  EQU $-1
0016ED DD8D ED5BA6E4        20      LD  DE,(_DBSEC)
0016F1 DD91 2A7EE5          16      LD  HL,(_DTBUF)
0016F4 DD94 D44AE0          17      CALL    NC,DWT24
       DD97                     POP_DE_BC_HL_RET2:
0016F7 DD97 18A4            12      JR  POP_DE_BC_HL_RET
                                
       DD99                     RDFATX:
0016F9 DD99 E5              11      PUSH    HL
0016FA DD9A 3A88E4          13      LD  A,(_DRV)
0016FD DD9D 21AAE4          10      LD  HL,_FATDRV
001700 DDA0 AE               7      XOR (HL)
001701 DDA1 28D4            12      JR  Z,POP_HL_RET
                                
001703 DDA3 C5              11      PUSH    BC
001704 DDA4 D5              11      PUSH    DE
001705 DDA5 DDE5            15      PUSH    IX
001707 DDA7 CDC3DD          17      CALL    WTFATX
00170A DDAA 3813            12      JR  C,POP_IX_DE_BC_HL_RET
                                
00170C DDAC AF               4      XOR A
00170D DDAD 32ABE4          13      LD  (_FATIX),A
001710 DDB0 3A88E4          13      LD  A,(_DRV)
001713 DDB3 32AAE4          13      LD  (_FATDRV),A
001716 DDB6 CDE5E4          17      CALL    _RDFAT
       DDB9                     RDFATE2:
001719 DDB9 3004            12      JR  NC,POP_IX_DE_BC_HL_RET
00171B DDBB 9F               4      SBC A,A     ;A=0xFF
00171C DDBC 32AAE4          13      LD  (_FATDRV),A
       DDBF                     POP_IX_DE_BC_HL_RET:
00171F DDBF DDE1            14      POP IX
001721 DDC1 18D4            12      JR  POP_DE_BC_HL_RET2
                                
       DDC3                     WTFATX:
001723 DDC3 3AA2E4          13      LD  A,(_WTFATF)
001726 DDC6 B7               4      OR  A
001727 DDC7 C8              11      RET Z
001728 DDC8 E5              11      PUSH    HL
001729 DDC9 3AAAE4          13      LD  A,(_FATDRV)
00172C DDCC 21A5E4          10      LD  HL,_DBDRV
00172F DDCF AE               7      XOR (HL)
001730 DDD0 CC79DD          17      CALL    Z,DWTX
001733 DDD3 38A2            12      JR  C,POP_HL_RET
001735 DDD5 C5              11      PUSH    BC
001736 DDD6 D5              11      PUSH    DE
001737 DDD7 DDE5            15      PUSH    IX
001739 DDD9 CD57E0          17      CALL    WTFAT
00173C DDDC AF               4      XOR A
00173D DDDD 32A2E4          13      LD  (_WTFATF),A
001740 DDE0 18DD            12      JR  POP_IX_DE_BC_HL_RET
                                
       DDE2                     NCL1:
001742 DDE2 7A               4      LD  A,D
001743 DDE3 B3               4      OR  E
001744 DDE4 37               4      SCF
001745 DDE5 C8              11      RET Z
                                
001746 DDE6 7A               4      LD  A,D
001747 DDE7 CB3F             8      SRL A   ;/2
001749 DDE9 CB3F             8      SRL A   ;/2
                                
00174B DDEB E5              11      PUSH    HL
00174C DDEC 320BDE          13      LD  (NCLPAT_FATIX),A    ;_FATIX
00174F DDEF 2AAAE4          16      LD  HL,(_FATDRV)    ;L=_FATDRV H=_FATIX
001752 DDF2 BC               4      CP  H
001753 DDF3 3A88E4          13      LD  A,(_DRV)    ;LDではフラグは変化しない
001756 DDF6 320ADE          13      LD  (NCLPAT_FATDRV),A   ;_FATDRV
001759 DDF9 2005            12      JR  NZ,NCL2     ;FATIXが違う
00175B DDFB BD               4      CP  L
00175C DDFC 2002            12      JR  NZ,NCL2     ;ドライブが違う
00175E DDFE E1              10      POP HL
00175F DDFF C9              10      RET
       DE00                     NCL2:
001760 DE00 C5              11      PUSH    BC
001761 DE01 D5              11      PUSH    DE
001762 DE02 DDE5            15      PUSH    IX
001764 DE04 CDC3DD          17      CALL    WTFATX
001767 DE07 38B6            12      JR  C,POP_IX_DE_BC_HL_RET
001769 DE09 010000          10      LD  BC,0        ;自己書き換え C=_FATDRV B=_FATIX
       DE0B                     NCLPAT_FATIX    EQU $-1
       DE0A                     NCLPAT_FATDRV   EQU $-2
00176C DE0C ED43AAE4        20      LD  (_FATDRV),BC
001770 DE10 CD2CE0          17      CALL    RDFATS
001773 DE13 18A4            12      JR  RDFATE2
                                
       DE15                     NCL3:
001775 DE15 CB9A             8      RES 3,D
001777 DE17 CB92             8      RES 2,D
001779 DE19 6B               4      LD  L,E
00177A DE1A 62               4      LD  H,D
00177B DE1B CB3C             8      SRL H   ;
00177D DE1D CB1D             8      RR  L   ;HLA=HLA/2
00177F DE1F 1F               4      RRA     ;
001780 DE20 F5              11      PUSH    AF
001781 DE21 3AABE4          13      LD  A,(_FATIX)
001784 DE24 0F               4      RRCA
001785 DE25 300B            12      JR  NC,NCL3X1
001787 DE27 3A4FDC          13      LD  A,(SECSZ+2)
00178A DE2A FE04             7      CP  4       ;1セクタ1024バイトの場合は奇数インデックスの場合に先頭を512バイトずらす
00178C DE2C 2004            12      JR  NZ,NCL3X1
00178E DE2E 010002          10      LD  BC,512
001791 DE31 09              11      ADD HL,BC
       DE32                     NCL3X1:
001792 DE32 F1              10      POP AF
001793 DE33 ED4B7CE5        20      LD  BC,(_FATBF)
001797 DE37 19              11      ADD HL,DE
001798 DE38 09              11      ADD HL,BC
001799 DE39 17               4      RLA
00179A DE3A C9              10      RET
                                
       DE3B                     GNCL:
00179B DE3B CDE2DD          17      CALL    NCL1        ;GET NEXT CLUSTER
00179E DE3E D8              11      RET C
00179F DE3F C5              11      PUSH    BC
0017A0 DE40 E5              11      PUSH    HL
0017A1 DE41 CD15DE          17      CALL    NCL3
0017A4 DE44 3809            12      JR  C,GNC1
0017A6 DE46 5E               7      LD  E,(HL)
0017A7 DE47 23               6      INC HL
0017A8 DE48 7E               7      LD  A,(HL)
0017A9 DE49 E60F             7      AND 00FH
0017AB DE4B 57               4      LD  D,A
0017AC DE4C E1              10      POP HL
0017AD DE4D C1              10      POP BC
0017AE DE4E C9              10      RET
       DE4F                     GNC1:
0017AF DE4F 7E               7      LD  A,(HL)
0017B0 DE50 23               6      INC HL
0017B1 DE51 56               7      LD  D,(HL)
0017B2 DE52 0604             7      LD  B,4
       DE54                     GNC1L:
0017B4 DE54 CB3A             8      SRL D   ;DA=DA/2
0017B6 DE56 1F               4      RRA     ;
0017B7 DE57 10FB            13      DJNZ    GNC1L
                                
0017B9 DE59 5F               4      LD  E,A
0017BA DE5A E1              10      POP HL
0017BB DE5B C1              10      POP BC
0017BC DE5C A7               4      AND A
0017BD DE5D C9              10      RET
                                
       DE5E                     SNCL:
0017BE DE5E CDE2DD          17      CALL    NCL1
0017C1 DE61 D8              11      RET C
                                ;               SET NEXT CLUSTER
0017C2 DE62 E5              11      PUSH    HL
0017C3 DE63 C5              11      PUSH    BC
0017C4 DE64 D5              11      PUSH    DE
0017C5 DE65 E5              11      PUSH    HL
0017C6 DE66 CD15DE          17      CALL    NCL3
0017C9 DE69 D1              10      POP DE
                                ;CF=ODD
0017CA DE6A 7E               7      LD  A,(HL)
0017CB DE6B 73               7      LD  (HL),E
0017CC DE6C 3806            12      JR  C,SNC1
                                ;EVEN
                                ;M[0] = E
                                ;M[1] = (M[1] & 0xF0) | (D & 0x0F)
0017CE DE6E 23               6      INC HL
0017CF DE6F ED67            18      RRD     ;M={A[3:0],E[3:0]}
0017D1 DE71 7A               4      LD  A,D
0017D2 DE72 1804            12      JR  SNC11
       DE74                     SNC1:
                                ;ODD
                                ;HL[0] = (HL[0]&0x0F) | (E<<4)
                                ;HL[1] = DE>>4
0017D4 DE74 ED6F            18      RLD     ;M={D[3:0],E[7:4]}
0017D6 DE76 23               6      INC HL
0017D7 DE77 72               7      LD  (HL),D  ;M={D[3:0],E[7:4]}
       DE78                     SNC11:
0017D8 DE78 ED6F            18      RLD     ;M={M[7:4],D[3:0]}
0017DA DE7A B7               4      OR  A
0017DB DE7B D1              10      POP DE
0017DC DE7C C1              10      POP BC
0017DD DE7D E1              10      POP HL
       DE7E                     FAT_CHANGED:
0017DE DE7E 3E01             7      LD  A,1
0017E0 DE80 32A2E4          13      LD  (_WTFATF),A
0017E3 DE83 C9              10      RET
                                
       DE84                     N16CL3:
0017E4 DE84 C5              11      PUSH    BC
0017E5 DE85 6B               4      LD  L,E
0017E6 DE86 7A               4      LD  A,D
0017E7 DE87 E603             7      AND 3
0017E9 DE89 67               4      LD  H,A
0017EA DE8A 29              11      ADD HL,HL
0017EB DE8B ED4B7CE5        20      LD  BC,(_FATBF)
0017EF DE8F 09              11      ADD HL,BC
0017F0 DE90 C1              10      POP BC
0017F1 DE91 C9              10      RET
                                
       DE92                     GNCL16:
0017F2 DE92 CDE2DD          17      CALL    NCL1        ;GET NEXT CLUSTER for FAT16
0017F5 DE95 D8              11      RET C
0017F6 DE96 E5              11      PUSH    HL
0017F7 DE97 CD84DE          17      CALL    N16CL3
0017FA DE9A 5E               7      LD  E,(HL)
0017FB DE9B 23               6      INC HL
0017FC DE9C 56               7      LD  D,(HL)
0017FD DE9D E1              10      POP HL
0017FE DE9E C9              10      RET
                                
       DE9F                     SNCL16:
0017FF DE9F CDE2DD          17      CALL    NCL1        ;GET NEXT CLUSTER for FAT16
001802 DEA2 D8              11      RET C
001803 DEA3 D5              11      PUSH    DE
001804 DEA4 E5              11      PUSH    HL
001805 DEA5 CD84DE          17      CALL    N16CL3
001808 DEA8 D1              10      POP DE      ;HL
001809 DEA9 73               7      LD  (HL),E
00180A DEAA 23               6      INC HL
00180B DEAB 72               7      LD  (HL),D
00180C DEAC 6B               4      LD  L,E
00180D DEAD 62               4      LD  H,D
00180E DEAE D1              10      POP DE
00180F DEAF 18CD            12      JR  FAT_CHANGED
                                
                                ;------------------------
                                ;次のセクタを探す際に_SECPSの値をチェック
                                ;in
                                ;   DE : セクタ番号
                                ;out
                                ;   DE : 次のセクタ番号
                                ;note
                                ;
                                ;------------------------
       DEB1                     NEXTX:
001811 DEB1 3E00             7      LD  A,0 ;自己書き換え
       DEB2                     _SECPS  EQU $-1
001813 DEB3 3C               4      INC A
001814 DEB4 E600             7      AND 0   ;自己書き換え　1クラスタの論理セクタ数-1
       DEB5                     _NCPAT  EQU $-1
001816 DEB6 32B2DE          13      LD  (_SECPS),A
001819 DEB9 C9              10      RET
                                
       DEBA                     GNCLX:
00181A DEBA CDB1DE          17      CALL    NEXTX
00181D DEBD C0              11      RET NZ  ;1クラスタのセクタ未満の場合は戻る
00181E DEBE C3F7E4          10      JP  _GNCL   ;次のクラスタを探す
                                
       DEC1                     RDFAT:
001821 DEC1 3E80             7      LD  A,080H
001823 DEC3 3270E4          13      LD  (CHECK),A
       DEC6                     RDFAT1:
001826 DEC6 3A88E4          13      LD  A,(_DRV)
001829 DEC9 CD81E1          17      CALL    CHGDRVR
00182C DECC D8              11      RET C
00182D DECD DD7E12          19      LD  A,(IX+DPB_DEVICE)
001830 DED0 CB6F             8      BIT 5,A
001832 DED2 2868            12      JR  Z,RDFAT0X
001834 DED4 2170E4          10      LD  HL,CHECK
001837 DED7 A6               7      AND (HL)
001838 DED8 77               7      LD  (HL),A
001839 DED9 110000          10      LD  DE,0        ;BPB
00183C DEDC 2A7CE5          16      LD  HL,(_FATBF)
00183F DEDF CD38E0          17      CALL    DRD16
001842 DEE2 3024            12      JR  NC,GETBPB
001844 DEE4 2170E4          10      LD  HL,CHECK
001847 DEE7 CB06            15      RLC (HL)
001849 DEE9 3F               4      CCF
00184A DEEA D8              11      RET C
00184B DEEB DDCB0A1E        23      RR  (IX+DPB_FDMODE)
00184F DEEF 3F               4      CCF         ;フロッピーディスクのFDモードを切り替える
001850 DEF0 DDCB0A16        23      RL  (IX+DPB_FDMODE)
001854 DEF4 3EFF             7      LD  A,0FFH
001856 DEF6 3289E4          13      LD  (_DSK),A
001859 DEF9 3A84E4          13      LD  A,(_DRIVE)
00185C DEFC E603             7      AND 3
00185E DEFE F680             7      OR  080H
001860 DF00 6F               4      LD  L,A
001861 DF01 26E4             7      LD  H,_CYL0/256
001863 DF03 3EFF             7      LD  A,0FFH
001865 DF05 77               7      LD  (HL),A
001866 DF06 18BE            12      JR  RDFAT1
       DF08                     GETBPB:
001868 DF08 FDE5            15      PUSH    IY
00186A DF0A FD2A7CE5        20      LD  IY,(_FATBF) ;BPB
00186E DF0E CDF1E4          17      CALL    _BPB2DPB
001871 DF11 FDE1            14      POP IY
001873 DF13 DD7E12          19      LD  A,(IX+DPB_DEVICE)
001876 DF16 3021            12      JR  NC,GETBPBOK
001878 DF18 E60F             7      AND 00FH
00187A DF1A FE07             7      CP  7
00187C DF1C 37               4      SCF
00187D DF1D C0              11      RET NZ
00187E DF1E DDCB0A46        20      BIT 0,(IX+DPB_FDMODE)
001882 DF22 21C0E5          10      LD  HL,M2D
001885 DF25 2002            12      JR  NZ,SETFDMODE
001887 DF27 2ED2             7      LD  L,M2HD-STABLE
       DF29                     SETFDMODE:
001889 DF29 DDE5            15      PUSH    IX
00188B DF2B D1              10      POP DE
00188C DF2C EDA0            16      LDI
00188E DF2E EDA0            16      LDI
001890 DF30 13               6      INC DE
001891 DF31 13               6      INC DE
001892 DF32 13               6      INC DE
001893 DF33 13               6      INC DE
001894 DF34 010C00          10      LD  BC,12
001897 DF37 EDB0                    LDIR
       DF39                     GETBPBOK:
001899 DF39 CDE0E0          17      CALL    CHGDRV2
       DF3C                     RDFAT0X:
00189C DF3C CD2CE0          17      CALL    RDFATS
00189F DF3F D8              11      RET C
0018A0 DF40 DDAE06          19      XOR (IX+DPB_FATID)
0018A3 DF43 C8              11      RET Z
0018A4 DF44 DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
0018A8 DF48 C0              11      RET NZ      ;BPBを取得している場合はFATIDをチェックしない
0018A9 DF49 37               4      SCF
0018AA DF4A C9              10      RET
                                
       DF4B                     POP_HL_SCF_RET:
0018AB DF4B E1              10      POP HL
0018AC DF4C 37               4      SCF
0018AD DF4D C9              10      RET
                                
       DF4E                     BPB2DPB:
0018AE DF4E FD7E0B          19      LD  A,(IY+11)   ;BPB_BytsPerSec
0018B1 DF51 B7               4      OR  A
0018B2 DF52 37               4      SCF
0018B3 DF53 C0              11      RET NZ
       DF54                     BPBOK:
0018B4 DF54 FD7E0D          19      LD  A,(IY+13)   ;BPB_SecPerClus
0018B7 DF57 DD7707          19      LD  (IX+DPB_SECPCL),A
                                
0018BA DF5A FD7E16          19      LD  A,(IY+22)   ;BPB_FATSz16
0018BD DF5D DD7700          19      LD  (IX+DPB_FATLN),A
0018C0 DF60 FD7E17          19      LD  A,(IY+23)   ;BPB_FATSz16
0018C3 DF63 DD7701          19      LD  (IX+DPB_FATLN+1),A
                                
0018C6 DF66 FD6E0E          19      LD  L,(IY+14)   ;BPB_RsvdSecCnt
0018C9 DF69 FD660F          19      LD  H,(IY+15)
0018CC DF6C DD750E          19      LD  (IX+DPB_FATPS),L
0018CF DF6F FD5E16          19      LD  E,(IY+22)   ;BPB_FATSz16
0018D2 DF72 FD5617          19      LD  D,(IY+23)
0018D5 DF75 FD4610          19      LD  B,(IY+16)   ;BPB_NumFATs
       DF78                     BPBDP1:             ;BPB_FATSz16 * BPB_NumFATs
0018D8 DF78 19              11      ADD HL,DE
0018D9 DF79 10FD            13      DJNZ    BPBDP1
       DF7B                     BPBDP2:
0018DB DF7B DD7510          19      LD  (IX+DPB_DIRPS),L
0018DE DF7E DD7411          19      LD  (IX+DPB_DIRPS+1),H
0018E1 DF81 E5              11      PUSH    HL
                                
0018E2 DF82 FD6E11          19      LD  L,(IY+17)   ;BPB_RootEntCnt
0018E5 DF85 FD6612          19      LD  H,(IY+18)
0018E8 DF88 FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
0018EB DF8B B7               4      OR  A
0018EC DF8C 28BD            12      JR  Z,POP_HL_SCF_RET
0018EE DF8E 0606             7      LD  B,6
       DF90                     BPBBPS1:
0018F0 DF90 05               4      DEC B
0018F1 DF91 0F               4      RRCA
0018F2 DF92 30FC            12      JR  NC,BPBBPS1
       DF94                     BPBDE1:
0018F4 DF94 29              11      ADD HL,HL
0018F5 DF95 10FD            13      DJNZ    BPBDE1
                                
0018F7 DF97 7C               4      LD  A,H
0018F8 DF98 DD770B          19      LD  (IX+DPB_DIRSCNT),A  ;
                                
0018FB DF9B D1              10      POP DE      ;DPB_DIRPS
0018FC DF9C 6C               4      LD  L,H
0018FD DF9D 2600             7      LD  H,0
0018FF DF9F 19              11      ADD HL,DE       ;MAXDIR
001900 DFA0 E5              11      PUSH    HL
001901 DFA1 FD4E0D          19      LD  C,(IY+13)   ;BPB_SecPerClus
001904 DFA4 CB21             8      SLA C       ;*2
001906 DFA6 AF               4      XOR A
001907 DFA7 47               4      LD  B,A
001908 DFA8 ED42            15      SBC HL,BC
00190A DFAA DD7514          19      LD  (IX+DPB_ADDCL),L
00190D DFAD DD7415          19      LD  (IX+DPB_ADDCL+1),H
                                
001910 DFB0 D1              10      POP DE      ;DE=DPB_MAXDIR
001911 DFB1 FD6E13          19      LD  L,(IY+19)   ;BPB_TotSec16
001914 DFB4 FD6614          19      LD  H,(IY+20)
                                
001917 DFB7 DD7E12          19      LD  A,(IX+DPB_DEVICE)
00191A DFBA E60F             7      AND 00FH
00191C DFBC FE07             7      CP  7       ;フロッピー
00191E DFBE 2019            12      JR  NZ,NOT_FD
001920 DFC0 E5              11      PUSH    HL
001921 DFC1 FD4E18          19      LD  C,(IY+24)   ;BPB_SecPerTr
001924 DFC4 DD710D          19      LD  (IX+DPB_MAXSEC),C
001927 DFC7 AF               4      XOR A
001928 DFC8 CB21             8      SLA C       ;両面なのでセクタ数を２倍
00192A DFCA 0610             7      LD  B,16
       DFCC                     DIVSEC:             ;MAXCYL = BPB_TotSec16 / (BPB_SecPerTr * 2)
00192C DFCC 29              11      ADD HL,HL
00192D DFCD 17               4      RLA
00192E DFCE B9               4      CP  C
00192F DFCF 3802            12      JR  C,DIVSEC1
001931 DFD1 91               4      SUB C
001932 DFD2 2C               4      INC L
       DFD3                     DIVSEC1:
001933 DFD3 10F7            13      DJNZ    DIVSEC
001935 DFD5 DD750C          19      LD  (IX+DPB_MAXCYL),L
001938 DFD8 E1              10      POP HL  ;ここまでフロッピー専用
       DFD9                     NOT_FD:
001939 DFD9 7C               4      LD  A,H
00193A DFDA B5               4      OR  L
00193B DFDB 3E00             7      LD  A,0     ;LDでフラグは変化しない。BPB_TotSec16を AHL で扱う為、Aに0を入れる
00193D DFDD 2010            12      JR  NZ,BPB16BIT ;BPB_TotSec16が「0」の場合はBPB_TotSec32で計算
00193F DFDF FD7E23          19      LD  A,(IY+35)   ;念のために総セクタ数が24ビットを超える場合はエラーを返す
001942 DFE2 B7               4      OR  A
001943 DFE3 37               4      SCF
001944 DFE4 C0              11      RET NZ
001945 DFE5 FD6E20          19      LD  L,(IY+32)   ;BPB_TotSec32 は AHL の24ビットで扱う
001948 DFE8 FD6621          19      LD  H,(IY+33)   ;1クラスタの論理セクタ数(DPB_SECPCL)が最大128なので
00194B DFEB FD7E22          19      LD  A,(IY+34)   ;24ビットを超えると必ずクラスタ数が16ビットを超えてしまうのでこれで十分
00194E DFEE A7               4      AND A       ;CF=0
       DFEF                     BPB16BIT:
00194F DFEF ED52            15      SBC HL,DE
001951 DFF1 DE00             7      SBC A,0
001953 DFF3 FD460D          19      LD  B,(IY+13)   ;BPB_SecPerClus
       DFF6                     BPBTC1:             ;総クラスタ数(AHL) = 総セクタ数(AHL) / セクタサイズ(B)
001956 DFF6 CB18             8      RR  B       ;->CY
001958 DFF8 3808            12      JR  C,BPBTC2
00195A DFFA CB3F             8      SRL A
00195C DFFC CB1C             8      RR  H       ;AHL=AHL/2
00195E DFFE CB1D             8      RR  L
001960 E000 18F4            12      JR  BPBTC1
       E002                     BPBTC2:
001962 E002 B7               4      OR  A
001963 E003 37               4      SCF
001964 E004 C0              11      RET NZ      ;念のため(クラスタ数が16ビットを超える場合)
001965 E005 23               6      INC HL
001966 E006 23               6      INC HL
001967 E007 DD7508          19      LD  (IX+DPB_MAXCL),L
00196A E00A DD7409          19      LD  (IX+DPB_MAXCL+1),H
                                
00196D E00D FD7E15          19      LD  A,(IY+21)   ;BPB_Media
001970 E010 DD7706          19      LD  (IX+DPB_FATID),A
                                
001973 E013 FD7E10          19      LD  A,(IY+16)   ;BPB_NumFATs
001976 E016 C6FE             7      ADD A,0-2       ;>2:CF=1
001978 E018 FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
00197B E01B 6F               4      LD  L,A
00197C E01C 3002            12      JR  NC,BPBFAT1
00197E E01E F680             7      OR  080H
       E020                     BPBFAT1:            ;ここではCF=0
001980 E020 DD770F          19      LD  (IX+DPB_BPS),A
001983 E023 2D               4      DEC L       ;以下のセクタサイズに合致しない場合はCF=1でエラーにする
001984 E024 C8              11      RET Z       ;1セクタ256バイト
001985 E025 2D               4      DEC L
001986 E026 C8              11      RET Z       ;1セクタ512バイト
001987 E027 2D               4      DEC L
001988 E028 2D               4      DEC L
001989 E029 C8              11      RET Z       ;1セクタ1024バイト
00198A E02A 37               4      SCF
00198B E02B C9              10      RET
                                
       E02C                     RDFATS:
00198C E02C CD72E0          17      CALL    FATSETUP
00198F E02F D8              11      RET C
001990 E030 CD3CE0          17      CALL    DRD24B
001993 E033 2A7CE5          16      LD  HL,(_FATBF)
001996 E036 7E               7      LD  A,(HL)
001997 E037 C9              10      RET
                                
       E038                     DRD16:
001998 E038 0E00             7      LD  C,0
       E03A                     DRD24:
00199A E03A 0601             7      LD  B,1
       E03C                     DRD24B:
00199C E03C DDE5            15      PUSH    IX
00199E E03E DD2AA8E4        20      LD  IX,(_DPB)
0019A2 E042 CDC6E1          17      CALL    FDRD        ;自己書き換え（ディスク読み込み）
       E043                     DRDPAT  EQU $-2
       E045                     POP_IX_RET:
0019A5 E045 DDE1            14      POP IX
0019A7 E047 C9              10      RET
                                
       E048                     DWT16:
0019A8 E048 0E00             7      LD  C,0
       E04A                     DWT24:
0019AA E04A 0601             7      LD  B,1
       E04C                     DWT24B:
0019AC E04C DDE5            15      PUSH    IX
0019AE E04E DD2AA8E4        20      LD  IX,(_DPB)
0019B2 E052 CDC4E1          17      CALL    FDWT        ;自己書き換え（ディスク書き込み）
       E053                     DWTPAT  EQU $-2
0019B5 E055 18EE            12      JR  POP_IX_RET
                                
       E057                     WTFAT:
0019B7 E057 CD72E0          17      CALL    FATSETUP
0019BA E05A D44CE0          17      CALL    NC,DWT24B
0019BD E05D D8              11      RET C
0019BE E05E DDCB0F7E        20      BIT 7,(IX+DPB_BPS)
0019C2 E062 C8              11      RET Z       ;予備FATが無い
0019C3 E063 CD79E0          17      CALL    FATS2
0019C6 E066 E5              11      PUSH    HL      ;予備FAT
0019C7 E067 DD6E00          19      LD  L,(IX+DPB_FATLN)
0019CA E06A DD6601          19      LD  H,(IX+DPB_FATLN+1)
0019CD E06D 19              11      ADD HL,DE
0019CE E06E EB               4      EX  DE,HL
0019CF E06F E1              10      POP HL
0019D0 E070 18DA            12      JR  DWT24B
                                ;------------------------
                                ;FATのセットアップ
                                ;out
                                ;   B  : FATセクタ数
                                ;   DE : FAT先頭セクタ番号
                                ;   HL : FATバッファポインタ
                                ;   CF : 1=ドライブ切り替えエラー
                                ;note
                                ;   FATサイズがFATバッファを超える場合は
                                ;   対象クラスタ領域==(_FATIX)によって
                                ;   FAT12:対象クラスタ1024毎に1.5KBを切り替える
                                ;   FAT16:対象クラスタ1024毎に2KBを切り替える
                                ;------------------------
       E072                     FATSETUP:
0019D2 E072 3AAAE4          13      LD  A,(_FATDRV)
0019D5 E075 CD81E1          17      CALL    CHGDRVR     ;ドライブ切り替え
0019D8 E078 D8              11      RET C
       E079                     FATS2:
0019D9 E079 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;512=2 1024=4
0019DC E07C 0F               4      RRCA
0019DD E07D CDA6E0          17      CALL    FATSETUP12  ;自己書き換え
       E07E                     FATSX   EQU $-2
0019E0 E080 210000          10      LD  HL,0
0019E3 E083 4A               4      LD  C,D
0019E4 E084 54               4      LD  D,H
0019E5 E085 3AABE4          13      LD  A,(_FATIX)  ;範囲FAT12:0-3/FAT16:0-63(0-03FH):65535*2/2048
0019E8 E088 47               4      LD  B,A
0019E9 E089 04               4      INC B
0019EA E08A DD7E00          19      LD  A,(IX+DPB_FATLN)
       E08D                     FAT_SKP:
0019ED E08D 05               4      DEC B
0019EE E08E 2805            12      JR  Z,FAT1
0019F0 E090 19              11      ADD HL,DE
0019F1 E091 93               4      SUB E
0019F2 E092 30F9            12      JR  NC,FAT_SKP
0019F4 E094 C9              10      RET
       E095                     FAT1:
0019F5 E095 EB               4      EX  DE,HL
0019F6 E096 B9               4      CP  C       ;C=FATバッファに読み込めるセクタ数
0019F7 E097 3801            12      JR  C,FAT2
0019F9 E099 79               4      LD  A,C
       E09A                     FAT2:
0019FA E09A 47               4      LD  B,A
                                
0019FB E09B 2AFAE5          16      LD  HL,(_FATPS) ;fat sector pos
0019FE E09E 19              11      ADD HL,DE
0019FF E09F EB               4      EX  DE,HL
001A00 E0A0 2A7CE5          16      LD  HL,(_FATBF)
001A03 E0A3 AF               4      XOR A       ;CF=0
001A04 E0A4 4F               4      LD  C,A
001A05 E0A5 C9              10      RET
                                ;
                                ;   FATバッファに読み込める最大のセクタ数と_FATIXで進めるセクタ数
                                ;   FATSETUP* (FAT12/FAT16)
                                ;out
                                ;   D : FATバッファに読み込める最大のセクタ数
                                ;   E : _FATIXで進めるセクタ数
       E0A6                     FATSETUP12:
001A06 E0A6 110606          10      LD  DE,0606H    ;256
001A09 E0A9 D8              11      RET C
001A0A E0AA 110303          10      LD  DE,0303H    ;512
001A0D E0AD 0F               4      RRCA
001A0E E0AE D8              11      RET C
001A0F E0AF 110102          10      LD  DE,0201H    ;1024
001A12 E0B2 C9              10      RET
                                
       E0B3                     FATSETUP16:
001A13 E0B3 110808          10      LD  DE,0808H    ;256
001A16 E0B6 D8              11      RET C
001A17 E0B7 110404          10      LD  DE,0404H
001A1A E0BA 0F               4      RRCA            ;512
001A1B E0BB D8              11      RET C
001A1C E0BC 110202          10      LD  DE,0202H    ;1024
001A1F E0BF C9              10      RET
                                
       E0C0                     CHGDRV:
001A20 E0C0 E5              11      PUSH    HL
001A21 E0C1 2189E4          10      LD  HL,_DSK
001A24 E0C4 BE               7      CP  (HL)
001A25 E0C5 280A            12      JR  Z,CHGDRVE
       E0C7                     CHGDRV1:
001A27 E0C7 DDE5            15      PUSH    IX
001A29 E0C9 CDD3E0          17      CALL    CHGDRV0
001A2C E0CC 3A89E4          13      LD  A,(_DSK)
001A2F E0CF DDE1            14      POP IX
       E0D1                     CHGDRVE:
001A31 E0D1 E1              10      POP HL
001A32 E0D2 C9              10      RET
                                
       E0D3                     CHGDRV0:
001A33 E0D3 6F               4      LD  L,A
001A34 E0D4 CDDCE4          17      CALL    _GETDPB
001A37 E0D7 D8              11      RET C
001A38 E0D8 DD22A8E4        20      LD  (_DPB),IX
001A3C E0DC 7D               4      LD  A,L
001A3D E0DD 3289E4          13      LD  (_DSK),A
       E0E0                     CHGDRV2:
001A40 E0E0 C5              11      PUSH    BC
001A41 E0E1 D5              11      PUSH    DE
001A42 E0E2 ED7337E1        20      LD  (SPPAT2),SP
001A46 E0E6 F3               4      DI
001A47 E0E7 DDF9            10      LD  SP,IX
                                
001A49 E0E9 E1              10      POP HL      ;00:DPB_FATLN
001A4A E0EA E1              10      POP HL      ;02:DPB_DRD
001A4B E0EB 2243E0          16      LD  (DRDPAT),HL
                                
001A4E E0EE E1              10      POP HL
001A4F E0EF 2253E0          16      LD  (DWTPAT),HL ;04:DPB_DWT
                                
001A52 E0F2 E1              10      POP HL      ;L=06:DPB_FATID H=07:DPB_SECPCL
001A53 E0F3 7C               4      LD  A,H
001A54 E0F4 3244D7          13      LD  (SPCPAT),A  ;1クラスタの論理セクタ数
001A57 E0F7 3D               4      DEC A
001A58 E0F8 32B5DE          13      LD  (_NCPAT),A
                                
001A5B E0FB E1              10      POP HL      ;08:DPB_MAXCL
001A5C E0FC 7D               4      LD  A,L
001A5D E0FD 3263D7          13      LD  (CLPAT2),A
001A60 E100 7C               4      LD  A,H
001A61 E101 325FD7          13      LD  (CLPAT1),A
001A64 E104 2B               6      DEC HL
001A65 E105 2266D9          16      LD  (MAXCLP),HL
                                
001A68 E108 E1              10      POP HL      ;L=0A:DPB_FDMODE H=0B:DPB_DIRSCNT
001A69 E109 7D               4      LD  A,L
001A6A E10A F6FE             7      OR  0FEH
001A6C E10C 32B3E4          13      LD  (FDMODE+1),A
001A6F E10F 07               4      RLCA
001A70 E110 E603             7      AND 3
001A72 E112 326BE4          13      LD  (FSPAT+1),A
001A75 E115 4C               4      LD  C,H
                                
001A76 E116 E1              10      POP HL      ;L=0C:DPB_MAXCYL H=0D:DPB_MAXSEC
                                
001A77 E117 E1              10      POP HL      ;L=0E:DPB_FATPS H=0F:DPB_BPS
001A78 E118 7C               4      LD  A,H     ;DPB_BPS
001A79 E119 E607             7      AND 7
001A7B E11B 324FDC          13      LD  (SECSZ+2),A ;1セクタのサイズの上位1バイト 0x400 - 0x200 - 0x100
                                                ;1セクタ512 2D/2DD/2HC/2HQ(2HD1.44MB)/EMM/BRAM/EMEM等
                                                ;1セクタ1024 2HD/2HDE98
                                                ;1セクタ256 GRAM/RAMF/CMOS/等
                                                ;1024   512 256
                                                ;4  2   1
001A7E E11E 87               4      ADD A,A     ;8  4   2
001A7F E11F 87               4      ADD A,A     ;010H   8   4
001A80 E120 87               4      ADD A,A     ;020H   010H    8
001A81 E121 32C0D5          13      LD  (SDECPAT),A ;1セクタ辺りのディレクトリエントリ数
                                
001A84 E124 2600             7      LD  H,0
001A86 E126 22FAE5          16      LD  (_FATPS),HL
                                
001A89 E129 E1              10      POP HL      ;10:DPB_DIRPS
001A8A E12A 22FCE5          16      LD  (_DIRPS),HL
                                
001A8D E12D E1              10      POP HL      ;L=12:DPB_DEVICE H=13:DPB_UNITNO
001A8E E12E 7C               4      LD  A,H
001A8F E12F 3284E4          13      LD  (_DRIVE),A
                                
001A92 E132 E1              10      POP HL      ;14:DPB_ADDCL
001A93 E133 2254D7          16      LD  (CLSPAT),HL
                                
001A96 E136 310000          10      LD  SP,0        ;元のSPを復元
       E137                     SPPAT2  EQU $-2
001A99 E139 FB               4      EI
001A9A E13A 2AFCE5          16      LD  HL,(_DIRPS)
001A9D E13D 0600             7      LD  B,0
001A9F E13F 09              11      ADD HL,BC       ;C=DPB_DIRSCNT
001AA0 E140 22DBD5          16      LD  (MD_PAT),HL
                                
001AA3 E143 2A66D9          16      LD  HL,(MAXCLP);
001AA6 E146 11F60F          10      LD  DE,4086     ;クラスタ数が4086未満:FAT12 4086以上:FAT16
001AA9 E149 ED52            15      SBC HL,DE       ;CF=0のはず
001AAB E14B 300F            12      JR  NC,SETFAT16
001AAD E14D 213BDE          10      LD  HL,GNCL     ;FAT12
001AB0 E150 115EDE          10      LD  DE,SNCL
001AB3 E153 01A6E0          10      LD  BC,FATSETUP12
001AB6 E156 DDCB0FAE        23      RES 5,(IX+DPB_BPS)  ;DPB_BPS(FAT12)
001ABA E15A 180D            12      JR  EXTRA1
       E15C                     SETFAT16:
001ABC E15C 2192DE          10      LD  HL,GNCL16   ;FAT16
001ABF E15F 119FDE          10      LD  DE,SNCL16
001AC2 E162 01B3E0          10      LD  BC,FATSETUP16
001AC5 E165 DDCB0FEE        23      SET 5,(IX+DPB_BPS)  ;DPB_BPS(FAT16)
       E169                     EXTRA1:
001AC9 E169 22F8E4          16      LD  (GNCPAT),HL
001ACC E16C ED53FBE4        20      LD  (SNCPAT),DE
001AD0 E170 ED437EE0        20      LD  (FATSX),BC
001AD4 E174 D1              10      POP DE
001AD5 E175 C1              10      POP BC
001AD6 E176 AF               4      XOR A
001AD7 E177 C9              10      RET
                                
       E178                     GETDPBD:
001AD8 E178 DDE3            23      EX  (SP),IX
001ADA E17A DDE5            15      PUSH    IX
001ADC E17C 3A88E4          13      LD  A,(_DRV)
001ADF E17F 1807            12      JR  GETDPB1
                                
       E181                     CHGDRVR:
001AE1 E181 CDD9E4          17      CALL    _CHGDRV
001AE4 E184 D8              11      RET C
001AE5 E185 3A89E4          13      LD  A,(_DSK)
       E188                     GETDPB1:
001AE8 E188 C3DCE4          10      JP  _GETDPB
                                
       E18B                     GETDPB:
001AEB E18B FE08             7      CP  8
001AED E18D 3F               4      CCF
001AEE E18E D8              11      RET C
001AEF E18F 0F               4      RRCA
001AF0 E190 0F               4      RRCA
001AF1 E191 0F               4      RRCA
001AF2 E192 DD                      DB  0DDH        ;Z80未定義命令
001AF3 E193 6F               4      LD  L,A     ;LD IXL,A
001AF4 E194 DD                      DB  0DDH        ;Z80未定義命令
001AF5 E195 26E6             7      LD  H,_DEVICE/256   ;LD IXH,_DEVICE/256
001AF7 E197 DD7E00          19      LD  A,(IX+DPB_FATLN)
001AFA E19A A7               4      AND A       ;CF=0の為
001AFB E19B DDCB0F6E        20      BIT 5,(IX+DPB_BPS)
001AFF E19F C0              11      RET NZ      ;FAT16
001B00 E1A0 DDCB126E        20      BIT 5,(IX+DPB_DEVICE)
001B04 E1A4 C0              11      RET NZ      ;BPB
001B05 E1A5 FE01             7      CP  001H        ;A=0 THEN CF=1
001B07 E1A7 C9              10      RET
                                
       E1A8                     _SYS5F:
001B08 E1A8 AF               4      XOR A
       E1A9                     FFLUSH:
001B09 E1A9 F5              11      PUSH    AF
001B0A E1AA CDC3DD          17      CALL    WTFATX
001B0D E1AD AF               4      XOR A
001B0E E1AE 32ABE4          13      LD  (_FATIX),A
001B11 E1B1 2F               4      CPL         ;0FFH
001B12 E1B2 32AAE4          13      LD  (_FATDRV),A
001B15 E1B5 3E                      DB  03EH        ;次のPUSH AFをスキップ
       E1B6                     FFLUSHBUF:
001B16 E1B6 F5              11      PUSH    AF
001B17 E1B7 CD79DD          17      CALL    DWTX
001B1A E1BA 3EFF             7      LD  A,0FFH
001B1C E1BC 3239E4          13      LD  (SFILE),A
001B1F E1BF 32A5E4          13      LD  (_DBDRV),A
001B22 E1C2 F1              10      POP AF
001B23 E1C3 C9              10      RET
                                
[EOF:LDDIO.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDISK.ASM"
                                
                                ;   LSX-Dodgers DISK
                                ;   MSX
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ可変(256/512/1024)
                                
       E1C4                     WTTRK:
       E1C4                     FDWT:
001B24 E1C4 37               4      SCF
001B25 E1C5 C9              10      RET
       E1C6                     FDRD:
001B26 E1C6 ED7357E2        20      LD  (DRDSP),SP
001B2A E1CA 3A58E2          13      LD  A,(DRDSPH)  ;スタックがカートリッジと被っていないかチェック
001B2D E1CD FE7F             7      CP  07FH
001B2F E1CF 3807            12      JR  C,FDRD1
001B31 E1D1 FEC1             7      CP  0C1H
001B33 E1D3 3003            12      JR  NC,FDRD1
001B35 E1D5 315EF5          10      LD  SP,BUF
       E1D8                     FDRD1:
001B38 E1D8 C5              11      PUSH    BC
001B39 E1D9 D5              11      PUSH    DE
                                
001B3A E1DA E5              11      PUSH    HL
001B3B E1DB EB               4      EX  DE,HL
001B3C E1DC DD460F          19      LD  B,(IX+DPB_BPS)
       E1DF                     EADR1:
001B3F E1DF CB18             8      RR  B
001B41 E1E1 3803            12      JR  C,EADR2
001B43 E1E3 29              11      ADD HL,HL
001B44 E1E4 18F9            12      JR  EADR1
       E1E6                     EADR2:
001B46 E1E6 E5              11      PUSH    HL  ;あとでDEで受け取る
001B47 E1E7 29              11      ADD HL,HL   ;64KB→32KB
001B48 E1E8 29              11      ADD HL,HL   ;32KB→16KB
       E1E9                     ASCII16K1:
001B49 E1E9 29              11      ADD HL,HL   ;16KB→8KB  ;ASCII-16Kの場合はここがNOPに置き換えられる
                                
001B4A E1EA DD7E0C          19      LD  A,(IX+DPB_MAXCYL)   ;16KB単位でカートリッジ内のディスクが存在する位置を指定
       E1ED                     ASCII16K2:
001B4D E1ED 87               4      ADD A,A         ;ASCII-16Kの場合はここがNOPに置き換えられる
001B4E E1EE 84               4      ADD A,H
001B4F E1EF 5F               4      LD  E,A
001B50 E1F0 3A62E4          13      LD  A,(ROM_SLT)
001B53 E1F3 210070          10      LD  HL,BANK2_SEL
       E1F4                     ROM8000H    EQU $-2
001B56 E1F6 CDF8D2          17      CALL    WRSLT
                                
001B59 E1F9 2680             7      LD  H,080H
001B5B E1FB 3A62E4          13      LD  A,(ROM_SLT) ;カートリッジROMに切り替える
001B5E E1FE CD6BD3          17      CALL    ENASLT
                                
001B61 E201 D1              10      POP DE
001B62 E202 E1              10      POP HL      ;HLは読み出し先のメモリアドレス
                                
001B63 E203 7B               4      LD  A,E
001B64 E204 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F/16K:3F)
       E205                     ASCII16K3   EQU $-1
001B66 E206 1E00             7      LD  E,0     ;DEはROMディスクから読み出すアドレス
001B68 E208 C680             7      ADD A,080H
001B6A E20A 57               4      LD  D,A
                                
001B6B E20B 3E                      DB  03EH
001B6C E20C A7               4      AND A
001B6D E20D 323AE2          13      LD  (DRD_SWC3),A
001B70 E210 7C               4      LD  A,H     ;読み出し先がカートリッジと被っていないかチェック
001B71 E211 FE7B             7      CP  07BH
001B73 E213 3812            12      JR  C,DRD2
001B75 E215 FEC1             7      CP  0C1H
001B77 E217 300E            12      JR  NC,DRD2
001B79 E219 2241E2          16      LD  (DRD_SWC1),HL   ;被っている場合はデータバッファをフラッシュして一時的に使う
001B7C E21C 2100EF          10      LD  HL,DTBUF
001B7F E21F 3E                      DB  03EH
001B80 E220 37               4      SCF
001B81 E221 323AE2          13      LD  (DRD_SWC3),A
001B84 E224 CDB6E1          17      CALL    FFLUSHBUF
       E227                     DRD2:
001B87 E227 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001B8A E22A E607             7      AND 7
001B8C E22C 47               4      LD  B,A
001B8D E22D 4B               4      LD  C,E ;E=0
                                
001B8E E22E EB               4      EX  DE,HL
001B8F E22F EDB0                    LDIR
001B91 E231 D5              11      PUSH    DE
001B92 E232 2680             7      LD  H,080H
001B94 E234 3A43F3          13      LD  A,(0F341H+2)    ;メインRAMに戻す
001B97 E237 CD6BD3          17      CALL    ENASLT
       E23A                     DRD_SWC3:
001B9A E23A A7               4      AND A       ;自己書き換え)被っている場合はSCFになる
001B9B E23B 3012            12      JR  NC,DRD3
                                
001B9D E23D 2100EF          10      LD  HL,DTBUF
001BA0 E240 110000          10      LD  DE,0
       E241                     DRD_SWC1    EQU $-2
001BA3 E243 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001BA6 E246 E607             7      AND 7
001BA8 E248 47               4      LD  B,A
001BA9 E249 0E00             7      LD  C,0
001BAB E24B EDB0                    LDIR
001BAD E24D E1              10      POP HL
001BAE E24E D5              11      PUSH    DE
       E24F                     DRD3:
001BAF E24F E1              10      POP HL
001BB0 E250 D1              10      POP DE
001BB1 E251 13               6      INC DE
001BB2 E252 C1              10      POP BC
001BB3 E253 1083            13      DJNZ    FDRD1
001BB5 E255 AF               4      XOR A
001BB6 E256 310000          10      LD  SP,0
       E257                     DRDSP   EQU $-2
       E258                     DRDSPH  EQU $-1
001BB9 E259 FB               4      EI
001BBA E25A C9              10      RET
                                
       E25B                     PDWT:
001BBB E25B 37               4      SCF
001BBC E25C CB7C             8      BIT 7,H
001BBE E25E 2056            12      JR  NZ,PDWX
001BC0 E260 CDB6E1          17      CALL    FFLUSHBUF
       E263                     PDWT1:
001BC3 E263 C5              11      PUSH    BC
001BC4 E264 D5              11      PUSH    DE
001BC5 E265 1100EF          10      LD  DE,DTBUF
001BC8 E268 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001BCB E26B E607             7      AND 7
001BCD E26D 47               4      LD  B,A
001BCE E26E 0E00             7      LD  C,0
001BD0 E270 EDB0                    LDIR
001BD2 E272 E5              11      PUSH    HL
001BD3 E273 2100EF          10      LD  HL,DTBUF
001BD6 E276 0601             7      LD  B,1
001BD8 E278 37               4      SCF
001BD9 E279 CDB6E2          17      CALL    PDWX
001BDC E27C 3834            12      JR  C,PDRWERR
001BDE E27E E1              10      POP HL
001BDF E27F D1              10      POP DE
001BE0 E280 13               6      INC DE
001BE1 E281 C1              10      POP BC
001BE2 E282 10D7            13      DJNZ    PDWT
001BE4 E284 AF               4      XOR A
001BE5 E285 C9              10      RET
       E286                     PDRD:
001BE6 E286 A7               4      AND A
001BE7 E287 CB7C             8      BIT 7,H
001BE9 E289 202B            12      JR  NZ,PDWX
001BEB E28B CDB6E1          17      CALL    FFLUSHBUF
       E28E                     PDRD1:
001BEE E28E C5              11      PUSH    BC
001BEF E28F D5              11      PUSH    DE
001BF0 E290 E5              11      PUSH    HL
001BF1 E291 2100EF          10      LD  HL,DTBUF
001BF4 E294 0601             7      LD  B,1
001BF6 E296 A7               4      AND A
001BF7 E297 CDB6E2          17      CALL    PDWX
001BFA E29A 3816            12      JR  C,PDRWERR
001BFC E29C D1              10      POP DE
001BFD E29D 2100EF          10      LD  HL,DTBUF
001C00 E2A0 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001C03 E2A3 E607             7      AND 7
001C05 E2A5 47               4      LD  B,A
001C06 E2A6 0E00             7      LD  C,0
001C08 E2A8 EDB0                    LDIR
001C0A E2AA EB               4      EX  DE,HL
001C0B E2AB D1              10      POP DE
001C0C E2AC 13               6      INC DE
001C0D E2AD C1              10      POP BC
001C0E E2AE 10D6            13      DJNZ    PDRD
001C10 E2B0 AF               4      XOR A
001C11 E2B1 C9              10      RET
       E2B2                     PDRWERR:
001C12 E2B2 E1              10      POP HL
001C13 E2B3 D1              10      POP DE
001C14 E2B4 C1              10      POP BC
001C15 E2B5 C9              10      RET
       E2B6                     PDWX:                   ;CF=0 READ CF=1 WRITE
001C16 E2B6 DDCB1266        20      BIT 4,(IX+DPB_DEVICE)   ;デバイス情報
001C1A E2BA 2003            12      JR  NZ,PDWX1
001C1C E2BC DD4E06          19      LD  C,(IX+DPB_FATID)    ;メディアバイト
       E2BF                     PDWX1:
001C1F E2BF DD7E13          19      LD  A,(IX+DPB_UNITNO)   ;デバイスドライバ内におけるユニット番号
001C22 E2C2 C5              11      PUSH    BC
001C23 E2C3 D5              11      PUSH    DE
001C24 E2C4 E5              11      PUSH    HL
001C25 E2C5 DDE5            15      PUSH    IX
001C27 E2C7 FDE5            15      PUSH    IY
001C29 E2C9 CDA7FF          17      CALL    H_PHYD
001C2C E2CC FDE1            14      POP IY
001C2E E2CE DDE1            14      POP IX
001C30 E2D0 E1              10      POP HL
001C31 E2D1 D1              10      POP DE
001C32 E2D2 C1              10      POP BC
001C33 E2D3 D8              11      RET C
       E2D4                     PDWX2:
001C34 E2D4 13               6      INC DE
001C35 E2D5 DD7E0F          19      LD  A,(IX+DPB_BPS)  ;BCは読み出すセクタサイズ
001C38 E2D8 E607             7      AND 7
001C3A E2DA 84               4      ADD A,H
001C3B E2DB 67               4      LD  H,A
001C3C E2DC 10F6            13      DJNZ    PDWX2
001C3E E2DE AF               4      XOR A
001C3F E2DF C9              10      RET
                                
       E4B2                     FDMODE  EQU TVRAMTOP
       E46A                     FSPAT   EQU BEEPD+9
[EOF:MSXDISK.ASM:UTF_8]
                                    INCLUDE "LDCCPWK.ASM"
                                
                                ;   LSX-Dodgers CCP WORK
                                
       003B                     PATHX   EQU 59
001C40 E2E0                     PATHD:  DS  PATHX
001C7B E31B 00                  PATHE:  DB  0
                                
       E31C                     DTA_CCP:
001C7C E31C                         DS  37
                                
       E341                     FCB_BAT:
001CA1 E341                         DS  37
                                
001CC6 E366 2020203C4449523E    DIRMES: DB  "   <DIR>  $"
            202024              
001CD1 E371 20667265652024      FREE:   DB  " free $"
[EOF:LDCCPWK.ASM:UTF_8]
                                    INCLUDE "LDWORK.ASM"
                                
                                ;   LSX-Dodgers WORK0
                                ;
                                ;   CP/M互換BIOS
                                ;   BOOT:アドレス下位1バイトが0になるように
       E378                     AT_WORK:
001CD8 E378                         DS  WORKAD-AT_WORK
                                
       E400                     CPM_BOOT:
001D60 E400 C30000          10      JP  0
       E403                     _SYS00:     ;(BDOS)プログラム終了
       E403                     CPM_WBOOT:
001D63 E403 C309C9          10      JP  WBOOT1
       E406                     CPM_CONST:
001D66 E406 C351D1          10      JP  CONSTX
       E409                     _SYS07:     ;(BDOS)コンソール直接入力
       E409                     CPM_CONIN:
001D69 E409 C372D0          10      JP  FLGET
       E40C                     CPM_CONOUT:
001D6C E40C C3F5D1          10      JP  CONOUT1
                                
       E40F                     DECBF:              ;10進数表示時のバッファ(5バイト)
001D6F E40F                         DS  5
       E40F                     RR_BUF_HL   EQU DECBF   ;CP/M互換ファイルアクセスの際のランダムレコードの一時的な保管場所
       E411                     RR_BUF_A    EQU DECBF+2 ;計3バイト
                                
001D74 E414 00                  FDRV:   DB  0
001D75 E415                     FNAME:  DS  36
001D99 E439                     SFILE:  DS  33      ;DRV FILENAME
                                
001DBA E45A                         DS  3
                                
001DBD E45D 0000                LEFTX:  DW  0
001DBF E45F 0000                DTAX:   DW  0
                                
       E461                     ZERO:
       E461                     BEEPD:
001DC1 E461 008E01000B000C10        DB  0,08EH,1,0,00BH,0,00CH,010H
001DC9 E469 073E08100D00FF          DB  007H,03EH,008H,010H,00DH,0,0FFH
       E462                     RTC_YY  EQU BEEPD+1
       E463                     RTC_MW  EQU BEEPD+2
       E464                     RTC_DD  EQU BEEPD+3
       E465                     RTC_TT  EQU BEEPD+4
       E466                     RTC_MM  EQU BEEPD+5
       E467                     RTC_SS  EQU BEEPD+6
       E462                     ROM_SLT EQU BEEPD+1
                                
001DD0 E470 00                  CHECK:  DB  0
                                
001DD1 E471 4F4B24              OK: DB  "OK$"
001DD4 E474                         DS  5
001DD9 E479 4572726F722124      COMERM: DB  "Error!$"
                                ;   システムワークエリア
                                ;   _CYL0:アドレス下位1バイトが080Hになるように
001DE0 E480 FF                  _CYL0:  DB  0FFH    ;Cylinder
001DE1 E481 FF                  _CYL1:  DB  0FFH    ;Cylinder
001DE2 E482 FF                  _CYL2:  DB  0FFH    ;Cylinder
001DE3 E483 FF                  _CYL3:  DB  0FFH    ;Cylinder
001DE4 E484 00                  _DRIVE: DB  0   ;unit number
001DE5 E485 00                  _SEEKSP:DB  0   ;Seek speed
001DE6 E486 FF                  _ISEEK: DB  0FFH    ;
001DE7 E487 00                  _DVSW:  DB  0
001DE8 E488 00                  _DRV:   DB  0
001DE9 E489 FF                  _DSK:   DB  0FFH
001DEA E48A 8000                _DTA:   DW  00080H
001DEC E48C 0000                _CTC:   DW  0
001DEE E48E 0000                _TXADR: DW  0
001DF0 E490 0000                _KEYPS: DW  0
001DF2 E492 00FF                _KEYD:  DW  0FF00H  ;キーデータ
001DF4 E494 0000                _KEYSP: DB  KEYSP_L,KEYSP_H ;オートリピートの速度
001DF6 E496 00                  _COLORF:DB  COLORF  ;色
001DF7 E497 19                  _LINE:  DB  LINE
                                
001DF8 E498 0000                _FCB:   DW  0   ;SEARCH FILES
001DFA E49A 0000                _FBPS:  DW  0   ;    //
001DFC E49C 0000                _FBAD:  DW  0   ;    //
001DFE E49E 00                  _FBCNT: DB  0   ;    //
001DFF E49F 00                  _FILEN: DB  0   ;    //
001E00 E4A0 00                  _DIRF:  DB  0   ;bit7:ディレクトリ bit0-6:セクタインデックス
001E01 E4A1                         DS  1
001E02 E4A2 00                  _WTFATF:DB  0   ;FATバッファの更新フラグ
001E03 E4A3                         DS  1
001E04 E4A4 00                  _WTDBF: DB  0   ;データバッファの更新フラグ
001E05 E4A5 FF                  _DBDRV: DB  0FFH    ;データバッファにあるデータを読み込んだドライブ
001E06 E4A6 0000                _DBSEC: DW  0   ;データバッファにあるデータを読み込んだセクタ番号
001E08 E4A8 0000                _DPB:   DW  0
       E4AA                     _FATDRV:
001E0A E4AA FF                      DB  0FFH    ;FATバッファに読み込んでいるドライブ
001E0B E4AB 00                  _FATIX: DB  0   ;FATバッファに読み込んでいるインデックス
       E4AC                     _FAKEFREE:
001E0C E4AC 0000                    DW  0   ;偽の残量（FATサイズが大きくなると重くなるのでその対策）
                                
001E0E E4AE                         DS  2
                                
       E4B0                     CRTCD:
001E10 E4B0 6F                      DB  06FH
       E4B1                     _WIDTH:
001E11 E4B1 28                      DB  WIDTH
       E4B2                     TVRAMTOP:
001E12 E4B2 5938                    DB  059H,038H
001E14 E4B4 1F02                    DB  01FH,002H
       E4B6                     _LINE2:
001E16 E4B6 19                      DB  019H
       E4B7                     WKE4:
001E17 E4B7 1C                      DB  01CH
       E4B8                     WKE6:
001E18 E4B8 00                      DB  000H
       E4B9                     WK40:
001E19 E4B9 07                      DB  007H
       E4BA                     _PAGE_MINUS:
001E1A E4BA 18FC                    DW  0-WIDTH*LINE
       E4BC                     _WIDTH_MINUS:
001E1C E4BC D8FF                    DW  0-WIDTH
       E4BE                     WK30:
001E1E E4BE 0C                      DB  00CH
       E4BF                     WK31:
       E4BF                     WK1FD0:
001E1F E4BF 20                      DB  020H
                                
001E20 E4C0 0000                CTC0:   DW  INTCTCE
001E22 E4C2 0000                CTC1:   DW  INTCTCE
001E24 E4C4 0000                CTC2:   DW  INTCTCE
001E26 E4C6 0000                CTC3:   DW  INTCTCE
001E28 E4C8 0000                INTVEC: DW  INT
                                
                                ;   LSX-Dodgers 独自BIOS
                                
001E2A E4CA C3B7D0          10  _INKEY: JP  INKEY
001E2D E4CD C3F8CF          10  _PRINT: JP  PRINT
001E30 E4D0 C38FD1          10  _SCRN:  JP  SCRN
001E33 E4D3 C36FD1          10  _POS:   JP  POS
001E36 E4D6 C37AD1          10  _LOC:   JP  LOC
       E4D9                     _CHGDRV:
001E39 E4D9 C3C0E0          10      JP  CHGDRV
       E4DC                     _GETDPB:
001E3C E4DC C38BE1          10      JP  GETDPB
       E4DF                     _FFLUSH:
001E3F E4DF C3A9E1          10      JP  FFLUSH
       E4E2                     _RDFATX:
001E42 E4E2 C399DD          10      JP  RDFATX
001E45 E4E5 C3C1DE          10  _RDFAT: JP  RDFAT
001E48 E4E8 C3C4E1          10  _WTTRK: JP  WTTRK
001E4B E4EB C3C6E1          10  _FDRD:  JP  FDRD
001E4E E4EE C3C4E1          10  _FDWT:  JP  FDWT
       E4F1                     _BPB2DPB:
001E51 E4F1 C34EDF          10      JP  BPB2DPB
       E4F4                     _BREAK:
001E54 E4F4 C383CA          10      JP  END_BATCH
       E4F7                     _GNCL:
001E57 E4F7 C33BDE          10      JP  GNCL        ; self-modifying code
       E4F8                     GNCPAT  EQU $-2
       E4FA                     _SNCL:
001E5A E4FA C35EDE          10      JP  SNCL        ; self-modifying code
       E4FB                     SNCPAT  EQU $-2
001E5D E4FD C33DC9          10  _COMANL:JP  COMANL
                                
       E500                     _WE:
[EOF:LDWORK.ASM:SHIFT_JIS]
                                    INCLUDE "LDCALL.ASM"
                                
                                ;   LSX-Dodgers システムコール(BDOS)
                                ;
                                ;   LSX-Dodgers SYSTEM CALL
                                ;   STABLE:アドレス下位1バイトが0になるように
                                
       E500                     STABLE:
                                ;0
001E60 E500 03E4FBCF2CD0EDD5        DW  _SYS00,_SYS01,_SYS02,_SYS03
001E68 E508 62CD62CD31D009E4        DW  _SYS04,_SYS05,_SYS06,_SYS07
001E70 E510 39D064CDBDD051D1        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001E78 E518 79CD7ECD8DCD9ECD        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001E80 E520 F2CD39CE82CEB8CE        DW  _SYS10,_SYS11,_SYS12,_SYS13
001E88 E528 C0CED6CEEBCEE3CE        DW  _SYS14,_SYS15,_SYS16,_SYS17
001E90 E530 32CF37CF3CCF42CF        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001E98 E538 62CD68CF62CD6CCF        DW  _SYS1C,_SYS1D,_SYS1E,_SYS1F
                                ;2
001EA0 E540 62CD22CF2ACF73CF        DW  _SYS20,_SYS21,_SYS22,_SYS23
001EA8 E548 99CF62CD6DDA45DB        DW  _SYS24,_ERROR,_SYS26,_SYS27
001EB0 E550 2ACFA2CF63D1EDD5        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001EB8 E558 69D1EDD562CDC3CF        DW  _SYS2C,_SYS2D,_SYS2E,_SYS2F
                                ;3
001EC0 E560 BDCF62CD62CD62CD        DW  _SYS30,_ERROR,_ERROR,_ERROR
001EC8 E568 62CD62CD62CD62CD        DW  _ERROR,_ERROR,_ERROR,_ERROR
001ED0 E570 62CDEDD5EDD5E4CF        DW  _ERROR,_SYS39,_SYS3A,_SYS5A
                                ;DOS2
001ED8 E578 45CD                    DW  _DOS2
                                
001EDA E57A                         DS  2
001EDC E57C 00E7                _FATBF: DW  FATBF
001EDE E57E 00EF                _DTBUF: DW  DTBUF
                                
                                ;   コントロールコードテーブル
                                ;   CTRLTB:アドレス下位1バイトが080Hになるように
                                
       E580                     CTRLTB:
001EE0 E580 000000009FD10000        DW  CTRL00,CTRL00,CTRL02,CTRL03 ;  A,B,C
001EE8 E588 0000000000000000        DW  CTRL04,CTRL05,CTRL06,CTRL07 ;D,E,F,G
001EF0 E590 0000000000000000        DW  CTRL08,CTRL09,CTRL0A,CTRL0B ;H,I,J,K
001EF8 E598 0000000000000000        DW  CTRL0C,CTRL0D,CTRL0E,CTRL00 ;L,M,N,O
001F00 E5A0 0000000000000000        DW  CTRL00,CTRL00,CTRL12,CTRL00 ;P,Q,R,S
001F08 E5A8 0000000000000000        DW  CTRL00,CTRL00,CTRL00,CTRL00 ;T,U,V,W
001F10 E5B0 0000000000000000        DW  CTRL00,CTRL00,CTRL0C,CTRL1B ;X,Y,Z,ESC
001F18 E5B8 0000000000000000        DW  CTRL1C,CTRL1D,CTRL1E,CTRL1F ;→,←,↑,↓
                                
001F20 E5C0 0200                M2D:    DW  2
001F22 E5C2 FD02                    DB  0FDH,2
001F24 E5C4 6401                    DW  356
001F26 E5C6 FF0728090182            DB  0FFH,7,40,9,1,082H
001F2C E5CC 0500A7000800            DW  5,0A7H,8
                                
001F32 E5D2 0200                M2HD:   DW  2
001F34 E5D4 FE01                    DB  0FEH,1
001F36 E5D6 C704                    DW  1223
001F38 E5D8 FE064D080184            DB  0FEH,6,77,8,1,084H
001F3E E5DE 0500A7000900            DW  5,0A7H,9
                                
001F44 E5E4 1617                SDDATA: DB  22,23       ;(FCB)ファイルを最後に変更した時刻
001F46 E5E6 1415                    DB  20,21       ;(FCB)ファイルを最後に変更した日付
001F48 E5E8 1A1B                    DB  26,27       ;(FCB)ファイルの先頭クラスタ
001F4A E5EA 10111213                DB  16,17,18,19 ;(FCB)ファイルのサイズ(バイト単位)
       E5EE                     SDDATAE:
                                
001F4E E5EE                         DS  2
       E5F0                     _FCB_BAT:
001F50 E5F0 41E3                    DW  FCB_BAT
       E5F2                     _PATH:
001F52 E5F2 E0E2                    DW  PATHD
                                
001F54 E5F4                     SCDIR:  DS  2       ;+14 +15
001F56 E5F6                     SFBPS:  DS  2       ;FBPS
001F58 E5F8                     SFNDF:  DS  2       ;FILEN DIRF
                                
001F5A E5FA 0000                _FATPS: DW  0
001F5C E5FC 0000                _DIRPS: DW  0
001F5E E5FE 0000                _CLPS:  DW  0
                                
       E600                     _PE:
[EOF:LDCALL.ASM:SHIFT_JIS]
                                    INCLUDE "MSXDPB.ASM"
                                
                                ;   LSX-Dodgers DPB
                                ;   MSX
                                
       E600                     _DEVICE:
                                
                                ;   A:
                                
001F60 E600 0300                    DW  3   ;DPB_FATLN
001F62 E602 EBE4                    DW  _FDRD   ;DPB_DRD
001F64 E604 EEE4                    DW  _FDWT   ;DPB_DWT
001F66 E606 F9                      DB  0F9H    ;DPB_FATID
001F67 E607 03                      DB  3   ;DPB_SECPCL
001F68 E608 CB02                    DW  715 ;DPB_MAXCL
001F6A E60A 00                      DB  0   ;DPB_FDMODE
001F6B E60B 07                      DB  7   ;DPB_DIRSCNT
001F6C E60C 01                      DB  1   ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001F6D E60D 00                      DB  0   ;DPB_MAXSEC
001F6E E60E 01                      DB  1   ;DPB_FATPS
001F6F E60F 82                      DB  082H    ;DPB_BPS
001F70 E610 0700                    DW  7   ;DPB_DIRPS
001F72 E612 2C                      DB  02CH    ;DPB_DEVICE
001F73 E613 00                      DB  0   ;DPB_UNITNO
001F74 E614 0A00                    DW  10  ;DPB_ADDCL
001F76 E616 0000                    DW  0   ;DPB_16
001F78 E618 0000                    DW  0   ;DPB_18
001F7A E61A 0000                    DW  0   ;DPB_SDIR
001F7C E61C 524F4D30                DB  "ROM0"  ;DPB_NAME
                                
                                ;   B:
                                
001F80 E620 0300                    DW  3   ;DPB_FATLN
001F82 E622 EBE4                    DW  _FDRD   ;DPB_DRD
001F84 E624 EEE4                    DW  _FDWT   ;DPB_DWT
001F86 E626 F9                      DB  0F9H    ;DPB_FATID
001F87 E627 03                      DB  3   ;DPB_SECPCL
001F88 E628 CB02                    DW  715 ;DPB_MAXCL
001F8A E62A 00                      DB  0   ;DPB_FDMODE
001F8B E62B 07                      DB  7   ;DPB_DIRSCNT
001F8C E62C 2E                      DB  46  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001F8D E62D 00                      DB  0   ;DPB_MAXSEC
001F8E E62E 01                      DB  1   ;DPB_FATPS
001F8F E62F 82                      DB  082H    ;DPB_BPS
001F90 E630 0700                    DW  7   ;DPB_DIRPS
001F92 E632 2C                      DB  02CH    ;DPB_DEVICE
001F93 E633 01                      DB  1   ;DPB_UNITNO
001F94 E634 0A00                    DW  10  ;DPB_ADDCL
001F96 E636 0000                    DW  0   ;DPB_16
001F98 E638 0000                    DW  0   ;DPB_18
001F9A E63A 0000                    DW  0   ;DPB_SDIR
001F9C E63C 524F4D31                DB  "ROM1"  ;DPB_NAME
                                
                                ;   C:
                                
001FA0 E640                         DS  32
                                
                                ;   D:
                                
001FC0 E660                         DS  32
                                
                                ;   E:
                                
001FE0 E680 0300                    DW  3   ;DPB_FATLN
001FE2 E682 86E2                    DW  PDRD    ;DPB_DRD
001FE4 E684 5BE2                    DW  PDWT    ;DPB_DWT
001FE6 E686 F9                      DB  0F9H    ;DPB_FATID
001FE7 E687 03                      DB  3   ;DPB_SECPCL
001FE8 E688 CB02                    DW  715 ;DPB_MAXCL
001FEA E68A FF                      DB  0FFH    ;DPB_FDMODE
001FEB E68B 07                      DB  7   ;DPB_DIRSCNT
001FEC E68C 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
001FED E68D 09                      DB  9   ;DPB_MAXSEC
001FEE E68E 01                      DB  1   ;DPB_FATPS
001FEF E68F 82                      DB  082H    ;DPB_BPS
001FF0 E690 0700                    DW  7   ;DPB_DIRPS
001FF2 E692 2C                      DB  02CH    ;DPB_DEVICE
001FF3 E693 00                      DB  0   ;DPB_UNITNO
001FF4 E694 0A00                    DW  10  ;DPB_ADDCL
001FF6 E696 0000                    DW  0   ;DPB_16
001FF8 E698 0000                    DW  0   ;DPB_18
001FFA E69A 0000                    DW  0   ;DPB_SDIR
001FFC E69C 44534B30                DB  "DSK0"  ;DPB_NAME
                                
                                ;   F:
                                
002000 E6A0 0300                    DW  3   ;DPB_FATLN
002002 E6A2 86E2                    DW  PDRD    ;DPB_DRD
002004 E6A4 5BE2                    DW  PDWT    ;DPB_DWT
002006 E6A6 F9                      DB  0F9H    ;DPB_FATID
002007 E6A7 03                      DB  3   ;DPB_SECPCL
002008 E6A8 CB02                    DW  715 ;DPB_MAXCL
00200A E6AA FF                      DB  0FFH    ;DPB_FDMODE
00200B E6AB 07                      DB  7   ;DPB_DIRSCNT
00200C E6AC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00200D E6AD 09                      DB  9   ;DPB_MAXSEC
00200E E6AE 01                      DB  1   ;DPB_FATPS
00200F E6AF 82                      DB  082H    ;DPB_BPS
002010 E6B0 0700                    DW  7   ;DPB_DIRPS
002012 E6B2 2C                      DB  02CH    ;DPB_DEVICE
002013 E6B3 01                      DB  1   ;DPB_UNITNO
002014 E6B4 0A00                    DW  10  ;DPB_ADDCL
002016 E6B6 0000                    DW  0   ;DPB_16
002018 E6B8 0000                    DW  0   ;DPB_18
00201A E6BA 0000                    DW  0   ;DPB_SDIR
00201C E6BC 44534B31                DB  "DSK1"  ;DPB_NAME
                                
                                ;   G:
                                
002020 E6C0 0300                    DW  3   ;DPB_FATLN
002022 E6C2 86E2                    DW  PDRD    ;DPB_DRD
002024 E6C4 5BE2                    DW  PDWT    ;DPB_DWT
002026 E6C6 F9                      DB  0F9H    ;DPB_FATID
002027 E6C7 03                      DB  3   ;DPB_SECPCL
002028 E6C8 CB02                    DW  715 ;DPB_MAXCL
00202A E6CA FF                      DB  0FFH    ;DPB_FDMODE
00202B E6CB 07                      DB  7   ;DPB_DIRSCNT
00202C E6CC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00202D E6CD 09                      DB  9   ;DPB_MAXSEC
00202E E6CE 01                      DB  1   ;DPB_FATPS
00202F E6CF 82                      DB  082H    ;DPB_BPS
002030 E6D0 0700                    DW  7   ;DPB_DIRPS
002032 E6D2 2C                      DB  02CH    ;DPB_DEVICE
002033 E6D3 02                      DB  2   ;DPB_UNITNO
002034 E6D4 0A00                    DW  10  ;DPB_ADDCL
002036 E6D6 0000                    DW  0   ;DPB_16
002038 E6D8 0000                    DW  0   ;DPB_18
00203A E6DA 0000                    DW  0   ;DPB_SDIR
00203C E6DC 44534B32                DB  "DSK2"  ;DPB_NAME
                                
                                ;   H:
002040 E6E0 0300                    DW  3   ;DPB_FATLN
002042 E6E2 86E2                    DW  PDRD    ;DPB_DRD
002044 E6E4 5BE2                    DW  PDWT    ;DPB_DWT
002046 E6E6 F9                      DB  0F9H    ;DPB_FATID
002047 E6E7 03                      DB  3   ;DPB_SECPCL
002048 E6E8 CB02                    DW  715 ;DPB_MAXCL
00204A E6EA FF                      DB  0FFH    ;DPB_FDMODE
00204B E6EB 07                      DB  7   ;DPB_DIRSCNT
00204C E6EC 50                      DB  80  ;DPB_MAXCYL ROMディスクではBPPが格納されている先頭BANK
00204D E6ED 09                      DB  9   ;DPB_MAXSEC
00204E E6EE 01                      DB  1   ;DPB_FATPS
00204F E6EF 82                      DB  082H    ;DPB_BPS
002050 E6F0 0700                    DW  7   ;DPB_DIRPS
002052 E6F2 2C                      DB  02CH    ;DPB_DEVICE
002053 E6F3 07                      DB  7   ;DPB_UNITNO
002054 E6F4 0A00                    DW  10  ;DPB_ADDCL
002056 E6F6 0000                    DW  0   ;DPB_16
002058 E6F8 0000                    DW  0   ;DPB_18
00205A E6FA 0000                    DW  0   ;DPB_SDIR
00205C E6FC 44534B37                DB  "DSK7"  ;DPB_NAME
       E700                     MSX_E:
[EOF:MSXDPB.ASM:UTF_8]
                                
002060 E700                         DS  03FFFH - $$
003FFF 069F 00                      DB  0
       06A0                     LAST_ADR:
                                
                                    END
[EOF:MSX.ASM:UTF_8]
