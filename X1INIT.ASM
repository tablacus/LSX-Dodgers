
;	LSX-Dodgers INIT
;	X1/turbo/Z

	DW	MACW
	DW	VER

START:
	DI
	IM	2
	LD	SP,EXTSP
	CALL	INIT		;NZならAUTOEXECを実行
	LD	HL,0
	PUSH	HL
	RET	Z
	LD	DE,AUTOD
	JP	_COMANL

INIT:
	LD	A,01EH
	OUT	(0),A

	LD	BC,0
	LD	(_CTC),BC
	LD	BC,00A04H
	CALL	CHKCTC
	LD	BC,00704H
	CALL	CHKCTC
	LD	BC,01FA8H
	CALL	CHKCTC
	LD	BC,01FA0H
	CALL	CHKCTC
;
INISIO:
	LD	BC,01F91H	;INIT SIO
	LD	D,1
	OUT	(C),D

	DB	0EDH,071H	;OUT (C),0	Z80未定義命令
	LD	C,093H
	OUT	(C),D
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令
	LD	C,099H		;INIT SIO
	LD	D,1
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令
	LD	C,09BH
	OUT	(C),D
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	LD	C,080H		;INIT DMA
	LD	HL,0C306H
INIDMA:
	OUT	(C),H
	DEC	L
	JR	NZ,INIDMA

	LD	A,0E4H
	CALL	COMOUT
	XOR	A
	CALL	OT49SB

	LD	A,INTVEC/256
	LD	I,A

	LD	BC,(_CTC)
	DEC	BC
	DEC	BC

	DB	0EDH,071H	;OUT (C),0	Z80未定義命令
	LD	A,CTC0
	OUT	(C),A

	INC	C
	LD	A,047H
	OUT	(C),A
	LD	A,13		;Baudrate 9600-13
	OUT	(C),A

	LD	A,C
	SUB	010H
	LD	C,A
;	LD	(SIOAD+1),BC
;	LD	(SIOAD0+1),BC
;	LD	(SIOAD1+1),BC

	LD	HL,SIODATA
SINIT1:
	LD	A,(HL)
	INC	HL
	CP	0FFH
	JR	Z,SINIT2
	OUT	(C),A
	JR	SINIT1
SINIT2:
	LD	A,0E4H
	CALL	COMOUT
	LD	A,INTVEC
	CALL	OT49SB
;
	LD	BC,01FC4H
	LD	A,00CH
	OUT	(C),A

	LD	C,0C0H
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	INC	C
	LD	A,40
	OUT	(C),A

	INC	C
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	INC	C
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	LD	C,0C5H
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

TEXT:
	LD	C,0B0H
	LD	A,080H
	OUT	(C),A
	LD	D,7
	LD	C,0B9H
	LD	HL,TEXTDT
TEXT1:
	INC	B
	OUTI
	INC	C
	DEC	D
	JR	NZ,TEXT1
	LD	BC,01FB0H
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	LD	C,0C4H
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令

	LD	BC,01A01H
	IN	A,(C)
	AND	8
	JR	Z,PRN
	LD	C,003H
	LD	A,00FH
	OUT	(C),A
	LD	BC,00A04H
PRN:
	LD	HL,0
	LD	B,05CH
	LD	A,0FFH		;RST 38H
	CALL	FILL_MEMORY
	LD	B,0A4H
	XOR	A
	CALL	FILL_MEMORY

	LD	A,0C3H		;JP
	LD	HL,CPM_WBOOT
	LD	(00000H),A
	LD	(00001H),HL	;IPL

	LD	HL,MACW	;3 bit7  DPB Compatible LA(1)
	LD	(00003H),HL	;  bit6-0 Machine X1(0)
;				;4 LSX-Dodgers(01DH)
	LD	HL,BDOS
	LD	(00005H),A
	LD	(00006H),HL	;BDOS

	LD	HL,BIOS
	LD	(00019H),HL	;BIOS-ROM

	LD	HL,TRAP38	;TRAP38
	LD	(00038H),A
	LD	(00039H),HL	;RST 038H

	LD	A,CPM_BOOT/256
	LD	(0000BH),A

	LD	A,0E9H		;JP (HL)
	LD	(0000FH),A

	LD	A,(_FATBF+1)
	LD	(00013H),A

	LD	A,(_DTBUF+1)
	LD	(00017H),A

	LD	A,KEYBF/256
	LD	(0001BH),A

	LD	A,KBUF/256
	LD	(0001FH),A

	LD	HL,VER
	LD	(0005AH),HL

	LD	A,0E6H
	CALL	COMOUT
	CALL	IN49SB
	PUSH	AF
	CALL	IN49SB
	POP	AF
	PUSH	AF
	AND	012H
	JR	NZ,KEYR
	LD	A,1
	LD	(KEYREP+1),A
KEYR:
	POP	AF
	AND	3
	JR	Z,NON

	LD	BC,03FD0H
	OUT	(C),C
	LD	A,037H
	OUT	(0D0H),A
	IN	A,(C)
	CP	C
	JR	Z,TURBO
NON:
	LD	HL,AT_SCR1
	LD	DE,SCR1
	LD	BC,SCRNX-SCR1	;転送先のサイズ確認用
	LD	BC,AT_SCRE-AT_SCR1
	LDIR

	LD	HL,AT_WTTRK
	LD	DE,WTTRK
	LD	BC,DMAE-WTTRK	;転送先のサイズ確認用
	LD	BC,AT_CPUE-AT_WTTRK
	LDIR

	LD	HL,AT_EDWT
	LD	DE,EDWT
	LD	BC,EMME-EDWT	;転送先のサイズ確認用
	LD	BC,AT_EMME-AT_EDWT
	LDIR

	LD	HL,AT_DRD+AT_R
	LD	(_FDRD+1),HL
	LD	HL,AT_DWT+AT_R
	LD	(_FDWT+1),HL
	LD	HL,AT_EDRD+AT_RE
	LD	(EMMRD),HL
	LD	HL,AT_EDWT+AT_RE
	LD	(EMMWR),HL

	LD	A,027H			;ノンターボはMFM切り替えを行わない
	LD	(DEVICE+012H),A		;Aドライブ
	LD	(DEVICE+012H+32),A	;Bドライブ
	LD	(DEVICE+012H+32*2),A	;Cドライブ
	LD	(DEVICE+012H+32*3),A	;Dドライブ

	LD	HL,0
	LD	(X1PAT),HL

	LD	A,0AFH		;XOR	A
	LD	(X1KPAT),A

	LD	HL,SCRNX
	LD	(_SCRN+1),HL

	JP	NOBANK

TURBO:
	DI			;Check BIOS
	LD	B,01DH
	OUT	(C),A		;BIOS ON
	LD	A,(02F51H)
	INC	B		;B=01EH
	OUT	(C),A		;BIOS OFF
	EI
	CP	0C9H
	JR	Z,BIOSOK
	LD	A,0AFH		;XOR	A
	LD	(X1KPAT),A
	LD	HL,SCRNX
	LD	(_SCRN+1),HL
	JR	NOBIOS
BIOSOK:
	LD	A,0C3H		;JP
	LD	(00018H),A
NOBIOS:
	LD	A,01FH		;スタートポート
	IN	A,(0F0H)
	RRCA
	JR	C,CRT1
	LD	HL,_C8025H
	LD	DE,CRTCD
	LD	BC,16
	LDIR
CRT1:
	LD	A,01FH		;スタートポート
	IN	A,(0F0H)
	BIT	2,A
	JR	Z,BANK

	XOR	A
TZ1:				;前面スイッチが2HDの場合はMFMモードを2HDにしておく
	PUSH	AF
	CALL	_GETDPB
	LD	A,(IX+012H)	;DPB_12_DEVICE
	AND	08FH
	CP	087H		;フロッピーでMEM切り替えがON
	JR	NZ,TZ2
	RES	0,(IX+0AH)	;(DPB_0A_FDMODE)
TZ2:
	POP	AF
	INC	A
	CP	8
	JR	C,TZ1

BANK:
	LD	BC,00B00H
	LD	HL,07F00H
	DI
BANK1:
	OUT	(C),L
	LD	E,(HL)
	LD	A,E
	ADD	A,0A5H
	LD	(HL),A
	CP	(HL)
	LD	(HL),E
	JR	NZ,BANK2
	INC	L
	BIT	4,L
	JR	Z,BANK1
BANK2:
	LD	A,010H
	OUT	(C),A
	LD	A,L
	OR	A
	JR	Z,NOBANK
	LD	H,0
	ADD	HL,HL	;*2
	ADD	HL,HL	;*4
	ADD	HL,HL	;*8
	ADD	HL,HL	;*16
	ADD	HL,HL	;*32
	DEC	HL	;-1
	DEC	HL	;-2
	DEC	HL	;-3
	LD	(BANKCL),HL
	CALL	CALC_FATLN
	LD	(BANKFL),A
NOBANK:
EMM:
	LD	IX,EMMFL
	CALL	EADR0
	IN	A,(C)
	PUSH	AF

	LD	DE,0
ECHECK1:
	INC	DE
	CALL	EADR2
	IN	H,(C)
	CALL	EADR2
	LD	A,H
	ADD	A,0E5H
	OUT	(C),A
	INC	A
	CALL	EADR0
	OUT	(C),A
	DEC	A
	CALL	EADR2
	IN	L,(C)
	CALL	EADR2
	OUT	(C),H
	CP	L
	JR	NZ,ECHECK2
	BIT	3,D
	JR	Z,ECHECK1
ECHECK2:
	CALL	EADR0
	POP	AF
	OUT	(C),A

	LD	HL,0-9
	ADD	HL,DE
	JR	NC,NOEMM
	LD	(EMMCL),HL
	CALL	CALC_FATLN
	LD	(EMMFL),A
NOEMM:
KEYREP:	LD	A,000H
	OR	A
	JR	Z,KEYR1
	LD	BC,0
	LD	(_CTC),BC
KEYR1:
	CALL	SETCRTC
	LD	BC,0-80*25
	LD	HL,(CRTCD+10)
	LD	(CRTCD+10),BC
	LD	E,00CH
	CALL	_PRINT
	LD	(CRTCD+10),HL

	LD	HL,INIMES
	CALL	MSX

	LD	A,(0FF87H)
	CP	8
	JR	NC,INIT0
	LD	E,A
	ADD	A,'A'
	LD	(AUTODV),A
	LD	C,00EH
	CALL	SYSTEM
	INC	E
	LD	HL,_SEEKSP	;Disk error Ignore
	SET	7,(HL)
	LD	C,01BH
	CALL	SYSTEM

	LD	HL,_SEEKSP
	RES	7,(HL)

	INC	A
	JR	NZ,INIT1
INIT0:
	LD	E,0
	LD	C,00EH
	CALL	SYSTEM
	XOR	A
INIT1:
	DI
	EX	AF,AF'
	LD	L,0-2		;CALLのスタック分減らす
	ADD	HL,SP
	LD	DE,0FF00H
	LD	B,L
	CALL	ZERO_MEMORY_DE
	LD	HL,EXTSP
	LD	B,TRAP38-EXTBIO
	LD	A,0FFH		;RST 38H
	CALL	FILL_MEMORY
	LD	HL,AT_TRAP38
	LD	DE,TRAP38
	LD	BC,AT_TRAPE-AT_TRAP38
	LDIR
	EX	AF,AF'
	OR	A
	RET	Z

	LD	A,0E6H
	CALL	COMOUT
	CALL	IN49SB
	CALL	IN49SB
	CP	01BH
	RET

EADR2:
	PUSH	DE
	EX	DE,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	C,(IX+00DH)	;DPB_0D_MAXSEC
	LD	B,(IX+00CH)	;DPB_0C_MAXCYL
	ADD	HL,BC
	LD	C,(IX+013H)	;DPB_13_UNITNO
	LD	B,00DH
	OUT	(C),C
	INC	C
	OUT	(C),L
	INC	C
	OUT	(C),H
	INC	C
	EX	DE,HL
	POP	DE
	RET

EADR0:
	PUSH	DE
	LD	DE,0
	CALL	EADR2
	POP	DE
	RET

CHKCTC:
	PUSH	BC
	LD	DE,04703H
INICTC1:
	INC	C
	OUT	(C),D
	DB	0EDH,071H	;OUT (C),0	Z80未定義命令
	DEC	E
	JR	NZ,INICTC1
	POP	BC

	LD	DE,007FAH
	OUT	(C),D
	OUT	(C),E
	IN	A,(C)
	CP	E
	RET	NZ
	OUT	(C),D
	OUT	(C),D
	IN	A,(C)
	CP	D
	RET	NZ
	INC	BC
	INC	BC
	LD	(_CTC),BC
	RET

SETCRTC:
	LD	HL,CRTCD
	XOR	A
SETCRT1:
	LD	BC,01800H
	OUT	(C),A
	INC	C
	INC	B
	OUTI
	INC	A
	CP	12
	JR	NZ,SETCRT1
	INC	HL
	INC	HL
	LD	BC,01A03H+00100H
	OUTI
	LD	BC,01FD0H+00100H
	OUTI
	RET

CALC_FATLN:	;FAT12のクラスタ数から必要なFATサイズを求める(セクタサイズ512)
	LD	E,L
	LD	D,H
	ADD	HL,HL	;*2
	ADD	HL,DE	;*3
	SRL	H	;/2
	RR	L	;1クラスタ辺り1.5バイト必要
	LD	DE,511	;切り上げる
	ADD	HL,DE
	LD	A,H
	SRL	A
	RET

AUTOD:	DB	"AUTOEXEC "
AUTODV:	DB	"A:",0

INIMES:	DB	"LSX-Dodgers for X1/turbo version "
	DB	030H + VER_1, '.'
	DB	030H + VER_2 ,030H + VER_3
	DB	' Gaku',0DH,0AH
	DB	0

_C8025H:
	DB	06BH,050H,059H,088H,01BH,001H,019H,01AH
	DB	000H,00FH
	DW	0-80*LINE,0-80
	DB	00CH,023H

TEXTDT:	DB	003H,00CH,00FH,030H,033H,03CH,03FH

SIODATA:
	DB	018H
	DB	1,0
	DB	2,0
	DB	3,0C1H
	DB	4,044H
	DB	5,0E8H
	DB	0FFH

;	ノンターボ用パッチ

AT_SCR1:
	EXX
	PUSH	BC
	LD	BC,(CRTCD+1)
	LD	B,020H
	EXX
	PUSH	BC
	LD	BC,02000H

	LD	H,A
	OR	A
AT_SCRUP1:
	JR	Z,AT_SCRCL
	PUSH	BC
	SET	4,B
	EXX
	PUSH	BC
	SET	4,B
	EXX
	CALL	AT_UPSUB+AT_RS
	EXX
	POP	BC
	EXX
	POP	BC
	CALL	AT_UPSUB+AT_RS
	DEC	H
	JR	AT_SCRUP1

AT_SCRCL:
	LD	HL,(CRTCD+1)
	CALL	LINECL
	POP	BC
	EXX
	POP	BC
	EXX
	RET

AT_UPSUB:
	LD	A,(CRTCD+1)
	LD	L,A
AT_UPSUB1:
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	DEC	L
	JR	NZ,AT_UPSUB1
	RET

;	FLOPPY DISK DRIVER(CPU)

DISKC:
	DEC	DE
	BIT	3,A
	CALL	NZ,RNF
DISKD:
	PUSH	HL
	LD	HL,RETRY
	DEC	(HL)
	POP	HL
	JR	NZ,AT_ERR		;Retry
	OR	A
	JR	Z,AT_ERR		;Error

AT_DELP:
	CALL	RNF
	CALL	FDMOFF
	LD	A,(_SEEKSP)
	ADD	A,A
	JR	C,AT_ERRZ
AT_DELP1:
	PUSH	DE
	LD	HL,DEMES
	CALL	MSX
	CALL	KEYBC
AT_DELP2:
	CALL	_INKEY
	JR	Z,AT_DELP2

	POP	DE
	CALL	CAP
	CP	'R'		;Retry
	JR	NZ,AT_DELP3
DHLPAT:	LD	HL,0
	LD	A,2
	LD	(RETRY),A
	OR	A
	RET
AT_DELP3:
	CP	'I'		;Ignore
	JR	Z,AT_IGNORE
	CP	'A'		;Abort
	JR	NZ,AT_DELP1
	RST	0
AT_IGNORE:
	LD	A,0FFH
AT_ERRZ:
	CP	A
AT_ERR:
	LD	A,0FFH
	RET

AT_SCRE:

AT_WTTRK:
	LD	B,1
	LD	A,0F4H
	JR	AT_WTTRK1
AT_DWT:
	LD	A,0A0H
AT_WTTRK1:
	LD	(FDCPAT+1),A
DWTBL:
	LD	A,B
	LD	(AT_WTB+1+AT_R),A
	LD	A,2		;Retry count
	LD	(RETRY),A

DWT0:
	PUSH	DE
	PUSH	HL
	LD	(DHLPAT+1+AT_RS),HL
	CALL	SEEK		;Write disk
	POP	HL
	JR	C,ERRDW
	DI
	LD	A,(FDCPAT+1)
	CALL	SECSET
	LD	C,0FBH

DWT1:
	LD	D,(HL)
DWT2:
	LD	A,B
	IN	A,(0F8H)
	RRCA
	JR	NC,DWT4
	RRCA
	JR	NC,DWT2
DWT3:
	OUT	(C),D
	INC	HL
	JR	DWT1

DWT4:
	DEC	A
	JR	Z,DWT3
	INC	A
	EI
	POP	DE
	INC	DE
	CALL	FDMOFF
	JR	Z,DISKOK_WT
	CALL	DISKC+AT_RS
	JR	NZ,DWT0
	OR	A
	JR	NZ,ERRW

DISKOK_WT:
AT_WTB:	LD	B,1
	DJNZ	DWTBL
	RET

ERRW:
	LD	A,0FFH
ERRZ:
	CP	A
	SCF
	JP	FDMOFF

ERRDW:
	POP	DE
	CALL	AT_DELP+AT_RS
	JR	NZ,DWT0
	OR	A
	JR	NZ,ERRW
	RET

AT_DRD:
	LD	A,080H
	LD	(FDCPAT+1),A
DRDBL:
	LD	A,B
	LD	(AT_RDB+1+AT_R),A
	LD	A,2		;Retry count
	LD	(RETRY),A
DRD0:
	PUSH	DE
	PUSH	HL
	LD	(DHLPAT+1+AT_RS),HL
	CALL	SEEK		;Read disk
	POP	HL
	JR	C,ERRDR
	DI
	LD	A,(FDCPAT+1)
	CALL	SECSET
	LD	C,0FBH
DRD1:
	LD	A,B
	IN	A,(0F8H)
	RRCA
	JR	NC,DRD3
	RRCA
	JR	NC,DRD1
	INI
	INC	B
	JR	DRD1

DRD3:
	OR	A
	EI
	POP	DE
	INC	DE
	CALL	FDMOFF
	JR	Z,DISKOK_RD
	CALL	DISKC+AT_RS
	JR	NZ,DRD0
	OR	A
	JR	NZ,ERRW

DISKOK_RD:
AT_RDB:	LD	B,1
	DJNZ	DRDBL
	RET

ERRDR:
	POP	DE
	CALL	AT_DELP+AT_RS
	JR	NZ,DRD0
	OR	A
	JR	NZ,ERRW
	RET

AT_CPUE:


;	EMM DRIVER(CPU)


AT_EDWT:
	CALL	AT_EADR+AT_RE
AT_EDWT0:
	PUSH	AF
	XOR	A
AT_EDWT1:
	INC	B
	OUTI
	INC	B
	OUTI
	DEC	A
	JR	NZ,AT_EDWT1
	INC	DE
	POP	AF
	DEC	A
	JR	NZ,AT_EDWT0
	RET

AT_EDRD:
	CALL	AT_EADR+AT_RE
AT_EDRD0:
	PUSH	AF
	XOR	A
AT_EDRD1:
	INI
	INC	B
	INI
	INC	B
	DEC	A
	JR	NZ,AT_EDRD1
	INC	DE
	POP	AF
	DEC	A
	JR	NZ,AT_EDRD0
	RET

AT_EADR:
	PUSH	BC
	PUSH	DE
	EX	DE,HL
	ADD	HL,HL
	LD	C,(IX+00DH)	;DPB_0D_MAXSEC
	LD	B,(IX+00CH)	;DPB_0C_MAXCYL
	ADD	HL,BC
	LD	C,(IX+013H)	;DPB_13_UNITNO
	LD	B,00DH
	OUT	(C),C
	INC	C
	OUT	(C),L
	INC	C
	OUT	(C),H
	INC	C
	EX	DE,HL
	POP	DE
	POP	AF
	AND	A	;CF=0
	RET
AT_EMME:

AT_TRAP38:
	LD	HL,0
	EX	(SP),HL
	LD	A,'$'
	CALL	MSG_A
	DEC	HL
	LD	A,H
	CALL	PRHX+AT_RT
	LD	A,L
PRHX:
	PUSH	AF
	RLCA
	RLCA
	RLCA
	RLCA
	CALL	PRHX2+AT_RT
	POP	AF
PRHX2:
	AND	00FH
	CP	10
	JR	C,PRHX3
	ADD	A,'A'-'0'-10
PRHX3:
	ADD	A,'0'
	JP	MSG_A
	DS	2
AT_TRAPE:

AT_RT	EQU	TRAP38-AT_TRAP38

INITE:
	DS	BDOS-INITE

	JP	BDOS0
