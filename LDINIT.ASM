
;	LSX-Dodgers INIT

	JP	START
MACHINE:DW	MAC
VERSION:DW	VER

START:
	DI
	IM	2
	LD	SP,STACK
	LD	A,$1E
	OUT	(0),A

	LD	BC,0
	LD	(_CTC),BC
	LD	BC,$0A04
	CALL	CHKCTC
	LD	BC,$0704
	CALL	CHKCTC
	LD	BC,$1FA8
	CALL	CHKCTC
	LD	BC,$1FA0
	CALL	CHKCTC
;
INISIO:
	LD	BC,$1F91	;INIT SIO
	LD	D,1
	OUT	(C),D
	DB	$ED,$71
	LD	C,$93
	OUT	(C),D
	DB	$ED,$71
	LD	C,$99		;INIT SIO
	LD	D,1
	OUT	(C),D
	DB	$ED,$71
	LD	C,$9B
	OUT	(C),D
	DB	$ED,$71

	LD	C,$80		;INIT DMA
	LD	HL,$C306
INIDMA:
	OUT	(C),H
	DEC	L
	JR	NZ,INIDMA

	LD	A,$E4
	CALL	COMOUT
	XOR	A
	CALL	OT49SB

	LD	A,INTVEC/256
	LD	I,A

	LD	BC,(_CTC)
	DEC	BC
	DEC	BC

	DB	$ED,$71
	LD	A,CTC0
	OUT	(C),A

	INC	C
	LD	A,$47
	OUT	(C),A
	LD	A,13		;Baudrate 9600-13
	OUT	(C),A

	LD	A,C
	SUB	$10
	LD	C,A
	LD	(SIOAD+1),BC
	LD	(SIOAD0+1),BC
	LD	(SIOAD1+1),BC

	LD	HL,SIODATA
SINIT1:
	LD	A,(HL)
	INC	HL
	CP	$FF
	JR	Z,SINIT2
	OUT	(C),A
	JR	SINIT1
SINIT2:
	LD	A,$E4
	CALL	COMOUT
	LD	A,INTVEC
	CALL	OT49SB
;
	LD	BC,$1FC4
	LD	A,$0C
	OUT	(C),A

	LD	C,$C0
	DB	$ED,$71

	INC	C
	LD	A,40
	OUT	(C),A

	INC	C
	DB	$ED,$71

	INC	C
	DB	$ED,$71

	LD	C,$C5
	DB	$ED,$71

TEXT:
	LD	C,$B0
	LD	A,$80
	OUT	(C),A
	LD	D,7
	LD	C,$B9
	LD	HL,TEXTDT
TEXT1:
	INC	B
	OUTI
	INC	C
	DEC	D
	JR	NZ,TEXT1
	LD	BC,$1FB0
	DB	$ED,$71

	LD	C,$C4
	DB	$ED,$71

	LD	BC,$1A01
	IN	A,(C)
	AND	8
	JR	Z,PRN
	LD	C,$03
	LD	A,$0F
	OUT	(C),A
	LD	BC,$0A04
PRN:
	LD	DE,1
	LD	H,D
	LD	L,D
	LD	BC,$7F
	LD	(HL),$FF
	LDIR
	LD	BC,$7F
	LD	(HL),0
	LDIR

	LD	A,$C3		;JP
	LD	HL,WBOOT
	LD	($0000),A
	LD	($0001),HL	;IPL

	LD	HL,(MACHINE)	;3 bit7  DPB Original(1)
	LD	($0003),HL	;  bit6-0 Machine X1(0)
;				;4 LSX-Dodgers($1D)
	LD	HL,BDOS
	LD	($0005),A
	LD	($0006),HL	;BDOS

	LD	HL,BIOS
	LD	($0018),A	;BIOS-ROM
	LD	($0019),HL

	LD	HL,0
	LD	($0038),A	;RST$38
	LD	($0039),HL

	LD	A,STABLE/256
	LD	($000B),A

	LD	A,$E9		;JP (HL)
	LD	($000F),A

	LD	A,(_FATBF+1)
	LD	($0013),A

	LD	A,(_DTBUF+1)
	LD	($0017),A

	LD	A,KEYBF/256
	LD	($001B),A

	LD	A,KBUF/256
	LD	($001F),A

	LD	HL,(VERSION)
	LD	($005A),HL

	LD	A,$E6
	CALL	COMOUT
	CALL	IN49SB
	PUSH	AF
	CALL	IN49SB
	POP	AF
	PUSH	AF
	AND	$12
	JR	NZ,KEYR
	LD	A,1
	LD	(KEYREP+1),A
KEYR:
	POP	AF
	AND	3
	JR	Z,NON

	LD	BC,$3FD0
	OUT	(C),C
	LD	A,$37
	OUT	($D0),A
	IN	A,(C)
	CP	C
	JR	Z,TURBO
NON:
	DEC	A		;A=$FF
	LD	($0018),A	;BIOS-ROM

	LD	HL,@SCR1
	LD	DE,SCR1
	LD	BC,@SCRE-@SCR1
	LDIR

	LD	HL,@WTTRK
	LD	DE,WTTRK
	LD	BC,@CPUE-@WTTRK
	LDIR

	LD	HL,@DRD+@R
	LD	(_FDRD+1),HL
	LD	HL,@DWT+@R
	LD	(_FDWT+1),HL
	LD	HL,@EDRDC+@R
	LD	(EMMRD),HL
	LD	HL,@EDWTC+@R
	LD	(EMMWR),HL

	LD	HL,DWTPAT+@R
	LD	(@FDCPAT+1),HL

	LD	HL,0
	LD	(X1PAT),HL

	LD	A,$AF		;XOR	A
	LD	(X1KPAT),A

	LD	HL,SCRNX
	LD	(_SCRN+1),HL

	CALL	SETCRTC
	LD	B,$10		;PALET
	DB	$ED,$71
	INC	B
	DB	$ED,$71
	INC	B
	DB	$ED,$71
	INC	B
	DB	$ED,$71
	JP	NOBANK

TURBO:
	LD	A,$1F
	IN	A,($F0)
	RRCA
	JR	C,CRT1
	LD	HL,C8025H
	LD	DE,CRTCD
	LD	BC,16
	LDIR
CRT1:
	CALL	SETCRTC
	LD	BC,$10AA	;PALET
	OUT	(C),C
	LD	BC,$11CC
	OUT	(C),C
	LD	BC,$12F0
	OUT	(C),C
	INC	B
	DB	$ED,$71

	LD	A,$1F
	IN	A,($F0)
	BIT	2,A
	JR	Z,BANK

	XOR	A
TZ1:
	PUSH	AF
	CALL	_GETDPB
	LD	A,(IX+$12)
	CP	$87
	JR	NZ,TZ2
	PUSH	IX
	POP	DE
	LD	HL,M2HD
	LDI
	LDI
	INC	DE
	INC	DE
	INC	DE
	INC	DE
	LD	BC,12
	LDIR
TZ2:
	POP	AF
	INC	A
	CP	8
	JR	C,TZ1

BANK:
	LD	BC,$0B00
	LD	HL,$7F00
	DI
BANK1:
	OUT	(C),L
	LD	E,(HL)
	LD	A,E
	ADD	A,$A5
	LD	(HL),A
	CP	(HL)
	LD	(HL),E
	JR	NZ,BANK2
	INC	L
	BIT	4,L
	JR	Z,BANK1
BANK2:
	LD	A,$10
	OUT	(C),A
	LD	A,L
	OR	A
	JR	Z,NOBANK
	LD	H,0
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	DEC	HL
	DEC	HL
	DEC	HL
	LD	(BANKCL),HL
	LD	A,1
	LD	(BANKFL),A
NOBANK:
EMM:
	CALL	EADR0
	IN	A,(C)
	PUSH	AF

	LD	DE,0
ECHECK1:
	INC	DE
	CALL	EADR2
	IN	H,(C)
	CALL	EADR2
	LD	A,H
	ADD	A,$E5
	OUT	(C),A
	INC	A
	CALL	EADR0
	OUT	(C),A
	DEC	A
	CALL	EADR2
	IN	L,(C)
	CALL	EADR2
	OUT	(C),H
	CP	L
	JR	NZ,ECHECK2
	BIT	3,D
	JR	Z,ECHECK1
ECHECK2:
	CALL	EADR0
	POP	AF
	OUT	(C),A

	LD	HL,-9
	ADD	HL,DE
	JR	NC,NOEMM
	LD	(EMMCL),HL
	LD	A,3
	LD	(EMMFL),A
NOEMM:
KEYREP:	LD	A,$00
	OR	A
	JR	Z,KEYR1
	LD	BC,0
	LD	(_CTC),BC
KEYR1:
	LD	BC,-80*25
	LD	HL,(CRTCD+10)
	LD	(CRTCD+10),BC
	LD	E,$0C
	CALL	_PRINT
	LD	(CRTCD+10),HL

	LD	HL,INIMES
INIMES1:
	LD	A,(HL)
	INC	HL
	OR	A
	JR	Z,INIMES2
	LD	E,A
	CALL	_PRINT
	JR	INIMES1
INIMES2:
	LD	A,($FF87)
	CP	8
	JR	NC,INIT0
	LD	E,A
	ADD	A,"A"
	LD	(AUTODV),A
	LD	C,$0E
	CALL	SYSTEM
	INC	E
	LD	HL,_SEEKSP	;Disk error Ignore
	SET	7,(HL)
	LD	C,$1B
	CALL	SYSTEM
	LD	HL,_SEEKSP
	RES	7,(HL)

	INC	A
	JR	NZ,INIT1
INIT0:
	LD	E,0
	LD	C,$0E
	CALL	SYSTEM
	XOR	A
INIT1:
	LD	HL,$FF00
	LD	DE,$FF01
	LD	BC,$00FF
	LD	(HL),L
	LDIR

	LD	HL,0
	PUSH	HL
	OR	A
	RET	Z

	LD	A,$E6
	CALL	COMOUT
	CALL	IN49SB
	CALL	IN49SB
	CP	$1B
	RET	Z
	LD	DE,AUTOD
	JP	_COMANL

EADR2:
	PUSH	DE
	EX	DE,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(EMMBL-1)
	LD	C,0
	ADD	HL,BC
	LD	BC,(EMMDV)
	LD	B,$0D
	OUT	(C),C
	INC	C
	OUT	(C),L
	INC	C
	OUT	(C),H
	INC	C
	EX	DE,HL
	POP	DE
	RET

EADR0:
	LD	BC,(EMMDV)
	LD	B,$0D
	DB	$ED,$71
	INC	C
	DB	$ED,$71
	INC	C
	DB	$ED,$71
	INC	C
	RET

CHKCTC:
	PUSH	BC
	LD	DE,$4703
INICTC1:
	INC	C
	OUT	(C),D
	DB	$ED,$71
	DEC	E
	JR	NZ,INICTC1
	POP	BC

	LD	DE,$07FA
	OUT	(C),D
	OUT	(C),E
	IN	A,(C)
	CP	E
	RET	NZ
	OUT	(C),D
	OUT	(C),D
	IN	A,(C)
	CP	D
	RET	NZ
	INC	BC
	INC	BC
	LD	(_CTC),BC
	RET

SETCRTC:
	LD	HL,CRTCD
	XOR	A
SETCRT1:
	LD	BC,$1800
	OUT	(C),A
	INC	C
	INC	B
	OUTI
	INC	A
	CP	12
	JR	NZ,SETCRT1
	INC	HL
	INC	HL
	LD	BC,$1A03+$0100
	OUTI
	LD	BC,$1FD0+$0100
	OUTI
	RET

AUTOD:	DB	"AUTOEXEC "
AUTODV:	DB	"A:",0

INIMES:	DB	"¥LSX-Dodgers for X1/turbo version "
	DB	"0"+VER/256(MOD)16,"."
	DB	"0"+VER/16(MOD)16,"0"+VER(MOD)16
	DB	' Gaku (Lovers/Tablacus)',0DH,0AH
	DB	0

C8025H:	DB	$6B,$50,$59,$88,$1B,$01,$19,$1A
	DB	$00,$0F
	DW	-80*LINE,-80
	DB	$0C,$A3

TEXTDT:	DB	$03,$0C,$0F,$30,$33,$3C,$3F

SIODATA:
	DB	$18
	DB	1,0
	DB	2,0
	DB	3,$C1
	DB	4,$44
	DB	5,$E8
	DB	$FF

@SCR1:
	EXX
	PUSH	BC
	LD	BC,$2000+80
	EXX
	PUSH	BC
	LD	BC,$2000

	LD	H,A
	OR	A
@SCRUP1:
	JR	Z,@SCRCL
	PUSH	BC
	SET	4,B
	EXX
	PUSH	BC
	SET	4,B
	EXX
	CALL	@UPSUB+@R
	EXX
	POP	BC
	EXX
	POP	BC
	CALL	@UPSUB+@R
	DEC	H
	JR	@SCRUP1

@SCRCL:
	LD	HL,$2000+16
	LD	A,(_COLORF)
@SCRCL1:
	SET	4,B
	OUT	(C),H
	RES	4,B
	OUT	(C),A
	INC	BC
	SET	4,B
	OUT	(C),H
	RES	4,B
	OUT	(C),A
	INC	BC
	SET	4,B
	OUT	(C),H
	RES	4,B
	OUT	(C),A
	INC	BC
	SET	4,B
	OUT	(C),H
	RES	4,B
	OUT	(C),A
	INC	BC
	SET	4,B
	OUT	(C),H
	RES	4,B
	OUT	(C),A
	INC	BC
	DEC	L
	JR	NZ,@SCRCL1
	POP	BC
	EXX
	POP	BC
	EXX
	RET

@SCRE:

;	FLOPPY DISK DRIVER(CPU)

@WTTRK:
	LD	A,$F0
	JR	@WTTRK1

@DWT:
	LD	A,$A0
@WTTRK1:
	LD	(DWTPAT+1+@R),A

	LD	A,2		;Retry count
	LD	(RETRY),A

DWT0:
	PUSH	DE
	PUSH	HL
	LD	(DHLPAT+1+@R),HL
	CALL	SEEK		;Write disk
	POP	HL
	JR	C,ERRDW
	DI
DWTPAT:	LD	A,$A0
	CALL	SECSET
	LD	C,$FB

DWT1:
	LD	D,(HL)
DWT2:
	LD	A,B
	IN	A,($F8)
	RRCA
	JR	NC,DWT4
	RRCA
	JR	NC,DWT2
DWT3:
	OUT	(C),D
	INC	HL
	JR	DWT1

DWT4:
	DEC	A
	JR	Z,DWT3
	INC	A
	EI
	POP	DE
	INC	DE
	CALL	FDMOFF
	RET	Z
	CALL	DISKC+@R
	JR	NZ,DWT0
	OR	A
	RET	Z
ERRW:
	LD	A,$FF
ERRZ:
	CP	A
	SCF
	JP	FDMOFF

ERRDW:
	POP	DE
	CALL	@DELP+@R
	JR	NZ,DWT0
	OR	A
	JR	NZ,ERRW
	RET

@DRD:
	LD	A,$80
	LD	(DRDPAT+1+@R),A
	LD	(DWTPAT+1+@R),A

	LD	A,2		;Retry count
	LD	(RETRY),A

DRD0:
	PUSH	DE
	PUSH	HL
	LD	(DHLPAT+1+@R),HL
	CALL	SEEK		;Read disk
	POP	HL
	JR	C,ERRDR
	DI
DRDPAT:
	LD	A,$80
	CALL	SECSET
	LD	C,$FB
DRD1:
	LD	A,B
	IN	A,($F8)
	RRCA
	JR	NC,DRD3
	RRCA
	JR	NC,DRD1
	INI
	INC	B
	JR	DRD1

DRD3:
	OR	A
	EI
	POP	DE
	INC	DE
	CALL	FDMOFF
	RET	Z
	CALL	DISKC+@R
	JR	NZ,DRD0
	OR	A
	JR	NZ,ERRW
	RET

ERRDR:
	POP	DE
	CALL	@DELP+@R
	JR	NZ,DRD0
	OR	A
	JR	NZ,ERRW
	RET

DISKC:
	DEC	DE
	BIT	3,A
	CALL	NZ,RNF
DISKD:
	PUSH	HL
	LD	HL,RETRY
	DEC	(HL)
	POP	HL
	JR	NZ,@ERR		;Retry
	OR	A
	JR	Z,@ERR		;Error

@DELP:
	CALL	RNF
	CALL	FDMOFF
	LD	A,(_SEEKSP)
	ADD	A,A
	JR	C,@ERRZ
@DELP1:
	PUSH	DE
	LD	HL,DEMES
	CALL	MSX
	CALL	KEYBC
@DELP2:
	CALL	INKEY
	JR	Z,@DELP2

	POP	DE
	CALL	CAP
	CP	"R"
	JR	NZ,@DELP3
DHLPAT:	LD	HL,0
	LD	A,2
	LD	(RETRY),A
	OR	A
	RET
@DELP3:
	CP	"I"
	JR	Z,@IGNORE
	CP	"A"
	JR	NZ,@DELP1
	JP	BOOT
@IGNORE:
	LD	A,$FF
@ERRZ:
	CP	A
@ERR:
	LD	A,$FF
	RET


;	EMM DRIVER(CPU)


@EDRDC:
	CALL	@EADR+@R
@EDRDC1:
	INI
	INC	B
	INI
	INC	B
	INI
	INC	B
	INI
	INC	B
	DEC	A
	JR	NZ,@EDRDC1
	XOR	A
	RET

@EDWTC:
	CALL	@EADR+@R
@EDWTC1:
	INC	B
	OUTI
	INC	B
	OUTI
	INC	B
	OUTI
	INC	B
	OUTI
	DEC	A
	JR	NZ,@EDWTC1
	XOR	A
	RET

@EADR:
	PUSH	DE
	EX	DE,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	BC,(_MAXCYL-1)
	LD	C,0
	ADD	HL,BC
	LD	B,$0D
	OUT	(C),C
	INC	C
	OUT	(C),L
	INC	C
	OUT	(C),H
	INC	C
	EX	DE,HL
	POP	DE
	INC	DE
	XOR	A
	RET

@UPSUB:
	LD	L,10
@UPSUB1:
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	EXX
	IN	A,(C)
	INC	BC
	EXX
	OUT	(C),A
	INC	BC
	DEC	L
	JP	NZ,@UPSUB1+@R
	RET

@CPUE:
INITE:
	DS	$CC06-INITE
