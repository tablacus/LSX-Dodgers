
;	LSX-Dodgers CCP

COMMAND:
	LD	A,(FCB_BAT)
	OR	A
	JP	NZ,C_BAT1
	CALL	SETDTA1
	LD	A,(_DVSW)
	ADD	A,'A'
	CALL	MSG_A
	LD	A,'>'
	CALL	MSG_A
	LD	A,80
	LD	(DE),A
	CALL	_SYS0A		;(BDOS)文字列入力
	CALL	LTNL
COMMAND2:
	LD	DE,DTA1+2
	CALL	_COMANL
	JR	NC,COMMAND
	LD	DE,COMERM
	CALL	_SYS09		;(BDOS)文字列出力
	RST	0

COMANL:
	CALL	FILE
	LD	A,(FNAME+4)
	CP	020H
	JR	NZ,COMB2
	PUSH	DE
	LD	DE,FNAME
	LD	A,(DE)
	CP	020H
	JR	Z,SDVSW
	DEC	DE
	LD	A,(DE)
	ADD	A,0FFH
	JR	C,COMB
	INC	DE

	LD	HL,COMTB
	LD	B,COMS
	CALL	CPNAME
COMB:
	POP	DE
	JP	NC,JP_HL
COMB2:
	EX	DE,HL
	LD	(COMPAT+1),HL
	PUSH	AF
	CALL	CEXE4
	POP	AF
	LD	HL,FNAME
	LD	DE,FCB2+1	;COMMAND NAME
	LD	BC,11
	LDIR
	LD	DE,PATHD
CEX1:
	LD	A,(DE)
	CP	020H
	RET	C
	CALL	FILEC
	PUSH	DE
	LD	HL,FCB2+1	;COMMAND NAME
	LD	DE,FNAME
	LD	BC,11
	LDIR
	CALL	CEXE4
	POP	DE
	INC	DE
	JR	CEX1

SDVSW:
	POP	AF
	LD	A,(FDRV)
	DEC	A
	LD	E,A
	LD	C,00EH		;(BDOS)カレントドライブの設定
	JR	SYSTEM0

OPEN1:
	LD	HL,FDRV
OPEN:
	LD	C,011H		;(BDOS)ファイルの検索
OPEN3:
	PUSH	DE
	LD	DE,DTA_CCP
	CALL	SETDTA
	EX	DE,HL
	CALL	SYSTEM0
	POP	DE
	RET

OPEN2:
	LD	C,012H
	JR	OPEN3

DEFCB:				;Z=Ok NZ=Error
	LD	DE,DTA_CCP
	CALL	SYSC0F

	LD	DE,DTA_CCP+33	;(FCB)ランダムレコード
	LD	B,4
	CALL	ZERO_MEMORY_DE
SETDTA100:
	LD	DE,00100H
SETDTA:
	JP	_SYS1A		;(BDOS)DTAの設定

SETDTA1:
	LD	DE,DTA1
	JR	SETDTA

SYSC0F:
	LD	C,00FH		;(BDOS)ファイルのオープン
SYSTEM0:
	CALL	SYSTEM
	OR	A
	RET

C_CD:
	LD	C,5AH
	JR	SYSTEM0

S27BUF:
	LD	A,(SYSTEM+2)
	DEC	A
	AND	0F8H
	LD	H,A
	LD	L,0
S27DTA:
	LD	DE,DTA_CCP
S27:
	LD	C,027H		;(BDOS)ランダムブロック読み込み
	JR	SYSTEM0

CEXE4:
	LD	HL,FNAME+8
	LD	A,(HL)
	CP	020H
	JR	NZ,CEXE7
	LD	A,'?'
	LD	(HL),A
	INC	HL
	LD	(HL),A
	INC	HL
	LD	(HL),A
CEXE7:
	CALL	OPEN1
CEXE5:
	RET	NZ
	LD	HL,(DTA_CCP+1+9)
	LD	A,H
	CALL	CAP
	LD	H,A
	LD	A,L
	CALL	CAP
	LD	L,A
	LD	A,(DTA_CCP+1+8)
	CALL	CAP
	SUB	'B'
	JR	Z,C_BAT
	DEC	A		;'C'
	JR	Z,C_EXE
CEXE6:
	CALL	OPEN2
	JR	CEXE5

C_EXE:
	LD	A,H
	CP	'M'
	JR	NZ,CEXE6

	CALL	DEFCB
	CALL	S27BUF
	DEC	A
	SCF
	RET	NZ
	LD	A,H
	OR	L
	SCF
	RET	Z
	CALL	SETDTA1
COMPAT:	LD	DE,0				; self-modifying code
	LD	SP,(SYSTEM+1)
	LD	H,A				; A=0 in SETDTA1(_SYS1A)
	LD	L,A
	PUSH	HL				; push $0000 (reboot address)
	INC	H
	PUSH	HL				; push $0100 (TPA address)
	JP	SETFCB				; and JP $0100

C_BAT:
	LD	DE,'A'+'T'*256
	SBC	HL,DE
	JR	NZ,CEXE6

	CALL	DEFCB

	LD	HL,DTA_CCP
	LD	DE,FCB_BAT
	LD	BC,37
	LDIR
C_BAT1:
	CALL	SETDTA100
	CALL	FGETC_BAT
	LD	HL,DTA1+1
	JR	NZ,END_BATCH
	CP	021H		;スペースや改行など制御文字を飛ばす
	JR	C,C_BAT1
	LD	(HL),' '
	INC	HL
C_BAT2:
	LD	(HL),A
	INC	HL
	LD	A,L
	INC	A		;L==0FFH
	JR	Z,RUN_BATCH
	CALL	FGETC_BAT
	JR	NZ,RUN_BATCH
	CP	020H
	JR	NC,C_BAT2
RUN_BATCH:
	LD	A,L
	SUB	DTA1-1
	LD	(DTA1),A
	CP	4
	JR	C,END_BATCH
	LD	(HL),0
	JP	COMMAND2
END_BATCH:
	XOR	A		;バッチファイルを閉じる
	LD	(FCB_BAT),A
	JP	CPM_BOOT

FGETC_BAT:
	LD	DE,FCB_BAT
FGETC:				;1文字ずつ読み込む
	PUSH	HL		;Z:成功
	LD	HL,1
	CALL	S27
	POP	HL
	LD	A,(00100H)
	RET

C_DEL:
	CALL	SETFCB
	CALL	_SYS08		;(BDOS)エコーなしコンソール入力

	LD	C,013H
	JR	CDEL1		;(BDOS)ファイルの削除

C_REN:
	CALL	SETFCB
	LD	A,010H		;ディレクトリも対象にする
	LD	(FCB1+13),A	;属性
	LD	C,017H		;(BDOS)ファイル名の変更
CDEL1:
	LD	DE,FCB1
	CALL	SYSTEM
	ADD	A,0FFH
	RET

C_DIR:
	CALL	FILEC
	LD	HL,FDRV+1
	CALL	CWILD1
	LD	A,0F1H
	LD	(FDRV+13),A
	CALL	OPEN1
CDIR1:
	OR	A
	JR	NZ,PDSKF
	CALL	P_NAME
	CALL	OPEN2
	JR	CDIR1

PDSKF:
	LD	A,(FDRV)
	LD	E,A
	LD	C,01BH		;(BDOS)ディスク情報の獲得
	CALL	SYSTEM
	LD	C,A		;C←1クラスタ辺りの論理セクタ数
	ADD	A,001H
	RET	C		;Aが0FFHだった場合
	LD	A,8-2
PDS1:				;HL=未使用クラスタの総数
	INC	A
	RR	C
	JR	NC,PDS1
PDS2:				;B←論理セクタのサイズの上位8ビット
	INC	A
	RR	B
	JR	NC,PDS2
	LD	B,A

	LD	DE,0
PDS3:
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	DJNZ	PDS3
PDSKF1:
	CALL	PRDEC_DEHL
	LD	DE,FREE
	CALL	_SYS09		;(BDOS)文字列出力
	CALL	PUTDRV
	LD	A,05CH		;\
	CALL	MSG_A
	LD	HL,(FDRV+14)	;ディレクトリのクラスタ番号
	XOR	A
	LD	DE,0-2
	ADD	HL,DE
	INC	HL
	CALL	C,PRDEC_HL
	JR	LTNL

P_NAME:
	LD	A,(DTA_CCP+1)
	CP	'.'
	RET	Z
	LD	DE,DIRHD
	CALL	_SYS09		;(BDOS)文字列出力
	LD	A,(DTA_CCP+1+00BH)
	PUSH	AF
	RRCA
	SBC	A,A
	AND	'*'-020H
	ADD	A,020H
	CALL	MSG_A
	CALL	PUTDRV
	LD	HL,DTA_CCP+1
	CALL	FPRNT

	POP	AF
	BIT	4,A
	JR	Z,DIR3
	LD	DE,DIRMES
	CALL	_SYS09		;(BDOS)文字列出力
	JR	DIR6
DIR3:
	LD	DE,(DTA_CCP+1+01EH)
	LD	HL,(DTA_CCP+1+01CH)
	CALL	PRDEC_DEHL
DIR6:
	LD	A,(_WIDTH)
	CP	40+1
	CALL	NC,PRTTMS

LTNL:
	LD	E,3
	JP	_PRINT

C_PATH:
	CALL	SPCUT
	LD	HL,PATHD
	CP	021H
	JR	NC,CPATH0
CPATHP:
	LD	A,(HL)
	INC	HL
	CP	020H
	CCF
	JR	NC,LTNL
	CALL	MSG_A
	JR	CPATHP
CPATH0:
	CP	';'
	JR	NZ,CPATH1
	INC	DE
CPATH1:
	EX	DE,HL
	LD	BC,PATHX
	LDIR
	RET

PUTDRV:
	LD	A,(FDRV)
	ADD	A,'A'-1
	CALL	MSG_A
	LD	A,':'
MSG_AR:
	JP	MSG_A

PRDEC_HL:
	XOR	A
PRDEC_AHL:
	LD	E,A
	LD	D,0
PRDEC_DEHL:
	PUSH	DE
	LD	DE,DECBF
	LD	B,5
	CALL	ZERO_MEMORY_DE	;A=0
	POP	DE

	LD	C,32
DEC1:
	ADD	HL,HL
	EX	DE,HL
	ADC	HL,HL
	EX	DE,HL
	PUSH	HL
	LD	HL,DECBF+4
	LD	B,5
DEC2:
	LD	A,(HL)
	ADC	A,A
	DAA
	LD	(HL),A
	DEC	HL
	DJNZ	DEC2
	POP	HL
	DEC	C
	JR	NZ,DEC1

	LD	HL,DECBF
	LD	A,020H
	LD	B,4
DEC3:
	CALL	DEC4
	CALL	DEC4
	INC	HL
	DJNZ	DEC3
DECX:
	CALL	DEC4
	XOR	A
DEC4:
	RLD
	CP	020H
	JR	Z,DEC5
	OR	030H
DEC5:
	JR	MSG_AR

FPRNT:
	LD	B,8
	CALL	P_N1
	LD	A,(HL)
	ADD	A,NBSP-020H
	CP	NBSP
	JR	Z,FPR1
	LD	A,'.'
FPR1:
	CALL	MSG_A
	LD	B,3

P_N1:
	PUSH	BC
	PUSH	HL
	LD	A,(HL)
	CALL	CAP3
	CALL	MSG_A
	POP	HL
	POP	BC
	INC	HL
	DJNZ	P_N1
	RET

PRTTMS:
	LD	A,020H
	CALL	MSG_A

	LD	HL,(DTA_CCP+1+24)
	LD	A,L
	OR	A
	RET	Z
	SRL	H
	RLA
	RLA
	RLA
	RLA
	AND	00FH
	LD	D,A
	LD	A,H
	ADD	A,80
	CALL	PRDEC_A
	LD	A,'-'
	CALL	MSG_A
	LD	A,D
	CALL	PRDEC_A
	LD	A,'-'
	CALL	MSG_A
	LD	A,L
	AND	01FH
	CALL	PRDEC_A

	LD	HL,(DTA_CCP+1+22)

	LD	A,020H
	CALL	MSG_A
	LD	A,H
	LD	H,L
	LD	B,3
PRTTMS1:
	RRA
	RR	L
	DJNZ	PRTTMS1
	AND	01FH
	CALL	PRDEC_A
	LD	A,':'
	CALL	MSG_A
	LD	A,L
	RRCA
	RRCA
	AND	03FH
	CALL	PRDEC_A
	LD	A,':'
	CALL	MSG_A
	LD	A,H
	AND	01FH
	ADD	A,A

;	PRINT10

PRDEC_A:
	PUSH	HL
	LD	B,8
	LD	C,A
	XOR	A
PRTA1:
	RLC	C
	ADC	A,A
	DAA
	DJNZ	PRTA1
	LD	HL,DECBF
	LD	(HL),A
	XOR	A
	CALL	DECX
	POP	HL
	RET

SETFCB:
	CALL	SPCUT
	LD	A,(DE)
	CP	020H
	JR	C,SETFCBA
	DEC	DE
SETFCBA:
	LD	B,36
	LD	HL,FCB1
	PUSH	HL
	XOR	A
	CALL	FILL_MEMORY
	POP	HL
	PUSH	DE
	CALL	_SYS29		;(BDOS)ファイル名の解析
	LD	HL,FCB2
	CALL	_SYS29		;(BDOS)ファイル名の解析
	POP	HL
	LD	BC,05000H
	LD	DE,00081H
SETFCB1:
	LD	A,(HL)
	INC	HL
	CP	020H
	JR	C,SETFCB2
	LD	(DE),A
	INC	DE
	INC	C
	DJNZ	SETFCB1
SETFCB2:
	LD	A,C
	LD	(DTA1),A
	INC	B
ZERO_MEMORY_DE:
	XOR	A
FILL_MEMORY_DE:
	LD	(DE),A
	INC	DE
	DJNZ	FILL_MEMORY_DE
	RET

C_COPY:
	CALL	SETFCB

	LD	DE,ZERO
	CALL	FILEC2
	LD	HL,FCB2
	CALL	S29X1

	LD	A,010H
	LD	(FCB1+13),A
	LD	HL,FCB2+1
	CALL	CWILD1
COPY0:
	CALL	CWILD
	LD	HL,FCB1
	CALL	OPEN
	SCF
COPY1:
	RET	NZ
	CALL	DEFCB

	LD	A,(DTA_CCP+13)
	BIT	4,A
	JR	Z,COPY1A

	LD	HL,FCB1+1
	CALL	CHKWILD
	JR	C,COPY9

	LD	A,020H
	LD	(FCB1+1),A
	LD	HL,(DTA_CCP+26)
	INC	HL
	LD	(FCB1+14),HL
	JR	COPY0

COPY8:
	CALL	_SYS09		;(BDOS)文字列出力
	CALL	LTNL
COPY9:
	CALL	OPEN2
	JR	COPY1

COPY1A:
	LD	HL,FCB2
	LD	DE,FDRV
	LD	BC,DTA_CCP+2
	LDI
	LD	A,11
COPY2:
	PUSH	AF
	LD	A,(HL)
	CP	'?'
	JR	NZ,COPY3
	LD	A,(BC)
COPY3:
	LD	(DE),A
	INC	BC
	INC	DE
	INC	HL
	POP	AF
	DEC	A
	JR	NZ,COPY2
	LD	BC,16-11
	LDIR
PUTNAME:
	LD	HL,FCB1+1
	CALL	CHKWILD
	JR	NC,PUTN1
	LD	HL,FDRV+1
	CALL	FPRNT
	LD	A,020H
	CALL	MSG_A
PUTN1:
	LD	DE,FDRV
	LD	C,016H		;(BDOS)ファイルの作成
	CALL	SYSTEM0
	JR	NZ,COPYE2
	LD	H,A		;A=0
	LD	L,A
	LD	(FDRV+33),HL	;(FCB)ランダムレコード
	LD	(FDRV+35),HL
COPY6:
	CALL	S27BUF
	LD	B,A
	INC	A
	JR	Z,COPYE
	LD	A,H
	OR	L
	JR	Z,COPY7
	LD	DE,FDRV
	LD	C,026H		;(BDOS)ランダムブロック書き込み
	CALL	SYSTEM0
	JR	NZ,COPYE
	DJNZ	COPY6
COPY7:
	LD	A,(DTA_CCP+13)	;(FCB)属性
	LD	(FDRV+13),A
	LD	HL,DTA_CCP+20	;(FCB)タイムスタンプ
	LD	DE,FDRV+20
	LD	BC,4
	LDIR

	LD	DE,FDRV
	LD	C,010H		;(BDOS)ファイルのクローズ
	CALL	SYSTEM0
	JR	NZ,COPYE

	LD	DE,OK
	JP	COPY8

COPYE:
	LD	DE,FDRV
	LD	C,013H		;(BDOS)ファイルの削除
	CALL	SYSTEM
COPYE2:
	SCF
	RET

C_TYPE:
	CALL	SETFCB
	LD	HL,FCB1
	CALL	OPEN
	SCF
TYPE1:
	RET	NZ
	CALL	DEFCB
	LD	A,6
	CALL	MSG_A
TYPE2:
	CALL	S27BUF
	ADD	A,0FEH
	RET	C
	LD	A,H
	OR	L
	JR	Z,TYPEE
	LD	BC,00100H
TYPE3:
	LD	A,(BC)
	INC	BC
	CP	01AH
	JR	Z,TYPEE
	CALL	MSG_A
	DEC	HL
	LD	A,H
	OR	L
	JR	NZ,TYPE3
	JR	TYPE2
TYPEE:
	CALL	OPEN2
	JR	TYPE1

CWILD:
	LD	HL,FCB1+1
CWILD1:
	LD	A,(HL)
	CP	020H
	RET	NZ
CWILD2:
	LD	A,'?'
	LD	B,11
	JP	FILL_MEMORY

DIRMES:	DB	"     <DIR>$"
DIRHD:	DB	"  :$"

COMTB:
	DB	"D   "	;1
	DW	C_DIR
	DB	"DIR "	;2
	DW	C_DIR
	DB	"COPY"	;3
	DW	C_COPY
	DB	"CD  "	;4
	DW	C_CD
	DB	"DEL "	;5
	DW	C_DEL
	DB	"PATH"	;6
	DW	C_PATH
	DB	"REN "	;7
	DW	C_REN
	DB	"TYPE"	;8
	DW	C_TYPE
	DB	"REM "	;9
	DW	C_REM
