
;	LSX-Dodgers IO
;	MZ-700/1500

_SYS04	EQU	_ERROR		;(BDOS)外部出力
_SYS05	EQU	_ERROR		;(BDOS)プリンタ出力
_SYS1C	EQU	_ERROR		;(BDOS)ディスクの書き込み禁止化
_SYS1E	EQU	_ERROR		;(BDOS)ファイル属性の設定
_SYS20	EQU	_ERROR		;(BDOS)利用者番号の設定と読み出し
_SYS2E	EQU	_ERROR		;(BDOS)ベリファイ・フラグの設定

INT	EQU	0
INTCTCE	EQU	0
INTCTC2	EQU	0

POP_AF_HL_SCF_RET:
	POP	AF
	POP	HL
	SCF
KEYBC_IFBREAK:
	RET

_SYS01:		;(BDOS)コンソール入力
	CALL	_SYS07
MSG_A:
	PUSH	AF
	PUSH	DE
	LD	E,A
	CALL	_SYS02
	POP	DE
	POP	AF
	RET

_SYS02:		;(BDOS)コンソール出力
	CALL	BREAK
	JR	PRINTX

_SYS06:		;(BDOS)コンソール直接入出力
	LD	A,E
	INC	A
	JP	Z,_INKEY
PRINTX:
	JP	_PRINT

_SYS08:		;(BDOS)エコーなしコンソール入力
	CALL	_SYS07
	JR	BREAK1
BREAK:
	CALL	CHKEY
BREAK1:
	CP	3		;CTRL+C
	JP	Z,CPM_BOOT
	CP	013H		;CTRL+S
	RET	NZ

PAUSE:
FLGET:
	CALL	_FFLUSH
	PUSH	HL
	LD	HL,(_TXADR)
	LD	A,H
	ADD	A,0D0H
	LD	H,A
	CALL	RDMMIO
	LD	(FLSMC),A
FLGET1:
	CALL	RD556VSYNC
	BIT	6,A
	LD	A,0EFH		;カーソル
	JR	NZ,FLGET2
	LD	A,(_KEYD)
	OR	A
	LD	A,0EFH		;カーソル
	JR	NZ,FLGET2
	LD	A,0		;自己書き換え
FLSMC	EQU	$-1
FLGET2:
	CALL	WRMMIO
	CALL	_INKEY
	JR	Z,FLGET1
	PUSH	AF
	LD	A,(FLSMC)
	CALL	WRMMIO
	POP	AF
	POP	HL
	RET

_SYS0A:		;(BDOS)文字列入力
	PUSH	BC
	PUSH	HL
	PUSH	DE
	CALL	GETL
	LD	DE,KBUF
	POP	HL
	PUSH	HL
	LD	C,0
	JR	NC,SAX0
	INC	HL
	INC	HL
	JR	SAX4
SAX0:
	LD	B,(HL)
	INC	HL
SAX1:
	INC	HL
	LD	A,(DE)
	INC	DE
	OR	A
	JR	NZ,SAX2
SAX4:
	LD	(HL),00DH
	JR	SAX3
SAX2:
	LD	(HL),A
	INC	C
	DJNZ	SAX1
SAX3:
	POP	DE
	LD	A,C
	INC	DE
	LD	(DE),A
	DEC	DE
	POP	HL
	POP	BC
	AND	A
	RET

_SYS0B:		;(BDOS)コンソール状態のチェック
	CALL	BREAK
	XOR	A
	LD	(SKIP_KEYWAIT),A
	LD	A,(_KEYD)
	OR	A
	RET	Z
CONSTX:
	CALL	_FFLUSH
	CALL	CHKEY
	ADD	A,0FFH
	SBC	A,A
	RET

_SYS2A:		;(BDOS)日付の獲得
	XOR	A
	LD	D,A
	LD	E,A
	LD	H,A
	LD	L,A
	RET

_SYS2C:		;(BDOS)時刻の獲得
	XOR	A
	LD	D,A
	LD	E,A
	LD	H,A
	LD	L,A
	RET

ESC1:
	LD	A,E
	CP	'A'
	JP	Z,CTRL1E
	CP	'B'
	JP	Z,CTRL1F
	CP	'C'
	JP	Z,CTRL1C
	CP	'D'
	JP	Z,CTRL1D
	CP	'E'
	JR	Z,CT0CX
	CP	'j'
CT0CX:
	JP	Z,CTRL0C
	CP	'H'
	JP	Z,CTRL0B
	CP	'J'
	JP	Z,CTRL06
	CP	'K'
	JP	Z,CTRL05
	CP	'L'
	JP	Z,CTRL0E
	CP	'T'
	JP	Z,CTRL05
	CP	'x'
	JR	Z,ESC1X
	CP	'y'
	JR	NZ,ESC1Y
ESC1X:
	LD	(HL),1
ESC1Y:
	CP	'='
	JR	Z,ESC1W
	CP	'Y'
	JR	NZ,ESC1Z
ESC1W:
	LD	(HL),2
ESC1Z:
	CP	020H
	JR	C,ESC1C
	ADD	A,A
	RET	NC
ESC1C:
	POP	HL
	JR	ANK

ESC:
	LD	HL,PRINTE5
	PUSH	HL
	LD	HL,ESCFLG
	LD	(HL),0
	DEC	A
	JR	Z,ESC1
	DEC	A
	JR	NZ,ESC2
	LD	(HL),3
	LD	A,E
	SUB	020H
	LD	(ESCYP+1),A
	RET
ESC2:
	DEC	A
	RET	NZ
ESCYP:	LD	H,0
	LD	A,E
	SUB	020H
	LD	L,A
	JP	_LOC

PRINT:
	PUSH	BC
	PUSH	HL
	LD	A,000H		;自己書き換え
ESCFLG	EQU	$-1
	OR	A
	JR	NZ,ESC

	LD	A,01FH
	CP	E
	JR	NC,CTRL
INSFLG	EQU	$
	LD	BC,INSERT	;自己書き換え
ANK:
	LD	A,(_COLORF)
	LD	C,A
	LD	A,E
	CP	'a'		;英小文字
	JR	C,PRT1
	CP	'z'+1
	JR	NC,PRT1
	SET	7,C
PRT1:
	CP	$86		;ひらがな1(を−そ)
	JR	C,PRT2
	CP	$A0
	JR	NC,PRT2
	SET	7,C
PRT2:
	CP	$E0		;ひらがな2(たーん)
	JR	C,PRT3
	SET	7,C
PRT3:
	LD	HL,(_TXADR)
	LD	A,H
	ADD	A,0D0H
	LD	H,A
	LD	B,D
	LD	D,CD_TABLE/256
	LD	A,(DE)
	LD	D,B
	CALL	IO_PRINT
	CALL	CTRL1C
PRINTE5:
	POP	HL
	POP	BC
	XOR	A
	RET

CTRL:
	LD	A,E
	ADD	A,A
	OR	080H
	LD	L,A
	LD	H,CTRLTB/256
	LD	A,(HL)
	INC	L
	LD	H,(HL)
	LD	L,A
	CALL	JP_HL
	JR	PRINTE5

CTRL1C:
	LD	BC,(_TXADR)
	INC	BC
PRINTE3:
	LD	HL,0-WIDTH*LINE
	AND	A
	ADC	HL,BC
PRINTE8:
	JR	Z,PRINT2
	LD	(_TXADR),BC
CTRL00:
	RET

PRINT2:
	CALL	SCR
	LD	HL,0-WIDTH
	ADD	HL,BC
SET_TXADR_HL:
	LD	(_TXADR),HL
	RET

CTRL08:
	LD	A,(INSFLG)
	CP	0CDH		;CALL ????
	JR	Z,CTRL02
CTRL1D:
	LD	HL,(_TXADR)
	LD	A,H
	OR	L
	RET	Z
	DEC	HL
	JR	SET_TXADR_HL

CTRL1E:
	LD	BC,(_TXADR)
	LD	HL,0-WIDTH
	ADD	HL,BC
	RET	NC
	JR	SET_TXADR_HL

CTRL09:
	LD	BC,(_TXADR)
	LD	A,C
	AND	0F8H
	ADD	A,8
	LD	C,A
	ADC	A,B
	SUB	C
	LD	B,A
	JR	PRINTE3

CTRL02:
	CALL	CTRL1D
	RET	Z
	PUSH	DE
	CALL	_POS
	LD	D,H
	LD	A,WIDTH
	SUB	L
	LD	C,A
	DEC	C
	LD	B,0D0H
	LD	HL,(_TXADR)
	ADD	HL,BC
	LD	B,A

	LD	A,(MULINE)
	CP	D
	JR	NZ,C02X1
	LD	DE,WIDTH
	ADD	HL,DE
	LD	A,B
	ADD	A,E
	LD	B,A
C02X1:
	LD	A,(_COLORF)	;C:Color
	LD	C,A
	XOR	A		;A:Text
	CALL	IO_BS
	POP	DE
	RET

CTRL05:
	CALL	_POS
	LD	A,WIDTH
	SUB	L
	LD	B,A
C08X1:
	LD	HL,(_TXADR)
	LD	A,H
	ADD	A,0D0H
	LD	H,A
CLLINE:
	LD	A,(_COLORF)
	LD	C,A
	XOR	A
	JP	IO_CLLINE

CTRL0D:
	CALL	_POS
	LD	L,0
LOC:
	PUSH	BC
	PUSH	HL
	CALL	LOC1
	LD	(_TXADR),HL
	POP	HL
	POP	BC
	RET

CTRL12:
	LD	HL,INSFLG
	LD	A,(HL)
	XOR	0CCH		;CD:CALL ???? 1:LD BC,????
	LD	(HL),A
	RET

CTRL0B:
	LD	HL,0
	LD	(_TXADR),HL
	RET

CTRL1B:
	LD	A,1
	LD	(ESCFLG),A
	RET

LOC1:
	PUSH	DE
	LD	C,L
	LD	B,8
	LD	E,H
	LD	HL,WIDTH*256
	LD	D,L	;L=0
LOC2:
	ADD	HL,HL
	JR	NC,LOC3
	ADD	HL,DE
LOC3:
	DJNZ	LOC2
	ADD	HL,BC
	POP	DE
	RET

CONOUT1:
;	CALL	CURSOR
	LD	E,C
	CALL	_PRINT
	LD	A,E
	CP	00AH
	JR	NZ,CURSOR
	CALL	CTRL0D
	CALL	CTRL05
CURSOR:
	RET

CTRL07:
	LD	B,0E0H
	LD	HL,BEEPD+1
C07X0:
	LD	C,(HL)
	INC	HL
	LD	A,(HL)
	INC	HL
	CALL	WRMMIO_BC
	LD	A,L
	CP	(BEEPD+1+M7BEEPE-M7BEEPD)&255
	JR	NZ,C07X0
	LD	B,16
C07X1:
	CALL	RD556VSYNC
	ADD	A,A
	JR	NC,C07X1
C07X2:
	CALL	RD556VSYNC
	ADD	A,A
	JR	C,C07X2
	DJNZ	C07X1

	XOR	A
	LD	HL,0E008H
	CALL	WRMMIO
	RET

INSERT:
	PUSH	DE
	CALL	_POS
	LD	D,H
	LD	A,WIDTH
	SUB	L
	LD	B,A
	LD	HL,(_TXADR)
	LD	A,H
	ADD	A,0D0H
	LD	H,A
	LD	A,(_COLORF)	;C:Color
	LD	C,A
	XOR	A		;A:Text
	CALL	IO_INS
	OR	A
	JR	NZ,INS1
MULINE	EQU	$+1
	LD	A,-1
	SUB	D
	JR	NZ,INS2
INS1:
	LD	B,WIDTH
	CALL	IO_INS
	LD	A,D
	LD	(MULINE),A
INS2:
	POP	DE
	RET

CTRL0C:
	CALL	CTRL0B
CTRL06:
	PUSH	DE
	PUSH	HL
	LD	DE,(_TXADR)
	LD	A,(_COLORF)
	LD	(ICSMC),A
	JP	IO_CLR

CTRL04:
	CALL	_POS
	LD	A,L
	OR	A
	RET	Z
CTRL03:
	CALL	CTRL0D
CTRL0A:
CTRL1F:
	LD	HL,(_TXADR)
	LD	BC,WIDTH
	ADD	HL,BC
	LD	B,H
	LD	C,L
	LD	HL,0-WIDTH*LINE
	ADD	HL,BC
	CCF
	SBC	A,A
	JP	PRINTE8

CTRL0E:
	CALL	_POS
	LD	A,H
	JR	SCR1
SCR:
	LD	A,(_LINE)
	DEC	A
SCR1:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	DE,0D000H
	LD	HL,0D000H+WIDTH

	LD	B,A
	OR	A
	JP	IO_SCRUP

POS:
	LD	HL,(_TXADR)
	PUSH	BC
	LD	BC,0-WIDTH
	XOR	A
POS1:
	ADD	HL,BC
	INC	A
	JR	C,POS1
	SBC	HL,BC
	DEC	A
	LD	H,A
	POP	BC
	AND	A
	RET

GETL:
	CALL	_POS
	PUSH	HL
	LD	A,0CDH		;CALL ????
	LD	(INSFLG),A
GETL1:
	CALL	_SYS08
	CP	9
	JR	NZ,GETL1V
	LD	HL,KBUF
	CALL	MSX
	JR	GETL1
GETL1V:
	LD	E,A
	CALL	_POS
	CALL	_PRINT
	LD	A,E
	CP	$20
	JR	C,GETL1V1
	LD	A,L
	CP	WIDTH-1
	JR	NZ,GETL1V1
	LD	A,H
	LD	(MULINE),A
GETL1V1:
	LD	A,E
	CP	00DH
	JR	NZ,GETL1
	LD	A,1		;LD BC,????
	LD	(INSFLG),A
	LD	DE,KBUF
	LD	B,WIDTH
	CALL	ZERO_MEMORY_DE

	POP	DE
	CALL	_POS
	LD	L,E
	LD	A,WIDTH
	SUB	L
	LD	D,A

	LD	A,(MULINE)
	SUB	H
	JR	Z,GL2X
	INC	A
	JR	NZ,GL3X
	DEC	H
	JR	GL4X
GL2X:
	LD	A,$1F
	CALL	MSG_A
GL4X:
	LD	A,D
	ADD	A,WIDTH
	LD	D,A
GL3X:
	CALL	LOC1
	LD	C,L
	LD	A,H
	ADD	A,0D0H
	LD	B,A
	LD	E,D
	LD	HL,KBUF
GETL2:
	CALL	_SCRN
	INC	BC
	LD	(HL),A
	INC	HL
	DEC	E
	JR	NZ,GETL2
GETL3:
	DEC	HL
	LD	A,(HL)
	CP	021H
	RET	NC
	LD	(HL),0
	DEC	D
	JR	NZ,GETL3
	RET

INKEYB:
	POP	BC
	BIT	0,A
	LD	A,8
	JR	NZ,INKEYD
	LD	A,3
INKEYD:
	LD	(_KEYD),A
	OR	A
	RET
INKEY:
	PUSH	HL
GETKEY:
	LD	A,(_KEYD)
	OR	A
	LD	L,A
GKSMC:	LD	H,16
GETKEY1:
	LD	A,1
SKIP_KEYWAIT:	EQU	$-1
	OR	A
	CALL	NZ,CHKEY	;キーを離すまで待つ
	JR	Z,GETKEY2
	CP	L
	JR	NZ,GETKEY2
	CALL	RD556VSYNC
	ADD	A,A
	JR	NC,GETKEY1
GETKEY1X:
	CALL	CHKEY		;キーを離すまで待つ
	JR	Z,GETKEY2
	CP	L
	JR	NZ,GETKEY2
	CALL	RD556VSYNC
	ADD	A,A
	JR	C,GETKEY1X
	DEC	H
	JR	NZ,GETKEY1
	LD	A,1
	JR	GETKEY3
GETKEY2:
	LD	A,16
	LD	(SKIP_KEYWAIT),A
GETKEY3:
	LD	(GKSMC+1),A
	LD	A,(_KEYD)
	OR	A
	POP	HL
	RET	NZ
CHKEY:
	PUSH	BC
	LD	A,8
	CALL	RDKEYDATA
	LD	(_KEYD+1),A
	BIT	7,A
	JR	Z,INKEYB
	PUSH	HL
	LD	C,7
	LD	HL,KEY_TABLE
	BIT	0,A
	JR	NZ,CHKEY0
	LD	HL,SHIFT_TABLE
CHKEY0:
	BIT	6,A
	JR	NZ,CHKEY1
	LD	HL,CTRL_TABLE
CHKEY1:
	LD	A,C
	CALL	RDKEYDATA
	LD	B,8
CHKEY2:
	ADD	A,A
	JR	NC,CHKEY3
	INC	HL
	DJNZ	CHKEY2
	DEC	C
	LD	A,C
	INC	A
	JR	NZ,CHKEY1
	DB	$06		;LD B,?? 次の1バイトを飛ばす
CHKEY3:
	LD	A,(HL)
	POP	HL
	POP	BC
	JR	INKEYD

SCRN:
	PUSH	HL
	CALL	RDMMIO_BC
	LD	L,A
	LD	H,DC_TABLE/256
	LD	A,(HL)
	CP	'A'		;英小文字チェック
	JR	C,SCRN1
	CP	'Z'+1
	CALL	C,SCRNC
	CP	$A6		;ひらがなチェック
	JR	C,SCRN1
	CP	$E0
	CALL	C,SCRNC
SCRN1:
	POP	HL
	RET

SCRNC:
	LD	L,A
	LD	H,B
	SET	3,B
	CALL	RDMMIO_BC
	LD	B,H
	BIT	7,A
	LD	A,L
	RET	Z
	CP	'Z'+1
	JR	C,SCRNC_ADD
	CP	$C0
	JR	C,SCRNC_SUB
SCRNC_ADD:
	ADD	A,$20
	RET
SCRNC_SUB:
	SUB	$20
	RET
