・LSX-Dodgers
・File Control Block
・(FCB ファイル・コントロール・ブロック)	36バイト
※MSX-DOSを考慮する場合、ランダムブロックアクセスで、レコードサイズが
64未満の場合は37バイト用意した方が無難

<オフセット>	<サイズ>	<内容>

+ 0	*1	1バイト	ドライブ番号
				(0:カレントドライブ,1:ドライブA
				 2:ドライブB,……,8:ドライブH)


+ 1	*1	8バイト	主ファイル名(残りはスペース$20を格納)


+ 9	*1	3バイト	拡張子(残りはスペース$20を格納)


+12		1バイト	カレント・ブロック
				下位バイトから格納されている
				MSX-DOSの場合2バイト


+13	*2*3	1バイト	属性(アトリビュート)、ビットが1なら有効
					bit7 ～ bit6:0
						bit5:通常ファイル
						bit4:ディレクトリ
						bit3:ボリューム名
						bit2:システム属性
						bit1:不可視属性
						bit0:書き込み禁止属性


+14	*1*2	2バイト	レコード・サイズ/
				アクセスするディレクトリのクラスタ番号+1
				(カレント・ディレクトリの場合は0)
				ファイルのオープンや、検索、作成、削除の場合
				ディレクトリのクラスタ番号として働き
				ランダム・ブロック・アクセスの場合、レコード・
				サイズとして働く。レコード・サイズは1にする。


+16	*2	4バイト	ファイルのサイズ(バイト単位)
				下位バイトから格納されている


+20	*2	2バイト	ファイルを最後に変更した日付
				  +21	   +20
				 7 6 5 4 3 2 1 0   7 6 5 4 3 2 1 0
				□□□□□□□□ □□□□□□□□
				＼  時  ／ ＼   分   ／ ＼秒÷2／
				   0～23      0～59       0～29


+22	*2	2バイト	ファイルを最後に変更した時刻
				  +23	   +22
				 7 6 5 4 3 2 1 0   7 6 5 4 3 2 1 0
				□□□□□□□□ □□□□□□□□
				＼  年-1980 ／＼ 月 ／＼   日  ／
				     0～99     1～12     1～31


+24	*2*3	1バイト	未使用


+25	*2	1バイト	ディレクトリ・ロケーション
				アクセスしているファイルのバッファ上でのディレクトリエントリの位置


+26	*2	2バイト	ファイルの先頭クラスタ
				下位バイトから格納されている


+28	*2*3	1バイト	オープン・モード
				$FF:リードモード
				$FE:ライトモード
				$FD:デバイス・ディスクプリタ
				その他:オープンしていない
					ファイルをオープンをすると$FFとなり
					ファイルに書き込みがあると$FEとなる


+29	*2*3	1バイト	ディレクトリ・モード
				$00:ルートディレクトリ
				その他:サブディレクトリ


+30	*2*3	2バイト	ディレクトリ・ポジション
				アクセスしているファイルのディレクトリエントリ
				のあるクラスタ番号。ルートディレクトリの場合は
				論理セクタ番号
				下位バイトから格納されている


+32		1バイト	カレント・レコード


+33		3バイト	ランダム・レコード
				下位バイトから格納されている
				MSX-DOSの場合、レコードサイズが64未満の場合4バイト


*1	オープンする際に設定しておく部分

*2	CP/M80と異なる部分

*3	MSX-DOSと異なる部分


	※FCB備考

 FCB(ファイル・コントロール・ブロック)はファイルの入出力の際に、ファイル
名などのファイル情報をメモリ上に格納している領域である。

 ファイルをオープン等する際、ドライブ番号が0(カレント・ドライブ)の場合、
 実ドライブ(1～8)に変換される。

 システム・コールではワイルド・カードの「*」は展開されないので適当数の「?」
に展開しておくこと。

 CP/M方式のファイルのアクセスは128バイト単位のレコードで処理される。
つまり1レコードは128バイトである。また、レコード0から始まり、
例えばレコード1はファイルの先頭から128バイト目から128バイト分を示す。

 CP/M方式のシーケンシャル・アクセスの場合、カレント・ブロックとカレント・
レコードから計算されるレコードがアクセスされる。アクセスされると次のレコードを
指すようにカレント・ブロックとカレント・レコードがセットされる。

 カレント・ブロックとカレント・レコードから求められるレコード番号の計算方法
アクセスされるレコード番号=カレント・ブロック×128+カレント・レコード

 ファイルのオープンではカレント・レコードが0でクリアされない為、
シーケンシャル・アクセスでファイルの先頭からアクセスする場合、
カレント・レコードを0でクリアする必要がある。

 CP/M方式のランダム・アクセスの場合、ランダム・レコードにセットされたレコードを
アクセスする。ランダム・レコードは変化しない。

 LDではランダム・ブロック・アクセスの場合のレコード・サイズは1しか指定することが
できない。1レコードは1バイトになる。

 ランダム・ブロック・アクセスのファイル・アクセスではランダム・レコードに
セットされたファイル・ポインタからHLバイト読み書きする。
ランダム・レコードはアクセスされた分だけ増加する。


	CP/M80の場合

・FCB	36バイト

+13	*3	1バイト	非公開

+14	*3	1バイト	0

+15	*3	1バイト	レコード数

+16	*3	16バイト	ファイル本体が格納されているブロックの
				ブロックアドレス


	MSX-DOSの場合

+14	*2	2バイト	レコード・サイズ

+24	*2	1バイト	デバイスID

+28	*2	2バイト	最後にアクセスしたクラスタ番号

+30	*2	2バイト	ファイルの開始クラスタからの相対位置

eof
